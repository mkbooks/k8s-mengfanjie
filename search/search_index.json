{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u4e91\u539f\u751f\u7cfb\u5217\u5b66\u4e60 \u4ec0\u4e48\u662f\u4e91\u539f\u751f \u5728\u5305\u62ec\u516c\u6709\u4e91\u3001\u79c1\u6709\u4e91\u3001\u6df7\u5408\u4e91\u7b49\u52a8\u6001\u73af\u5883\u4e2d\u6784\u5efa\u548c\u8fd0\u884c\u89c4\u6a21\u5316\u5e94\u7528\u7684\u80fd\u529b\u3002 \u4e91\u539f\u751f\u662f\u4e00\u79cd\u601d\u60f3\uff0c\u662f\u6280\u672f\u3001\u4f01\u4e1a\u7ba1\u7406\u65b9\u6cd5\u7684\u96c6\u5408\u3002 \u6280\u672f\u5c42\u9762 \u5e94\u7528\u7a0b\u5e8f\u4ece\u8bbe\u8ba1\u4e4b\u521d\u5c31\u4e3a\u5728\u4e91\u4e0a\u8fd0\u884c\u800c\u505a\u597d\u51c6\u5907\u3002 \u4e91\u5e73\u53f0\u57fa\u4e8e\u81ea\u52a8\u5316\u4f53\u7cfb\u3002 \u6d41\u7a0b\u5c42\u9762 \u57fa\u4e8e DevOps, CI/CD\u3002 \u57fa\u4e8e\u591a\u79cd\u624b\u6bb5 \u5e94\u7528\u5bb9\u5668\u5316\u5c01\u88c5\uff1b \u670d\u52a1\u7f51\u683c\uff1b \u4e0d\u53ef\u53d8\u57fa\u7840\u67b6\u6784\uff1b \u58f0\u660e\u5f0f API\u3002 \u4e91\u539f\u751f\u7684\u610f\u4e49 \u63d0\u5347\u7cfb\u7edf\u7684\u9002\u5e94\u6027\u3001\u53ef\u7ba1\u7406\u6027\u3001\u53ef\u89c2\u5bdf\u6027\uff1b \u4f7f\u5de5\u7a0b\u5e08\u80fd\u4ee5\u6700\u5c0f\u6210\u672c\u8fdb\u884c\u9891\u7e41\u548c\u53ef\u9884\u6d4b\u7684\u7cfb\u7edf\u53d8\u66f4\u3002 \u63d0\u5347\u901f\u5ea6\u548c\u6548\u7387\uff0c\u52a9\u529b\u4e1a\u52a1\u6210\u957f\uff0c\u7f29\u77ed I2M\uff08Idea to Market\uff09\u3002 \u4e91\u539f\u751f\u6838\u5fc3\u9879\u76ee\u6982\u89c8 \u5982\u4f55\u5b66\u4e60\u4e91\u539f\u751f\u6280\u672f \u4ee3\u7801\u9a71\u52a8 \u638c\u63e1 Go \u8bed\u8a00\u7f16\u7a0b\u80fd\u529b \u4ece\u70b9\u5230\u9762 \u5b66\u4e60\u5bb9\u5668\u6280\u672f cgroup\u3001namespace \u7f51\u7edc\u534f\u8bae\u6808 \u6587\u4ef6\u7cfb\u7edf \u6293\u4f4f\u6838\u5fc3\u638c\u63a7\u5168\u5c40 \u6df1\u5165\u7406\u89e3 Kubernetes API \u5b9a\u4e49 \u63a7\u5236\u5668\u6a21\u5f0f \u6838\u5fc3\u7ec4\u4ef6 \u5927\u89c4\u6a21\u751f\u4ea7\u5316 \u591a\u96c6\u7fa4 \u670d\u52a1\u7f51\u683c\u548c\u591a\u7f51\u683c","title":"\u4e91\u539f\u751f\u7cfb\u5217\u5b66\u4e60"},{"location":"#_1","text":"","title":"\u4e91\u539f\u751f\u7cfb\u5217\u5b66\u4e60"},{"location":"#_2","text":"\u5728\u5305\u62ec\u516c\u6709\u4e91\u3001\u79c1\u6709\u4e91\u3001\u6df7\u5408\u4e91\u7b49\u52a8\u6001\u73af\u5883\u4e2d\u6784\u5efa\u548c\u8fd0\u884c\u89c4\u6a21\u5316\u5e94\u7528\u7684\u80fd\u529b\u3002 \u4e91\u539f\u751f\u662f\u4e00\u79cd\u601d\u60f3\uff0c\u662f\u6280\u672f\u3001\u4f01\u4e1a\u7ba1\u7406\u65b9\u6cd5\u7684\u96c6\u5408\u3002 \u6280\u672f\u5c42\u9762 \u5e94\u7528\u7a0b\u5e8f\u4ece\u8bbe\u8ba1\u4e4b\u521d\u5c31\u4e3a\u5728\u4e91\u4e0a\u8fd0\u884c\u800c\u505a\u597d\u51c6\u5907\u3002 \u4e91\u5e73\u53f0\u57fa\u4e8e\u81ea\u52a8\u5316\u4f53\u7cfb\u3002 \u6d41\u7a0b\u5c42\u9762 \u57fa\u4e8e DevOps, CI/CD\u3002 \u57fa\u4e8e\u591a\u79cd\u624b\u6bb5 \u5e94\u7528\u5bb9\u5668\u5316\u5c01\u88c5\uff1b \u670d\u52a1\u7f51\u683c\uff1b \u4e0d\u53ef\u53d8\u57fa\u7840\u67b6\u6784\uff1b \u58f0\u660e\u5f0f API\u3002 \u4e91\u539f\u751f\u7684\u610f\u4e49 \u63d0\u5347\u7cfb\u7edf\u7684\u9002\u5e94\u6027\u3001\u53ef\u7ba1\u7406\u6027\u3001\u53ef\u89c2\u5bdf\u6027\uff1b \u4f7f\u5de5\u7a0b\u5e08\u80fd\u4ee5\u6700\u5c0f\u6210\u672c\u8fdb\u884c\u9891\u7e41\u548c\u53ef\u9884\u6d4b\u7684\u7cfb\u7edf\u53d8\u66f4\u3002 \u63d0\u5347\u901f\u5ea6\u548c\u6548\u7387\uff0c\u52a9\u529b\u4e1a\u52a1\u6210\u957f\uff0c\u7f29\u77ed I2M\uff08Idea to Market\uff09\u3002","title":"\u4ec0\u4e48\u662f\u4e91\u539f\u751f"},{"location":"#_3","text":"","title":"\u4e91\u539f\u751f\u6838\u5fc3\u9879\u76ee\u6982\u89c8"},{"location":"#_4","text":"\u4ee3\u7801\u9a71\u52a8 \u638c\u63e1 Go \u8bed\u8a00\u7f16\u7a0b\u80fd\u529b \u4ece\u70b9\u5230\u9762 \u5b66\u4e60\u5bb9\u5668\u6280\u672f cgroup\u3001namespace \u7f51\u7edc\u534f\u8bae\u6808 \u6587\u4ef6\u7cfb\u7edf \u6293\u4f4f\u6838\u5fc3\u638c\u63a7\u5168\u5c40 \u6df1\u5165\u7406\u89e3 Kubernetes API \u5b9a\u4e49 \u63a7\u5236\u5668\u6a21\u5f0f \u6838\u5fc3\u7ec4\u4ef6 \u5927\u89c4\u6a21\u751f\u4ea7\u5316 \u591a\u96c6\u7fa4 \u670d\u52a1\u7f51\u683c\u548c\u591a\u7f51\u683c","title":"\u5982\u4f55\u5b66\u4e60\u4e91\u539f\u751f\u6280\u672f"},{"location":"1/1/","text":"\u9ad8\u53ef\u7528\u5fae\u670d\u52a1\u67b6\u6784\u65b9\u6cd5\u8bba \u300a\u4f01\u4e1a\u5e94\u7528\u67b6\u6784\u6a21\u5f0f\u300b- Martin Fowler 12 factors I.\u57fa\u51c6\u4ee3\u7801 \u4e00\u4efd\u57fa\u51c6\u4ee3\u7801\uff0c\u591a\u4efd\u90e8\u7f72 II.\u4f9d\u8d56 \u663e\u793a\u58f0\u660e\u4f9d\u8d56\u5173\u7cfb III.\u914d\u7f6e \u5728\u73af\u5883\u4e2d\u5b58\u50a8\u914d\u7f6e IV.\u540e\u7aef\u670d\u52a1 \u628a\u540e\u7aef\u670d\u52a1\u5f53\u505a\u9644\u52a0\u8d44\u6e90 V.\u6784\u5efa\uff0c\u53d1\u5e03\uff0c\u8fd0\u884c \u4e25\u683c\u5206\u79bb\u6784\u5efa\u548c\u8fd0\u884c VI.\u8fdb\u7a0b \u4ee5\u4e00\u4e2a\u6216\u591a\u4e2a\u65e0\u72b6\u6001\u8fdb\u7a0b\u8fd0\u884c\u5e94\u7528 VII. \u7aef\u53e3\u7ed1\u5b9a \u901a\u8fc7\u7aef\u53e3\u7ed1\u5b9a\u63d0\u4f9b\u670d\u52a1 VIII. \u5e76\u53d1 \u901a\u8fc7\u8fdb\u7a0b\u6a21\u578b\u8fdb\u884c\u6269\u5c55 IX. \u6613\u5904\u7406 \u5feb\u901f\u542f\u52a8\u548c\u4f18\u96c5\u7ec8\u6b62\u53ef\u6700\u5927\u5316\u5065\u58ee\u6027 X. \u5f00\u53d1\u73af\u5883\u4e0e\u7ebf\u4e0a\u73af\u5883\u7b49\u4ef7 \u5c3d\u53ef\u80fd\u7684\u4fdd\u6301\u5f00\u53d1\uff0c\u9884\u53d1\u5e03\uff0c\u7ebf\u4e0a\u73af\u5883\u76f8\u540c XI. \u65e5\u5fd7 \u628a\u65e5\u5fd7\u5f53\u4f5c\u4e8b\u4ef6\u6d41 XII. \u7ba1\u7406\u8fdb\u7a0b \u540e\u53f0\u7ba1\u7406\u4efb\u52a1\u5f53\u4f5c\u4e00\u6b21\u6027\u8fdb\u7a0b\u8fd0\u884c","title":"\u9ad8\u53ef\u7528\u5fae\u670d\u52a1\u67b6\u6784\u65b9\u6cd5\u8bba"},{"location":"1/1/#_1","text":"\u300a\u4f01\u4e1a\u5e94\u7528\u67b6\u6784\u6a21\u5f0f\u300b- Martin Fowler","title":"\u9ad8\u53ef\u7528\u5fae\u670d\u52a1\u67b6\u6784\u65b9\u6cd5\u8bba"},{"location":"1/1/#12-factors","text":"I.\u57fa\u51c6\u4ee3\u7801 \u4e00\u4efd\u57fa\u51c6\u4ee3\u7801\uff0c\u591a\u4efd\u90e8\u7f72 II.\u4f9d\u8d56 \u663e\u793a\u58f0\u660e\u4f9d\u8d56\u5173\u7cfb III.\u914d\u7f6e \u5728\u73af\u5883\u4e2d\u5b58\u50a8\u914d\u7f6e IV.\u540e\u7aef\u670d\u52a1 \u628a\u540e\u7aef\u670d\u52a1\u5f53\u505a\u9644\u52a0\u8d44\u6e90 V.\u6784\u5efa\uff0c\u53d1\u5e03\uff0c\u8fd0\u884c \u4e25\u683c\u5206\u79bb\u6784\u5efa\u548c\u8fd0\u884c VI.\u8fdb\u7a0b \u4ee5\u4e00\u4e2a\u6216\u591a\u4e2a\u65e0\u72b6\u6001\u8fdb\u7a0b\u8fd0\u884c\u5e94\u7528 VII. \u7aef\u53e3\u7ed1\u5b9a \u901a\u8fc7\u7aef\u53e3\u7ed1\u5b9a\u63d0\u4f9b\u670d\u52a1 VIII. \u5e76\u53d1 \u901a\u8fc7\u8fdb\u7a0b\u6a21\u578b\u8fdb\u884c\u6269\u5c55 IX. \u6613\u5904\u7406 \u5feb\u901f\u542f\u52a8\u548c\u4f18\u96c5\u7ec8\u6b62\u53ef\u6700\u5927\u5316\u5065\u58ee\u6027 X. \u5f00\u53d1\u73af\u5883\u4e0e\u7ebf\u4e0a\u73af\u5883\u7b49\u4ef7 \u5c3d\u53ef\u80fd\u7684\u4fdd\u6301\u5f00\u53d1\uff0c\u9884\u53d1\u5e03\uff0c\u7ebf\u4e0a\u73af\u5883\u76f8\u540c XI. \u65e5\u5fd7 \u628a\u65e5\u5fd7\u5f53\u4f5c\u4e8b\u4ef6\u6d41 XII. \u7ba1\u7406\u8fdb\u7a0b \u540e\u53f0\u7ba1\u7406\u4efb\u52a1\u5f53\u4f5c\u4e00\u6b21\u6027\u8fdb\u7a0b\u8fd0\u884c","title":"12 factors"},{"location":"1/2/1/","text":"\u4e3a\u4ec0\u4e48\u9700\u8981 Go \u8bed\u8a00 \u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\u7684\u5f0a\u7aef\u3002 \u786c\u4ef6\u53d1\u5c55\u901f\u5ea6\u8fdc\u8fdc\u8d85\u8fc7\u8f6f\u4ef6\u3002 C \u8bed\u8a00\u7b49\u539f\u751f\u8bed\u8a00\u7f3a\u4e4f\u597d\u7684\u4f9d\u8d56\u7ba1\u7406 (\u4f9d\u8d56\u5934\u6587\u4ef6\uff09\u3002 Java \u548c C++ \u7b49\u8bed\u8a00\u8fc7\u4e8e\u7b28\u91cd\u3002 \u7cfb\u7edf\u8bed\u8a00\u5bf9\u5783\u573e\u56de\u6536\u548c\u5e76\u884c\u8ba1\u7b97\u7b49\u57fa\u7840\u529f\u80fd\u7f3a\u4e4f\u652f\u6301\u3002 \u5bf9\u591a\u6838\u8ba1\u7b97\u673a\u7f3a\u4e4f\u652f\u6301\u3002 Go \u8bed\u8a00\u662f\u4e00\u4e2a\u53ef\u4ee5\u7f16\u8bd1\u9ad8\u6548\uff0c\u652f\u6301\u9ad8\u5e76\u53d1\u7684\uff0c\u9762\u5411\u5783\u573e\u56de\u6536\u7684\u5168\u65b0\u8bed\u8a00\u3002 \u79d2\u7ea7\u5b8c\u6210\u5927\u578b\u7a0b\u5e8f\u7684\u5355\u8282\u70b9\u7f16\u8bd1\u3002 \u4f9d\u8d56\u7ba1\u7406\u6e05\u6670\u3002 \u4e0d\u652f\u6301\u7ee7\u627f\uff0c\u7a0b\u5e8f\u5458\u65e0\u9700\u82b1\u8d39\u7cbe\u529b\u5b9a\u4e49\u4e0d\u540c\u7c7b\u578b\u4e4b\u95f4\u7684\u5173\u7cfb\u3002 \u652f\u6301\u5783\u573e\u56de\u6536\uff0c\u652f\u6301\u5e76\u53d1\u6267\u884c\uff0c\u652f\u6301\u591a\u7ebf\u7a0b\u901a\u8baf\u3002 \u5bf9\u591a\u6838\u8ba1\u7b97\u673a\u652f\u6301\u53cb\u597d\u3002 Go \u8bed\u8a00\u4e0d\u652f\u6301\u7684\u7279\u6027 \u4e0d\u652f\u6301\u51fd\u6570\u91cd\u8f7d\u548c\u64cd\u4f5c\u7b26\u91cd\u8f7d \u4e3a\u4e86\u907f\u514d\u5728 C/C++ \u5f00\u53d1\u4e2d\u7684\u4e00\u4e9b Bug \u548c\u6df7\u4e71\uff0c\u4e0d\u652f\u6301\u9690\u5f0f\u8f6c\u6362 \u652f\u6301\u63a5\u53e3\u62bd\u8c61\uff0c\u4e0d\u652f\u6301\u7ee7\u627f \u4e0d\u652f\u6301\u52a8\u6001\u52a0\u8f7d\u4ee3\u7801 \u4e0d\u652f\u6301\u52a8\u6001\u94fe\u63a5\u5e93 \u901a\u8fc7 recover \u548c panic \u6765\u66ff\u4ee3\u5f02\u5e38\u673a\u5236 \u4e0d\u652f\u6301\u65ad\u8a00 \u4e0d\u652f\u6301\u9759\u6001\u53d8\u91cf","title":"\u4e3a\u4ec0\u4e48\u9700\u8981\u65b0\u7684\u8bed\u8a00"},{"location":"1/2/1/#go","text":"\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\u7684\u5f0a\u7aef\u3002 \u786c\u4ef6\u53d1\u5c55\u901f\u5ea6\u8fdc\u8fdc\u8d85\u8fc7\u8f6f\u4ef6\u3002 C \u8bed\u8a00\u7b49\u539f\u751f\u8bed\u8a00\u7f3a\u4e4f\u597d\u7684\u4f9d\u8d56\u7ba1\u7406 (\u4f9d\u8d56\u5934\u6587\u4ef6\uff09\u3002 Java \u548c C++ \u7b49\u8bed\u8a00\u8fc7\u4e8e\u7b28\u91cd\u3002 \u7cfb\u7edf\u8bed\u8a00\u5bf9\u5783\u573e\u56de\u6536\u548c\u5e76\u884c\u8ba1\u7b97\u7b49\u57fa\u7840\u529f\u80fd\u7f3a\u4e4f\u652f\u6301\u3002 \u5bf9\u591a\u6838\u8ba1\u7b97\u673a\u7f3a\u4e4f\u652f\u6301\u3002 Go \u8bed\u8a00\u662f\u4e00\u4e2a\u53ef\u4ee5\u7f16\u8bd1\u9ad8\u6548\uff0c\u652f\u6301\u9ad8\u5e76\u53d1\u7684\uff0c\u9762\u5411\u5783\u573e\u56de\u6536\u7684\u5168\u65b0\u8bed\u8a00\u3002 \u79d2\u7ea7\u5b8c\u6210\u5927\u578b\u7a0b\u5e8f\u7684\u5355\u8282\u70b9\u7f16\u8bd1\u3002 \u4f9d\u8d56\u7ba1\u7406\u6e05\u6670\u3002 \u4e0d\u652f\u6301\u7ee7\u627f\uff0c\u7a0b\u5e8f\u5458\u65e0\u9700\u82b1\u8d39\u7cbe\u529b\u5b9a\u4e49\u4e0d\u540c\u7c7b\u578b\u4e4b\u95f4\u7684\u5173\u7cfb\u3002 \u652f\u6301\u5783\u573e\u56de\u6536\uff0c\u652f\u6301\u5e76\u53d1\u6267\u884c\uff0c\u652f\u6301\u591a\u7ebf\u7a0b\u901a\u8baf\u3002 \u5bf9\u591a\u6838\u8ba1\u7b97\u673a\u652f\u6301\u53cb\u597d\u3002","title":"\u4e3a\u4ec0\u4e48\u9700\u8981 Go \u8bed\u8a00"},{"location":"1/2/1/#go_1","text":"\u4e0d\u652f\u6301\u51fd\u6570\u91cd\u8f7d\u548c\u64cd\u4f5c\u7b26\u91cd\u8f7d \u4e3a\u4e86\u907f\u514d\u5728 C/C++ \u5f00\u53d1\u4e2d\u7684\u4e00\u4e9b Bug \u548c\u6df7\u4e71\uff0c\u4e0d\u652f\u6301\u9690\u5f0f\u8f6c\u6362 \u652f\u6301\u63a5\u53e3\u62bd\u8c61\uff0c\u4e0d\u652f\u6301\u7ee7\u627f \u4e0d\u652f\u6301\u52a8\u6001\u52a0\u8f7d\u4ee3\u7801 \u4e0d\u652f\u6301\u52a8\u6001\u94fe\u63a5\u5e93 \u901a\u8fc7 recover \u548c panic \u6765\u66ff\u4ee3\u5f02\u5e38\u673a\u5236 \u4e0d\u652f\u6301\u65ad\u8a00 \u4e0d\u652f\u6301\u9759\u6001\u53d8\u91cf","title":"Go \u8bed\u8a00\u4e0d\u652f\u6301\u7684\u7279\u6027"},{"location":"1/2/2/","text":"Go \u8bed\u8a00\u73af\u5883\u642d\u5efa \u4e0b\u8f7d Go Go \u5b89\u88c5\u6587\u4ef6\u4ee5\u53ca\u6e90\u4ee3\u7801 \u4e0b\u8f7d\u5bf9\u5e94\u5e73\u53f0\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u5e76\u5b89\u88c5 \u73af\u5883\u53d8\u91cf GOROOT go\u7684\u5b89\u88c5\u76ee\u5f55 GOPATH src\uff1a\u5b58\u653e\u6e90\u4ee3\u7801 pkg\uff1a\u5b58\u653e\u4f9d\u8d56\u5305 bin\uff1a\u5b58\u653e\u53ef\u6267\u884c\u6587\u4ef6 \u5176\u4ed6\u5e38\u7528\u53d8\u91cf GOOS\uff0cGOARCH\uff0cGOPROXY \u5927\u9646\u7528\u6237\u5efa\u8bae\u8bbe\u7f6e goproxy: export GOPROXY=https://goproxy.cn IDE \u8bbe\u7f6e\uff08VS Code\uff09 \u4e0b\u8f7d\u5e76\u5b89\u88c5 Visual Studio > code: https://code.visualstudio.com/download \u5b89\u88c5 Go \u8bed\u8a00\u63d2\u4ef6: https://marketplace.visualstudio.com/items?itemName=golang.go \u5176\u4ed6\u53ef\u9009\u9879 Intellj goland\uff0c\u6536\u8d39\u8f6f\u4ef6 vim\uff0csublime\u7b49 \u4e00\u4e9b\u57fa\u672c\u547d\u4ee4 \u547d\u4ee4 \u4f5c\u7528 bug start a bug report build compile packages and dependencies clean remove object files and cached files doc show documentation for package or symbol env print Go environment information fix update packages to use new APIs fmt gofmt(reformat) package sources generate generate Go files by processing source get add dependencies to current module and install them install compile and install packages and dependencies list list packages or modules mod module maintenance run compile and run Go program test test packages tool run specified go tool version print Go version vet report likely mistakes in packages Go run cd k8s-mengfanjie/01golang/01examples/01module/01helloworld/ \u279c 01helloworld git:(main) \u2717 go run main.go Hello world Go build Go \u8bed\u8a00\u4e0d\u652f\u6301\u52a8\u6001\u94fe\u63a5\uff0c\u56e0\u6b64\u7f16\u8bd1\u65f6\u4f1a\u5c06\u6240\u6709\u4f9d\u8d56\u7f16\u8bd1\u8fdb\u540c\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002 \u6307\u5b9a\u8f93\u51fa\u76ee\u5f55\u53ca\u6587\u4ef6\u540d code \u279c 01helloworld git:(main) \u2717 go build -o main main.go \u279c 01helloworld git:(main) \u2717 ll \u603b\u7528\u91cf 1.2M -rwxrwxr-x 1 cjx cjx 1.2M 9\u6708 4 16:47 main -rw-rw-r-- 1 cjx cjx 54 9\u6708 4 16:45 main.go \u6307\u5b9a\u8f93\u51fa\u76ee\u5f55\u3002 go build \u2013o bin/mybinary \u5e38\u7528\u73af\u5883\u53d8\u91cf\u8bbe\u7f6e\u7f16\u8bd1\u64cd\u4f5c\u7cfb\u7edf\u548c CPU \u67b6\u6784 GOOS=linux GOARCH=amd64 go build \u5168\u652f\u6301\u5217\u8868 $GOROOT/src/go/build/syslist.go Go mod \u5c06\u9879\u76ee\u653e\u5230 $GOROOT \u4e0b go mod init github/mkbooks-codes/k8s-mengfanjie Go get go get github.com/magiconair/properties/assert Go test Go \u8bed\u8a00\u539f\u751f\u81ea\u5e26\u6d4b\u8bd5 code \u279c 02gotest git:(main) \u2717 go test PASS ok github/mkbooks-codes/k8s-mengfanjie/01golang/01examples/01module/02gotest 0.001s go test ./\u2026 -v \u8fd0\u884c\u6d4b\u8bd5 go test\u547d\u4ee4\u626b\u63cf\u6240\u6709*_test.go\u4e3a\u7ed3\u5c3e\u7684\u6587\u4ef6\uff0c\u60ef\u4f8b\u662f\u5c06\u6d4b\u8bd5\u4ee3\u7801\u4e0e\u6b63\u5f0f\u4ee3\u7801\u653e\u5728\u540c\u76ee\u5f55\uff0c\u5982 foo.go \u7684\u6d4b\u8bd5\u4ee3\u7801\u4e00\u822c\u5199\u5728 foo_test.go Go vet \u4ee3\u7801\u9759\u6001\u68c0\u67e5\uff0c\u53d1\u73b0\u53ef\u80fd\u7684 bug \u6216\u8005\u53ef\u7591\u7684\u6784\u9020 - Print-format \u9519\u8bef\uff0c\u68c0\u67e5\u7c7b\u578b\u4e0d\u5339\u914d\u7684print str := \"hello world!\" fmt.Printf(\"%d\\n\", str) Boolean \u9519\u8bef\uff0c\u68c0\u67e5\u4e00\u76f4\u4e3a true\u3001false \u6216\u8005\u5197\u4f59\u7684\u8868\u8fbe\u5f0f fmt.Println(i != 0 || i != 1) Range \u5faa\u73af\uff0c\u6bd4\u5982\u5982\u4e0b\u4ee3\u7801\u4e3b\u534f\u7a0b\u4f1a\u5148\u9000\u51fa\uff0cgo routine\u65e0\u6cd5\u88ab\u6267\u884c words := []string{\"foo\", \"bar\", \"baz\"} for _, word := range words { go func() { fmt.Println(word) }() } Unreachable\u7684\u4ee3\u7801\uff0c\u5982 return \u4e4b\u540e\u7684\u4ee3\u7801 \u5176\u4ed6\u9519\u8bef\uff0c\u6bd4\u5982\u53d8\u91cf\u81ea\u8d4b\u503c\uff0cerror \u68c0\u67e5\u6ede\u540e\u7b49 res, err := http.Get(\"https://www.spreadsheetdb.io/\") defer res.Body.Close() if err != nil { log.Fatal(err) } code \u279c 03govet git:(main) \u2717 go vet # github/mkbooks-codes/k8s-mengfanjie/01golang/01examples/01module/03govet ./main.go:15:14: suspect or: i != 0 || i != 1 ./main.go:25:8: using res before checking for errors ./main.go:20:16: loop variable word captured by func literal ./main.go:11:2: Printf format %d has arg name of wrong type string ./main.go:12:2: Printf call needs 1 arg but has 2 args \u4ee3\u7801\u7248\u672c\u63a7\u5236 \u4e0b\u8f7d\u5e76\u5b89\u88c5 Git Command Line https://git-scm.com/downloads Github \u672c\u8bfe\u7a0b\u793a\u4f8b\u4ee3\u7801\u5747\u4e0a\u4f20\u5728 https://github.com/cncamp/golang \u521b\u5efa\u4ee3\u7801\u76ee\u5f55 mkdir \u2013p $GOPATH/src/github.com/cncamp cd $GOPATH/src/github.com/cncamp \u4ee3\u7801\u4e0b\u8f7d git clone https://github.com/cncamp/golang.git \u4fee\u6539\u4ee3\u7801 \u4e0a\u4f20\u4ee3\u7801 git add filename git commit \u2013m 'change logs' git push Golang playground \u5b98\u65b9 playground https://play.golang.org/ \u53ef\u76f4\u63a5\u7f16\u5199\u548c\u8fd0\u884c Go \u8bed\u8a00\u7a0b\u5e8f \u56fd\u5185\u53ef\u76f4\u63a5\u8bbf\u95ee\u7684 playground https://goplay.tools/","title":"Go \u8bed\u8a00\u73af\u5883\u642d\u5efa"},{"location":"1/2/2/#go","text":"","title":"Go \u8bed\u8a00\u73af\u5883\u642d\u5efa"},{"location":"1/2/2/#go_1","text":"Go \u5b89\u88c5\u6587\u4ef6\u4ee5\u53ca\u6e90\u4ee3\u7801 \u4e0b\u8f7d\u5bf9\u5e94\u5e73\u53f0\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u5e76\u5b89\u88c5","title":"\u4e0b\u8f7d Go"},{"location":"1/2/2/#_1","text":"GOROOT go\u7684\u5b89\u88c5\u76ee\u5f55 GOPATH src\uff1a\u5b58\u653e\u6e90\u4ee3\u7801 pkg\uff1a\u5b58\u653e\u4f9d\u8d56\u5305 bin\uff1a\u5b58\u653e\u53ef\u6267\u884c\u6587\u4ef6 \u5176\u4ed6\u5e38\u7528\u53d8\u91cf GOOS\uff0cGOARCH\uff0cGOPROXY \u5927\u9646\u7528\u6237\u5efa\u8bae\u8bbe\u7f6e goproxy: export GOPROXY=https://goproxy.cn","title":"\u73af\u5883\u53d8\u91cf"},{"location":"1/2/2/#ide-vs-code","text":"\u4e0b\u8f7d\u5e76\u5b89\u88c5 Visual Studio > code: https://code.visualstudio.com/download \u5b89\u88c5 Go \u8bed\u8a00\u63d2\u4ef6: https://marketplace.visualstudio.com/items?itemName=golang.go \u5176\u4ed6\u53ef\u9009\u9879 Intellj goland\uff0c\u6536\u8d39\u8f6f\u4ef6 vim\uff0csublime\u7b49","title":"IDE \u8bbe\u7f6e\uff08VS Code\uff09"},{"location":"1/2/2/#_2","text":"\u547d\u4ee4 \u4f5c\u7528 bug start a bug report build compile packages and dependencies clean remove object files and cached files doc show documentation for package or symbol env print Go environment information fix update packages to use new APIs fmt gofmt(reformat) package sources generate generate Go files by processing source get add dependencies to current module and install them install compile and install packages and dependencies list list packages or modules mod module maintenance run compile and run Go program test test packages tool run specified go tool version print Go version vet report likely mistakes in packages","title":"\u4e00\u4e9b\u57fa\u672c\u547d\u4ee4"},{"location":"1/2/2/#go-run","text":"cd k8s-mengfanjie/01golang/01examples/01module/01helloworld/ \u279c 01helloworld git:(main) \u2717 go run main.go Hello world","title":"Go run"},{"location":"1/2/2/#go-build","text":"Go \u8bed\u8a00\u4e0d\u652f\u6301\u52a8\u6001\u94fe\u63a5\uff0c\u56e0\u6b64\u7f16\u8bd1\u65f6\u4f1a\u5c06\u6240\u6709\u4f9d\u8d56\u7f16\u8bd1\u8fdb\u540c\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002 \u6307\u5b9a\u8f93\u51fa\u76ee\u5f55\u53ca\u6587\u4ef6\u540d code \u279c 01helloworld git:(main) \u2717 go build -o main main.go \u279c 01helloworld git:(main) \u2717 ll \u603b\u7528\u91cf 1.2M -rwxrwxr-x 1 cjx cjx 1.2M 9\u6708 4 16:47 main -rw-rw-r-- 1 cjx cjx 54 9\u6708 4 16:45 main.go \u6307\u5b9a\u8f93\u51fa\u76ee\u5f55\u3002 go build \u2013o bin/mybinary \u5e38\u7528\u73af\u5883\u53d8\u91cf\u8bbe\u7f6e\u7f16\u8bd1\u64cd\u4f5c\u7cfb\u7edf\u548c CPU \u67b6\u6784 GOOS=linux GOARCH=amd64 go build \u5168\u652f\u6301\u5217\u8868 $GOROOT/src/go/build/syslist.go","title":"Go build"},{"location":"1/2/2/#go-mod","text":"\u5c06\u9879\u76ee\u653e\u5230 $GOROOT \u4e0b go mod init github/mkbooks-codes/k8s-mengfanjie","title":"Go mod"},{"location":"1/2/2/#go-get","text":"go get github.com/magiconair/properties/assert","title":"Go get"},{"location":"1/2/2/#go-test","text":"Go \u8bed\u8a00\u539f\u751f\u81ea\u5e26\u6d4b\u8bd5 code \u279c 02gotest git:(main) \u2717 go test PASS ok github/mkbooks-codes/k8s-mengfanjie/01golang/01examples/01module/02gotest 0.001s go test ./\u2026 -v \u8fd0\u884c\u6d4b\u8bd5 go test\u547d\u4ee4\u626b\u63cf\u6240\u6709*_test.go\u4e3a\u7ed3\u5c3e\u7684\u6587\u4ef6\uff0c\u60ef\u4f8b\u662f\u5c06\u6d4b\u8bd5\u4ee3\u7801\u4e0e\u6b63\u5f0f\u4ee3\u7801\u653e\u5728\u540c\u76ee\u5f55\uff0c\u5982 foo.go \u7684\u6d4b\u8bd5\u4ee3\u7801\u4e00\u822c\u5199\u5728 foo_test.go","title":"Go test"},{"location":"1/2/2/#go-vet","text":"\u4ee3\u7801\u9759\u6001\u68c0\u67e5\uff0c\u53d1\u73b0\u53ef\u80fd\u7684 bug \u6216\u8005\u53ef\u7591\u7684\u6784\u9020 - Print-format \u9519\u8bef\uff0c\u68c0\u67e5\u7c7b\u578b\u4e0d\u5339\u914d\u7684print str := \"hello world!\" fmt.Printf(\"%d\\n\", str) Boolean \u9519\u8bef\uff0c\u68c0\u67e5\u4e00\u76f4\u4e3a true\u3001false \u6216\u8005\u5197\u4f59\u7684\u8868\u8fbe\u5f0f fmt.Println(i != 0 || i != 1) Range \u5faa\u73af\uff0c\u6bd4\u5982\u5982\u4e0b\u4ee3\u7801\u4e3b\u534f\u7a0b\u4f1a\u5148\u9000\u51fa\uff0cgo routine\u65e0\u6cd5\u88ab\u6267\u884c words := []string{\"foo\", \"bar\", \"baz\"} for _, word := range words { go func() { fmt.Println(word) }() } Unreachable\u7684\u4ee3\u7801\uff0c\u5982 return \u4e4b\u540e\u7684\u4ee3\u7801 \u5176\u4ed6\u9519\u8bef\uff0c\u6bd4\u5982\u53d8\u91cf\u81ea\u8d4b\u503c\uff0cerror \u68c0\u67e5\u6ede\u540e\u7b49 res, err := http.Get(\"https://www.spreadsheetdb.io/\") defer res.Body.Close() if err != nil { log.Fatal(err) } code \u279c 03govet git:(main) \u2717 go vet # github/mkbooks-codes/k8s-mengfanjie/01golang/01examples/01module/03govet ./main.go:15:14: suspect or: i != 0 || i != 1 ./main.go:25:8: using res before checking for errors ./main.go:20:16: loop variable word captured by func literal ./main.go:11:2: Printf format %d has arg name of wrong type string ./main.go:12:2: Printf call needs 1 arg but has 2 args","title":"Go vet"},{"location":"1/2/2/#_3","text":"\u4e0b\u8f7d\u5e76\u5b89\u88c5 Git Command Line https://git-scm.com/downloads Github \u672c\u8bfe\u7a0b\u793a\u4f8b\u4ee3\u7801\u5747\u4e0a\u4f20\u5728 https://github.com/cncamp/golang \u521b\u5efa\u4ee3\u7801\u76ee\u5f55 mkdir \u2013p $GOPATH/src/github.com/cncamp cd $GOPATH/src/github.com/cncamp \u4ee3\u7801\u4e0b\u8f7d git clone https://github.com/cncamp/golang.git \u4fee\u6539\u4ee3\u7801 \u4e0a\u4f20\u4ee3\u7801 git add filename git commit \u2013m 'change logs' git push","title":"\u4ee3\u7801\u7248\u672c\u63a7\u5236"},{"location":"1/2/2/#golang-playground","text":"\u5b98\u65b9 playground https://play.golang.org/ \u53ef\u76f4\u63a5\u7f16\u5199\u548c\u8fd0\u884c Go \u8bed\u8a00\u7a0b\u5e8f \u56fd\u5185\u53ef\u76f4\u63a5\u8bbf\u95ee\u7684 playground https://goplay.tools/","title":"Golang playground"},{"location":"1/2/3/","text":"\u63a7\u5236\u7ed3\u6784 \u5206\u652f code if \u57fa\u672c\u5f62\u5f0f condition1 := false condition2 := true if condition1 { // do something fmt.Printf(\"condition1 %t\", condition1) } else if condition2 { // do something else fmt.Printf(\"condition2 %t\", condition2) } else { // catch-all or default fmt.Printf(\"else\") } if \u7684\u7b80\u77ed\u8bed\u53e5 \u540c for \u4e00\u6837\uff0c if \u8bed\u53e5\u53ef\u4ee5\u5728\u6761\u4ef6\u8868\u8fbe\u5f0f\u524d\u6267\u884c\u4e00\u4e2a\u7b80\u5355\u7684\u8bed\u53e5\u3002 x := 99 if v := x - 100; v < 0 { fmt.Printf(\"v: %d\", v) } switch var1 := 2 val1 := 1 val2 := 2 val3 := 3 switch var1 { case val1: //\u7a7a\u5206\u652f fmt.Println(\"val1\") case val2: fallthrough //\u6267\u884ccase3\u4e2d\u7684f() case val3: f() default: //\u9ed8\u8ba4\u5206\u652f fmt.Println(\"default\") } \u5faa\u73af code for Go \u53ea\u6709\u4e00\u79cd\u5faa\u73af\u7ed3\u6784\uff1afor \u5faa\u73af\u3002 - \u8ba1\u5165\u8ba1\u6570\u5668\u7684\u5faa\u73af for \u521d\u59cb\u5316\u8bed\u53e5; \u6761\u4ef6\u8bed\u53e5; \u4fee\u9970\u8bed\u53e5 {} for i := 0; i < 10; i++ { sum += i } // \u521d\u59cb\u5316\u8bed\u53e5\u548c\u540e\u7f6e\u8bed\u53e5\u662f\u53ef\u9009\u7684\uff0c\u6b64\u573a\u666f\u4e0e while \u7b49\u4ef7\uff08Go \u8bed\u8a00\u4e0d\u652f\u6301 while\uff09 for ; sum < 1000; { sum += sum } - \u65e0\u9650\u5faa\u73af for { if condition1 { break } } for-range \u904d\u5386\u6570\u7ec4\uff0c\u5207\u7247\uff0c\u5b57\u7b26\u4e32\uff0cMap \u7b49 for index, char := range myString { ... } for key, value := range MyMap { ... } for index, value := range MyArray { ... } \u9700\u8981\u6ce8\u610f\uff1a\u5982\u679c for range \u904d\u5386\u6307\u9488\u6570\u7ec4\uff0c\u5219 value \u53d6\u51fa\u7684\u6307\u9488\u5730\u5740\u4e3a\u539f\u6307\u9488\u5730\u5740\u7684\u62f7\u8d1d","title":"\u63a7\u5236\u7ed3\u6784"},{"location":"1/2/3/#_1","text":"","title":"\u63a7\u5236\u7ed3\u6784"},{"location":"1/2/3/#_2","text":"code","title":"\u5206\u652f"},{"location":"1/2/3/#if","text":"\u57fa\u672c\u5f62\u5f0f condition1 := false condition2 := true if condition1 { // do something fmt.Printf(\"condition1 %t\", condition1) } else if condition2 { // do something else fmt.Printf(\"condition2 %t\", condition2) } else { // catch-all or default fmt.Printf(\"else\") } if \u7684\u7b80\u77ed\u8bed\u53e5 \u540c for \u4e00\u6837\uff0c if \u8bed\u53e5\u53ef\u4ee5\u5728\u6761\u4ef6\u8868\u8fbe\u5f0f\u524d\u6267\u884c\u4e00\u4e2a\u7b80\u5355\u7684\u8bed\u53e5\u3002 x := 99 if v := x - 100; v < 0 { fmt.Printf(\"v: %d\", v) }","title":"if"},{"location":"1/2/3/#switch","text":"var1 := 2 val1 := 1 val2 := 2 val3 := 3 switch var1 { case val1: //\u7a7a\u5206\u652f fmt.Println(\"val1\") case val2: fallthrough //\u6267\u884ccase3\u4e2d\u7684f() case val3: f() default: //\u9ed8\u8ba4\u5206\u652f fmt.Println(\"default\") }","title":"switch"},{"location":"1/2/3/#_3","text":"code","title":"\u5faa\u73af"},{"location":"1/2/3/#for","text":"Go \u53ea\u6709\u4e00\u79cd\u5faa\u73af\u7ed3\u6784\uff1afor \u5faa\u73af\u3002 - \u8ba1\u5165\u8ba1\u6570\u5668\u7684\u5faa\u73af for \u521d\u59cb\u5316\u8bed\u53e5; \u6761\u4ef6\u8bed\u53e5; \u4fee\u9970\u8bed\u53e5 {} for i := 0; i < 10; i++ { sum += i } // \u521d\u59cb\u5316\u8bed\u53e5\u548c\u540e\u7f6e\u8bed\u53e5\u662f\u53ef\u9009\u7684\uff0c\u6b64\u573a\u666f\u4e0e while \u7b49\u4ef7\uff08Go \u8bed\u8a00\u4e0d\u652f\u6301 while\uff09 for ; sum < 1000; { sum += sum } - \u65e0\u9650\u5faa\u73af for { if condition1 { break } }","title":"for"},{"location":"1/2/3/#for-range","text":"\u904d\u5386\u6570\u7ec4\uff0c\u5207\u7247\uff0c\u5b57\u7b26\u4e32\uff0cMap \u7b49 for index, char := range myString { ... } for key, value := range MyMap { ... } for index, value := range MyArray { ... } \u9700\u8981\u6ce8\u610f\uff1a\u5982\u679c for range \u904d\u5386\u6307\u9488\u6570\u7ec4\uff0c\u5219 value \u53d6\u51fa\u7684\u6307\u9488\u5730\u5740\u4e3a\u539f\u6307\u9488\u5730\u5740\u7684\u62f7\u8d1d","title":"for-range"},{"location":"1/2/4/","text":"\u5e38\u7528\u6570\u636e\u7ed3\u6784 \u53d8\u91cf\u4e0e\u5e38\u91cf \u5e38\u91cf const identifier type \u53d8\u91cf var identifier type \u53d8\u91cf\u5b9a\u4e49 \u53d8\u91cf var \u8bed\u53e5\u7528\u4e8e\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\u5217\u8868\uff0c\u8ddf\u51fd\u6570\u7684\u53c2\u6570\u5217\u8868\u4e00\u6837\uff0c\u7c7b\u578b\u5728\u6700\u540e\u3002 var c, python, java bool \u53d8\u91cf\u7684\u521d\u59cb\u5316 \u53d8\u91cf\u58f0\u660e\u53ef\u4ee5\u5305\u542b\u521d\u59cb\u503c\uff0c\u6bcf\u4e2a\u53d8\u91cf\u5bf9\u5e94\u4e00\u4e2a\u3002 \u5982\u679c\u521d\u59cb\u5316\u503c\u5df2\u5b58\u5728\uff0c\u5219\u53ef\u4ee5\u7701\u7565\u7c7b\u578b\uff1b\u53d8\u91cf\u4f1a\u4ece\u521d\u59cb\u503c\u4e2d\u83b7\u5f97\u7c7b\u578b\u3002 var i, j int = 1, 2 \u77ed\u53d8\u91cf\u58f0\u660e \u5728\u51fd\u6570\u4e2d\uff0c\u7b80\u6d01\u8d4b\u503c\u8bed\u53e5 := \u53ef\u5728\u7c7b\u578b\u660e\u786e\u7684\u5730\u65b9\u4ee3\u66ff var \u58f0\u660e\u3002 \u51fd\u6570\u5916\u7684\u6bcf\u4e2a\u8bed\u53e5\u90fd\u5fc5\u987b\u4ee5\u5173\u952e\u5b57\u5f00\u59cb\uff08var, func \u7b49\u7b49\uff09\uff0c\u56e0\u6b64 := \u7ed3\u6784\u4e0d\u80fd\u5728\u51fd\u6570\u5916\u4f7f\u7528\u3002 c, python, java := true, false, \"no!\" \u7c7b\u578b\u8f6c\u6362\u4e0e\u63a8\u5bfc \u7c7b\u578b\u8f6c\u6362 \u8868\u8fbe\u5f0f T(v) \u5c06\u503c v \u8f6c\u6362\u4e3a\u7c7b\u578b T\u3002 \u4e00\u4e9b\u5173\u4e8e\u6570\u503c\u7684\u8f6c\u6362\uff1a var i int = 42 var f float64 = float64(i) var u uint = uint(f) \u6216\u8005\uff0c\u66f4\u52a0\u7b80\u5355\u7684\u5f62\u5f0f\uff1a i := 42 f := float64(i) u := uint(f) \u7c7b\u578b\u63a8\u5bfc \u5728\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\u800c\u4e0d\u6307\u5b9a\u5176\u7c7b\u578b\u65f6\uff08\u5373\u4f7f\u7528\u4e0d\u5e26\u7c7b\u578b\u7684 := \u8bed\u6cd5\u6216 var = \u8868\u8fbe\u5f0f\u8bed\u6cd5\uff09\uff0c\u53d8\u91cf\u7684\u7c7b\u578b\u7531\u53f3\u503c\u63a8\u5bfc\u5f97\u51fa\u3002 var i int j := i // j \u4e5f\u662f\u4e00\u4e2a int \u6570\u7ec4 [code](https://github.com/mkbooks-codes/k8s-mengfanjie/blob/main/01golang/01examples/01module/06array-slice \u76f8\u540c\u7c7b\u578b\u4e14\u957f\u5ea6\u56fa\u5b9a\u8fde\u7eed\u5185\u5b58\u7247\u6bb5 \u4ee5\u7f16\u53f7\u8bbf\u95ee\u6bcf\u4e2a\u5143\u7d20 \u5b9a\u4e49\u65b9\u6cd5 var identifier [len]type \u793a\u4f8b myArray := [3]int{1,2,3} \u5207\u7247(slice) code \u5207\u7247\u662f\u5bf9\u6570\u7ec4\u4e00\u4e2a\u8fde\u7eed\u7247\u6bb5\u7684\u5f15\u7528 \u6570\u7ec4\u5b9a\u4e49\u4e2d\u4e0d\u6307\u5b9a\u957f\u5ea6\u5373\u4e3a\u5207\u7247 var identifier []type \u5207\u7247\u5728\u672a\u521d\u59cb\u5316\u4e4b\u524d\u9ed8\u8ba4\u4e3anil\uff0c \u957f\u5ea6\u4e3a0 \u5e38\u7528\u65b9\u6cd5: k8s-mengfanjie/01golang/01examples/01module/06array-slice Make \u548c New New \u8fd4\u56de\u6307\u9488\u5730\u5740 Make \u8fd4\u56de\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u53ef\u9884\u8bbe\u5185\u5b58\u7a7a\u95f4\uff0c\u907f\u514d\u672a\u6765\u7684\u5185\u5b58\u62f7\u8d1d \u793a\u4f8b mySlice1 := new([]int) mySlice2 := make([]int, 0) mySlice3 := make([]int, 10) mySlice4 := make([]int, 10, 20) \u5173\u4e8e\u5207\u7247\u7684\u5e38\u89c1\u95ee\u9898 \u5207\u7247\u662f\u8fde\u7eed\u5185\u5b58\u5e76\u4e14\u53ef\u4ee5\u52a8\u6001\u6269\u5c55\uff0c\u7531\u6b64\u5f15\u53d1\u7684\u95ee\u9898\uff1f a := int{} b := []int{1,2,3} c := a a = append(b, 1) // a \u7684\u5730\u5740\u53ef\u80fd\u53d1\u751f\u53d8\u5316 \u4fee\u6539\u5207\u7247\u7684\u503c\uff1f(Go \u53ea\u6709\u503c\u4f20\u9012) mySlice := []int{10, 20, 30, 40, 50} for _, value := range mySlice { value *= 2 } fmt.Printf(\"mySlice %+v\\n\", mySlice) for index, _ := range mySlice { mySlice[index] *= 2 } fmt.Printf(\"mySlice %+v\\n\", mySlice) Map code \u58f0\u660e\u65b9\u6cd5 var map1 map[keytype]valuetype \u793a\u4f8b myMap := make(map[string]string, 10) myMap[\"a\"] = \"b\" myFuncMap := map[string]func() int{ \"funcA\": func() int { return 1 }, } fmt.Println(myFuncMap) f := myFuncMap[\"funcA\"] fmt.Println(f()) \u8bbf\u95ee Map \u5143\u7d20 \u6309 Key \u53d6\u503c value, exists := myMap[\"a\"] if exists { println(value) } \u904d\u5386 Map for k, v := range myMap { println(k, v) } \u7ed3\u6784\u4f53\u548c\u6307\u9488 code \u901a\u8fc7 type \u2026 struct \u5173\u952e\u5b57\u81ea\u5b9a\u4e49\u7ed3\u6784\u4f53 Go \u8bed\u8a00\u652f\u6301\u6307\u9488\uff0c\u4f46\u4e0d\u652f\u6301\u6307\u9488\u8fd0\u7b97 \u6307\u9488\u53d8\u91cf\u7684\u503c\u4e3a\u5185\u5b58\u5730\u5740 \u672a\u8d4b\u503c\u7684\u6307\u9488\u4e3a nil type MyType struct { Name string } func printMyType(t *MyType){ println(t.Name) } func main(){ t := MyType{Name: \"test\"} printMyType(&t) } \u7ed3\u6784\u4f53\u6807\u7b7e \u7ed3\u6784\u4f53\u4e2d\u7684\u5b57\u6bb5\u9664\u4e86\u6709\u540d\u5b57\u548c\u7c7b\u578b\u5916\uff0c\u8fd8\u53ef\u4ee5\u6709\u4e00\u4e2a\u53ef\u9009\u7684\u6807\u7b7e\uff08tag\uff09 \u4f7f\u7528\u573a\u666f\uff1aKubernetes APIServer \u5bf9\u6240\u6709\u8d44\u6e90\u7684\u5b9a\u4e49\u90fd\u7528 Json tag \u548c protoBuff tag NodeName string json:\"nodeName,omitempty\" protobuf:\"bytes,10,opt,name=nodeName\" type MyType struct { Name string `json:\"name\"` } func main() { mt := MyType{Name: \"test\"} myType := reflect.TypeOf(mt) name := myType.Field(0) tag := name.Tag.Get(\"json\") println(tag) } \u7c7b\u578b\u91cd\u547d\u540d // Service Type string describes ingress methods for a service type ServiceType string const ( // ServiceTypeClusterIP means a service will only be accessible inside the // cluster, via the ClusterIP. ServiceTypeClusterIP ServiceType = \"ClusterIP\" // ServiceTypeNodePort means a service will be exposed on one port of // every node, in addition to 'ClusterIP' type. ServiceTypeNodePort ServiceType = \"NodePort\" // ServiceTypeLoadBalancer means a service will be exposed via an // external load balancer (if the cloud provider supports it), in addition // to 'NodePort' type. ServiceTypeLoadBalancer ServiceType = \"LoadBalancer\" // ServiceTypeExternalName means a service consists of only a reference to // an external name that kubedns or equivalent will return as a CNAME // record, with no exposing or proxying of any pods involved. ServiceTypeExternalName ServiceType = \"ExternalName\" )","title":"Go \u8bed\u8a00\u5e38\u7528\u6570\u636e\u7ed3\u6784"},{"location":"1/2/4/#_1","text":"","title":"\u5e38\u7528\u6570\u636e\u7ed3\u6784"},{"location":"1/2/4/#_2","text":"\u5e38\u91cf const identifier type \u53d8\u91cf var identifier type","title":"\u53d8\u91cf\u4e0e\u5e38\u91cf"},{"location":"1/2/4/#_3","text":"\u53d8\u91cf var \u8bed\u53e5\u7528\u4e8e\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\u5217\u8868\uff0c\u8ddf\u51fd\u6570\u7684\u53c2\u6570\u5217\u8868\u4e00\u6837\uff0c\u7c7b\u578b\u5728\u6700\u540e\u3002 var c, python, java bool \u53d8\u91cf\u7684\u521d\u59cb\u5316 \u53d8\u91cf\u58f0\u660e\u53ef\u4ee5\u5305\u542b\u521d\u59cb\u503c\uff0c\u6bcf\u4e2a\u53d8\u91cf\u5bf9\u5e94\u4e00\u4e2a\u3002 \u5982\u679c\u521d\u59cb\u5316\u503c\u5df2\u5b58\u5728\uff0c\u5219\u53ef\u4ee5\u7701\u7565\u7c7b\u578b\uff1b\u53d8\u91cf\u4f1a\u4ece\u521d\u59cb\u503c\u4e2d\u83b7\u5f97\u7c7b\u578b\u3002 var i, j int = 1, 2 \u77ed\u53d8\u91cf\u58f0\u660e \u5728\u51fd\u6570\u4e2d\uff0c\u7b80\u6d01\u8d4b\u503c\u8bed\u53e5 := \u53ef\u5728\u7c7b\u578b\u660e\u786e\u7684\u5730\u65b9\u4ee3\u66ff var \u58f0\u660e\u3002 \u51fd\u6570\u5916\u7684\u6bcf\u4e2a\u8bed\u53e5\u90fd\u5fc5\u987b\u4ee5\u5173\u952e\u5b57\u5f00\u59cb\uff08var, func \u7b49\u7b49\uff09\uff0c\u56e0\u6b64 := \u7ed3\u6784\u4e0d\u80fd\u5728\u51fd\u6570\u5916\u4f7f\u7528\u3002 c, python, java := true, false, \"no!\"","title":"\u53d8\u91cf\u5b9a\u4e49"},{"location":"1/2/4/#_4","text":"\u7c7b\u578b\u8f6c\u6362 \u8868\u8fbe\u5f0f T(v) \u5c06\u503c v \u8f6c\u6362\u4e3a\u7c7b\u578b T\u3002 \u4e00\u4e9b\u5173\u4e8e\u6570\u503c\u7684\u8f6c\u6362\uff1a var i int = 42 var f float64 = float64(i) var u uint = uint(f) \u6216\u8005\uff0c\u66f4\u52a0\u7b80\u5355\u7684\u5f62\u5f0f\uff1a i := 42 f := float64(i) u := uint(f) \u7c7b\u578b\u63a8\u5bfc \u5728\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\u800c\u4e0d\u6307\u5b9a\u5176\u7c7b\u578b\u65f6\uff08\u5373\u4f7f\u7528\u4e0d\u5e26\u7c7b\u578b\u7684 := \u8bed\u6cd5\u6216 var = \u8868\u8fbe\u5f0f\u8bed\u6cd5\uff09\uff0c\u53d8\u91cf\u7684\u7c7b\u578b\u7531\u53f3\u503c\u63a8\u5bfc\u5f97\u51fa\u3002 var i int j := i // j \u4e5f\u662f\u4e00\u4e2a int","title":"\u7c7b\u578b\u8f6c\u6362\u4e0e\u63a8\u5bfc"},{"location":"1/2/4/#_5","text":"[code](https://github.com/mkbooks-codes/k8s-mengfanjie/blob/main/01golang/01examples/01module/06array-slice \u76f8\u540c\u7c7b\u578b\u4e14\u957f\u5ea6\u56fa\u5b9a\u8fde\u7eed\u5185\u5b58\u7247\u6bb5 \u4ee5\u7f16\u53f7\u8bbf\u95ee\u6bcf\u4e2a\u5143\u7d20 \u5b9a\u4e49\u65b9\u6cd5 var identifier [len]type \u793a\u4f8b myArray := [3]int{1,2,3}","title":"\u6570\u7ec4"},{"location":"1/2/4/#slice","text":"code \u5207\u7247\u662f\u5bf9\u6570\u7ec4\u4e00\u4e2a\u8fde\u7eed\u7247\u6bb5\u7684\u5f15\u7528 \u6570\u7ec4\u5b9a\u4e49\u4e2d\u4e0d\u6307\u5b9a\u957f\u5ea6\u5373\u4e3a\u5207\u7247 var identifier []type \u5207\u7247\u5728\u672a\u521d\u59cb\u5316\u4e4b\u524d\u9ed8\u8ba4\u4e3anil\uff0c \u957f\u5ea6\u4e3a0 \u5e38\u7528\u65b9\u6cd5: k8s-mengfanjie/01golang/01examples/01module/06array-slice","title":"\u5207\u7247(slice)"},{"location":"1/2/4/#make-new","text":"New \u8fd4\u56de\u6307\u9488\u5730\u5740 Make \u8fd4\u56de\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u53ef\u9884\u8bbe\u5185\u5b58\u7a7a\u95f4\uff0c\u907f\u514d\u672a\u6765\u7684\u5185\u5b58\u62f7\u8d1d \u793a\u4f8b mySlice1 := new([]int) mySlice2 := make([]int, 0) mySlice3 := make([]int, 10) mySlice4 := make([]int, 10, 20)","title":"Make \u548c New"},{"location":"1/2/4/#_6","text":"\u5207\u7247\u662f\u8fde\u7eed\u5185\u5b58\u5e76\u4e14\u53ef\u4ee5\u52a8\u6001\u6269\u5c55\uff0c\u7531\u6b64\u5f15\u53d1\u7684\u95ee\u9898\uff1f a := int{} b := []int{1,2,3} c := a a = append(b, 1) // a \u7684\u5730\u5740\u53ef\u80fd\u53d1\u751f\u53d8\u5316 \u4fee\u6539\u5207\u7247\u7684\u503c\uff1f(Go \u53ea\u6709\u503c\u4f20\u9012) mySlice := []int{10, 20, 30, 40, 50} for _, value := range mySlice { value *= 2 } fmt.Printf(\"mySlice %+v\\n\", mySlice) for index, _ := range mySlice { mySlice[index] *= 2 } fmt.Printf(\"mySlice %+v\\n\", mySlice)","title":"\u5173\u4e8e\u5207\u7247\u7684\u5e38\u89c1\u95ee\u9898"},{"location":"1/2/4/#map","text":"code \u58f0\u660e\u65b9\u6cd5 var map1 map[keytype]valuetype \u793a\u4f8b myMap := make(map[string]string, 10) myMap[\"a\"] = \"b\" myFuncMap := map[string]func() int{ \"funcA\": func() int { return 1 }, } fmt.Println(myFuncMap) f := myFuncMap[\"funcA\"] fmt.Println(f())","title":"Map"},{"location":"1/2/4/#map_1","text":"\u6309 Key \u53d6\u503c value, exists := myMap[\"a\"] if exists { println(value) } \u904d\u5386 Map for k, v := range myMap { println(k, v) }","title":"\u8bbf\u95ee Map \u5143\u7d20"},{"location":"1/2/4/#_7","text":"code \u901a\u8fc7 type \u2026 struct \u5173\u952e\u5b57\u81ea\u5b9a\u4e49\u7ed3\u6784\u4f53 Go \u8bed\u8a00\u652f\u6301\u6307\u9488\uff0c\u4f46\u4e0d\u652f\u6301\u6307\u9488\u8fd0\u7b97 \u6307\u9488\u53d8\u91cf\u7684\u503c\u4e3a\u5185\u5b58\u5730\u5740 \u672a\u8d4b\u503c\u7684\u6307\u9488\u4e3a nil type MyType struct { Name string } func printMyType(t *MyType){ println(t.Name) } func main(){ t := MyType{Name: \"test\"} printMyType(&t) }","title":"\u7ed3\u6784\u4f53\u548c\u6307\u9488"},{"location":"1/2/4/#_8","text":"\u7ed3\u6784\u4f53\u4e2d\u7684\u5b57\u6bb5\u9664\u4e86\u6709\u540d\u5b57\u548c\u7c7b\u578b\u5916\uff0c\u8fd8\u53ef\u4ee5\u6709\u4e00\u4e2a\u53ef\u9009\u7684\u6807\u7b7e\uff08tag\uff09 \u4f7f\u7528\u573a\u666f\uff1aKubernetes APIServer \u5bf9\u6240\u6709\u8d44\u6e90\u7684\u5b9a\u4e49\u90fd\u7528 Json tag \u548c protoBuff tag NodeName string json:\"nodeName,omitempty\" protobuf:\"bytes,10,opt,name=nodeName\" type MyType struct { Name string `json:\"name\"` } func main() { mt := MyType{Name: \"test\"} myType := reflect.TypeOf(mt) name := myType.Field(0) tag := name.Tag.Get(\"json\") println(tag) }","title":"\u7ed3\u6784\u4f53\u6807\u7b7e"},{"location":"1/2/4/#_9","text":"// Service Type string describes ingress methods for a service type ServiceType string const ( // ServiceTypeClusterIP means a service will only be accessible inside the // cluster, via the ClusterIP. ServiceTypeClusterIP ServiceType = \"ClusterIP\" // ServiceTypeNodePort means a service will be exposed on one port of // every node, in addition to 'ClusterIP' type. ServiceTypeNodePort ServiceType = \"NodePort\" // ServiceTypeLoadBalancer means a service will be exposed via an // external load balancer (if the cloud provider supports it), in addition // to 'NodePort' type. ServiceTypeLoadBalancer ServiceType = \"LoadBalancer\" // ServiceTypeExternalName means a service consists of only a reference to // an external name that kubedns or equivalent will return as a CNAME // record, with no exposing or proxying of any pods involved. ServiceTypeExternalName ServiceType = \"ExternalName\" )","title":"\u7c7b\u578b\u91cd\u547d\u540d"},{"location":"1/2/5/","text":"\u51fd\u6570\u8c03\u7528 Main \u51fd\u6570 \u6bcf\u4e2a Go \u8bed\u8a00\u7a0b\u5e8f\u90fd\u5e94\u8be5\u6709\u4e2a main package Main package \u91cc\u7684 main \u51fd\u6570\u662f Go \u8bed\u8a00\u7a0b\u5e8f\u5165\u53e3 package main func main() { args := os.Args if len(args) != 0 { println(\"Do not accept any argument\") os.Exit(1) } println(\"Hello world\") } \u53c2\u6570\u89e3\u6790 code \u8bf7\u6ce8\u610f main \u51fd\u6570\u4e0e\u5176\u4ed6\u8bed\u8a00\u4e0d\u540c\uff0c\u6ca1\u6709\u7c7b\u4f3c java \u7684 []string args \u53c2\u6570 Go \u8bed\u8a00\u5982\u4f55\u4f20\u5165\u53c2\u6570\u5462\uff1f \u65b9\u6cd51(\u76f4\u63a5\u8bfb\u53d6): fmt.Println(\"os args is:\", os.Args) \u65b9\u6cd52(\u901a\u8fc7 flag \u89e3\u6790\u53c2\u6570): name := flag.String(\"name\", \"world\", \"specify the name you want to say hi\") flag.Parse() \u8fd4\u56de\u503c code \u591a\u503c\u8fd4\u56de \u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u4efb\u610f\u6570\u91cf\u7684\u8fd4\u56de\u503c \u547d\u540d\u8fd4\u56de\u503c Go \u7684\u8fd4\u56de\u503c\u53ef\u88ab\u547d\u540d\uff0c\u5b83\u4eec\u4f1a\u88ab\u89c6\u4f5c\u5b9a\u4e49\u5728\u51fd\u6570\u9876\u90e8\u7684\u53d8\u91cf\u3002 \u8fd4\u56de\u503c\u7684\u540d\u79f0\u5e94\u5f53\u5177\u6709\u4e00\u5b9a\u7684\u610f\u4e49\uff0c\u5b83\u53ef\u4ee5\u4f5c\u4e3a\u6587\u6863\u4f7f\u7528\u3002 \u6ca1\u6709\u53c2\u6570\u7684 return \u8bed\u53e5\u8fd4\u56de\u5df2\u547d\u540d\u7684\u8fd4\u56de\u503c\u3002\u4e5f\u5c31\u662f\u76f4\u63a5\u8fd4\u56de\u3002 \u8c03\u7528\u8005\u5ffd\u7565\u90e8\u5206\u8fd4\u56de\u503c result, _ = strconv.Atoi(origStr) Init \u51fd\u6570 code Init \u51fd\u6570\uff1a\u4f1a\u5728\u5305\u521d\u59cb\u5316\u65f6\u8fd0\u884c \u8c28\u614e\u4f7f\u7528 init \u51fd\u6570 \u5f53\u591a\u4e2a\u4f9d\u8d56\u9879\u76ee\u5f15\u7528\u7edf\u4e00\u9879\u76ee\uff0c\u4e14\u88ab\u5f15\u7528\u9879\u76ee\u7684\u521d\u59cb\u5316\u5728 init \u4e2d\u5b8c\u6210\uff0c\u5e76\u4e14\u4e0d\u53ef\u91cd\u590d\u8fd0\u884c\u65f6\uff0c\u4f1a\u5bfc\u81f4\u542f\u52a8\u9519\u8bef package main var myVariable = 0 func init() { myVariable = 1 } \u4f20\u9012\u53d8\u957f\u53c2\u6570 Go \u8bed\u8a00\u4e2d\u7684\u53ef\u53d8\u957f\u53c2\u6570\u5141\u8bb8\u8c03\u7528\u65b9\u4f20\u9012\u4efb\u610f\u591a\u4e2a\u76f8\u540c\u7c7b\u578b\u7684\u53c2\u6570 - \u51fd\u6570\u5b9a\u4e49 func append(slice []Type, elems ...Type) []Type \u8c03\u7528\u65b9\u6cd5 myArray := []string{} myArray = append(myArray, \"a\",\"b\",\"c\") \u5185\u7f6e\u51fd\u6570 \u51fd\u6570\u540d \u4f5c\u7528 close \u7ba1\u9053\u5173\u95ed len,cap \u8fd4\u56de\u6570\u7ec4\u3001\u5207\u7247\uff0cMap \u7684\u957f\u5ea6\u6216\u5bb9\u91cf new, make \u5185\u5b58\u5206\u914d copy, append \u64cd\u4f5c\u5207\u7247 panic, recover \u9519\u8bef\u5904\u7406 print, println \u6253\u5370 complex, real, imag \u64cd\u4f5c\u590d\u6570 \u56de\u8c03\u51fd\u6570(Callback) code \u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u5176\u5b83\u51fd\u6570\uff0c\u5e76\u5728\u5176\u4ed6\u51fd\u6570\u5185\u90e8\u8c03\u7528\u6267\u884c strings.IndexFunc(line, unicode.IsSpace) Kubernetes controller\u7684leaderelection \u793a\u4f8b\uff1a func main() { DoOperation(1, increase) DoOperation(1, decrease) } func increase(a, b int) { println(\u201cincrease result is:\u201d, a+b) } func DoOperation(y int, f func(int, int)) { f(y, 1) } func decrease(a, b int) { println(\"decrease result is:\", a-b) } \u95ed\u5305 \u533f\u540d\u51fd\u6570 \u4e0d\u80fd\u72ec\u7acb\u5b58\u5728 \u53ef\u4ee5\u8d4b\u503c\u7ed9\u5176\u4ed6\u53d8\u91cf x:= func(){} \u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 func(x,y int){println(x+y)}(1,2) \u53ef\u4f5c\u4e3a\u51fd\u6570\u8fd4\u56de\u503c func Add() (func(b int) int) \u4f7f\u7528\u573a\u666f defer func() { if r := recover(); r != nil { println(\"recovered in FuncX\") } }() \u65b9\u6cd5 \u65b9\u6cd5\uff1a\u4f5c\u7528\u5728\u63a5\u6536\u8005\u4e0a\u7684\u51fd\u6570 func (recv receiver_type) methodName(parameter_list) (return_value_list) - \u4f7f\u7528\u573a\u666f \u5f88\u591a\u573a\u666f\u4e0b\uff0c\u51fd\u6570\u9700\u8981\u7684\u4e0a\u4e0b\u6587\u53ef\u4ee5\u4fdd\u5b58\u5728receiver\u5c5e\u6027\u4e2d\uff0c\u901a\u8fc7\u5b9a\u4e49 receiver \u7684\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee receiver \u5c5e\u6027\uff0c\u51cf\u5c11\u53c2\u6570\u4f20\u9012\u9700\u6c42 // StartTLS starts TLS on a server from NewUnstartedServer. func (s *Server) StartTLS() { if s.URL != \u201c\u201d { panic(\u201cServer already started\u201d) } if s.client == nil { s.client = &http.Client{Transport: &http.Transport{} } } \u4f20\u503c\u8fd8\u662f\u4f20\u6307\u9488 code Go \u8bed\u8a00\u53ea\u6709\u4e00\u79cd\u89c4\u5219-\u4f20\u503c \u51fd\u6570\u5185\u4fee\u6539\u53c2\u6570\u7684\u503c\u4e0d\u4f1a\u5f71\u54cd\u51fd\u6570\u5916\u539f\u59cb\u53d8\u91cf\u7684\u503c \u53ef\u4ee5\u4f20\u9012\u6307\u9488\u53c2\u6570\u5c06\u53d8\u91cf\u5730\u5740\u4f20\u9012\u7ed9\u8c03\u7528\u51fd\u6570\uff0cGo \u8bed\u8a00\u4f1a\u590d\u5236\u8be5\u6307\u9488\u4f5c\u4e3a\u51fd\u6570\u5185\u7684\u5730\u5740\uff0c\u4f46\u6307\u5411\u540c\u4e00\u5730\u5740 \u601d\u8003\uff1a\u5f53\u6211\u4eec\u5199\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u51fd\u6570\u7684\u53c2\u6570\u4f20\u9012\u5e94\u8be5\u7528 struct \u8fd8\u662f pointer\uff1f \u63a5\u53e3 code \u63a5\u53e3\u5b9a\u4e49\u4e00\u7ec4\u65b9\u6cd5\u96c6\u5408 type IF interface { Method1(param_list) return_type } \u9002\u7528\u573a\u666f\uff1aKubernetes \u4e2d\u6709\u5927\u91cf\u7684\u63a5\u53e3\u62bd\u8c61\u548c\u591a\u79cd\u5b9e\u73b0 Struct \u65e0\u9700\u663e\u793a\u58f0\u660e\u5b9e\u73b0 interface\uff0c\u53ea\u9700\u76f4\u63a5\u5b9e\u73b0\u65b9\u6cd5 Struct \u9664\u5b9e\u73b0 interface \u5b9a\u4e49\u7684\u63a5\u53e3\u5916\uff0c\u8fd8\u53ef\u4ee5\u6709\u989d\u5916\u7684\u65b9\u6cd5 \u4e00\u4e2a\u7c7b\u578b\u53ef\u5b9e\u73b0\u591a\u4e2a\u63a5\u53e3\uff08Go \u8bed\u8a00\u7684\u591a\u91cd\u7ee7\u627f\uff09 Go \u8bed\u8a00\u4e2d\u63a5\u53e3\u4e0d\u63a5\u53d7\u5c5e\u6027\u5b9a\u4e49 \u63a5\u53e3\u53ef\u4ee5\u5d4c\u5957\u5176\u4ed6\u63a5\u53e3 type IF interface { getName() string } type Human struct { firstName, lastName string } func (h *Human) getName() string { return h.firstName + \",\" + h.lastName } type Car struct { factory, model string } func (c *Car) getName() string { return c.factory + \"-\" + c.model } func main() { interfaces := []IF{} h := new(Human) h.firstName = \"first\" h.lastName = \"last\" interfaces = append(interfaces, h) c := new(Car) c.factory = \"benz\" c.model = \"s\" interfaces = append(interfaces, c) for _, f := range interfaces { fmt.Println(f.getName()) } } \u6ce8\u610f\u4e8b\u9879 Interface \u662f\u53ef\u80fd\u4e3a nil \u7684\uff0c\u6240\u4ee5\u9488\u5bf9 interface \u7684\u4f7f\u7528\u4e00\u5b9a\u8981\u9884\u5148\u5224\u7a7a\uff0c\u5426\u5219\u4f1a\u5f15\u8d77\u7a0b\u5e8f crash(nil panic) Struct \u521d\u59cb\u5316\u610f\u5473\u7740\u7a7a\u95f4\u5206\u914d\uff0c\u5bf9 struct \u7684\u5f15\u7528\u4e0d\u4f1a\u51fa\u73b0\u7a7a\u6307\u9488 \u53cd\u5c04\u673a\u5236 code reflect.TypeOf ()\u8fd4\u56de\u88ab\u68c0\u67e5\u5bf9\u8c61\u7684\u7c7b\u578b reflect.ValueOf()\u8fd4\u56de\u88ab\u68c0\u67e5\u5bf9\u8c61\u7684\u503c \u793a\u4f8b myMap := make(map[string]string, 10) myMap[\"a\"] = \"b\" t := reflect.TypeOf(myMap) fmt.Println(\"type:\", t) v := reflect.ValueOf(myMap) fmt.Println(\"value:\", v) \u57fa\u4e8e struct \u7684\u53cd\u5c04 // struct myStruct := T{A: \"a\"} v1 := reflect.ValueOf(myStruct) for i := 0; i < v1.NumField(); i++ { fmt.Printf(\"Field %d: %v\\n\", i, v1.Field(i)) } for i := 0; i < v1.NumMethod(); i++ { fmt.Printf(\"Method %d: %v\\n\", i, v1.Method(i)) } // \u9700\u8981\u6ce8\u610f receive \u662f struct \u8fd8\u662f\u6307\u9488 result := v1.Method(0).Call(nil) fmt.Println(\"result:\", result) Go \u8bed\u8a00\u4e2d\u7684\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b \u53ef\u89c1\u6027\u63a7\u5236 public - \u5e38\u91cf\u3001\u53d8\u91cf\u3001\u7c7b\u578b\u3001\u63a5\u53e3\u3001\u7ed3\u6784\u3001\u51fd\u6570\u7b49\u7684\u540d\u79f0\u5927\u5199 private - \u975e\u5927\u5199\u5c31\u53ea\u80fd\u5728\u5305\u5185\u4f7f\u7528 \u7ee7\u627f \u901a\u8fc7\u7ec4\u5408\u5b9e\u73b0\uff0c\u5185\u5d4c\u4e00\u4e2a\u6216\u591a\u4e2a struct \u591a\u6001 \u901a\u8fc7\u63a5\u53e3\u5b9e\u73b0\uff0c\u901a\u8fc7\u63a5\u53e3\u5b9a\u4e49\u65b9\u6cd5\u96c6\uff0c\u7f16\u5199\u591a\u5957\u5b9e\u73b0 Json \u7f16\u89e3\u7801 code Unmarshal: \u4ece string \u8f6c\u6362\u81f3 struct func unmarshal2Struct(humanStr string)Human { h := Human{} err := json.Unmarshal([]byte(humanStr), &h) if err != nil { println(err) } return h } Marshal: \u4ece struct \u8f6c\u6362\u81f3 string func marshal2JsonString(h Human) string { h.Age = 30 updatedBytes, err := json.Marshal(&h) if err != nil { println(err) } return string(updatedBytes) } json \u5305\u4f7f\u7528 map[string]interface{} \u548c []interface{} \u7c7b\u578b\u4fdd\u5b58\u4efb\u610f\u5bf9\u8c61 \u53ef\u901a\u8fc7\u5982\u4e0b\u903b\u8f91\u89e3\u6790\u4efb\u610f json var obj interface{} err := json.Unmarshal([]byte(humanStr), &obj) objMap, ok := obj.(map[string]interface{}) for k, v := range objMap { switch value := v.(type) { case string: fmt.Printf(\"type of %s is string, value is %v\\n\", k, value) case interface{}: fmt.Printf(\"type of %s is interface{}, value is %v\\n\", k, value) default: fmt.Printf(\"type of %s is wrong, value is %v\\n\", k, value) } }","title":"Go \u8bed\u8a00\u51fd\u6570\u8c03\u7528"},{"location":"1/2/5/#_1","text":"","title":"\u51fd\u6570\u8c03\u7528"},{"location":"1/2/5/#main","text":"\u6bcf\u4e2a Go \u8bed\u8a00\u7a0b\u5e8f\u90fd\u5e94\u8be5\u6709\u4e2a main package Main package \u91cc\u7684 main \u51fd\u6570\u662f Go \u8bed\u8a00\u7a0b\u5e8f\u5165\u53e3 package main func main() { args := os.Args if len(args) != 0 { println(\"Do not accept any argument\") os.Exit(1) } println(\"Hello world\") }","title":"Main \u51fd\u6570"},{"location":"1/2/5/#_2","text":"code \u8bf7\u6ce8\u610f main \u51fd\u6570\u4e0e\u5176\u4ed6\u8bed\u8a00\u4e0d\u540c\uff0c\u6ca1\u6709\u7c7b\u4f3c java \u7684 []string args \u53c2\u6570 Go \u8bed\u8a00\u5982\u4f55\u4f20\u5165\u53c2\u6570\u5462\uff1f \u65b9\u6cd51(\u76f4\u63a5\u8bfb\u53d6): fmt.Println(\"os args is:\", os.Args) \u65b9\u6cd52(\u901a\u8fc7 flag \u89e3\u6790\u53c2\u6570): name := flag.String(\"name\", \"world\", \"specify the name you want to say hi\") flag.Parse()","title":"\u53c2\u6570\u89e3\u6790"},{"location":"1/2/5/#_3","text":"code \u591a\u503c\u8fd4\u56de \u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u4efb\u610f\u6570\u91cf\u7684\u8fd4\u56de\u503c \u547d\u540d\u8fd4\u56de\u503c Go \u7684\u8fd4\u56de\u503c\u53ef\u88ab\u547d\u540d\uff0c\u5b83\u4eec\u4f1a\u88ab\u89c6\u4f5c\u5b9a\u4e49\u5728\u51fd\u6570\u9876\u90e8\u7684\u53d8\u91cf\u3002 \u8fd4\u56de\u503c\u7684\u540d\u79f0\u5e94\u5f53\u5177\u6709\u4e00\u5b9a\u7684\u610f\u4e49\uff0c\u5b83\u53ef\u4ee5\u4f5c\u4e3a\u6587\u6863\u4f7f\u7528\u3002 \u6ca1\u6709\u53c2\u6570\u7684 return \u8bed\u53e5\u8fd4\u56de\u5df2\u547d\u540d\u7684\u8fd4\u56de\u503c\u3002\u4e5f\u5c31\u662f\u76f4\u63a5\u8fd4\u56de\u3002 \u8c03\u7528\u8005\u5ffd\u7565\u90e8\u5206\u8fd4\u56de\u503c result, _ = strconv.Atoi(origStr)","title":"\u8fd4\u56de\u503c"},{"location":"1/2/5/#init","text":"code Init \u51fd\u6570\uff1a\u4f1a\u5728\u5305\u521d\u59cb\u5316\u65f6\u8fd0\u884c \u8c28\u614e\u4f7f\u7528 init \u51fd\u6570 \u5f53\u591a\u4e2a\u4f9d\u8d56\u9879\u76ee\u5f15\u7528\u7edf\u4e00\u9879\u76ee\uff0c\u4e14\u88ab\u5f15\u7528\u9879\u76ee\u7684\u521d\u59cb\u5316\u5728 init \u4e2d\u5b8c\u6210\uff0c\u5e76\u4e14\u4e0d\u53ef\u91cd\u590d\u8fd0\u884c\u65f6\uff0c\u4f1a\u5bfc\u81f4\u542f\u52a8\u9519\u8bef package main var myVariable = 0 func init() { myVariable = 1 }","title":"Init \u51fd\u6570"},{"location":"1/2/5/#_4","text":"Go \u8bed\u8a00\u4e2d\u7684\u53ef\u53d8\u957f\u53c2\u6570\u5141\u8bb8\u8c03\u7528\u65b9\u4f20\u9012\u4efb\u610f\u591a\u4e2a\u76f8\u540c\u7c7b\u578b\u7684\u53c2\u6570 - \u51fd\u6570\u5b9a\u4e49 func append(slice []Type, elems ...Type) []Type \u8c03\u7528\u65b9\u6cd5 myArray := []string{} myArray = append(myArray, \"a\",\"b\",\"c\")","title":"\u4f20\u9012\u53d8\u957f\u53c2\u6570"},{"location":"1/2/5/#_5","text":"\u51fd\u6570\u540d \u4f5c\u7528 close \u7ba1\u9053\u5173\u95ed len,cap \u8fd4\u56de\u6570\u7ec4\u3001\u5207\u7247\uff0cMap \u7684\u957f\u5ea6\u6216\u5bb9\u91cf new, make \u5185\u5b58\u5206\u914d copy, append \u64cd\u4f5c\u5207\u7247 panic, recover \u9519\u8bef\u5904\u7406 print, println \u6253\u5370 complex, real, imag \u64cd\u4f5c\u590d\u6570","title":"\u5185\u7f6e\u51fd\u6570"},{"location":"1/2/5/#callback","text":"code \u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u5176\u5b83\u51fd\u6570\uff0c\u5e76\u5728\u5176\u4ed6\u51fd\u6570\u5185\u90e8\u8c03\u7528\u6267\u884c strings.IndexFunc(line, unicode.IsSpace) Kubernetes controller\u7684leaderelection \u793a\u4f8b\uff1a func main() { DoOperation(1, increase) DoOperation(1, decrease) } func increase(a, b int) { println(\u201cincrease result is:\u201d, a+b) } func DoOperation(y int, f func(int, int)) { f(y, 1) } func decrease(a, b int) { println(\"decrease result is:\", a-b) }","title":"\u56de\u8c03\u51fd\u6570(Callback)"},{"location":"1/2/5/#_6","text":"\u533f\u540d\u51fd\u6570 \u4e0d\u80fd\u72ec\u7acb\u5b58\u5728 \u53ef\u4ee5\u8d4b\u503c\u7ed9\u5176\u4ed6\u53d8\u91cf x:= func(){} \u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 func(x,y int){println(x+y)}(1,2) \u53ef\u4f5c\u4e3a\u51fd\u6570\u8fd4\u56de\u503c func Add() (func(b int) int) \u4f7f\u7528\u573a\u666f defer func() { if r := recover(); r != nil { println(\"recovered in FuncX\") } }()","title":"\u95ed\u5305"},{"location":"1/2/5/#_7","text":"\u65b9\u6cd5\uff1a\u4f5c\u7528\u5728\u63a5\u6536\u8005\u4e0a\u7684\u51fd\u6570 func (recv receiver_type) methodName(parameter_list) (return_value_list) - \u4f7f\u7528\u573a\u666f \u5f88\u591a\u573a\u666f\u4e0b\uff0c\u51fd\u6570\u9700\u8981\u7684\u4e0a\u4e0b\u6587\u53ef\u4ee5\u4fdd\u5b58\u5728receiver\u5c5e\u6027\u4e2d\uff0c\u901a\u8fc7\u5b9a\u4e49 receiver \u7684\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee receiver \u5c5e\u6027\uff0c\u51cf\u5c11\u53c2\u6570\u4f20\u9012\u9700\u6c42 // StartTLS starts TLS on a server from NewUnstartedServer. func (s *Server) StartTLS() { if s.URL != \u201c\u201d { panic(\u201cServer already started\u201d) } if s.client == nil { s.client = &http.Client{Transport: &http.Transport{} } }","title":"\u65b9\u6cd5"},{"location":"1/2/5/#_8","text":"code Go \u8bed\u8a00\u53ea\u6709\u4e00\u79cd\u89c4\u5219-\u4f20\u503c \u51fd\u6570\u5185\u4fee\u6539\u53c2\u6570\u7684\u503c\u4e0d\u4f1a\u5f71\u54cd\u51fd\u6570\u5916\u539f\u59cb\u53d8\u91cf\u7684\u503c \u53ef\u4ee5\u4f20\u9012\u6307\u9488\u53c2\u6570\u5c06\u53d8\u91cf\u5730\u5740\u4f20\u9012\u7ed9\u8c03\u7528\u51fd\u6570\uff0cGo \u8bed\u8a00\u4f1a\u590d\u5236\u8be5\u6307\u9488\u4f5c\u4e3a\u51fd\u6570\u5185\u7684\u5730\u5740\uff0c\u4f46\u6307\u5411\u540c\u4e00\u5730\u5740 \u601d\u8003\uff1a\u5f53\u6211\u4eec\u5199\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u51fd\u6570\u7684\u53c2\u6570\u4f20\u9012\u5e94\u8be5\u7528 struct \u8fd8\u662f pointer\uff1f","title":"\u4f20\u503c\u8fd8\u662f\u4f20\u6307\u9488"},{"location":"1/2/5/#_9","text":"code \u63a5\u53e3\u5b9a\u4e49\u4e00\u7ec4\u65b9\u6cd5\u96c6\u5408 type IF interface { Method1(param_list) return_type } \u9002\u7528\u573a\u666f\uff1aKubernetes \u4e2d\u6709\u5927\u91cf\u7684\u63a5\u53e3\u62bd\u8c61\u548c\u591a\u79cd\u5b9e\u73b0 Struct \u65e0\u9700\u663e\u793a\u58f0\u660e\u5b9e\u73b0 interface\uff0c\u53ea\u9700\u76f4\u63a5\u5b9e\u73b0\u65b9\u6cd5 Struct \u9664\u5b9e\u73b0 interface \u5b9a\u4e49\u7684\u63a5\u53e3\u5916\uff0c\u8fd8\u53ef\u4ee5\u6709\u989d\u5916\u7684\u65b9\u6cd5 \u4e00\u4e2a\u7c7b\u578b\u53ef\u5b9e\u73b0\u591a\u4e2a\u63a5\u53e3\uff08Go \u8bed\u8a00\u7684\u591a\u91cd\u7ee7\u627f\uff09 Go \u8bed\u8a00\u4e2d\u63a5\u53e3\u4e0d\u63a5\u53d7\u5c5e\u6027\u5b9a\u4e49 \u63a5\u53e3\u53ef\u4ee5\u5d4c\u5957\u5176\u4ed6\u63a5\u53e3 type IF interface { getName() string } type Human struct { firstName, lastName string } func (h *Human) getName() string { return h.firstName + \",\" + h.lastName } type Car struct { factory, model string } func (c *Car) getName() string { return c.factory + \"-\" + c.model } func main() { interfaces := []IF{} h := new(Human) h.firstName = \"first\" h.lastName = \"last\" interfaces = append(interfaces, h) c := new(Car) c.factory = \"benz\" c.model = \"s\" interfaces = append(interfaces, c) for _, f := range interfaces { fmt.Println(f.getName()) } }","title":"\u63a5\u53e3"},{"location":"1/2/5/#_10","text":"Interface \u662f\u53ef\u80fd\u4e3a nil \u7684\uff0c\u6240\u4ee5\u9488\u5bf9 interface \u7684\u4f7f\u7528\u4e00\u5b9a\u8981\u9884\u5148\u5224\u7a7a\uff0c\u5426\u5219\u4f1a\u5f15\u8d77\u7a0b\u5e8f crash(nil panic) Struct \u521d\u59cb\u5316\u610f\u5473\u7740\u7a7a\u95f4\u5206\u914d\uff0c\u5bf9 struct \u7684\u5f15\u7528\u4e0d\u4f1a\u51fa\u73b0\u7a7a\u6307\u9488","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"1/2/5/#_11","text":"code reflect.TypeOf ()\u8fd4\u56de\u88ab\u68c0\u67e5\u5bf9\u8c61\u7684\u7c7b\u578b reflect.ValueOf()\u8fd4\u56de\u88ab\u68c0\u67e5\u5bf9\u8c61\u7684\u503c \u793a\u4f8b myMap := make(map[string]string, 10) myMap[\"a\"] = \"b\" t := reflect.TypeOf(myMap) fmt.Println(\"type:\", t) v := reflect.ValueOf(myMap) fmt.Println(\"value:\", v)","title":"\u53cd\u5c04\u673a\u5236"},{"location":"1/2/5/#struct","text":"// struct myStruct := T{A: \"a\"} v1 := reflect.ValueOf(myStruct) for i := 0; i < v1.NumField(); i++ { fmt.Printf(\"Field %d: %v\\n\", i, v1.Field(i)) } for i := 0; i < v1.NumMethod(); i++ { fmt.Printf(\"Method %d: %v\\n\", i, v1.Method(i)) } // \u9700\u8981\u6ce8\u610f receive \u662f struct \u8fd8\u662f\u6307\u9488 result := v1.Method(0).Call(nil) fmt.Println(\"result:\", result)","title":"\u57fa\u4e8e struct \u7684\u53cd\u5c04"},{"location":"1/2/5/#go","text":"\u53ef\u89c1\u6027\u63a7\u5236 public - \u5e38\u91cf\u3001\u53d8\u91cf\u3001\u7c7b\u578b\u3001\u63a5\u53e3\u3001\u7ed3\u6784\u3001\u51fd\u6570\u7b49\u7684\u540d\u79f0\u5927\u5199 private - \u975e\u5927\u5199\u5c31\u53ea\u80fd\u5728\u5305\u5185\u4f7f\u7528 \u7ee7\u627f \u901a\u8fc7\u7ec4\u5408\u5b9e\u73b0\uff0c\u5185\u5d4c\u4e00\u4e2a\u6216\u591a\u4e2a struct \u591a\u6001 \u901a\u8fc7\u63a5\u53e3\u5b9e\u73b0\uff0c\u901a\u8fc7\u63a5\u53e3\u5b9a\u4e49\u65b9\u6cd5\u96c6\uff0c\u7f16\u5199\u591a\u5957\u5b9e\u73b0","title":"Go \u8bed\u8a00\u4e2d\u7684\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b"},{"location":"1/2/5/#json","text":"code Unmarshal: \u4ece string \u8f6c\u6362\u81f3 struct func unmarshal2Struct(humanStr string)Human { h := Human{} err := json.Unmarshal([]byte(humanStr), &h) if err != nil { println(err) } return h } Marshal: \u4ece struct \u8f6c\u6362\u81f3 string func marshal2JsonString(h Human) string { h.Age = 30 updatedBytes, err := json.Marshal(&h) if err != nil { println(err) } return string(updatedBytes) } json \u5305\u4f7f\u7528 map[string]interface{} \u548c []interface{} \u7c7b\u578b\u4fdd\u5b58\u4efb\u610f\u5bf9\u8c61 \u53ef\u901a\u8fc7\u5982\u4e0b\u903b\u8f91\u89e3\u6790\u4efb\u610f json var obj interface{} err := json.Unmarshal([]byte(humanStr), &obj) objMap, ok := obj.(map[string]interface{}) for k, v := range objMap { switch value := v.(type) { case string: fmt.Printf(\"type of %s is string, value is %v\\n\", k, value) case interface{}: fmt.Printf(\"type of %s is interface{}, value is %v\\n\", k, value) default: fmt.Printf(\"type of %s is wrong, value is %v\\n\", k, value) } }","title":"Json \u7f16\u89e3\u7801"},{"location":"1/2/6/","text":"\u5e38\u7528\u8bed\u6cd5 \u9519\u8bef\u5904\u7406 Go \u8bed\u8a00\u65e0\u5185\u7f6e exceptio \u673a\u5236\uff0c\u53ea\u63d0\u4f9b error \u63a5\u53e3\u4f9b\u5b9a\u4e49\u9519\u8bef type error interface { Error() string } \u53ef\u901a\u8fc7 errors.New \u6216 fmt.Errorf \u521b\u5efa\u65b0\u7684 error var errNotFound error = errors.New(\"NotFound\") \u901a\u5e38\u5e94\u7528\u7a0b\u5e8f\u5bf9 error \u7684\u5904\u7406\u5927\u90e8\u5206\u662f\u5224\u65ad error \u662f\u5426\u4e3a nil \u5982\u9700\u5c06 error \u5f52\u7c7b\uff0c\u901a\u5e38\u4ea4\u7ed9\u5e94\u7528\u7a0b\u5e8f\u81ea\u5b9a\u4e49\uff0c\u6bd4\u5982 kubernetes \u81ea\u5b9a\u4e49\u4e86\u4e0e apiserver \u4ea4\u4e92\u7684\u4e0d\u540c\u7c7b\u578b\u9519\u8bef type StatusError struct { ErrStatus metav1.Status } var _ error = &StatusError{} // Error implements the Error interface. func (e *StatusError) Error() string { return e.ErrStatus.Message } defer code \u51fd\u6570\u8fd4\u56de\u4e4b\u524d\u6267\u884c\u67d0\u4e2a\u8bed\u53e5\u6216\u51fd\u6570 \u7b49\u540c\u4e8e Java \u548c C# \u7684 finally \u5e38\u89c1\u7684 defer \u4f7f\u7528\u573a\u666f: \u8bb0\u5f97\u5173\u95ed\u4f60\u6253\u5f00\u7684\u8d44\u6e90 defer file.Close() defer mu.Unlock() defer println(\"\") Panic \u548c recover panic: \u53ef\u5728\u7cfb\u7edf\u51fa\u73b0\u4e0d\u53ef\u6062\u590d\u9519\u8bef\u65f6\u4e3b\u52a8\u8c03\u7528 panic, panic \u4f1a\u4f7f\u5f53\u524d\u7ebf\u7a0b\u76f4\u63a5 crash defer: \u4fdd\u8bc1\u6267\u884c\u5e76\u628a\u63a7\u5236\u6743\u4ea4\u8fd8\u7ed9\u63a5\u6536\u5230 panic \u7684\u51fd\u6570\u8c03\u7528\u8005 recover: \u51fd\u6570\u4ece panic \u6216 \u9519\u8bef\u573a\u666f\u4e2d\u6062\u590d defer func() { fmt.Println(\"defer func is called\") if err := recover(); err != nil { fmt.Println(err) } }() panic(\"a panic is triggered\")","title":"\u5e38\u7528\u8bed\u6cd5"},{"location":"1/2/6/#_1","text":"","title":"\u5e38\u7528\u8bed\u6cd5"},{"location":"1/2/6/#_2","text":"Go \u8bed\u8a00\u65e0\u5185\u7f6e exceptio \u673a\u5236\uff0c\u53ea\u63d0\u4f9b error \u63a5\u53e3\u4f9b\u5b9a\u4e49\u9519\u8bef type error interface { Error() string } \u53ef\u901a\u8fc7 errors.New \u6216 fmt.Errorf \u521b\u5efa\u65b0\u7684 error var errNotFound error = errors.New(\"NotFound\") \u901a\u5e38\u5e94\u7528\u7a0b\u5e8f\u5bf9 error \u7684\u5904\u7406\u5927\u90e8\u5206\u662f\u5224\u65ad error \u662f\u5426\u4e3a nil \u5982\u9700\u5c06 error \u5f52\u7c7b\uff0c\u901a\u5e38\u4ea4\u7ed9\u5e94\u7528\u7a0b\u5e8f\u81ea\u5b9a\u4e49\uff0c\u6bd4\u5982 kubernetes \u81ea\u5b9a\u4e49\u4e86\u4e0e apiserver \u4ea4\u4e92\u7684\u4e0d\u540c\u7c7b\u578b\u9519\u8bef type StatusError struct { ErrStatus metav1.Status } var _ error = &StatusError{} // Error implements the Error interface. func (e *StatusError) Error() string { return e.ErrStatus.Message }","title":"\u9519\u8bef\u5904\u7406"},{"location":"1/2/6/#defer","text":"code \u51fd\u6570\u8fd4\u56de\u4e4b\u524d\u6267\u884c\u67d0\u4e2a\u8bed\u53e5\u6216\u51fd\u6570 \u7b49\u540c\u4e8e Java \u548c C# \u7684 finally \u5e38\u89c1\u7684 defer \u4f7f\u7528\u573a\u666f: \u8bb0\u5f97\u5173\u95ed\u4f60\u6253\u5f00\u7684\u8d44\u6e90 defer file.Close() defer mu.Unlock() defer println(\"\")","title":"defer"},{"location":"1/2/6/#panic-recover","text":"panic: \u53ef\u5728\u7cfb\u7edf\u51fa\u73b0\u4e0d\u53ef\u6062\u590d\u9519\u8bef\u65f6\u4e3b\u52a8\u8c03\u7528 panic, panic \u4f1a\u4f7f\u5f53\u524d\u7ebf\u7a0b\u76f4\u63a5 crash defer: \u4fdd\u8bc1\u6267\u884c\u5e76\u628a\u63a7\u5236\u6743\u4ea4\u8fd8\u7ed9\u63a5\u6536\u5230 panic \u7684\u51fd\u6570\u8c03\u7528\u8005 recover: \u51fd\u6570\u4ece panic \u6216 \u9519\u8bef\u573a\u666f\u4e2d\u6062\u590d defer func() { fmt.Println(\"defer func is called\") if err := recover(); err != nil { fmt.Println(err) } }() panic(\"a panic is triggered\")","title":"Panic \u548c recover"},{"location":"1/2/7/","text":"\u591a\u7ebf\u7a0b \u5e76\u53d1\u548c\u5e76\u884c \u5e76\u53d1\uff08concurrency\uff09 \u4e24\u4e2a\u6216\u591a\u4e2a\u4e8b\u4ef6\u5728\u540c\u4e00\u65f6\u95f4\u95f4\u9694\u53d1\u751f \u5e76\u884c\uff08parallellism\uff09 \u4e24\u4e2a\u6216\u8005\u591a\u4e2a\u4e8b\u4ef6\u5728\u540c\u4e00\u65f6\u523b\u53d1\u751f \u534f\u7a0b \u8fdb\u7a0b\uff1a \u5206\u914d\u7cfb\u7edf\u8d44\u6e90\uff08CPU \u65f6\u95f4\u3001\u5185\u5b58\u7b49\uff09\u57fa\u672c\u5355\u4f4d \u6709\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u5207\u6362\u5f00\u9500\u5927 \u7ebf\u7a0b\uff1a\u8fdb\u7a0b\u7684\u4e00\u4e2a\u6267\u884c\u6d41\uff0c\u662f CPU \u8c03\u5ea6\u5e76\u80fd\u72ec\u7acb\u8fd0\u884c\u7684\u7684\u57fa\u672c\u5355\u4f4d \u540c\u4e00\u8fdb\u7a0b\u4e2d\u7684\u591a\u7ebf\u7a0b\u5171\u4eab\u5185\u5b58\u7a7a\u95f4\uff0c\u7ebf\u7a0b\u5207\u6362\u4ee3\u4ef7\u5c0f \u591a\u7ebf\u7a0b\u901a\u4fe1\u65b9\u4fbf \u4ece\u5185\u6838\u5c42\u9762\u6765\u770b\u7ebf\u7a0b\u5176\u5b9e\u4e5f\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u8fdb\u7a0b\uff0c\u5b83\u8ddf\u7236\u8fdb\u7a0b\u5171\u4eab\u4e86\u6253\u5f00\u7684\u6587\u4ef6\u548c\u6587\u4ef6\u7cfb\u7edf\u4fe1\u606f\uff0c\u5171\u4eab\u4e86\u5730\u5740\u7a7a\u95f4\u548c\u4fe1\u53f7\u5904\u7406\u51fd\u6570 \u534f\u7a0b Go \u8bed\u8a00\u4e2d\u7684\u8f7b\u91cf\u7ea7\u7ebf\u7a0b\u5b9e\u73b0 Golang \u5728 runtime\u3001\u7cfb\u7edf\u8c03\u7528\u7b49\u591a\u65b9\u9762\u5bf9 goroutine \u8c03\u5ea6\u8fdb\u884c\u4e86\u5c01\u88c5\u548c\u5904\u7406\uff0c\u5f53\u9047\u5230\u957f\u65f6\u95f4\u6267\u884c\u6216\u8005\u8fdb\u884c\u7cfb\u7edf\u8c03\u7528\u65f6\uff0c\u4f1a\u4e3b\u52a8\u628a\u5f53\u524d goroutine \u7684 CPU (P) \u8f6c\u8ba9\u51fa\u53bb\uff0c\u8ba9\u5176\u4ed6 goroutine \u80fd\u88ab\u8c03\u5ea6\u5e76\u6267\u884c\uff0c\u4e5f\u5c31\u662f Golang \u4ece\u8bed\u8a00\u5c42\u9762\u652f\u6301\u4e86\u534f\u7a0b\u3002 Communicating Sequential Process CSP \u63cf\u8ff0\u4e24\u4e2a\u72ec\u7acb\u7684\u5e76\u53d1\u5b9e\u4f53\u901a\u8fc7\u5171\u4eab\u7684\u901a\u8baf channel \u8fdb\u884c\u901a\u4fe1\u7684\u5e76\u53d1\u6a21\u578b\u3002 Go \u534f\u7a0b goroutine \u662f\u4e00\u79cd\u8f7b\u91cf\u7ebf\u7a0b\uff0c\u5b83\u4e0d\u662f\u64cd\u4f5c\u7cfb\u7edf\u7684\u7ebf\u7a0b\uff0c\u800c\u662f\u5c06\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\u5206\u6bb5\u4f7f\u7528\uff0c\u901a\u8fc7\u8c03\u5ea6\u5668\u5b9e\u73b0\u534f\u4f5c\u5f0f\u8c03\u5ea6\u3002 \u662f\u4e00\u79cd\u7eff\u8272\u7ebf\u7a0b\uff0c\u5fae\u7ebf\u7a0b\uff0c\u5b83\u4e0e Coroutine \u534f\u7a0b\u4e5f\u6709\u533a\u522b\uff0c\u80fd\u591f\u5728\u53d1\u73b0\u5835\u585e\u540e\u542f\u52a8\u65b0\u7684\u5fae\u7ebf\u7a0b\u3002 \u901a\u9053 channel \u7c7b\u4f3c Unix \u7684 Pipe\uff0c\u7528\u4e8e\u534f\u7a0b\u4e4b\u95f4\u901a\u8baf\u548c\u540c\u6b65\u3002\u534f\u7a0b\u4e4b\u95f4\u867d\u7136\u89e3\u8026\uff0c\u4f46\u662f\u5b83\u4eec\u548c Channel \u6709\u7740\u8026\u5408\u3002 \u7ebf\u7a0b\u548c\u534f\u7a0b\u7684\u5dee\u5f02 \u6bcf\u4e2a goroutine (\u534f\u7a0b) \u9ed8\u8ba4\u5360\u7528\u5185\u5b58\u8fdc\u6bd4 Java \u3001C \u7684\u7ebf\u7a0b\u5c11 goroutine\uff1a2KB \u7ebf\u7a0b\uff1a8MB \u7ebf\u7a0b goroutine \u5207\u6362\u5f00\u9500\u65b9\u9762\uff0cgoroutine \u8fdc\u6bd4\u7ebf\u7a0b\u5c0f \u7ebf\u7a0b\uff1a\u6d89\u53ca\u6a21\u5f0f\u5207\u6362(\u4ece\u7528\u6237\u6001\u5207\u6362\u5230\u5185\u6838\u6001)\u300116\u4e2a\u5bc4\u5b58\u5668\u3001PC\u3001SP...\u7b49\u5bc4\u5b58\u5668\u7684\u5237\u65b0 goroutine\uff1a\u53ea\u6709\u4e09\u4e2a\u5bc4\u5b58\u5668\u7684\u503c\u4fee\u6539 - PC / SP / DX. GOMAXPROCS \u63a7\u5236\u5e76\u884c\u7ebf\u7a0b\u6570\u91cf \u534f\u7a0b\u793a\u4f8b code \u542f\u52a8\u65b0\u534f\u7a0b\uff1a go functionName() { for i := 0; i < 10; i++ { go fmt.Println(i) } time.Sleep(time.Second) }","title":"\u57fa\u7840"},{"location":"1/2/7/#_1","text":"","title":"\u591a\u7ebf\u7a0b"},{"location":"1/2/7/#_2","text":"\u5e76\u53d1\uff08concurrency\uff09 \u4e24\u4e2a\u6216\u591a\u4e2a\u4e8b\u4ef6\u5728\u540c\u4e00\u65f6\u95f4\u95f4\u9694\u53d1\u751f \u5e76\u884c\uff08parallellism\uff09 \u4e24\u4e2a\u6216\u8005\u591a\u4e2a\u4e8b\u4ef6\u5728\u540c\u4e00\u65f6\u523b\u53d1\u751f","title":"\u5e76\u53d1\u548c\u5e76\u884c"},{"location":"1/2/7/#_3","text":"\u8fdb\u7a0b\uff1a \u5206\u914d\u7cfb\u7edf\u8d44\u6e90\uff08CPU \u65f6\u95f4\u3001\u5185\u5b58\u7b49\uff09\u57fa\u672c\u5355\u4f4d \u6709\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u5207\u6362\u5f00\u9500\u5927 \u7ebf\u7a0b\uff1a\u8fdb\u7a0b\u7684\u4e00\u4e2a\u6267\u884c\u6d41\uff0c\u662f CPU \u8c03\u5ea6\u5e76\u80fd\u72ec\u7acb\u8fd0\u884c\u7684\u7684\u57fa\u672c\u5355\u4f4d \u540c\u4e00\u8fdb\u7a0b\u4e2d\u7684\u591a\u7ebf\u7a0b\u5171\u4eab\u5185\u5b58\u7a7a\u95f4\uff0c\u7ebf\u7a0b\u5207\u6362\u4ee3\u4ef7\u5c0f \u591a\u7ebf\u7a0b\u901a\u4fe1\u65b9\u4fbf \u4ece\u5185\u6838\u5c42\u9762\u6765\u770b\u7ebf\u7a0b\u5176\u5b9e\u4e5f\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u8fdb\u7a0b\uff0c\u5b83\u8ddf\u7236\u8fdb\u7a0b\u5171\u4eab\u4e86\u6253\u5f00\u7684\u6587\u4ef6\u548c\u6587\u4ef6\u7cfb\u7edf\u4fe1\u606f\uff0c\u5171\u4eab\u4e86\u5730\u5740\u7a7a\u95f4\u548c\u4fe1\u53f7\u5904\u7406\u51fd\u6570 \u534f\u7a0b Go \u8bed\u8a00\u4e2d\u7684\u8f7b\u91cf\u7ea7\u7ebf\u7a0b\u5b9e\u73b0 Golang \u5728 runtime\u3001\u7cfb\u7edf\u8c03\u7528\u7b49\u591a\u65b9\u9762\u5bf9 goroutine \u8c03\u5ea6\u8fdb\u884c\u4e86\u5c01\u88c5\u548c\u5904\u7406\uff0c\u5f53\u9047\u5230\u957f\u65f6\u95f4\u6267\u884c\u6216\u8005\u8fdb\u884c\u7cfb\u7edf\u8c03\u7528\u65f6\uff0c\u4f1a\u4e3b\u52a8\u628a\u5f53\u524d goroutine \u7684 CPU (P) \u8f6c\u8ba9\u51fa\u53bb\uff0c\u8ba9\u5176\u4ed6 goroutine \u80fd\u88ab\u8c03\u5ea6\u5e76\u6267\u884c\uff0c\u4e5f\u5c31\u662f Golang \u4ece\u8bed\u8a00\u5c42\u9762\u652f\u6301\u4e86\u534f\u7a0b\u3002","title":"\u534f\u7a0b"},{"location":"1/2/7/#communicating-sequential-process","text":"CSP \u63cf\u8ff0\u4e24\u4e2a\u72ec\u7acb\u7684\u5e76\u53d1\u5b9e\u4f53\u901a\u8fc7\u5171\u4eab\u7684\u901a\u8baf channel \u8fdb\u884c\u901a\u4fe1\u7684\u5e76\u53d1\u6a21\u578b\u3002 Go \u534f\u7a0b goroutine \u662f\u4e00\u79cd\u8f7b\u91cf\u7ebf\u7a0b\uff0c\u5b83\u4e0d\u662f\u64cd\u4f5c\u7cfb\u7edf\u7684\u7ebf\u7a0b\uff0c\u800c\u662f\u5c06\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\u5206\u6bb5\u4f7f\u7528\uff0c\u901a\u8fc7\u8c03\u5ea6\u5668\u5b9e\u73b0\u534f\u4f5c\u5f0f\u8c03\u5ea6\u3002 \u662f\u4e00\u79cd\u7eff\u8272\u7ebf\u7a0b\uff0c\u5fae\u7ebf\u7a0b\uff0c\u5b83\u4e0e Coroutine \u534f\u7a0b\u4e5f\u6709\u533a\u522b\uff0c\u80fd\u591f\u5728\u53d1\u73b0\u5835\u585e\u540e\u542f\u52a8\u65b0\u7684\u5fae\u7ebf\u7a0b\u3002 \u901a\u9053 channel \u7c7b\u4f3c Unix \u7684 Pipe\uff0c\u7528\u4e8e\u534f\u7a0b\u4e4b\u95f4\u901a\u8baf\u548c\u540c\u6b65\u3002\u534f\u7a0b\u4e4b\u95f4\u867d\u7136\u89e3\u8026\uff0c\u4f46\u662f\u5b83\u4eec\u548c Channel \u6709\u7740\u8026\u5408\u3002","title":"Communicating Sequential Process"},{"location":"1/2/7/#_4","text":"\u6bcf\u4e2a goroutine (\u534f\u7a0b) \u9ed8\u8ba4\u5360\u7528\u5185\u5b58\u8fdc\u6bd4 Java \u3001C \u7684\u7ebf\u7a0b\u5c11 goroutine\uff1a2KB \u7ebf\u7a0b\uff1a8MB \u7ebf\u7a0b goroutine \u5207\u6362\u5f00\u9500\u65b9\u9762\uff0cgoroutine \u8fdc\u6bd4\u7ebf\u7a0b\u5c0f \u7ebf\u7a0b\uff1a\u6d89\u53ca\u6a21\u5f0f\u5207\u6362(\u4ece\u7528\u6237\u6001\u5207\u6362\u5230\u5185\u6838\u6001)\u300116\u4e2a\u5bc4\u5b58\u5668\u3001PC\u3001SP...\u7b49\u5bc4\u5b58\u5668\u7684\u5237\u65b0 goroutine\uff1a\u53ea\u6709\u4e09\u4e2a\u5bc4\u5b58\u5668\u7684\u503c\u4fee\u6539 - PC / SP / DX. GOMAXPROCS \u63a7\u5236\u5e76\u884c\u7ebf\u7a0b\u6570\u91cf","title":"\u7ebf\u7a0b\u548c\u534f\u7a0b\u7684\u5dee\u5f02"},{"location":"1/2/7/#_5","text":"code \u542f\u52a8\u65b0\u534f\u7a0b\uff1a go functionName() { for i := 0; i < 10; i++ { go fmt.Println(i) } time.Sleep(time.Second) }","title":"\u534f\u7a0b\u793a\u4f8b"},{"location":"1/2/8/","text":"channel channel - \u591a\u7ebf\u7a0b\u901a\u4fe1 code Channel \u662f\u591a\u4e2a\u534f\u7a0b\u4e4b\u95f4\u901a\u8baf\u7684\u7ba1\u9053 \u4e00\u7aef\u53d1\u9001\u6570\u636e\uff0c\u4e00\u7aef\u63a5\u6536\u6570\u636e \u540c\u4e00\u65f6\u95f4\u53ea\u6709\u4e00\u4e2a\u534f\u7a0b\u53ef\u4ee5\u8bbf\u95ee\u6570\u636e\uff0c\u65e0\u5171\u4eab\u5185\u5b58\u6a21\u5f0f\u53ef\u80fd\u51fa\u73b0\u7684\u5185\u5b58\u7ade\u4e89 \u534f\u8c03\u534f\u7a0b\u7684\u6267\u884c\u987a\u5e8f \u58f0\u660e\u65b9\u5f0f var identifier chan datatype \u64cd\u4f5c\u7b26<- \u793a\u4f8b ch := make(chan int) go func() { fmt.Println(\"hello from goroutine\") ch <- 0 //\u6570\u636e\u5199\u5165Channel }() i := <-ch//\u4eceChannel\u4e2d\u53d6\u6570\u636e\u5e76\u8d4b\u503c \u901a\u9053\u7f13\u51b2 \u57fa\u4e8e Channel \u7684\u901a\u4fe1\u662f\u540c\u6b65\u7684 \u5f53\u7f13\u51b2\u533a\u6ee1\u65f6\uff0c\u6570\u636e\u7684\u53d1\u9001\u662f\u963b\u585e\u7684 \u901a\u8fc7 make \u5173\u952e\u5b57\u521b\u5efa\u901a\u9053\u65f6\u53ef\u5b9a\u4e49\u7f13\u51b2\u533a\u5bb9\u91cf\uff0c\u9ed8\u8ba4\u7f13\u51b2\u533a\u5bb9\u91cf\u4e3a 0 \u4e0b\u9762\u4e24\u4e2a\u5b9a\u4e49\u7684\u533a\u522b\uff1f ch := make(chan int) ch := make(chan int,1) \u904d\u5386\u901a\u9053\u7f13\u51b2\u533a code ch := make(chan int, 10) go func() { for i := 0; i < 10; i++ { rand.Seed(time.Now().UnixNano()) n := rand.Intn(10) // n will be between 0 and 10 fmt.Println(\"putting: \", n) ch <- n } close(ch) }() fmt.Println(\"hello from main\") for v := range ch { fmt.Println(\"receiving: \", v) \u5355\u5411\u901a\u9053 code \u53ea\u53d1\u9001\u901a\u9053 var sendOnly chan<- int \u53ea\u63a5\u6536\u901a\u9053 var readOnly <-chan int Istio webhook controller func (w *WebhookCertPatcher) runWebhookController(stopChan <-chan struct{}) {} \u5982\u4f55\u7528: \u53cc\u5411\u901a\u9053\u8f6c\u6362 var c = make(chan int) go prod(c) go consume(c) func prod(ch chan<- int){ for { ch <- 1 } } func consume(ch <-chan int) { for { <-ch } } \u5173\u95ed\u901a\u9053 code \u901a\u9053\u65e0\u9700\u6bcf\u6b21\u5173\u95ed \u5173\u95ed\u7684\u4f5c\u7528\u662f\u544a\u8bc9\u63a5\u6536\u8005\u8be5\u901a\u9053\u518d\u65e0\u65b0\u6570\u636e\u53d1\u9001 \u53ea\u6709\u53d1\u9001\u65b9\u9700\u8981\u5173\u95ed\u901a\u9053 ch := make(chan int) defer close(ch) if v, notClosed := <-ch; notClosed { fmt.Println(v) } select code \u5f53\u591a\u4e2a\u534f\u7a0b\u540c\u65f6\u8fd0\u884c\u65f6\uff0c\u53ef\u901a\u8fc7 select \u8f6e\u8be2\u591a\u4e2a\u901a\u9053 \u5982\u679c\u6240\u6709\u901a\u9053\u90fd\u963b\u585e\u5219\u7b49\u5f85\uff0c\u5982\u5b9a\u4e49\u4e86 default \u5219\u6267\u884c default \u5982\u591a\u4e2a\u901a\u9053\u5c31\u7eea\u5219\u968f\u673a\u9009\u62e9 select { case v:= <- ch1: ... case v:= <- ch2: ... default: ... } \u5b9a\u65f6\u5668 Timer code time.Ticker \u4ee5\u6307\u5b9a\u7684\u65f6\u95f4\u95f4\u9694\u91cd\u590d\u7684\u5411\u901a\u9053 C \u53d1\u9001\u65f6\u95f4\u503c \u4f7f\u7528\u573a\u666f \u4e3a\u534f\u7a0b\u8bbe\u5b9a\u8d85\u65f6\u65f6\u95f4 timer := time.NewTimer(time.Second) select { // check normal channel case <-ch: fmt.Println(\"received from ch\") case <-timer.C: fmt.Println(\"timeout waiting from channel ch\") } \u4e0a\u4e0b\u6587 Context code \u8d85\u65f6\u3001\u53d6\u6d88\u64cd\u4f5c\u6216\u8005\u4e00\u4e9b\u5f02\u5e38\u60c5\u51b5\uff0c\u5f80\u5f80\u9700\u8981\u8fdb\u884c\u62a2\u5360\u64cd\u4f5c\u6216\u8005\u4e2d\u65ad\u540e\u7eed\u64cd\u4f5c Context \u662f\u8bbe\u7f6e\u622a\u6b62\u65e5\u671f\u3001\u540c\u6b65\u4fe1\u53f7\uff0c\u4f20\u9012\u8bf7\u6c42\u76f8\u5173\u503c\u7684\u7ed3\u6784\u4f53 type Context interface { Deadline() (deadline time.Time, ok bool) Done() <-chan struct{} Err() error Value(key interface{}) interface{} } \u7528\u6cd5: - context.Background - Background \u901a\u5e38\u88ab\u7528\u4e8e\u4e3b\u51fd\u6570\u3001\u521d\u59cb\u5316\u4ee5\u53ca\u6d4b\u8bd5\u4e2d\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u9876\u5c42\u7684 context\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e00\u822c\u6211\u4eec\u521b\u5efa\u7684 context \u90fd\u662f\u57fa\u4e8e Background - context.TODO - TODO \u662f\u5728\u4e0d\u786e\u5b9a\u4f7f\u7528\u4ec0\u4e48 context \u7684\u65f6\u5019\u624d\u4f1a\u4f7f\u7528 - context.WithDeadline - \u8d85\u65f6\u65f6\u95f4 - context.WithValue - \u5411 context \u6dfb\u52a0\u952e\u503c\u5bf9 - context.WithCancel - \u521b\u5efa\u4e00\u4e2a\u53ef\u53d6\u6d88\u7684 context \u5982\u4f55\u505c\u6b62\u4e00\u4e2a\u5b50\u534f\u7a0b done := make(chan bool) go func() { for { select { case <-done: fmt.Println(\"done channel is triggerred, exit child go routine\") return } } }() close(done) \u57fa\u4e8e Context \u505c\u6b62\u5b50\u534f\u7a0b Context \u662f Go \u8bed\u8a00\u5bf9 go routine \u548c timer \u7684\u5c01\u88c5 ctx, cancel := context.WithTimeout(context.Background(), time.Second) defer cancel() go process(ctx, 100*time.Millisecond) <-ctx.Done() fmt.Println(\"main:\", ctx.Err())","title":"\u6df1\u5165\u7406\u89e3 channel"},{"location":"1/2/8/#channel","text":"","title":"channel"},{"location":"1/2/8/#channel-","text":"code Channel \u662f\u591a\u4e2a\u534f\u7a0b\u4e4b\u95f4\u901a\u8baf\u7684\u7ba1\u9053 \u4e00\u7aef\u53d1\u9001\u6570\u636e\uff0c\u4e00\u7aef\u63a5\u6536\u6570\u636e \u540c\u4e00\u65f6\u95f4\u53ea\u6709\u4e00\u4e2a\u534f\u7a0b\u53ef\u4ee5\u8bbf\u95ee\u6570\u636e\uff0c\u65e0\u5171\u4eab\u5185\u5b58\u6a21\u5f0f\u53ef\u80fd\u51fa\u73b0\u7684\u5185\u5b58\u7ade\u4e89 \u534f\u8c03\u534f\u7a0b\u7684\u6267\u884c\u987a\u5e8f \u58f0\u660e\u65b9\u5f0f var identifier chan datatype \u64cd\u4f5c\u7b26<- \u793a\u4f8b ch := make(chan int) go func() { fmt.Println(\"hello from goroutine\") ch <- 0 //\u6570\u636e\u5199\u5165Channel }() i := <-ch//\u4eceChannel\u4e2d\u53d6\u6570\u636e\u5e76\u8d4b\u503c","title":"channel - \u591a\u7ebf\u7a0b\u901a\u4fe1"},{"location":"1/2/8/#_1","text":"\u57fa\u4e8e Channel \u7684\u901a\u4fe1\u662f\u540c\u6b65\u7684 \u5f53\u7f13\u51b2\u533a\u6ee1\u65f6\uff0c\u6570\u636e\u7684\u53d1\u9001\u662f\u963b\u585e\u7684 \u901a\u8fc7 make \u5173\u952e\u5b57\u521b\u5efa\u901a\u9053\u65f6\u53ef\u5b9a\u4e49\u7f13\u51b2\u533a\u5bb9\u91cf\uff0c\u9ed8\u8ba4\u7f13\u51b2\u533a\u5bb9\u91cf\u4e3a 0 \u4e0b\u9762\u4e24\u4e2a\u5b9a\u4e49\u7684\u533a\u522b\uff1f ch := make(chan int) ch := make(chan int,1)","title":"\u901a\u9053\u7f13\u51b2"},{"location":"1/2/8/#_2","text":"code ch := make(chan int, 10) go func() { for i := 0; i < 10; i++ { rand.Seed(time.Now().UnixNano()) n := rand.Intn(10) // n will be between 0 and 10 fmt.Println(\"putting: \", n) ch <- n } close(ch) }() fmt.Println(\"hello from main\") for v := range ch { fmt.Println(\"receiving: \", v)","title":"\u904d\u5386\u901a\u9053\u7f13\u51b2\u533a"},{"location":"1/2/8/#_3","text":"code \u53ea\u53d1\u9001\u901a\u9053 var sendOnly chan<- int \u53ea\u63a5\u6536\u901a\u9053 var readOnly <-chan int Istio webhook controller func (w *WebhookCertPatcher) runWebhookController(stopChan <-chan struct{}) {} \u5982\u4f55\u7528: \u53cc\u5411\u901a\u9053\u8f6c\u6362 var c = make(chan int) go prod(c) go consume(c) func prod(ch chan<- int){ for { ch <- 1 } } func consume(ch <-chan int) { for { <-ch } }","title":"\u5355\u5411\u901a\u9053"},{"location":"1/2/8/#_4","text":"code \u901a\u9053\u65e0\u9700\u6bcf\u6b21\u5173\u95ed \u5173\u95ed\u7684\u4f5c\u7528\u662f\u544a\u8bc9\u63a5\u6536\u8005\u8be5\u901a\u9053\u518d\u65e0\u65b0\u6570\u636e\u53d1\u9001 \u53ea\u6709\u53d1\u9001\u65b9\u9700\u8981\u5173\u95ed\u901a\u9053 ch := make(chan int) defer close(ch) if v, notClosed := <-ch; notClosed { fmt.Println(v) }","title":"\u5173\u95ed\u901a\u9053"},{"location":"1/2/8/#select","text":"code \u5f53\u591a\u4e2a\u534f\u7a0b\u540c\u65f6\u8fd0\u884c\u65f6\uff0c\u53ef\u901a\u8fc7 select \u8f6e\u8be2\u591a\u4e2a\u901a\u9053 \u5982\u679c\u6240\u6709\u901a\u9053\u90fd\u963b\u585e\u5219\u7b49\u5f85\uff0c\u5982\u5b9a\u4e49\u4e86 default \u5219\u6267\u884c default \u5982\u591a\u4e2a\u901a\u9053\u5c31\u7eea\u5219\u968f\u673a\u9009\u62e9 select { case v:= <- ch1: ... case v:= <- ch2: ... default: ... }","title":"select"},{"location":"1/2/8/#timer","text":"code time.Ticker \u4ee5\u6307\u5b9a\u7684\u65f6\u95f4\u95f4\u9694\u91cd\u590d\u7684\u5411\u901a\u9053 C \u53d1\u9001\u65f6\u95f4\u503c \u4f7f\u7528\u573a\u666f \u4e3a\u534f\u7a0b\u8bbe\u5b9a\u8d85\u65f6\u65f6\u95f4 timer := time.NewTimer(time.Second) select { // check normal channel case <-ch: fmt.Println(\"received from ch\") case <-timer.C: fmt.Println(\"timeout waiting from channel ch\") }","title":"\u5b9a\u65f6\u5668 Timer"},{"location":"1/2/8/#context","text":"code \u8d85\u65f6\u3001\u53d6\u6d88\u64cd\u4f5c\u6216\u8005\u4e00\u4e9b\u5f02\u5e38\u60c5\u51b5\uff0c\u5f80\u5f80\u9700\u8981\u8fdb\u884c\u62a2\u5360\u64cd\u4f5c\u6216\u8005\u4e2d\u65ad\u540e\u7eed\u64cd\u4f5c Context \u662f\u8bbe\u7f6e\u622a\u6b62\u65e5\u671f\u3001\u540c\u6b65\u4fe1\u53f7\uff0c\u4f20\u9012\u8bf7\u6c42\u76f8\u5173\u503c\u7684\u7ed3\u6784\u4f53 type Context interface { Deadline() (deadline time.Time, ok bool) Done() <-chan struct{} Err() error Value(key interface{}) interface{} } \u7528\u6cd5: - context.Background - Background \u901a\u5e38\u88ab\u7528\u4e8e\u4e3b\u51fd\u6570\u3001\u521d\u59cb\u5316\u4ee5\u53ca\u6d4b\u8bd5\u4e2d\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u9876\u5c42\u7684 context\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e00\u822c\u6211\u4eec\u521b\u5efa\u7684 context \u90fd\u662f\u57fa\u4e8e Background - context.TODO - TODO \u662f\u5728\u4e0d\u786e\u5b9a\u4f7f\u7528\u4ec0\u4e48 context \u7684\u65f6\u5019\u624d\u4f1a\u4f7f\u7528 - context.WithDeadline - \u8d85\u65f6\u65f6\u95f4 - context.WithValue - \u5411 context \u6dfb\u52a0\u952e\u503c\u5bf9 - context.WithCancel - \u521b\u5efa\u4e00\u4e2a\u53ef\u53d6\u6d88\u7684 context","title":"\u4e0a\u4e0b\u6587 Context"},{"location":"1/2/8/#_5","text":"done := make(chan bool) go func() { for { select { case <-done: fmt.Println(\"done channel is triggerred, exit child go routine\") return } } }() close(done)","title":"\u5982\u4f55\u505c\u6b62\u4e00\u4e2a\u5b50\u534f\u7a0b"},{"location":"1/2/8/#context_1","text":"Context \u662f Go \u8bed\u8a00\u5bf9 go routine \u548c timer \u7684\u5c01\u88c5 ctx, cancel := context.WithTimeout(context.Background(), time.Second) defer cancel() go process(ctx, 100*time.Millisecond) <-ctx.Done() fmt.Println(\"main:\", ctx.Err())","title":"\u57fa\u4e8e Context \u505c\u6b62\u5b50\u534f\u7a0b"},{"location":"1/2/9/","text":"\u8bfe\u540e\u7ec3\u4e60 code \u57fa\u4e8e Channel \u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u5355\u7ebf\u7a0b\u751f\u4ea7\u8005\u6d88\u8d39\u8005\u6a21\u578b \u961f\u5217\uff1a \u961f\u5217\u957f\u5ea610\uff0c\u961f\u5217\u5143\u7d20\u7c7b\u578b\u4e3a int \u751f\u4ea7\u8005\uff1a \u6bcf1\u79d2\u5f80\u961f\u5217\u4e2d\u653e\u5165\u4e00\u4e2a\u7c7b\u578b\u4e3a int \u7684\u5143\u7d20\uff0c\u961f\u5217\u6ee1\u65f6\u751f\u4ea7\u8005\u53ef\u4ee5\u963b\u585e \u6d88\u8d39\u8005\uff1a \u6bcf\u4e00\u79d2\u4ece\u961f\u5217\u4e2d\u83b7\u53d6\u4e00\u4e2a\u5143\u7d20\u5e76\u6253\u5370\uff0c\u961f\u5217\u4e3a\u7a7a\u65f6\u6d88\u8d39\u8005\u963b\u585e","title":"\u57fa\u4e8e channel \u7f16\u5199\u4e00\u4e2a\u751f\u4ea7\u8005\u6d88\u8d39\u8005\u7a0b\u5e8f"},{"location":"1/2/9/#_1","text":"code \u57fa\u4e8e Channel \u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u5355\u7ebf\u7a0b\u751f\u4ea7\u8005\u6d88\u8d39\u8005\u6a21\u578b \u961f\u5217\uff1a \u961f\u5217\u957f\u5ea610\uff0c\u961f\u5217\u5143\u7d20\u7c7b\u578b\u4e3a int \u751f\u4ea7\u8005\uff1a \u6bcf1\u79d2\u5f80\u961f\u5217\u4e2d\u653e\u5165\u4e00\u4e2a\u7c7b\u578b\u4e3a int \u7684\u5143\u7d20\uff0c\u961f\u5217\u6ee1\u65f6\u751f\u4ea7\u8005\u53ef\u4ee5\u963b\u585e \u6d88\u8d39\u8005\uff1a \u6bcf\u4e00\u79d2\u4ece\u961f\u5217\u4e2d\u83b7\u53d6\u4e00\u4e2a\u5143\u7d20\u5e76\u6253\u5370\uff0c\u961f\u5217\u4e3a\u7a7a\u65f6\u6d88\u8d39\u8005\u963b\u585e","title":"\u8bfe\u540e\u7ec3\u4e60"},{"location":"1/3/1/","text":"\u7ebf\u7a0b\u52a0\u9501 \u7406\u89e3\u7ebf\u7a0b\u5b89\u5168 Map \u7ebf\u7a0b\u5b89\u5168 code \u9501- Go \u8bed\u8a00\u4e0d\u4ec5\u4ec5\u63d0\u4f9b\u57fa\u4e8e CSP \u7684\u901a\u8baf\u6a21\u578b\uff0c\u4e5f\u652f\u6301\u57fa\u4e8e\u5171\u4eab\u5185\u5b58\u7684\u591a\u7ebf\u7a0b\u6570\u636e\u8bbf\u95ee Sync \u5305\u63d0\u4f9b\u4e86\u9501\u7684\u57fa\u672c\u539f\u8bed sync.Mutex \u4e92\u65a5\u9501 Lock()\u52a0\u9501\uff0cUnlock()\u89e3\u9501 sync.RWMutex \u8bfb\u5199\u5206\u79bb\u9501 \u4e0d\u9650\u5236\u5e76\u53d1\u8bfb\uff0c\u53ea\u9650\u5236\u5e76\u53d1\u5199\u548c\u5e76\u53d1\u8bfb\u5199 sync.WaitGroup \u7b49\u5f85\u4e00\u7ec4 goroutine \u8fd4\u56de sync.Once \u4fdd\u8bc1\u67d0\u6bb5\u4ee3\u7801\u53ea\u6267\u884c\u4e00\u6b21 sync.Cond \u8ba9\u4e00\u7ec4 goroutine \u5728\u6ee1\u8db3\u7279\u5b9a\u6761\u4ef6\u65f6\u88ab\u5524\u9192 Mutex \u793a\u4f8b code Kubernetes \u4e2d\u7684 informer factory // Start initializes all requested informers. func (f *sharedInformerFactory) Start(stopCh <-chan struct{}) { f.lock.Lock() defer f.lock.Unlock() for informerType, informer := range f.informers { if !f.startedInformers[informerType] { go informer.Run(stopCh) f.startedInformers[informerType] = true } } } WaitGroup \u793a\u4f8b code // CreateBatch create a batch of pods. All pods are created before waiting. func (c *PodClient) CreateBatch(pods []*v1.Pod) []*v1.Pod { ps := make([]*v1.Pod, len(pods)) var wg sync.WaitGroup for i, pod := range pods { wg.Add(1) go func(i int, pod *v1.Pod) { defer wg.Done() defer GinkgoRecover() ps[i] = c.CreateSync(pod) }(i, pod) } wg.Wait() return ps } Once \u793a\u4f8b code // CreateBatch create a batch of pods. All pods are created before waiting. func (c *PodClient) CreateBatch(pods []*v1.Pod) []*v1.Pod { ps := make([]*v1.Pod, len(pods)) var wg sync.WaitGroup for i, pod := range pods { wg.Add(1) go func(i int, pod *v1.Pod) { defer wg.Done() defer GinkgoRecover() ps[i] = c.CreateSync(pod) }(i, pod) } wg.Wait() return ps } Cond \u793a\u4f8b code Kubernetes \u4e2d\u7684\u961f\u5217\uff0c\u6807\u51c6\u7684\u751f\u4ea7\u8005\u6d88\u8d39\u8005\u6a21\u5f0f cond: sync.NewCond(&sync.Mutex{}), // Add marks item as needing processing. func (q *Type) Add(item interface{}) { q.cond.L.Lock() defer q.cond.L.Unlock() if q.shuttingDown { return } if q.dirty.has(item) { return } q.metrics.add(item) q.dirty.insert(item) if q.processing.has(item) { return } q.queue = append(q.queue, item) q.cond.Signal() } // Get blocks until it can return an item to be processed. If shutdown = true, // the caller should end their goroutine. You must call Done with item when you // have finished processing it. func (q *Type) Get() (item interface{}, shutdown bool) { q.cond.L.Lock() defer q.cond.L.Unlock() for len(q.queue) == 0 && !q.shuttingDown { q.cond.Wait() } if len(q.queue) == 0 { // We must be shutting down. return nil, true } item, q.queue = q.queue[0], q.queue[1:] q.metrics.get(item) q.processing.insert(item) q.dirty.delete(item) return item, false }","title":"\u7ebf\u7a0b\u52a0\u9501"},{"location":"1/3/1/#_1","text":"","title":"\u7ebf\u7a0b\u52a0\u9501"},{"location":"1/3/1/#_2","text":"","title":"\u7406\u89e3\u7ebf\u7a0b\u5b89\u5168"},{"location":"1/3/1/#map","text":"code","title":"Map \u7ebf\u7a0b\u5b89\u5168"},{"location":"1/3/1/#-go-csp","text":"Sync \u5305\u63d0\u4f9b\u4e86\u9501\u7684\u57fa\u672c\u539f\u8bed sync.Mutex \u4e92\u65a5\u9501 Lock()\u52a0\u9501\uff0cUnlock()\u89e3\u9501 sync.RWMutex \u8bfb\u5199\u5206\u79bb\u9501 \u4e0d\u9650\u5236\u5e76\u53d1\u8bfb\uff0c\u53ea\u9650\u5236\u5e76\u53d1\u5199\u548c\u5e76\u53d1\u8bfb\u5199 sync.WaitGroup \u7b49\u5f85\u4e00\u7ec4 goroutine \u8fd4\u56de sync.Once \u4fdd\u8bc1\u67d0\u6bb5\u4ee3\u7801\u53ea\u6267\u884c\u4e00\u6b21 sync.Cond \u8ba9\u4e00\u7ec4 goroutine \u5728\u6ee1\u8db3\u7279\u5b9a\u6761\u4ef6\u65f6\u88ab\u5524\u9192","title":"\u9501- Go \u8bed\u8a00\u4e0d\u4ec5\u4ec5\u63d0\u4f9b\u57fa\u4e8e CSP \u7684\u901a\u8baf\u6a21\u578b\uff0c\u4e5f\u652f\u6301\u57fa\u4e8e\u5171\u4eab\u5185\u5b58\u7684\u591a\u7ebf\u7a0b\u6570\u636e\u8bbf\u95ee"},{"location":"1/3/1/#mutex","text":"code Kubernetes \u4e2d\u7684 informer factory // Start initializes all requested informers. func (f *sharedInformerFactory) Start(stopCh <-chan struct{}) { f.lock.Lock() defer f.lock.Unlock() for informerType, informer := range f.informers { if !f.startedInformers[informerType] { go informer.Run(stopCh) f.startedInformers[informerType] = true } } }","title":"Mutex \u793a\u4f8b"},{"location":"1/3/1/#waitgroup","text":"code // CreateBatch create a batch of pods. All pods are created before waiting. func (c *PodClient) CreateBatch(pods []*v1.Pod) []*v1.Pod { ps := make([]*v1.Pod, len(pods)) var wg sync.WaitGroup for i, pod := range pods { wg.Add(1) go func(i int, pod *v1.Pod) { defer wg.Done() defer GinkgoRecover() ps[i] = c.CreateSync(pod) }(i, pod) } wg.Wait() return ps }","title":"WaitGroup \u793a\u4f8b"},{"location":"1/3/1/#once","text":"code // CreateBatch create a batch of pods. All pods are created before waiting. func (c *PodClient) CreateBatch(pods []*v1.Pod) []*v1.Pod { ps := make([]*v1.Pod, len(pods)) var wg sync.WaitGroup for i, pod := range pods { wg.Add(1) go func(i int, pod *v1.Pod) { defer wg.Done() defer GinkgoRecover() ps[i] = c.CreateSync(pod) }(i, pod) } wg.Wait() return ps }","title":"Once \u793a\u4f8b"},{"location":"1/3/1/#cond","text":"code Kubernetes \u4e2d\u7684\u961f\u5217\uff0c\u6807\u51c6\u7684\u751f\u4ea7\u8005\u6d88\u8d39\u8005\u6a21\u5f0f cond: sync.NewCond(&sync.Mutex{}), // Add marks item as needing processing. func (q *Type) Add(item interface{}) { q.cond.L.Lock() defer q.cond.L.Unlock() if q.shuttingDown { return } if q.dirty.has(item) { return } q.metrics.add(item) q.dirty.insert(item) if q.processing.has(item) { return } q.queue = append(q.queue, item) q.cond.Signal() } // Get blocks until it can return an item to be processed. If shutdown = true, // the caller should end their goroutine. You must call Done with item when you // have finished processing it. func (q *Type) Get() (item interface{}, shutdown bool) { q.cond.L.Lock() defer q.cond.L.Unlock() for len(q.queue) == 0 && !q.shuttingDown { q.cond.Wait() } if len(q.queue) == 0 { // We must be shutting down. return nil, true } item, q.queue = q.queue[0], q.queue[1:] q.metrics.get(item) q.processing.insert(item) q.dirty.delete(item) return item, false }","title":"Cond \u793a\u4f8b"},{"location":"1/3/2/","text":"\u7ebf\u7a0b\u8c03\u5ea6 \u6df1\u5165\u7406\u89e3 Go \u8bed\u8a00\u7ebf\u7a0b\u8c03\u5ea6 \u8fdb\u7a0b\uff1a\u8d44\u6e90\u5206\u914d\u7684\u57fa\u672c\u5355\u4f4d \u7ebf\u7a0b\uff1a\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d \u65e0\u8bba\u662f\u7ebf\u7a0b\u8fd8\u662f\u8fdb\u7a0b\uff0c\u5728 linux \u4e2d\u90fd\u4ee5 task_struct \u63cf\u8ff0\uff0c\u4ece\u5185\u6838\u89d2\u5ea6\u770b\uff0c\u4e0e\u8fdb\u7a0b\u65e0\u672c\u8d28\u533a\u522b Glibc \u4e2d\u7684 pthread \u5e93\u63d0\u4f9b NPTL\uff08Native POSIX Threading Library\uff09\u652f\u6301 Linux \u8fdb\u7a0b\u7684\u5185\u5b58\u4f7f\u7528 \u279c 01syncmap git:(main) \u2717 go build -o main main.go \u279c 01syncmap git:(main) \u2717 ll \u603b\u7528\u91cf 1.2M -rwxrwxr-x 1 cjx cjx 1.2M 9\u6708 12 19:55 main -rw-rw-r-- 1 cjx cjx 716 9\u6708 12 17:38 main.go \u279c 01syncmap git:(main) \u2717 size main text data bss dec hex filename 785989 16432 212840 1015261 f7ddd main \u279c 01syncmap git:(main) \u2717 objdump -x main ...... 000000000041c1c0 g F .text 000000000000033e runtime.(*pallocData).findScavengeCandidate 000000000041c500 g F .text 0000000000000125 runtime.(*stackScanState).putPtr 000000000041c640 g F .text 000000000000013a runtime.(*stackScanState).getPtr ...... 00000000004587c0 g F .text 000000000000004c main.(*SafeMap).Write.dwrap.2 00000000004c21a0 g O .noptrdata 0000000000000028 main..inittask 00000000004c2320 g O .noptrdata 0000000000000038 sync..inittask 00000000004c6138 g O .bss 0000000000000008 sync.expunged 00000000004c6390 g O .bss 0000000000000018 sync.allPools 00000000004c63b0 g O .bss 0000000000000018 sync.oldPools ...... 00000000004c6068 g O .bss 0000000000000008 _cgo_sigaction 000000000047c940 g O .rodata 0000000000000008 runtime.mainPC 000000000047dbc8 g O .rodata 0000000000000070 go.itab.*internal/reflectlite.rtype,internal/reflectlite.Type 000000000047ca00 g O .rodata 000000000000000e runtime.defaultGOROOT.str 000000000047c970 g O .rodata 0000000000000009 runtime.buildVersion.str 0000000000459000 g O .rodata 0000000000000000 type.* 000000000047cb10 g O .rodata 0000000000000018 runtime.textsectionmap \u67e5\u770b\u9875\u5927\u5c0f \u279c 01syncmap git:(main) \u2717 getconf PAGESIZE 4096 \u279c 01syncmap git:(main) \u2717 getconf PAGE_SIZE 4096 CPU \u5bf9\u5185\u5b58\u7684\u8bbf\u95ee CPU \u4e0a\u6709\u4e2a Memory Management Unit\uff08MMU\uff09 \u5355\u5143 CPU \u628a\u865a\u62df\u5730\u5740\u7ed9 MMU\uff0cMMU \u53bb\u7269\u7406\u5185\u5b58\u4e2d\u67e5\u8be2\u9875\u8868\uff0c\u5f97\u5230\u5b9e\u9645\u7684\u7269\u7406\u5730\u5740 CPU \u7ef4\u62a4\u4e00\u4efd\u7f13\u5b58 Translation Lookaside Buffer\uff08TLB\uff09\uff0c\u7f13\u5b58\u865a\u62df\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u7684\u6620\u5c04\u5173\u7cfb \u8fdb\u7a0b\u5207\u6362\u5f00\u9500 \u76f4\u63a5\u5f00\u9500 \u5207\u6362\u9875\u8868\u5168\u5c40\u76ee\u5f55\uff08PGD\uff09 \u5207\u6362\u5185\u6838\u6001\u5806\u6808 \u5207\u6362\u786c\u4ef6\u4e0a\u4e0b\u6587\uff08\u8fdb\u7a0b\u6062\u590d\u524d\uff0c\u5fc5\u987b\u88c5\u5165\u5bc4\u5b58\u5668\u7684\u6570\u636e\u7edf\u79f0\u4e3a\u786c\u4ef6\u4e0a\u4e0b\u6587\uff09 \u5237\u65b0 TLB \u7cfb\u7edf\u8c03\u5ea6\u5668\u7684\u4ee3\u7801\u6267\u884c \u95f4\u63a5\u5f00\u9500 CPU \u7f13\u5b58\u5931\u6548\u5bfc\u81f4\u7684\u8fdb\u7a0b\u9700\u8981\u5230\u5185\u5b58\u76f4\u63a5\u8bbf\u95ee\u7684 IO \u64cd\u4f5c\u53d8\u591a \u7ebf\u7a0b\u5207\u6362\u5f00\u9500 \u7ebf\u7a0b\u672c\u8d28\u4e0a\u53ea\u662f\u4e00\u6279\u5171\u4eab\u8d44\u6e90\u7684\u8fdb\u7a0b\uff0c\u7ebf\u7a0b\u5207\u6362\u672c\u8d28\u4e0a\u4f9d\u7136\u9700\u8981\u5185\u6838\u8fdb\u884c\u8fdb\u7a0b\u5207\u6362 \u4e00\u7ec4\u7ebf\u7a0b\u56e0\u4e3a\u5171\u4eab\u5185\u5b58\u8d44\u6e90\uff0c\u56e0\u6b64\u4e00\u4e2a\u8fdb\u7a0b\u7684\u6240\u6709\u7ebf\u7a0b\u5171\u4eab\u865a\u62df\u5730\u5740\u7a7a\u95f4\uff0c\u7ebf\u7a0b\u5207\u6362\u76f8\u6bd4\u8fdb\u7a0b\u5207\u6362\uff0c \u4e3b\u8981\u8282\u7701\u4e86\u865a\u62df\u5730\u5740\u7a7a\u95f4\u7684\u5207\u6362 \u7528\u6237\u7ebf\u7a0b \u65e0\u9700\u5185\u6838\u5e2e\u52a9\uff0c\u5e94\u7528\u7a0b\u5e8f\u5728\u7528\u6237\u7a7a\u95f4\u521b\u5efa\u7684\u53ef\u6267\u884c\u5355\u5143\uff0c\u521b\u5efa\u9500\u6bc1\u5b8c\u5168\u5728\u7528\u6237\u6001\u5b8c\u6210\u3002 Goroutine Go \u8bed\u8a00\u57fa\u4e8e GMP \u6a21\u578b\u5b9e\u73b0\u7528\u6237\u6001\u7ebf\u7a0b - Goroutine\uff1a\u8868\u793a goroutine\uff0c\u6bcf\u4e2a goroutine \u90fd\u6709\u81ea\u5df1\u7684\u6808\u7a7a\u95f4\uff0c\u5b9a\u65f6\u5668\uff0c\u521d\u59cb\u5316\u7684\u6808\u7a7a\u95f4\u5728 2k \u5de6\u53f3\uff0c\u7a7a\u95f4\u4f1a\u968f\u7740\u9700\u6c42\u589e\u957f\u3002 - Machine\uff1a\u62bd\u8c61\u5316\u4ee3\u8868\u5185\u6838\u7ebf\u7a0b\uff0c\u8bb0\u5f55\u5185\u6838\u7ebf\u7a0b\u6808\u4fe1\u606f\uff0c\u5f53goroutine \u8c03\u5ea6\u5230\u7ebf\u7a0b\u65f6\uff0c\u4f7f\u7528\u8be5 goroutine \u81ea\u5df1\u7684\u6808\u4fe1\u606f\u3002 - Process\uff1a\u4ee3\u8868\u8c03\u5ea6\u5668\uff0c\u8d1f\u8d23\u8c03\u5ea6 goroutine\uff0c\u7ef4\u62a4\u4e00\u4e2a\u672c\u5730goroutine \u961f\u5217\uff0cM \u4ece P \u4e0a\u83b7\u5f97 goroutine \u5e76\u6267\u884c\uff0c\u540c\u65f6\u8fd8\u8d1f\u8d23\u90e8\u5206\u5185\u5b58\u7684\u7ba1\u7406\u3002 MPG \u7684\u5bf9\u5e94\u5173\u7cfb GMP \u6a21\u578b\u7ec6\u8282 P \u7684\u72b6\u6001 _Pidle \uff1a\u5904\u7406\u5668\u6ca1\u6709\u8fd0\u884c\u7528\u6237\u4ee3\u7801\u6216\u8005\u8c03\u5ea6\u5668\uff0c\u88ab\u7a7a\u95f2\u961f\u5217\u6216\u8005\u6539\u53d8\u5176\u72b6\u6001\u7684\u7ed3\u6784\u6301\u6709\uff0c\u8fd0\u884c\u961f\u5217\u4e3a\u7a7a _Prunning \uff1a\u88ab\u7ebf\u7a0b M \u6301\u6709\uff0c\u5e76\u4e14\u6b63\u5728\u6267\u884c\u7528\u6237\u4ee3\u7801\u6216\u8005\u8c03\u5ea6\u5668 _Psyscall\uff1a\u6ca1\u6709\u6267\u884c\u7528\u6237\u4ee3\u7801\uff0c\u5f53\u524d\u7ebf\u7a0b\u9677\u5165\u7cfb\u7edf\u8c03\u7528 _Pgcstop \uff1a\u88ab\u7ebf\u7a0b M \u6301\u6709\uff0c\u5f53\u524d\u5904\u7406\u5668\u7531\u4e8e\u5783\u573e\u56de\u6536\u88ab\u505c\u6b62 _Pdead \uff1a\u5f53\u524d\u5904\u7406\u5668\u5df2\u7ecf\u4e0d\u88ab\u4f7f\u7528 G \u7684\u72b6\u6001 _Gidle\uff1a\u521a\u521a\u88ab\u5206\u914d\u5e76\u4e14\u8fd8\u6ca1\u6709\u88ab\u521d\u59cb\u5316\uff0c\u503c\u4e3a0\uff0c\u4e3a\u521b\u5efa goroutine \u540e\u7684\u9ed8\u8ba4\u503c _Grunnable\uff1a \u6ca1\u6709\u6267\u884c\u4ee3\u7801\uff0c\u6ca1\u6709\u6808\u7684\u6240\u6709\u6743\uff0c\u5b58\u50a8\u5728\u8fd0\u884c\u961f\u5217\u4e2d\uff0c\u53ef\u80fd\u5728\u67d0\u4e2aP\u7684\u672c\u5730\u961f\u5217\u6216\u5168\u5c40\u961f\u5217\u4e2d(\u5982\u4e0a\u56fe)\u3002 _Grunning\uff1a \u6b63\u5728\u6267\u884c\u4ee3\u7801\u7684 goroutine\uff0c\u62e5\u6709\u6808\u7684\u6240\u6709\u6743 _Gsyscall\uff1a\u6b63\u5728\u6267\u884c\u7cfb\u7edf\u8c03\u7528\uff0c\u62e5\u6709\u6808\u7684\u6240\u6709\u6743\uff0c\u4e0e P \u8131\u79bb\uff0c\u4f46\u662f\u4e0e\u67d0\u4e2a M \u7ed1\u5b9a\uff0c\u4f1a\u5728\u8c03\u7528\u7ed3\u675f\u540e\u88ab\u5206\u914d\u5230\u8fd0\u884c\u961f\u5217 _Gwaiting\uff1a\u88ab\u963b\u585e\u7684 goroutine\uff0c\u963b\u585e\u5728\u67d0\u4e2a channel \u7684\u53d1\u9001\u6216\u8005\u63a5\u6536\u961f\u5217 _Gdead\uff1a \u5f53\u524d goroutine \u672a\u88ab\u4f7f\u7528\uff0c\u6ca1\u6709\u6267\u884c\u4ee3\u7801\uff0c\u53ef\u80fd\u6709\u5206\u914d\u7684\u6808\uff0c\u5206\u5e03\u5728\u7a7a\u95f2\u5217\u8868 gFree\uff0c\u53ef\u80fd\u662f\u4e00\u4e2a\u521a\u521a\u521d\u59cb\u5316\u7684goroutine\uff0c\u4e5f\u53ef\u80fd\u662f\u6267\u884c\u4e86 goexit \u9000\u51fa\u7684 goroutine _Gcopystac\uff1a\u6808\u6b63\u5728\u88ab\u62f7\u8d1d\uff0c\u6ca1\u6709\u6267\u884c\u4ee3\u7801\uff0c\u4e0d\u5728\u8fd0\u884c\u961f\u5217\u4e0a\uff0c\u6267\u884c\u6743\u5728 _Gscan \uff1a GC \u6b63\u5728\u626b\u63cf\u6808\u7a7a\u95f4\uff0c\u6ca1\u6709\u6267\u884c\u4ee3\u7801\uff0c\u53ef\u4ee5\u4e0e\u5176\u4ed6\u72b6\u6001\u540c\u65f6\u5b58\u5728 G\u7684\u72b6\u6001\u8f6c\u6362\u56fe G \u6240\u5904\u7684\u4f4d\u7f6e \u8fdb\u7a0b\u90fd\u6709\u4e00\u4e2a\u5168\u5c40\u7684 G \u961f\u5217 \u6bcf\u4e2a P \u62e5\u6709\u81ea\u5df1\u7684\u672c\u5730\u6267\u884c\u961f\u5217 \u6709\u4e0d\u5728\u8fd0\u884c\u961f\u5217\u4e2d\u7684 G \u5904\u4e8e channel \u963b\u585e\u6001\u7684 G \u88ab\u653e\u5728 sudog \u8131\u79bb P \u7ed1\u5b9a\u5728 M \u4e0a\u7684 G\uff0c\u5982\u7cfb\u7edf\u8c03\u7528 \u4e3a\u4e86\u590d\u7528\uff0c\u6267\u884c\u7ed3\u675f\u8fdb\u5165 P \u7684 gFree \u5217\u8868\u4e2d\u7684 G Goroutine \u521b\u5efa\u8fc7\u7a0b \u83b7\u53d6\u6216\u8005\u521b\u5efa\u65b0\u7684 Goroutine \u7ed3\u6784\u4f53 \u4ece\u5904\u7406\u5668\u7684 gFree \u5217\u8868\u4e2d\u67e5\u627e\u7a7a\u95f2\u7684 Goroutine \u5982\u679c\u4e0d\u5b58\u5728\u7a7a\u95f2\u7684 Goroutine\uff0c\u4f1a\u901a\u8fc7 runtime.malg \u521b\u5efa\u4e00\u4e2a\u6808\u5927\u5c0f\u8db3\u591f\u7684\u65b0\u7ed3\u6784\u4f53 \u5c06\u51fd\u6570\u4f20\u5165\u7684\u53c2\u6570\u79fb\u5230 Goroutine \u7684\u6808\u4e0a \u66f4\u65b0 Goroutine \u8c03\u5ea6\u76f8\u5173\u7684\u5c5e\u6027\uff0c\u66f4\u65b0\u72b6\u6001\u4e3a_Grunnable \u8fd4\u56de\u7684 Goroutine \u4f1a\u5b58\u50a8\u5230\u5168\u5c40\u53d8\u91cf allgs \u4e2d \u5c06 Goroutine \u653e\u5230\u8fd0\u884c\u961f\u5217\u4e0a Goroutine \u8bbe\u7f6e\u5230\u5904\u7406\u5668\u7684 runnext \u4f5c\u4e3a\u4e0b\u4e00\u4e2a\u5904\u7406\u5668\u6267\u884c\u7684\u4efb\u52a1 \u5f53\u5904\u7406\u5668\u7684 \u672c\u5730\u8fd0\u884c\u961f\u5217\u5df2\u7ecf\u6ca1\u6709\u5269\u4f59\u7a7a\u95f4\u65f6(256) \uff0c\u5c31\u4f1a\u628a\u672c\u5730\u961f\u5217\u4e2d\u7684\u4e00\u90e8\u5206 Goroutine \u548c\u5f85\u52a0\u5165\u7684Goroutine \u901a\u8fc7 runtime.runqputslow \u6dfb\u52a0\u5230\u8c03\u5ea6\u5668\u6301\u6709\u7684\u5168\u5c40\u8fd0\u884c\u961f\u5217\u4e0a \u8c03\u5ea6\u5668\u884c\u4e3a \u4e3a\u4e86\u4fdd\u8bc1\u516c\u5e73\uff0c\u5f53\u5168\u5c40\u8fd0\u884c\u961f\u5217\u4e2d\u6709\u5f85\u6267\u884c\u7684 Goroutine \u65f6\uff0c\u901a\u8fc7 schedtick \u4fdd\u8bc1\u6709\u4e00\u5b9a\u51e0\u7387(1/61)\u4f1a\u4ece \u5168\u5c40\u7684\u8fd0\u884c\u961f\u5217 \u4e2d\u67e5\u627e\u5bf9\u5e94\u7684 Goroutine \u4ece\u5904\u7406\u5668 \u672c\u5730\u7684\u8fd0\u884c\u961f\u5217 \u4e2d\u67e5\u627e\u5f85\u6267\u884c\u7684 Goroutine \u5982\u679c\u524d\u4e24\u79cd\u65b9\u6cd5\u90fd\u6ca1\u6709\u627e\u5230 Goroutine\uff0c\u4f1a\u901a\u8fc7 runtime.findrunnable \u8fdb\u884c\u963b\u585e\u5730\u67e5\u627e Goroutine \u4ece\u672c\u5730\u8fd0\u884c\u961f\u5217\u3001\u5168\u5c40\u8fd0\u884c\u961f\u5217\u4e2d\u67e5\u627e \u4ece\u7f51\u7edc\u8f6e\u8be2\u5668\u4e2d\u67e5\u627e\u662f\u5426\u6709 Goroutine \u7b49\u5f85\u8fd0\u884c \u901a\u8fc7 runtime.runqsteal \u5c1d\u8bd5\u4ece\u5176\u4ed6\u968f\u673a\u7684\u5904\u7406\u5668\u4e2d\u7a83\u53d6\u4e00\u534a\u5f85\u8fd0\u884c\u7684 Goroutine \u8bfe\u540e\u7ec3\u4e60 2.1 code \u5c06\u7ec3\u4e60 1.2 \u4e2d\u7684\u751f\u4ea7\u8005\u6d88\u8d39\u8005\u6a21\u578b\u4fee\u6539\u6210\u4e3a\u591a\u4e2a\u751f\u4ea7\u8005\u548c\u591a\u4e2a\u6d88\u8d39\u8005\u6a21\u5f0f","title":"\u7ebf\u7a0b\u8c03\u5ea6"},{"location":"1/3/2/#_1","text":"","title":"\u7ebf\u7a0b\u8c03\u5ea6"},{"location":"1/3/2/#go","text":"\u8fdb\u7a0b\uff1a\u8d44\u6e90\u5206\u914d\u7684\u57fa\u672c\u5355\u4f4d \u7ebf\u7a0b\uff1a\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d \u65e0\u8bba\u662f\u7ebf\u7a0b\u8fd8\u662f\u8fdb\u7a0b\uff0c\u5728 linux \u4e2d\u90fd\u4ee5 task_struct \u63cf\u8ff0\uff0c\u4ece\u5185\u6838\u89d2\u5ea6\u770b\uff0c\u4e0e\u8fdb\u7a0b\u65e0\u672c\u8d28\u533a\u522b Glibc \u4e2d\u7684 pthread \u5e93\u63d0\u4f9b NPTL\uff08Native POSIX Threading Library\uff09\u652f\u6301","title":"\u6df1\u5165\u7406\u89e3 Go \u8bed\u8a00\u7ebf\u7a0b\u8c03\u5ea6"},{"location":"1/3/2/#linux","text":"\u279c 01syncmap git:(main) \u2717 go build -o main main.go \u279c 01syncmap git:(main) \u2717 ll \u603b\u7528\u91cf 1.2M -rwxrwxr-x 1 cjx cjx 1.2M 9\u6708 12 19:55 main -rw-rw-r-- 1 cjx cjx 716 9\u6708 12 17:38 main.go \u279c 01syncmap git:(main) \u2717 size main text data bss dec hex filename 785989 16432 212840 1015261 f7ddd main \u279c 01syncmap git:(main) \u2717 objdump -x main ...... 000000000041c1c0 g F .text 000000000000033e runtime.(*pallocData).findScavengeCandidate 000000000041c500 g F .text 0000000000000125 runtime.(*stackScanState).putPtr 000000000041c640 g F .text 000000000000013a runtime.(*stackScanState).getPtr ...... 00000000004587c0 g F .text 000000000000004c main.(*SafeMap).Write.dwrap.2 00000000004c21a0 g O .noptrdata 0000000000000028 main..inittask 00000000004c2320 g O .noptrdata 0000000000000038 sync..inittask 00000000004c6138 g O .bss 0000000000000008 sync.expunged 00000000004c6390 g O .bss 0000000000000018 sync.allPools 00000000004c63b0 g O .bss 0000000000000018 sync.oldPools ...... 00000000004c6068 g O .bss 0000000000000008 _cgo_sigaction 000000000047c940 g O .rodata 0000000000000008 runtime.mainPC 000000000047dbc8 g O .rodata 0000000000000070 go.itab.*internal/reflectlite.rtype,internal/reflectlite.Type 000000000047ca00 g O .rodata 000000000000000e runtime.defaultGOROOT.str 000000000047c970 g O .rodata 0000000000000009 runtime.buildVersion.str 0000000000459000 g O .rodata 0000000000000000 type.* 000000000047cb10 g O .rodata 0000000000000018 runtime.textsectionmap \u67e5\u770b\u9875\u5927\u5c0f \u279c 01syncmap git:(main) \u2717 getconf PAGESIZE 4096 \u279c 01syncmap git:(main) \u2717 getconf PAGE_SIZE 4096","title":"Linux \u8fdb\u7a0b\u7684\u5185\u5b58\u4f7f\u7528"},{"location":"1/3/2/#cpu","text":"CPU \u4e0a\u6709\u4e2a Memory Management Unit\uff08MMU\uff09 \u5355\u5143 CPU \u628a\u865a\u62df\u5730\u5740\u7ed9 MMU\uff0cMMU \u53bb\u7269\u7406\u5185\u5b58\u4e2d\u67e5\u8be2\u9875\u8868\uff0c\u5f97\u5230\u5b9e\u9645\u7684\u7269\u7406\u5730\u5740 CPU \u7ef4\u62a4\u4e00\u4efd\u7f13\u5b58 Translation Lookaside Buffer\uff08TLB\uff09\uff0c\u7f13\u5b58\u865a\u62df\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u7684\u6620\u5c04\u5173\u7cfb","title":"CPU \u5bf9\u5185\u5b58\u7684\u8bbf\u95ee"},{"location":"1/3/2/#_2","text":"\u76f4\u63a5\u5f00\u9500 \u5207\u6362\u9875\u8868\u5168\u5c40\u76ee\u5f55\uff08PGD\uff09 \u5207\u6362\u5185\u6838\u6001\u5806\u6808 \u5207\u6362\u786c\u4ef6\u4e0a\u4e0b\u6587\uff08\u8fdb\u7a0b\u6062\u590d\u524d\uff0c\u5fc5\u987b\u88c5\u5165\u5bc4\u5b58\u5668\u7684\u6570\u636e\u7edf\u79f0\u4e3a\u786c\u4ef6\u4e0a\u4e0b\u6587\uff09 \u5237\u65b0 TLB \u7cfb\u7edf\u8c03\u5ea6\u5668\u7684\u4ee3\u7801\u6267\u884c \u95f4\u63a5\u5f00\u9500 CPU \u7f13\u5b58\u5931\u6548\u5bfc\u81f4\u7684\u8fdb\u7a0b\u9700\u8981\u5230\u5185\u5b58\u76f4\u63a5\u8bbf\u95ee\u7684 IO \u64cd\u4f5c\u53d8\u591a","title":"\u8fdb\u7a0b\u5207\u6362\u5f00\u9500"},{"location":"1/3/2/#_3","text":"\u7ebf\u7a0b\u672c\u8d28\u4e0a\u53ea\u662f\u4e00\u6279\u5171\u4eab\u8d44\u6e90\u7684\u8fdb\u7a0b\uff0c\u7ebf\u7a0b\u5207\u6362\u672c\u8d28\u4e0a\u4f9d\u7136\u9700\u8981\u5185\u6838\u8fdb\u884c\u8fdb\u7a0b\u5207\u6362 \u4e00\u7ec4\u7ebf\u7a0b\u56e0\u4e3a\u5171\u4eab\u5185\u5b58\u8d44\u6e90\uff0c\u56e0\u6b64\u4e00\u4e2a\u8fdb\u7a0b\u7684\u6240\u6709\u7ebf\u7a0b\u5171\u4eab\u865a\u62df\u5730\u5740\u7a7a\u95f4\uff0c\u7ebf\u7a0b\u5207\u6362\u76f8\u6bd4\u8fdb\u7a0b\u5207\u6362\uff0c \u4e3b\u8981\u8282\u7701\u4e86\u865a\u62df\u5730\u5740\u7a7a\u95f4\u7684\u5207\u6362","title":"\u7ebf\u7a0b\u5207\u6362\u5f00\u9500"},{"location":"1/3/2/#_4","text":"\u65e0\u9700\u5185\u6838\u5e2e\u52a9\uff0c\u5e94\u7528\u7a0b\u5e8f\u5728\u7528\u6237\u7a7a\u95f4\u521b\u5efa\u7684\u53ef\u6267\u884c\u5355\u5143\uff0c\u521b\u5efa\u9500\u6bc1\u5b8c\u5168\u5728\u7528\u6237\u6001\u5b8c\u6210\u3002","title":"\u7528\u6237\u7ebf\u7a0b"},{"location":"1/3/2/#goroutine","text":"Go \u8bed\u8a00\u57fa\u4e8e GMP \u6a21\u578b\u5b9e\u73b0\u7528\u6237\u6001\u7ebf\u7a0b - Goroutine\uff1a\u8868\u793a goroutine\uff0c\u6bcf\u4e2a goroutine \u90fd\u6709\u81ea\u5df1\u7684\u6808\u7a7a\u95f4\uff0c\u5b9a\u65f6\u5668\uff0c\u521d\u59cb\u5316\u7684\u6808\u7a7a\u95f4\u5728 2k \u5de6\u53f3\uff0c\u7a7a\u95f4\u4f1a\u968f\u7740\u9700\u6c42\u589e\u957f\u3002 - Machine\uff1a\u62bd\u8c61\u5316\u4ee3\u8868\u5185\u6838\u7ebf\u7a0b\uff0c\u8bb0\u5f55\u5185\u6838\u7ebf\u7a0b\u6808\u4fe1\u606f\uff0c\u5f53goroutine \u8c03\u5ea6\u5230\u7ebf\u7a0b\u65f6\uff0c\u4f7f\u7528\u8be5 goroutine \u81ea\u5df1\u7684\u6808\u4fe1\u606f\u3002 - Process\uff1a\u4ee3\u8868\u8c03\u5ea6\u5668\uff0c\u8d1f\u8d23\u8c03\u5ea6 goroutine\uff0c\u7ef4\u62a4\u4e00\u4e2a\u672c\u5730goroutine \u961f\u5217\uff0cM \u4ece P \u4e0a\u83b7\u5f97 goroutine \u5e76\u6267\u884c\uff0c\u540c\u65f6\u8fd8\u8d1f\u8d23\u90e8\u5206\u5185\u5b58\u7684\u7ba1\u7406\u3002","title":"Goroutine"},{"location":"1/3/2/#mpg","text":"","title":"MPG \u7684\u5bf9\u5e94\u5173\u7cfb"},{"location":"1/3/2/#gmp","text":"","title":"GMP \u6a21\u578b\u7ec6\u8282"},{"location":"1/3/2/#p","text":"_Pidle \uff1a\u5904\u7406\u5668\u6ca1\u6709\u8fd0\u884c\u7528\u6237\u4ee3\u7801\u6216\u8005\u8c03\u5ea6\u5668\uff0c\u88ab\u7a7a\u95f2\u961f\u5217\u6216\u8005\u6539\u53d8\u5176\u72b6\u6001\u7684\u7ed3\u6784\u6301\u6709\uff0c\u8fd0\u884c\u961f\u5217\u4e3a\u7a7a _Prunning \uff1a\u88ab\u7ebf\u7a0b M \u6301\u6709\uff0c\u5e76\u4e14\u6b63\u5728\u6267\u884c\u7528\u6237\u4ee3\u7801\u6216\u8005\u8c03\u5ea6\u5668 _Psyscall\uff1a\u6ca1\u6709\u6267\u884c\u7528\u6237\u4ee3\u7801\uff0c\u5f53\u524d\u7ebf\u7a0b\u9677\u5165\u7cfb\u7edf\u8c03\u7528 _Pgcstop \uff1a\u88ab\u7ebf\u7a0b M \u6301\u6709\uff0c\u5f53\u524d\u5904\u7406\u5668\u7531\u4e8e\u5783\u573e\u56de\u6536\u88ab\u505c\u6b62 _Pdead \uff1a\u5f53\u524d\u5904\u7406\u5668\u5df2\u7ecf\u4e0d\u88ab\u4f7f\u7528","title":"P \u7684\u72b6\u6001"},{"location":"1/3/2/#g","text":"_Gidle\uff1a\u521a\u521a\u88ab\u5206\u914d\u5e76\u4e14\u8fd8\u6ca1\u6709\u88ab\u521d\u59cb\u5316\uff0c\u503c\u4e3a0\uff0c\u4e3a\u521b\u5efa goroutine \u540e\u7684\u9ed8\u8ba4\u503c _Grunnable\uff1a \u6ca1\u6709\u6267\u884c\u4ee3\u7801\uff0c\u6ca1\u6709\u6808\u7684\u6240\u6709\u6743\uff0c\u5b58\u50a8\u5728\u8fd0\u884c\u961f\u5217\u4e2d\uff0c\u53ef\u80fd\u5728\u67d0\u4e2aP\u7684\u672c\u5730\u961f\u5217\u6216\u5168\u5c40\u961f\u5217\u4e2d(\u5982\u4e0a\u56fe)\u3002 _Grunning\uff1a \u6b63\u5728\u6267\u884c\u4ee3\u7801\u7684 goroutine\uff0c\u62e5\u6709\u6808\u7684\u6240\u6709\u6743 _Gsyscall\uff1a\u6b63\u5728\u6267\u884c\u7cfb\u7edf\u8c03\u7528\uff0c\u62e5\u6709\u6808\u7684\u6240\u6709\u6743\uff0c\u4e0e P \u8131\u79bb\uff0c\u4f46\u662f\u4e0e\u67d0\u4e2a M \u7ed1\u5b9a\uff0c\u4f1a\u5728\u8c03\u7528\u7ed3\u675f\u540e\u88ab\u5206\u914d\u5230\u8fd0\u884c\u961f\u5217 _Gwaiting\uff1a\u88ab\u963b\u585e\u7684 goroutine\uff0c\u963b\u585e\u5728\u67d0\u4e2a channel \u7684\u53d1\u9001\u6216\u8005\u63a5\u6536\u961f\u5217 _Gdead\uff1a \u5f53\u524d goroutine \u672a\u88ab\u4f7f\u7528\uff0c\u6ca1\u6709\u6267\u884c\u4ee3\u7801\uff0c\u53ef\u80fd\u6709\u5206\u914d\u7684\u6808\uff0c\u5206\u5e03\u5728\u7a7a\u95f2\u5217\u8868 gFree\uff0c\u53ef\u80fd\u662f\u4e00\u4e2a\u521a\u521a\u521d\u59cb\u5316\u7684goroutine\uff0c\u4e5f\u53ef\u80fd\u662f\u6267\u884c\u4e86 goexit \u9000\u51fa\u7684 goroutine _Gcopystac\uff1a\u6808\u6b63\u5728\u88ab\u62f7\u8d1d\uff0c\u6ca1\u6709\u6267\u884c\u4ee3\u7801\uff0c\u4e0d\u5728\u8fd0\u884c\u961f\u5217\u4e0a\uff0c\u6267\u884c\u6743\u5728 _Gscan \uff1a GC \u6b63\u5728\u626b\u63cf\u6808\u7a7a\u95f4\uff0c\u6ca1\u6709\u6267\u884c\u4ee3\u7801\uff0c\u53ef\u4ee5\u4e0e\u5176\u4ed6\u72b6\u6001\u540c\u65f6\u5b58\u5728","title":"G \u7684\u72b6\u6001"},{"location":"1/3/2/#g_1","text":"","title":"G\u7684\u72b6\u6001\u8f6c\u6362\u56fe"},{"location":"1/3/2/#g_2","text":"\u8fdb\u7a0b\u90fd\u6709\u4e00\u4e2a\u5168\u5c40\u7684 G \u961f\u5217 \u6bcf\u4e2a P \u62e5\u6709\u81ea\u5df1\u7684\u672c\u5730\u6267\u884c\u961f\u5217 \u6709\u4e0d\u5728\u8fd0\u884c\u961f\u5217\u4e2d\u7684 G \u5904\u4e8e channel \u963b\u585e\u6001\u7684 G \u88ab\u653e\u5728 sudog \u8131\u79bb P \u7ed1\u5b9a\u5728 M \u4e0a\u7684 G\uff0c\u5982\u7cfb\u7edf\u8c03\u7528 \u4e3a\u4e86\u590d\u7528\uff0c\u6267\u884c\u7ed3\u675f\u8fdb\u5165 P \u7684 gFree \u5217\u8868\u4e2d\u7684 G","title":"G \u6240\u5904\u7684\u4f4d\u7f6e"},{"location":"1/3/2/#goroutine_1","text":"\u83b7\u53d6\u6216\u8005\u521b\u5efa\u65b0\u7684 Goroutine \u7ed3\u6784\u4f53 \u4ece\u5904\u7406\u5668\u7684 gFree \u5217\u8868\u4e2d\u67e5\u627e\u7a7a\u95f2\u7684 Goroutine \u5982\u679c\u4e0d\u5b58\u5728\u7a7a\u95f2\u7684 Goroutine\uff0c\u4f1a\u901a\u8fc7 runtime.malg \u521b\u5efa\u4e00\u4e2a\u6808\u5927\u5c0f\u8db3\u591f\u7684\u65b0\u7ed3\u6784\u4f53 \u5c06\u51fd\u6570\u4f20\u5165\u7684\u53c2\u6570\u79fb\u5230 Goroutine \u7684\u6808\u4e0a \u66f4\u65b0 Goroutine \u8c03\u5ea6\u76f8\u5173\u7684\u5c5e\u6027\uff0c\u66f4\u65b0\u72b6\u6001\u4e3a_Grunnable \u8fd4\u56de\u7684 Goroutine \u4f1a\u5b58\u50a8\u5230\u5168\u5c40\u53d8\u91cf allgs \u4e2d","title":"Goroutine \u521b\u5efa\u8fc7\u7a0b"},{"location":"1/3/2/#goroutine_2","text":"Goroutine \u8bbe\u7f6e\u5230\u5904\u7406\u5668\u7684 runnext \u4f5c\u4e3a\u4e0b\u4e00\u4e2a\u5904\u7406\u5668\u6267\u884c\u7684\u4efb\u52a1 \u5f53\u5904\u7406\u5668\u7684 \u672c\u5730\u8fd0\u884c\u961f\u5217\u5df2\u7ecf\u6ca1\u6709\u5269\u4f59\u7a7a\u95f4\u65f6(256) \uff0c\u5c31\u4f1a\u628a\u672c\u5730\u961f\u5217\u4e2d\u7684\u4e00\u90e8\u5206 Goroutine \u548c\u5f85\u52a0\u5165\u7684Goroutine \u901a\u8fc7 runtime.runqputslow \u6dfb\u52a0\u5230\u8c03\u5ea6\u5668\u6301\u6709\u7684\u5168\u5c40\u8fd0\u884c\u961f\u5217\u4e0a","title":"\u5c06 Goroutine \u653e\u5230\u8fd0\u884c\u961f\u5217\u4e0a"},{"location":"1/3/2/#_5","text":"\u4e3a\u4e86\u4fdd\u8bc1\u516c\u5e73\uff0c\u5f53\u5168\u5c40\u8fd0\u884c\u961f\u5217\u4e2d\u6709\u5f85\u6267\u884c\u7684 Goroutine \u65f6\uff0c\u901a\u8fc7 schedtick \u4fdd\u8bc1\u6709\u4e00\u5b9a\u51e0\u7387(1/61)\u4f1a\u4ece \u5168\u5c40\u7684\u8fd0\u884c\u961f\u5217 \u4e2d\u67e5\u627e\u5bf9\u5e94\u7684 Goroutine \u4ece\u5904\u7406\u5668 \u672c\u5730\u7684\u8fd0\u884c\u961f\u5217 \u4e2d\u67e5\u627e\u5f85\u6267\u884c\u7684 Goroutine \u5982\u679c\u524d\u4e24\u79cd\u65b9\u6cd5\u90fd\u6ca1\u6709\u627e\u5230 Goroutine\uff0c\u4f1a\u901a\u8fc7 runtime.findrunnable \u8fdb\u884c\u963b\u585e\u5730\u67e5\u627e Goroutine \u4ece\u672c\u5730\u8fd0\u884c\u961f\u5217\u3001\u5168\u5c40\u8fd0\u884c\u961f\u5217\u4e2d\u67e5\u627e \u4ece\u7f51\u7edc\u8f6e\u8be2\u5668\u4e2d\u67e5\u627e\u662f\u5426\u6709 Goroutine \u7b49\u5f85\u8fd0\u884c \u901a\u8fc7 runtime.runqsteal \u5c1d\u8bd5\u4ece\u5176\u4ed6\u968f\u673a\u7684\u5904\u7406\u5668\u4e2d\u7a83\u53d6\u4e00\u534a\u5f85\u8fd0\u884c\u7684 Goroutine","title":"\u8c03\u5ea6\u5668\u884c\u4e3a"},{"location":"1/3/2/#21","text":"code \u5c06\u7ec3\u4e60 1.2 \u4e2d\u7684\u751f\u4ea7\u8005\u6d88\u8d39\u8005\u6a21\u578b\u4fee\u6539\u6210\u4e3a\u591a\u4e2a\u751f\u4ea7\u8005\u548c\u591a\u4e2a\u6d88\u8d39\u8005\u6a21\u5f0f","title":"\u8bfe\u540e\u7ec3\u4e60 2.1"},{"location":"1/3/3/","text":"\u5185\u5b58\u7ba1\u7406 \u5173\u4e8e\u5185\u5b58\u7ba1\u7406\u7684\u4e89\u8bba \u5806\u5185\u5b58\u7ba1\u7406 \u521d\u59cb\u5316\u8fde\u7eed\u5185\u5b58\u5757\u4f5c\u4e3a\u5806 \u6709\u5185\u5b58\u7533\u8bf7\u7684\u65f6\u5019\uff0cAllocator \u4ece\u5806\u5185\u5b58\u7684\u672a\u5206\u914d\u533a\u57df\u5206\u5272\u5c0f\u5185\u5b58\u5757 \u7528\u94fe\u8868\u5c06\u5df2\u5206\u914d\u5185\u5b58\u8fde\u63a5\u8d77\u6765 \u9700\u8981\u4fe1\u606f\u63cf\u8ff0\u6bcf\u4e2a\u5185\u5b58\u5757\u7684\u5143\u6570\u636e\uff1a\u5927\u5c0f\uff0c\u662f\u5426\u4f7f\u7528\uff0c\u4e0b\u4e00\u4e2a\u5185\u5b58\u5757\u7684\u5730\u5740\u7b49 \u5806\u5185\u5b58\u7ba1\u7406\u7684\u6311\u6218 \u5185\u5b58\u5206\u914d\u9700\u8981\u7cfb\u7edf\u8c03\u7528\uff0c\u5728\u9891\u7e41\u5185\u5b58\u5206\u914d\u7684\u65f6\u5019\uff0c\u7cfb\u7edf\u6027\u80fd\u8f83\u4f4e\u3002 \u591a\u7ebf\u7a0b\u5171\u4eab\u76f8\u540c\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u540c\u65f6\u7533\u8bf7\u5185\u5b58\u65f6\uff0c\u9700\u8981\u52a0\u9501\uff0c\u5426\u5219\u4f1a\u4ea7\u751f\u540c\u4e00\u5757\u5185\u5b58\u88ab\u591a\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u7684\u60c5\u51b5\u3002 \u5185\u5b58\u788e\u7247\u7684\u95ee\u9898\uff0c\u7ecf\u8fc7\u4e0d\u65ad\u7684\u5185\u5b58\u5206\u914d\u548c\u56de\u6536\uff0c\u5185\u5b58\u788e\u7247\u4f1a\u6bd4\u8f83\u4e25\u91cd\uff0c\u5185\u5b58\u7684\u4f7f\u7528\u6548\u7387\u964d\u4f4e\u3002 TCMalloc \u6982\u89c8 TCMalloc page:\u5185\u5b58\u9875\uff0c\u4e00\u5757 8K \u5927\u5c0f\u7684\u5185\u5b58\u7a7a\u95f4\u3002Go \u4e0e\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u95f4\u7684\u5185\u5b58\u7533\u8bf7\u548c\u91ca\u653e\uff0c\u90fd\u662f\u4ee5page \u4e3a\u5355\u4f4d\u7684 span: \u5185\u5b58\u5757\uff0c\u4e00\u4e2a\u6216\u591a\u4e2a\u8fde\u7eed\u7684 page \u7ec4\u6210\u4e00\u4e2a span sizeclass : \u7a7a\u95f4\u89c4\u683c\uff0c\u6bcf\u4e2a span \u90fd\u5e26\u6709\u4e00\u4e2a sizeclass \uff0c\u6807\u8bb0\u7740\u8be5 span \u4e2d\u7684 page \u5e94\u8be5\u5982\u4f55\u4f7f\u7528 object : \u5bf9\u8c61\uff0c\u7528\u6765\u5b58\u50a8\u4e00\u4e2a\u53d8\u91cf\u6570\u636e\u5185\u5b58\u7a7a\u95f4\uff0c\u4e00\u4e2a span \u5728\u521d\u59cb\u5316\u65f6\uff0c\u4f1a\u88ab\u5207\u5272\u6210\u4e00\u5806\u7b49\u5927\u7684 object \uff1b\u5047\u8bbe object \u7684\u5927\u5c0f\u662f 16B \uff0cspan \u5927\u5c0f\u662f 8K \uff0c\u90a3\u4e48\u5c31\u4f1a\u628a span \u4e2d\u7684 page \u5c31\u4f1a\u88ab\u521d\u59cb\u5316 8K / 16B = 512 \u4e2a object \uff0c\u6240\u8c13\u5185\u5b58\u5206\u914d\uff0c\u5c31\u662f\u5206\u914d\u4e00\u4e2a object \u51fa\u53bb TCMalloc \u5bf9\u8c61\u5927\u5c0f\u5b9a\u4e49 \u5c0f\u5bf9\u8c61\u5927\u5c0f\uff1a0~256KB \u4e2d\u5bf9\u8c61\u5927\u5c0f\uff1a256KB~1MB \u5927\u5bf9\u8c61\u5927\u5c0f\uff1a>1MB \u5c0f\u5bf9\u8c61\u7684\u5206\u914d\u6d41\u7a0b ThreadCache -> CentralCache -> HeapPage\uff0c\u5927\u90e8\u5206\u65f6\u5019\uff0cThreadCache \u7f13\u5b58\u90fd\u662f\u8db3\u591f\u7684\uff0c\u4e0d\u9700\u8981\u53bb\u8bbf\u95eeCentralCache \u548c HeapPage\uff0c\u65e0\u7cfb\u7edf\u8c03\u7528\u914d\u5408\u65e0\u9501\u5206\u914d\uff0c\u5206\u914d\u6548\u7387\u662f\u975e\u5e38\u9ad8\u7684 \u4e2d\u5bf9\u8c61\u5206\u914d\u6d41\u7a0b \u76f4\u63a5\u5728 PageHeap \u4e2d\u9009\u62e9\u9002\u5f53\u7684\u5927\u5c0f\u5373\u53ef\uff0c128 Page \u7684 Span \u6240\u4fdd\u5b58\u7684\u6700\u5927\u5185\u5b58\u5c31\u662f 1MB \u5927\u5bf9\u8c61\u5206\u914d\u6d41\u7a0b \u4ece large span set \u9009\u62e9\u5408\u9002\u6570\u91cf\u7684\u9875\u9762\u7ec4\u6210 span\uff0c\u7528\u6765\u5b58\u50a8\u6570\u636e Go \u8bed\u8a00\u5185\u5b58\u5206\u914d mcache\uff1a\u5c0f\u5bf9\u8c61\u7684\u5185\u5b58\u5206\u914d\u76f4\u63a5\u8d70 size class \u4ece 1 \u5230 66\uff0c\u6bcf\u4e2a class \u4e24\u4e2a span Span \u5927\u5c0f\u662f 8KB\uff0c\u6309 span class \u5927\u5c0f\u5207\u5206 mcentral Span \u5185\u7684\u6240\u6709\u5185\u5b58\u5757\u90fd\u88ab\u5360\u7528\u65f6\uff0c\u6ca1\u6709\u5269\u4f59\u7a7a\u95f4\u7ee7\u7eed\u5206\u914d\u5bf9\u8c61\uff0cmcache \u4f1a\u5411 mcentral \u7533\u8bf71\u4e2aspan\uff0cmcache \u62ff\u5230 span \u540e\u7ee7\u7eed\u5206\u914d\u5bf9\u8c61 \u5f53 mcentral \u5411 mcache \u63d0\u4f9b span \u65f6\uff0c\u5982\u679c\u6ca1\u6709\u7b26\u5408\u6761\u4ef6\u7684 span\uff0cmcentral \u4f1a\u5411 mheap \u7533\u8bf7span mheap \u5f53 mheap \u6ca1\u6709\u8db3\u591f\u7684\u5185\u5b58\u65f6\uff0cmheap \u4f1a\u5411 OS \u7533\u8bf7\u5185\u5b58 Mheap \u628a Span \u7ec4\u7ec7\u6210\u4e86\u6811\u7ed3\u6784\uff0c\u800c\u4e0d\u662f\u94fe\u8868 \u7136\u540e\u628a Span \u5206\u914d\u5230 heapArena \u8fdb\u884c\u7ba1\u7406\uff0c\u5b83\u5305\u542b\u5730\u5740\u6620\u5c04\u548c span \u662f\u5426\u5305\u542b\u6307\u9488\u7b49\u4f4d\u56fe \u4e3a\u4e86\u66f4\u9ad8\u6548\u7684\u5206\u914d\u3001\u56de\u6536\u548c\u518d\u5229\u7528\u5185\u5b58 \u5185\u5b58\u56de\u6536 \u5f15\u7528\u8ba1\u6570\uff08Python\uff0cPHP\uff0cSwift\uff09 \u5bf9\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u7ef4\u62a4\u4e00\u4e2a\u5f15\u7528\u8ba1\u6570\uff0c\u5f53\u5f15\u7528\u8be5\u5bf9\u8c61\u7684\u5bf9\u8c61\u88ab\u9500\u6bc1\u7684\u65f6\u5019\uff0c\u5f15\u7528\u8ba1\u6570\u51cf 1\uff0c\u5f53\u5f15\u7528\u8ba1\u6570\u4e3a 0 \u7684\u65f6\u5019\uff0c\u56de\u6536\u8be5\u5bf9\u8c61 \u4f18\u70b9\uff1a\u5bf9\u8c61\u53ef\u4ee5\u5f88\u5feb\u7684\u88ab\u56de\u6536\uff0c\u4e0d\u4f1a\u51fa\u73b0\u5185\u5b58\u8017\u5c3d\u6216\u8fbe\u5230\u67d0\u4e2a\u9600\u503c\u65f6\u624d\u56de\u6536 \u7f3a\u70b9\uff1a\u4e0d\u80fd\u5f88\u597d\u7684\u5904\u7406\u5faa\u73af\u5f15\u7528\uff0c\u800c\u4e14\u5b9e\u65f6\u7ef4\u62a4\u5f15\u7528\u8ba1\u6570\uff0c\u6709\u4e5f\u4e00\u5b9a\u7684\u4ee3\u4ef7 \u6807\u8bb0-\u6e05\u9664\uff08Golang\uff09 \u4ece\u6839\u53d8\u91cf\u5f00\u59cb\u904d\u5386\u6240\u6709\u5f15\u7528\u7684\u5bf9\u8c61\uff0c\u5f15\u7528\u7684\u5bf9\u8c61\u6807\u8bb0\u4e3a\"\u88ab\u5f15\u7528\"\uff0c\u6ca1\u6709\u88ab\u6807\u8bb0\u7684\u8fdb\u884c\u56de\u6536 \u4f18\u70b9\uff1a\u89e3\u51b3\u5f15\u7528\u8ba1\u6570\u7684\u7f3a\u70b9 \u7f3a\u70b9\uff1a\u9700\u8981 STW\uff08stop the word\uff09\uff0c\u5373\u8981\u6682\u505c\u7a0b\u5e8f\u8fd0\u884c \u5206\u4ee3\u6536\u96c6\uff08Java\uff09 \u6309\u7167\u751f\u547d\u5468\u671f\u8fdb\u884c\u5212\u5206\u4e0d\u540c\u7684\u4ee3\u7a7a\u95f4\uff0c\u751f\u547d\u5468\u671f\u957f\u7684\u653e\u5165\u8001\u5e74\u4ee3\uff0c\u77ed\u7684\u653e\u5165\u65b0\u751f\u4ee3\uff0c\u65b0\u751f\u4ee3\u7684\u56de\u6536\u9891\u7387\u9ad8\u4e8e\u8001\u5e74\u4ee3\u7684\u9891\u7387 mspan allocBits \u8bb0\u5f55\u4e86\u6bcf\u5757\u5185\u5b58\u5206\u914d\u7684\u60c5\u51b5 gcmarkBits \u8bb0\u5f55\u4e86\u6bcf\u5757\u5185\u5b58\u7684\u5f15\u7528\u60c5\u51b5\uff0c\u6807\u8bb0\u9636\u6bb5\u5bf9\u6bcf\u5757\u5185\u5b58\u8fdb\u884c\u6807\u8bb0\uff0c\u6709\u5bf9\u8c61\u5f15\u7528\u7684\u5185\u5b58\u6807\u8bb0\u4e3a1\uff0c\u6ca1\u6709\u7684\u6807\u8bb0\u4e3a 0 \u8fd9\u4e24\u4e2a\u4f4d\u56fe\u7684\u6570\u636e\u7ed3\u6784\u662f\u5b8c\u5168\u4e00\u81f4\u7684\uff0c\u6807\u8bb0\u7ed3\u675f\u5219\u8fdb\u884c\u5185\u5b58\u56de\u6536\uff0c\u56de\u6536\u7684\u65f6\u5019\uff0c\u5c06 allocBits \u6307 \u5411 gcmarkBits\uff0c\u6807\u8bb0\u8fc7\u7684\u5219\u5b58\u5728\uff0c\u672a\u8fdb\u884c\u6807\u8bb0\u7684\u5219\u8fdb\u884c\u56de\u6536 GC \u5de5\u4f5c\u6d41\u7a0b Golang GC \u7684\u5927\u90e8\u5206\u5904\u7406\u662f\u548c\u7528\u6237\u4ee3\u7801\u5e76\u884c\u7684 Mark\uff1a Mark Prepare: \u521d\u59cb\u5316 GC \u4efb\u52a1\uff0c\u5305\u62ec\u5f00\u542f\u5199\u5c4f\u969c (write barrier) \u548c\u8f85\u52a9 GC(mutator assist)\uff0c\u7edf\u8ba1root\u5bf9\u8c61\u7684\u4efb\u52a1\u6570\u91cf\u7b49\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u9700\u8981STW GC Drains: \u626b\u63cf\u6240\u6709 root \u5bf9\u8c61\uff0c\u5305\u62ec\u5168\u5c40\u6307\u9488\u548c goroutine(G) \u6808\u4e0a\u7684\u6307\u9488\uff08\u626b\u63cf\u5bf9\u5e94 G \u6808\u65f6\u9700\u505c\u6b62\u8be5 G)\uff0c\u5c06\u5176\u52a0\u5165\u6807\u8bb0\u961f\u5217(\u7070\u8272\u961f\u5217)\uff0c\u5e76\u5faa\u73af\u5904\u7406\u7070\u8272\u961f\u5217\u7684\u5bf9\u8c61\uff0c\u76f4\u5230\u7070\u8272\u961f\u5217\u4e3a\u7a7a\u3002\u8be5\u8fc7\u7a0b\u540e\u53f0\u5e76\u884c\u6267\u884c Mark Termination\uff1a\u5b8c\u6210\u6807\u8bb0\u5de5\u4f5c\uff0c\u91cd\u65b0\u626b\u63cf(re-scan)\u5168\u5c40\u6307\u9488\u548c\u6808\u3002\u56e0\u4e3a Mark \u548c\u7528\u6237\u7a0b\u5e8f\u662f\u5e76\u884c\u7684\uff0c\u6240\u4ee5\u5728 Mark \u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u6709\u65b0\u7684\u5bf9\u8c61\u5206\u914d\u548c\u6307\u9488\u8d4b\u503c\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u901a\u8fc7\u5199\u5c4f\u969c\uff08write barrier\uff09\u8bb0\u5f55\u4e0b\u6765\uff0cre-scan \u518d\u68c0\u67e5\u4e00\u4e0b\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e5f\u662f\u4f1a STW \u7684 - Sweep\uff1a\u6309\u7167\u6807\u8bb0\u7ed3\u679c\u56de\u6536\u6240\u6709\u7684\u767d\u8272\u5bf9\u8c61\uff0c\u8be5\u8fc7\u7a0b\u540e\u53f0\u5e76\u884c\u6267\u884c Sweep Termination\uff1a\u5bf9\u672a\u6e05\u626b\u7684 span \u8fdb\u884c\u6e05\u626b, \u53ea\u6709\u4e0a\u4e00\u8f6e\u7684 GC \u7684\u6e05\u626b\u5de5\u4f5c\u5b8c\u6210\u624d\u53ef\u4ee5\u5f00\u59cb\u65b0\u4e00\u8f6e\u7684 GC \u4e09\u8272\u6807\u8bb0 GC \u5f00\u59cb\u65f6\uff0c\u8ba4\u4e3a\u6240\u6709 object \u90fd\u662f \u767d\u8272\uff0c\u5373\u5783\u573e \u4ece root \u533a\u5f00\u59cb\u904d\u5386\uff0c\u88ab\u89e6\u8fbe\u7684 object \u7f6e\u6210 \u7070\u8272 \u904d\u5386\u6240\u6709\u7070\u8272 object\uff0c\u5c06\u4ed6\u4eec\u5185\u90e8\u7684\u5f15\u7528\u53d8\u91cf\u7f6e\u6210 \u7070\u8272\uff0c\u81ea\u8eab\u7f6e\u6210 \u9ed1\u8272 \u5faa\u73af\u7b2c 3 \u6b65\uff0c\u76f4\u5230\u6ca1\u6709\u7070\u8272 object \u4e86\uff0c\u53ea\u5269\u4e0b\u4e86\u9ed1\u767d\u4e24\u79cd\uff0c\u767d\u8272\u7684\u90fd\u662f\u5783\u573e \u5bf9\u4e8e\u9ed1\u8272 object\uff0c\u5982\u679c\u5728\u6807\u8bb0\u671f\u95f4\u53d1\u751f\u4e86\u5199\u64cd\u4f5c\uff0c\u5199\u5c4f\u969c\u4f1a\u5728\u771f\u6b63\u8d4b\u503c\u524d\u5c06\u65b0\u5bf9\u8c61\u6807\u8bb0\u4e3a \u7070\u8272 \u6807\u8bb0\u8fc7\u7a0b\u4e2d\uff0cmallocgc \u65b0\u5206\u914d\u7684 object\uff0c\u4f1a\u5148\u88ab\u6807\u8bb0\u6210 \u9ed1\u8272 \u518d\u8fd4\u56de \u5783\u573e\u56de\u6536\u89e6\u53d1\u673a\u5236 \u5185\u5b58\u5206\u914d\u91cf\u8fbe\u5230\u9600\u503c\u89e6\u53d1 GC \u6bcf\u6b21\u5185\u5b58\u5206\u914d\u65f6\u90fd\u4f1a\u68c0\u67e5\u5f53\u524d\u5185\u5b58\u5206\u914d\u91cf\u662f\u5426\u5df2\u8fbe\u5230\u9600\u503c\uff0c\u5982\u679c\u8fbe\u5230\u9600\u503c\u5219\u7acb\u5373\u542f\u52a8 GC\u3002 \u9600\u503c = \u4e0a\u6b21 GC \u5185\u5b58\u5206\u914d\u91cf * \u5185\u5b58\u589e\u957f\u7387 \u5185\u5b58\u589e\u957f\u7387\u7531\u73af\u5883\u53d8\u91cf GOGC \u63a7\u5236\uff0c\u9ed8\u8ba4\u4e3a 100\uff0c\u5373\u6bcf\u5f53\u5185\u5b58\u6269\u5927\u4e00\u500d\u65f6\u542f\u52a8 GC\u3002 \u5b9a\u671f\u89e6\u53d1 GC \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6700\u957f 2 \u5206\u949f\u89e6\u53d1\u4e00\u6b21 GC\uff0c\u8fd9\u4e2a\u95f4\u9694\u5728 src/runtime/proc.go:forcegcperiod \u53d8\u91cf\u4e2d\u88ab\u58f0\u660e \u624b\u52a8\u89e6\u53d1 \u7a0b\u5e8f\u4ee3\u7801\u4e2d\u4e5f\u53ef\u4ee5\u4f7f\u7528 runtime.GC()\u6765\u624b\u52a8\u89e6\u53d1 GC\u3002\u8fd9\u4e3b\u8981\u7528\u4e8e GC \u6027\u80fd\u6d4b\u8bd5\u548c\u7edf\u8ba1\u3002","title":"\u5185\u5b58\u7ba1\u7406"},{"location":"1/3/3/#_1","text":"","title":"\u5185\u5b58\u7ba1\u7406"},{"location":"1/3/3/#_2","text":"","title":"\u5173\u4e8e\u5185\u5b58\u7ba1\u7406\u7684\u4e89\u8bba"},{"location":"1/3/3/#_3","text":"\u521d\u59cb\u5316\u8fde\u7eed\u5185\u5b58\u5757\u4f5c\u4e3a\u5806 \u6709\u5185\u5b58\u7533\u8bf7\u7684\u65f6\u5019\uff0cAllocator \u4ece\u5806\u5185\u5b58\u7684\u672a\u5206\u914d\u533a\u57df\u5206\u5272\u5c0f\u5185\u5b58\u5757 \u7528\u94fe\u8868\u5c06\u5df2\u5206\u914d\u5185\u5b58\u8fde\u63a5\u8d77\u6765 \u9700\u8981\u4fe1\u606f\u63cf\u8ff0\u6bcf\u4e2a\u5185\u5b58\u5757\u7684\u5143\u6570\u636e\uff1a\u5927\u5c0f\uff0c\u662f\u5426\u4f7f\u7528\uff0c\u4e0b\u4e00\u4e2a\u5185\u5b58\u5757\u7684\u5730\u5740\u7b49","title":"\u5806\u5185\u5b58\u7ba1\u7406"},{"location":"1/3/3/#_4","text":"\u5185\u5b58\u5206\u914d\u9700\u8981\u7cfb\u7edf\u8c03\u7528\uff0c\u5728\u9891\u7e41\u5185\u5b58\u5206\u914d\u7684\u65f6\u5019\uff0c\u7cfb\u7edf\u6027\u80fd\u8f83\u4f4e\u3002 \u591a\u7ebf\u7a0b\u5171\u4eab\u76f8\u540c\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u540c\u65f6\u7533\u8bf7\u5185\u5b58\u65f6\uff0c\u9700\u8981\u52a0\u9501\uff0c\u5426\u5219\u4f1a\u4ea7\u751f\u540c\u4e00\u5757\u5185\u5b58\u88ab\u591a\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u7684\u60c5\u51b5\u3002 \u5185\u5b58\u788e\u7247\u7684\u95ee\u9898\uff0c\u7ecf\u8fc7\u4e0d\u65ad\u7684\u5185\u5b58\u5206\u914d\u548c\u56de\u6536\uff0c\u5185\u5b58\u788e\u7247\u4f1a\u6bd4\u8f83\u4e25\u91cd\uff0c\u5185\u5b58\u7684\u4f7f\u7528\u6548\u7387\u964d\u4f4e\u3002","title":"\u5806\u5185\u5b58\u7ba1\u7406\u7684\u6311\u6218"},{"location":"1/3/3/#tcmalloc","text":"","title":"TCMalloc \u6982\u89c8"},{"location":"1/3/3/#tcmalloc_1","text":"page:\u5185\u5b58\u9875\uff0c\u4e00\u5757 8K \u5927\u5c0f\u7684\u5185\u5b58\u7a7a\u95f4\u3002Go \u4e0e\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u95f4\u7684\u5185\u5b58\u7533\u8bf7\u548c\u91ca\u653e\uff0c\u90fd\u662f\u4ee5page \u4e3a\u5355\u4f4d\u7684 span: \u5185\u5b58\u5757\uff0c\u4e00\u4e2a\u6216\u591a\u4e2a\u8fde\u7eed\u7684 page \u7ec4\u6210\u4e00\u4e2a span sizeclass : \u7a7a\u95f4\u89c4\u683c\uff0c\u6bcf\u4e2a span \u90fd\u5e26\u6709\u4e00\u4e2a sizeclass \uff0c\u6807\u8bb0\u7740\u8be5 span \u4e2d\u7684 page \u5e94\u8be5\u5982\u4f55\u4f7f\u7528 object : \u5bf9\u8c61\uff0c\u7528\u6765\u5b58\u50a8\u4e00\u4e2a\u53d8\u91cf\u6570\u636e\u5185\u5b58\u7a7a\u95f4\uff0c\u4e00\u4e2a span \u5728\u521d\u59cb\u5316\u65f6\uff0c\u4f1a\u88ab\u5207\u5272\u6210\u4e00\u5806\u7b49\u5927\u7684 object \uff1b\u5047\u8bbe object \u7684\u5927\u5c0f\u662f 16B \uff0cspan \u5927\u5c0f\u662f 8K \uff0c\u90a3\u4e48\u5c31\u4f1a\u628a span \u4e2d\u7684 page \u5c31\u4f1a\u88ab\u521d\u59cb\u5316 8K / 16B = 512 \u4e2a object \uff0c\u6240\u8c13\u5185\u5b58\u5206\u914d\uff0c\u5c31\u662f\u5206\u914d\u4e00\u4e2a object \u51fa\u53bb TCMalloc \u5bf9\u8c61\u5927\u5c0f\u5b9a\u4e49 \u5c0f\u5bf9\u8c61\u5927\u5c0f\uff1a0~256KB \u4e2d\u5bf9\u8c61\u5927\u5c0f\uff1a256KB~1MB \u5927\u5bf9\u8c61\u5927\u5c0f\uff1a>1MB \u5c0f\u5bf9\u8c61\u7684\u5206\u914d\u6d41\u7a0b ThreadCache -> CentralCache -> HeapPage\uff0c\u5927\u90e8\u5206\u65f6\u5019\uff0cThreadCache \u7f13\u5b58\u90fd\u662f\u8db3\u591f\u7684\uff0c\u4e0d\u9700\u8981\u53bb\u8bbf\u95eeCentralCache \u548c HeapPage\uff0c\u65e0\u7cfb\u7edf\u8c03\u7528\u914d\u5408\u65e0\u9501\u5206\u914d\uff0c\u5206\u914d\u6548\u7387\u662f\u975e\u5e38\u9ad8\u7684 \u4e2d\u5bf9\u8c61\u5206\u914d\u6d41\u7a0b \u76f4\u63a5\u5728 PageHeap \u4e2d\u9009\u62e9\u9002\u5f53\u7684\u5927\u5c0f\u5373\u53ef\uff0c128 Page \u7684 Span \u6240\u4fdd\u5b58\u7684\u6700\u5927\u5185\u5b58\u5c31\u662f 1MB \u5927\u5bf9\u8c61\u5206\u914d\u6d41\u7a0b \u4ece large span set \u9009\u62e9\u5408\u9002\u6570\u91cf\u7684\u9875\u9762\u7ec4\u6210 span\uff0c\u7528\u6765\u5b58\u50a8\u6570\u636e","title":"TCMalloc"},{"location":"1/3/3/#go","text":"mcache\uff1a\u5c0f\u5bf9\u8c61\u7684\u5185\u5b58\u5206\u914d\u76f4\u63a5\u8d70 size class \u4ece 1 \u5230 66\uff0c\u6bcf\u4e2a class \u4e24\u4e2a span Span \u5927\u5c0f\u662f 8KB\uff0c\u6309 span class \u5927\u5c0f\u5207\u5206 mcentral Span \u5185\u7684\u6240\u6709\u5185\u5b58\u5757\u90fd\u88ab\u5360\u7528\u65f6\uff0c\u6ca1\u6709\u5269\u4f59\u7a7a\u95f4\u7ee7\u7eed\u5206\u914d\u5bf9\u8c61\uff0cmcache \u4f1a\u5411 mcentral \u7533\u8bf71\u4e2aspan\uff0cmcache \u62ff\u5230 span \u540e\u7ee7\u7eed\u5206\u914d\u5bf9\u8c61 \u5f53 mcentral \u5411 mcache \u63d0\u4f9b span \u65f6\uff0c\u5982\u679c\u6ca1\u6709\u7b26\u5408\u6761\u4ef6\u7684 span\uff0cmcentral \u4f1a\u5411 mheap \u7533\u8bf7span mheap \u5f53 mheap \u6ca1\u6709\u8db3\u591f\u7684\u5185\u5b58\u65f6\uff0cmheap \u4f1a\u5411 OS \u7533\u8bf7\u5185\u5b58 Mheap \u628a Span \u7ec4\u7ec7\u6210\u4e86\u6811\u7ed3\u6784\uff0c\u800c\u4e0d\u662f\u94fe\u8868 \u7136\u540e\u628a Span \u5206\u914d\u5230 heapArena \u8fdb\u884c\u7ba1\u7406\uff0c\u5b83\u5305\u542b\u5730\u5740\u6620\u5c04\u548c span \u662f\u5426\u5305\u542b\u6307\u9488\u7b49\u4f4d\u56fe \u4e3a\u4e86\u66f4\u9ad8\u6548\u7684\u5206\u914d\u3001\u56de\u6536\u548c\u518d\u5229\u7528\u5185\u5b58","title":"Go \u8bed\u8a00\u5185\u5b58\u5206\u914d"},{"location":"1/3/3/#_5","text":"\u5f15\u7528\u8ba1\u6570\uff08Python\uff0cPHP\uff0cSwift\uff09 \u5bf9\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u7ef4\u62a4\u4e00\u4e2a\u5f15\u7528\u8ba1\u6570\uff0c\u5f53\u5f15\u7528\u8be5\u5bf9\u8c61\u7684\u5bf9\u8c61\u88ab\u9500\u6bc1\u7684\u65f6\u5019\uff0c\u5f15\u7528\u8ba1\u6570\u51cf 1\uff0c\u5f53\u5f15\u7528\u8ba1\u6570\u4e3a 0 \u7684\u65f6\u5019\uff0c\u56de\u6536\u8be5\u5bf9\u8c61 \u4f18\u70b9\uff1a\u5bf9\u8c61\u53ef\u4ee5\u5f88\u5feb\u7684\u88ab\u56de\u6536\uff0c\u4e0d\u4f1a\u51fa\u73b0\u5185\u5b58\u8017\u5c3d\u6216\u8fbe\u5230\u67d0\u4e2a\u9600\u503c\u65f6\u624d\u56de\u6536 \u7f3a\u70b9\uff1a\u4e0d\u80fd\u5f88\u597d\u7684\u5904\u7406\u5faa\u73af\u5f15\u7528\uff0c\u800c\u4e14\u5b9e\u65f6\u7ef4\u62a4\u5f15\u7528\u8ba1\u6570\uff0c\u6709\u4e5f\u4e00\u5b9a\u7684\u4ee3\u4ef7 \u6807\u8bb0-\u6e05\u9664\uff08Golang\uff09 \u4ece\u6839\u53d8\u91cf\u5f00\u59cb\u904d\u5386\u6240\u6709\u5f15\u7528\u7684\u5bf9\u8c61\uff0c\u5f15\u7528\u7684\u5bf9\u8c61\u6807\u8bb0\u4e3a\"\u88ab\u5f15\u7528\"\uff0c\u6ca1\u6709\u88ab\u6807\u8bb0\u7684\u8fdb\u884c\u56de\u6536 \u4f18\u70b9\uff1a\u89e3\u51b3\u5f15\u7528\u8ba1\u6570\u7684\u7f3a\u70b9 \u7f3a\u70b9\uff1a\u9700\u8981 STW\uff08stop the word\uff09\uff0c\u5373\u8981\u6682\u505c\u7a0b\u5e8f\u8fd0\u884c \u5206\u4ee3\u6536\u96c6\uff08Java\uff09 \u6309\u7167\u751f\u547d\u5468\u671f\u8fdb\u884c\u5212\u5206\u4e0d\u540c\u7684\u4ee3\u7a7a\u95f4\uff0c\u751f\u547d\u5468\u671f\u957f\u7684\u653e\u5165\u8001\u5e74\u4ee3\uff0c\u77ed\u7684\u653e\u5165\u65b0\u751f\u4ee3\uff0c\u65b0\u751f\u4ee3\u7684\u56de\u6536\u9891\u7387\u9ad8\u4e8e\u8001\u5e74\u4ee3\u7684\u9891\u7387","title":"\u5185\u5b58\u56de\u6536"},{"location":"1/3/3/#mspan","text":"allocBits \u8bb0\u5f55\u4e86\u6bcf\u5757\u5185\u5b58\u5206\u914d\u7684\u60c5\u51b5 gcmarkBits \u8bb0\u5f55\u4e86\u6bcf\u5757\u5185\u5b58\u7684\u5f15\u7528\u60c5\u51b5\uff0c\u6807\u8bb0\u9636\u6bb5\u5bf9\u6bcf\u5757\u5185\u5b58\u8fdb\u884c\u6807\u8bb0\uff0c\u6709\u5bf9\u8c61\u5f15\u7528\u7684\u5185\u5b58\u6807\u8bb0\u4e3a1\uff0c\u6ca1\u6709\u7684\u6807\u8bb0\u4e3a 0 \u8fd9\u4e24\u4e2a\u4f4d\u56fe\u7684\u6570\u636e\u7ed3\u6784\u662f\u5b8c\u5168\u4e00\u81f4\u7684\uff0c\u6807\u8bb0\u7ed3\u675f\u5219\u8fdb\u884c\u5185\u5b58\u56de\u6536\uff0c\u56de\u6536\u7684\u65f6\u5019\uff0c\u5c06 allocBits \u6307 \u5411 gcmarkBits\uff0c\u6807\u8bb0\u8fc7\u7684\u5219\u5b58\u5728\uff0c\u672a\u8fdb\u884c\u6807\u8bb0\u7684\u5219\u8fdb\u884c\u56de\u6536","title":"mspan"},{"location":"1/3/3/#gc","text":"Golang GC \u7684\u5927\u90e8\u5206\u5904\u7406\u662f\u548c\u7528\u6237\u4ee3\u7801\u5e76\u884c\u7684 Mark\uff1a Mark Prepare: \u521d\u59cb\u5316 GC \u4efb\u52a1\uff0c\u5305\u62ec\u5f00\u542f\u5199\u5c4f\u969c (write barrier) \u548c\u8f85\u52a9 GC(mutator assist)\uff0c\u7edf\u8ba1root\u5bf9\u8c61\u7684\u4efb\u52a1\u6570\u91cf\u7b49\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u9700\u8981STW GC Drains: \u626b\u63cf\u6240\u6709 root \u5bf9\u8c61\uff0c\u5305\u62ec\u5168\u5c40\u6307\u9488\u548c goroutine(G) \u6808\u4e0a\u7684\u6307\u9488\uff08\u626b\u63cf\u5bf9\u5e94 G \u6808\u65f6\u9700\u505c\u6b62\u8be5 G)\uff0c\u5c06\u5176\u52a0\u5165\u6807\u8bb0\u961f\u5217(\u7070\u8272\u961f\u5217)\uff0c\u5e76\u5faa\u73af\u5904\u7406\u7070\u8272\u961f\u5217\u7684\u5bf9\u8c61\uff0c\u76f4\u5230\u7070\u8272\u961f\u5217\u4e3a\u7a7a\u3002\u8be5\u8fc7\u7a0b\u540e\u53f0\u5e76\u884c\u6267\u884c Mark Termination\uff1a\u5b8c\u6210\u6807\u8bb0\u5de5\u4f5c\uff0c\u91cd\u65b0\u626b\u63cf(re-scan)\u5168\u5c40\u6307\u9488\u548c\u6808\u3002\u56e0\u4e3a Mark \u548c\u7528\u6237\u7a0b\u5e8f\u662f\u5e76\u884c\u7684\uff0c\u6240\u4ee5\u5728 Mark \u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u6709\u65b0\u7684\u5bf9\u8c61\u5206\u914d\u548c\u6307\u9488\u8d4b\u503c\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u901a\u8fc7\u5199\u5c4f\u969c\uff08write barrier\uff09\u8bb0\u5f55\u4e0b\u6765\uff0cre-scan \u518d\u68c0\u67e5\u4e00\u4e0b\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e5f\u662f\u4f1a STW \u7684 - Sweep\uff1a\u6309\u7167\u6807\u8bb0\u7ed3\u679c\u56de\u6536\u6240\u6709\u7684\u767d\u8272\u5bf9\u8c61\uff0c\u8be5\u8fc7\u7a0b\u540e\u53f0\u5e76\u884c\u6267\u884c Sweep Termination\uff1a\u5bf9\u672a\u6e05\u626b\u7684 span \u8fdb\u884c\u6e05\u626b, \u53ea\u6709\u4e0a\u4e00\u8f6e\u7684 GC \u7684\u6e05\u626b\u5de5\u4f5c\u5b8c\u6210\u624d\u53ef\u4ee5\u5f00\u59cb\u65b0\u4e00\u8f6e\u7684 GC","title":"GC \u5de5\u4f5c\u6d41\u7a0b"},{"location":"1/3/3/#_6","text":"GC \u5f00\u59cb\u65f6\uff0c\u8ba4\u4e3a\u6240\u6709 object \u90fd\u662f \u767d\u8272\uff0c\u5373\u5783\u573e \u4ece root \u533a\u5f00\u59cb\u904d\u5386\uff0c\u88ab\u89e6\u8fbe\u7684 object \u7f6e\u6210 \u7070\u8272 \u904d\u5386\u6240\u6709\u7070\u8272 object\uff0c\u5c06\u4ed6\u4eec\u5185\u90e8\u7684\u5f15\u7528\u53d8\u91cf\u7f6e\u6210 \u7070\u8272\uff0c\u81ea\u8eab\u7f6e\u6210 \u9ed1\u8272 \u5faa\u73af\u7b2c 3 \u6b65\uff0c\u76f4\u5230\u6ca1\u6709\u7070\u8272 object \u4e86\uff0c\u53ea\u5269\u4e0b\u4e86\u9ed1\u767d\u4e24\u79cd\uff0c\u767d\u8272\u7684\u90fd\u662f\u5783\u573e \u5bf9\u4e8e\u9ed1\u8272 object\uff0c\u5982\u679c\u5728\u6807\u8bb0\u671f\u95f4\u53d1\u751f\u4e86\u5199\u64cd\u4f5c\uff0c\u5199\u5c4f\u969c\u4f1a\u5728\u771f\u6b63\u8d4b\u503c\u524d\u5c06\u65b0\u5bf9\u8c61\u6807\u8bb0\u4e3a \u7070\u8272 \u6807\u8bb0\u8fc7\u7a0b\u4e2d\uff0cmallocgc \u65b0\u5206\u914d\u7684 object\uff0c\u4f1a\u5148\u88ab\u6807\u8bb0\u6210 \u9ed1\u8272 \u518d\u8fd4\u56de","title":"\u4e09\u8272\u6807\u8bb0"},{"location":"1/3/3/#_7","text":"\u5185\u5b58\u5206\u914d\u91cf\u8fbe\u5230\u9600\u503c\u89e6\u53d1 GC \u6bcf\u6b21\u5185\u5b58\u5206\u914d\u65f6\u90fd\u4f1a\u68c0\u67e5\u5f53\u524d\u5185\u5b58\u5206\u914d\u91cf\u662f\u5426\u5df2\u8fbe\u5230\u9600\u503c\uff0c\u5982\u679c\u8fbe\u5230\u9600\u503c\u5219\u7acb\u5373\u542f\u52a8 GC\u3002 \u9600\u503c = \u4e0a\u6b21 GC \u5185\u5b58\u5206\u914d\u91cf * \u5185\u5b58\u589e\u957f\u7387 \u5185\u5b58\u589e\u957f\u7387\u7531\u73af\u5883\u53d8\u91cf GOGC \u63a7\u5236\uff0c\u9ed8\u8ba4\u4e3a 100\uff0c\u5373\u6bcf\u5f53\u5185\u5b58\u6269\u5927\u4e00\u500d\u65f6\u542f\u52a8 GC\u3002 \u5b9a\u671f\u89e6\u53d1 GC \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6700\u957f 2 \u5206\u949f\u89e6\u53d1\u4e00\u6b21 GC\uff0c\u8fd9\u4e2a\u95f4\u9694\u5728 src/runtime/proc.go:forcegcperiod \u53d8\u91cf\u4e2d\u88ab\u58f0\u660e \u624b\u52a8\u89e6\u53d1 \u7a0b\u5e8f\u4ee3\u7801\u4e2d\u4e5f\u53ef\u4ee5\u4f7f\u7528 runtime.GC()\u6765\u624b\u52a8\u89e6\u53d1 GC\u3002\u8fd9\u4e3b\u8981\u7528\u4e8e GC \u6027\u80fd\u6d4b\u8bd5\u548c\u7edf\u8ba1\u3002","title":"\u5783\u573e\u56de\u6536\u89e6\u53d1\u673a\u5236"},{"location":"1/3/4/","text":"\u5305\u5f15\u7528\u4e0e\u4f9d\u8d56\u7ba1\u7406 Go \u8bed\u8a00\u4f9d\u8d56\u7ba1\u7406\u7684\u6f14\u8fdb \u56de\u987e GOPATH \u901a\u8fc7\u73af\u5883\u53d8\u91cf\u8bbe\u7f6e\u7cfb\u7edf\u7ea7\u7684 Go \u8bed\u8a00\u7c7b\u5e93\u76ee\u5f55 GOPATH \u7684\u95ee\u9898\uff1f \u4e0d\u540c\u9879\u76ee\u53ef\u80fd\u4f9d\u8d56\u4e0d\u540c\u7248\u672c \u4ee3\u7801\u88ab clone \u4ee5\u540e\u9700\u8981\u8bbe\u7f6e GOPATH \u624d\u80fd\u7f16\u8bd1 vendor \u81ea 1.6 \u7248\u672c\uff0c\u652f\u6301 vendor \u76ee\u5f55\uff0c\u5728\u6bcf\u4e2a Go \u8bed\u8a00\u9879\u76ee\u4e2d\uff0c\u521b\u5efa\u4e00\u4e2a\u540d\u53eb vendor \u7684\u76ee\u5f55\uff0c\u5e76\u5c06\u4f9d\u8d56\u62f7\u8d1d\u81f3\u8be5\u76ee\u5f55\u3002 Go \u8bed\u8a00\u9879\u76ee\u4f1a\u81ea\u52a8\u5c06 vendor \u76ee\u5f55\u4f5c\u4e3a\u81ea\u8eab\u7684\u9879\u76ee\u4f9d\u8d56\u8def\u5f84 \u597d\u5904\uff1f \u6bcf\u4e2a\u9879\u76ee\u7684 vendor\u76ee\u5f55\u662f\u72ec\u7acb\u7684\uff0c\u53ef\u4ee5\u7075\u6d3b\u7684\u9009\u62e9\u7248\u672c Vendor \u76ee\u5f55\u4e0e\u6e90\u4ee3\u7801\u4e00\u8d77 check in \u5230 github\uff0c\u5176\u4ed6\u4eba checkout \u4ee5\u540e\u53ef\u76f4\u63a5\u7f16\u8bd1 \u65e0\u9700\u5728\u7f16\u8bd1\u671f\u95f4\u4e0b\u8f7d\u4f9d\u8d56\u5305\uff0c\u6240\u6709\u4f9d\u8d56\u90fd\u5df2\u7ecf\u4e0e\u6e90\u4ee3\u7801\u4fdd\u5b58\u5728\u4e00\u8d77 vendor\u7ba1\u7406\u5de5\u5177 \u901a\u8fc7\u58f0\u660e\u5f0f\u914d\u7f6e\uff0c\u5b9e\u73b0 vendor \u7ba1\u7406\u7684\u81ea\u52a8\u5316 \u5728\u65e9\u671f\uff0cGo \u8bed\u8a00\u65e0\u81ea\u5e26\u4f9d\u8d56\u7ba1\u7406\u5de5\u5177\uff0c\u793e\u533a\u65b9\u6848\u9c7c\u9f99\u6df7\u6742\u6bd4\u8f83\u51fa\u540d\u7684\u5305\u62ec Godeps, Glide Go \u8bed\u8a00\u968f\u540e\u53d1\u5e03\u4e86\u81ea\u5e26\u7684\u4f9d\u8d56\u7ba1\u7406\u5de5\u5177 Gopkg \u5f88\u5feb\u7528\u65b0\u7684\u5de5\u5177 gomod \u66ff\u6362\u6389\u4e86 gopkg \u5207\u6362 mod \u5f00\u542f\u6a21\u5f0f\uff1aexport GO111MODULE=on/off/auto Go mod \u76f8\u6bd4\u4e4b\u524d\u7684\u5de5\u5177\u66f4\u7075\u6d3b\u6613\u7528\uff0c\u4ee5\u57fa\u672c\u7edf\u4e00\u4e86 Go \u8bed\u8a00\u4f9d\u8d56\u7ba1\u7406 \u601d\u8003\uff1a\u7528\u4f9d\u8d56\u7ba1\u7406\u5de5\u5177\u7684\u76ee\u7684\uff1f \u7248\u672c\u7ba1\u7406 \u9632\u7be1\u6539 Go mod \u4f7f\u7528 \u521b\u5efa\u9879\u76ee \u521d\u59cb\u5316 Go \u6a21\u5757 go mod init \u4e0b\u8f7d\u4f9d\u8d56\u5305 go mod download\uff08\u4e0b\u8f7d\u7684\u4f9d\u8d56\u5305\u5728$GOPATH/pkg\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e GOPATH\uff0c\u5219\u4e0b\u8f7d\u5728\u9879\u76ee\u6839\u76ee\u5f55/pkg\uff09 \u5728\u6e90\u4ee3\u7801\u4e2d\u4f7f\u7528\u67d0\u4e2a\u4f9d\u8d56\u5305\uff0c\u5982 github.com/emicklei/go-restful \u6dfb\u52a0\u7f3a\u5c11\u7684\u4f9d\u8d56\u5e76\u4e3a\u4f9d\u8d56\u5305\u7626\u8eab go mod tidy \u628a Go \u4f9d\u8d56\u6a21\u5757\u6dfb\u52a0\u5230 vendor \u76ee\u5f55 go mod vendor \u914d\u7f6e\u7ec6\u8282\u4f1a\u88ab\u4fdd\u5b58\u5728\u9879\u76ee\u6839\u76ee\u5f55\u7684 go.mod \u4e2d\uff0c\u53ef\u5728 require \u6216\u8005 replacement \u4e2d\u6307\u5b9a\u7248\u672c go.mod sample module k8s.io/apiserver go 1.13 require ( github.com/evanphx/json-patch v4.9.0+incompatible github.com/go-openapi/jsonreference v0.19.3 // indirect github.com/go-openapi/spec v0.19.3 github.com/gogo/protobuf v1.3.2 golang.org/x/crypto master github.com/google/gofuzz v1.1.0 k8s.io/apimachinery v0.0.0-20210518100737-44f1264f7b6b ) replace ( golang.org/x/crypto => golang.org/x/crypto v0.0.0-20200220183623-bac4c82f6975 golang.org/x/image => github.com/golang/image k8s.io/api => k8s.io/api v0.0.0-20210518101910-53468e23a787 k8s.io/apimachinery => k8s.io/apimachinery v0.0.0-20210518100737-44f1264f7b6b k8s.io/client-go => k8s.io/client-go v0.0.0-20210518104342-fa3acefe68f3 k8s.io/component-base => k8s.io/component-base v0.0.0-20210518111421-67c12a31a26a ) GOPROXY \u548c GOPRIVATE GOPROXY \u4e3a\u62c9\u53d6 Go \u4f9d\u8d56\u8bbe\u7f6e\u4ee3\u7406 export GOPROXY=https://goproxy.cn \u5728\u8bbe\u7f6e GOPROXY \u4ee5\u540e\uff0c\u9ed8\u8ba4\u6240\u6709\u4f9d\u8d56\u62c9\u53d6\u90fd\u9700\u8981\u7ecf\u8fc7 proxy \u8fde\u63a5 git repo\uff0c\u62c9\u53d6\u4ee3\u7801\uff0c\u5e76\u505a checksum \u6821\u9a8c \u67d0\u4e9b\u79c1\u6709\u4ee3\u7801\u4ed3\u5e93\u662f goproxy.cn \u65e0\u6cd5\u8fde\u63a5\u7684\uff0c\u56e0\u6b64\u9700\u8981\u8bbe\u7f6e GOPRIVATE \u6765\u58f0\u660e\u79c1\u6709\u4ee3\u7801\u4ed3\u5e93 GOPRIVATE=*.corp.example.com GOPROXY=proxy.example.com GONOPROXY=myrepo.corp.example.com","title":"\u5305\u5f15\u7528\u4e0e\u4f9d\u8d56\u7ba1\u7406"},{"location":"1/3/4/#_1","text":"","title":"\u5305\u5f15\u7528\u4e0e\u4f9d\u8d56\u7ba1\u7406"},{"location":"1/3/4/#go","text":"\u56de\u987e GOPATH \u901a\u8fc7\u73af\u5883\u53d8\u91cf\u8bbe\u7f6e\u7cfb\u7edf\u7ea7\u7684 Go \u8bed\u8a00\u7c7b\u5e93\u76ee\u5f55 GOPATH \u7684\u95ee\u9898\uff1f \u4e0d\u540c\u9879\u76ee\u53ef\u80fd\u4f9d\u8d56\u4e0d\u540c\u7248\u672c \u4ee3\u7801\u88ab clone \u4ee5\u540e\u9700\u8981\u8bbe\u7f6e GOPATH \u624d\u80fd\u7f16\u8bd1 vendor \u81ea 1.6 \u7248\u672c\uff0c\u652f\u6301 vendor \u76ee\u5f55\uff0c\u5728\u6bcf\u4e2a Go \u8bed\u8a00\u9879\u76ee\u4e2d\uff0c\u521b\u5efa\u4e00\u4e2a\u540d\u53eb vendor \u7684\u76ee\u5f55\uff0c\u5e76\u5c06\u4f9d\u8d56\u62f7\u8d1d\u81f3\u8be5\u76ee\u5f55\u3002 Go \u8bed\u8a00\u9879\u76ee\u4f1a\u81ea\u52a8\u5c06 vendor \u76ee\u5f55\u4f5c\u4e3a\u81ea\u8eab\u7684\u9879\u76ee\u4f9d\u8d56\u8def\u5f84 \u597d\u5904\uff1f \u6bcf\u4e2a\u9879\u76ee\u7684 vendor\u76ee\u5f55\u662f\u72ec\u7acb\u7684\uff0c\u53ef\u4ee5\u7075\u6d3b\u7684\u9009\u62e9\u7248\u672c Vendor \u76ee\u5f55\u4e0e\u6e90\u4ee3\u7801\u4e00\u8d77 check in \u5230 github\uff0c\u5176\u4ed6\u4eba checkout \u4ee5\u540e\u53ef\u76f4\u63a5\u7f16\u8bd1 \u65e0\u9700\u5728\u7f16\u8bd1\u671f\u95f4\u4e0b\u8f7d\u4f9d\u8d56\u5305\uff0c\u6240\u6709\u4f9d\u8d56\u90fd\u5df2\u7ecf\u4e0e\u6e90\u4ee3\u7801\u4fdd\u5b58\u5728\u4e00\u8d77","title":"Go \u8bed\u8a00\u4f9d\u8d56\u7ba1\u7406\u7684\u6f14\u8fdb"},{"location":"1/3/4/#vendor","text":"\u901a\u8fc7\u58f0\u660e\u5f0f\u914d\u7f6e\uff0c\u5b9e\u73b0 vendor \u7ba1\u7406\u7684\u81ea\u52a8\u5316 \u5728\u65e9\u671f\uff0cGo \u8bed\u8a00\u65e0\u81ea\u5e26\u4f9d\u8d56\u7ba1\u7406\u5de5\u5177\uff0c\u793e\u533a\u65b9\u6848\u9c7c\u9f99\u6df7\u6742\u6bd4\u8f83\u51fa\u540d\u7684\u5305\u62ec Godeps, Glide Go \u8bed\u8a00\u968f\u540e\u53d1\u5e03\u4e86\u81ea\u5e26\u7684\u4f9d\u8d56\u7ba1\u7406\u5de5\u5177 Gopkg \u5f88\u5feb\u7528\u65b0\u7684\u5de5\u5177 gomod \u66ff\u6362\u6389\u4e86 gopkg \u5207\u6362 mod \u5f00\u542f\u6a21\u5f0f\uff1aexport GO111MODULE=on/off/auto Go mod \u76f8\u6bd4\u4e4b\u524d\u7684\u5de5\u5177\u66f4\u7075\u6d3b\u6613\u7528\uff0c\u4ee5\u57fa\u672c\u7edf\u4e00\u4e86 Go \u8bed\u8a00\u4f9d\u8d56\u7ba1\u7406 \u601d\u8003\uff1a\u7528\u4f9d\u8d56\u7ba1\u7406\u5de5\u5177\u7684\u76ee\u7684\uff1f \u7248\u672c\u7ba1\u7406 \u9632\u7be1\u6539","title":"vendor\u7ba1\u7406\u5de5\u5177"},{"location":"1/3/4/#go-mod","text":"\u521b\u5efa\u9879\u76ee \u521d\u59cb\u5316 Go \u6a21\u5757 go mod init \u4e0b\u8f7d\u4f9d\u8d56\u5305 go mod download\uff08\u4e0b\u8f7d\u7684\u4f9d\u8d56\u5305\u5728$GOPATH/pkg\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e GOPATH\uff0c\u5219\u4e0b\u8f7d\u5728\u9879\u76ee\u6839\u76ee\u5f55/pkg\uff09 \u5728\u6e90\u4ee3\u7801\u4e2d\u4f7f\u7528\u67d0\u4e2a\u4f9d\u8d56\u5305\uff0c\u5982 github.com/emicklei/go-restful \u6dfb\u52a0\u7f3a\u5c11\u7684\u4f9d\u8d56\u5e76\u4e3a\u4f9d\u8d56\u5305\u7626\u8eab go mod tidy \u628a Go \u4f9d\u8d56\u6a21\u5757\u6dfb\u52a0\u5230 vendor \u76ee\u5f55 go mod vendor \u914d\u7f6e\u7ec6\u8282\u4f1a\u88ab\u4fdd\u5b58\u5728\u9879\u76ee\u6839\u76ee\u5f55\u7684 go.mod \u4e2d\uff0c\u53ef\u5728 require \u6216\u8005 replacement \u4e2d\u6307\u5b9a\u7248\u672c","title":"Go mod \u4f7f\u7528"},{"location":"1/3/4/#gomod-sample","text":"module k8s.io/apiserver go 1.13 require ( github.com/evanphx/json-patch v4.9.0+incompatible github.com/go-openapi/jsonreference v0.19.3 // indirect github.com/go-openapi/spec v0.19.3 github.com/gogo/protobuf v1.3.2 golang.org/x/crypto master github.com/google/gofuzz v1.1.0 k8s.io/apimachinery v0.0.0-20210518100737-44f1264f7b6b ) replace ( golang.org/x/crypto => golang.org/x/crypto v0.0.0-20200220183623-bac4c82f6975 golang.org/x/image => github.com/golang/image k8s.io/api => k8s.io/api v0.0.0-20210518101910-53468e23a787 k8s.io/apimachinery => k8s.io/apimachinery v0.0.0-20210518100737-44f1264f7b6b k8s.io/client-go => k8s.io/client-go v0.0.0-20210518104342-fa3acefe68f3 k8s.io/component-base => k8s.io/component-base v0.0.0-20210518111421-67c12a31a26a )","title":"go.mod sample"},{"location":"1/3/4/#goproxy-goprivate","text":"GOPROXY \u4e3a\u62c9\u53d6 Go \u4f9d\u8d56\u8bbe\u7f6e\u4ee3\u7406 export GOPROXY=https://goproxy.cn \u5728\u8bbe\u7f6e GOPROXY \u4ee5\u540e\uff0c\u9ed8\u8ba4\u6240\u6709\u4f9d\u8d56\u62c9\u53d6\u90fd\u9700\u8981\u7ecf\u8fc7 proxy \u8fde\u63a5 git repo\uff0c\u62c9\u53d6\u4ee3\u7801\uff0c\u5e76\u505a checksum \u6821\u9a8c \u67d0\u4e9b\u79c1\u6709\u4ee3\u7801\u4ed3\u5e93\u662f goproxy.cn \u65e0\u6cd5\u8fde\u63a5\u7684\uff0c\u56e0\u6b64\u9700\u8981\u8bbe\u7f6e GOPRIVATE \u6765\u58f0\u660e\u79c1\u6709\u4ee3\u7801\u4ed3\u5e93 GOPRIVATE=*.corp.example.com GOPROXY=proxy.example.com GONOPROXY=myrepo.corp.example.com","title":"GOPROXY \u548c GOPRIVATE"},{"location":"1/3/5/","text":"Makefile Go \u8bed\u8a00\u9879\u76ee\u591a\u91c7\u7528 Makefile \u7ec4\u7ec7\u9879\u76ee\u7f16\u8bd1 root: export ROOT=github.com/cncamp/golang; .PHONY: root release: echo \"building httpserver binary\" mkdir -p bin/amd64 CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o bin/amd64 . .PHONY: release","title":"Makefile"},{"location":"1/3/5/#makefile","text":"","title":"Makefile"},{"location":"1/3/5/#go-makefile","text":"root: export ROOT=github.com/cncamp/golang; .PHONY: root release: echo \"building httpserver binary\" mkdir -p bin/amd64 CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o bin/amd64 . .PHONY: release","title":"Go \u8bed\u8a00\u9879\u76ee\u591a\u91c7\u7528 Makefile \u7ec4\u7ec7\u9879\u76ee\u7f16\u8bd1"},{"location":"1/3/6/","text":"\u52a8\u624b\u7f16\u5199\u4e00\u4e2a HTTP Server \u7406\u89e3\u7f51\u7edc\u534f\u8bae\u5c42 \u7406\u89e3 Socket socket \u88ab\u7ffb\u8bd1\u4e3a\u201c\u5957\u63a5\u5b57\u201d\uff0c\u5b83\u662f\u8ba1\u7b97\u673a\u4e4b\u95f4\u8fdb\u884c\u901a\u4fe1\u7684\u4e00\u79cd\u7ea6\u5b9a\u6216\u4e00\u79cd\u65b9\u5f0f Linux \u4e2d\u7684\u4e00\u5207\u90fd\u662f\u6587\u4ef6 \u4e3a\u4e86\u8868\u793a\u548c\u533a\u5206\u5df2\u7ecf\u6253\u5f00\u7684\u6587\u4ef6\uff0cUNIX/Linux \u4f1a\u7ed9\u6bcf\u4e2a\u6587\u4ef6\u5206\u914d\u4e00\u4e2a ID\uff0c\u8fd9\u4e2a ID \u5c31\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u88ab\u79f0\u4e3a\u6587\u4ef6\u63cf\u8ff0\u7b26 \u7f51\u7edc\u8fde\u63a5\u4e5f\u662f\u4e00\u4e2a\u6587\u4ef6\uff0c\u5b83\u4e5f\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26 \u670d\u52a1\u5668\u7aef\u5148\u521d\u59cb\u5316 Socket\uff0c\u7136\u540e\u4e0e\u7aef\u53e3\u7ed1\u5b9a\uff08bind\uff09\uff0c\u5bf9\u7aef\u53e3\u8fdb\u884c\u76d1\u542c\uff08listen\uff09\uff0c\u8c03\u7528accept \u963b\u585e\uff0c\u7b49\u5f85\u5ba2\u6237\u7aef\u8fde\u63a5 \u5728\u8fd9\u65f6\u5982\u679c\u6709\u4e2a\u5ba2\u6237\u7aef\u521d\u59cb\u5316\u4e00\u4e2a Socket\uff0c\u7136\u540e\u8fde\u63a5\u670d\u52a1\u5668\uff08connect\uff09\uff0c\u5982\u679c\u8fde\u63a5\u6210\u529f\uff0c\u8fd9\u65f6\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u5668\u7aef\u7684\u8fde\u63a5\u5c31\u5efa\u7acb\u4e86 \u670d\u52a1\u7aef\u7684 Accept \u63a5\u6536\u5230\u8bf7\u6c42\u4ee5\u540e\uff0c\u4f1a\u751f\u6210\u8fde\u63a5 FD\uff0c\u501f\u52a9\u8fd9\u4e2a FD \u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u666e\u901a\u7684\u6587\u4ef6\u64cd\u4f5c\u51fd\u6570\u6765\u4f20\u8f93\u6570\u636e\u4e86\uff0c\u4f8b\u5982\uff1a \u7528 read() \u8bfb\u53d6\u4ece\u8fdc\u7a0b\u8ba1\u7b97\u673a\u4f20\u6765\u7684\u6570\u636e \u7528 write() \u5411\u8fdc\u7a0b\u8ba1\u7b97\u673a\u5199\u5165\u6570\u636e \u7406\u89e3 net.http \u5305 \u6ce8\u518c handle \u5904\u7406\u51fd\u6570 http.HandleFunc(\"/healthz\", healthz) //Use the default DefaultServeMux. ListenAndService err := http.ListenAndServe(\":80\", nil) if err != nil { log.Fatal(err) } \u5b9a\u4e49 handle \u5904\u7406\u51fd\u6570 func healthz(w http.ResponseWriter, r *http.Request) { io.WriteString(w, \"ok\") } \u963b\u585e IO \u6a21\u578b \u975e\u963b\u585e IO \u6a21\u578b IO \u591a\u8def\u590d\u7528 \u5f02\u6b65 IO Linux epoll Go \u8bed\u8a00\u9ad8\u6027\u80fd httpserver \u7684\u5b9e\u73b0\u7ec6\u8282 Go \u8bed\u8a00\u5c06\u534f\u7a0b\u4e0e fd \u8d44\u6e90\u7ed1\u5b9a \u4e00\u4e2a socket fd \u4e0e\u4e00\u4e2a\u534f\u7a0b\u7ed1\u5b9a \u5f53 socket fd \u672a\u5c31\u7eea\u65f6\uff0c\u5c06\u5bf9\u5e94\u534f\u7a0b\u8bbe\u7f6e\u4e3a Gwaiting \u72b6\u6001\uff0c\u5c06 CPU \u65f6\u95f4\u7247\u8ba9\u7ed9\u5176\u4ed6\u534f\u7a0b Go \u8bed\u8a00 runtime \u8c03\u5ea6\u5668\u8fdb\u884c\u8c03\u5ea6\u5524\u9192\u534f\u7a0b\u65f6\uff0c\u68c0\u67e5 fd \u662f\u5426\u5c31\u7eea\uff0c\u5982\u679c\u5c31\u7eea\u5219\u5c06\u534f\u7a0b\u7f6e\u4e3aGrunnable \u5e76\u52a0\u5165\u6267\u884c\u961f\u5217 \u534f\u7a0b\u88ab\u8c03\u5ea6\u540e\u5904\u7406 fd \u6570\u636e \u4ee3\u7801\u5b9e\u73b0\u7ec6\u8282 \u4ee3\u7801\u5b9e\u73b0\u7ec6\u8282","title":"\u52a8\u624b\u7f16\u5199\u4e00\u4e2a HTTP Server"},{"location":"1/3/6/#http-server","text":"","title":"\u52a8\u624b\u7f16\u5199\u4e00\u4e2a HTTP Server"},{"location":"1/3/6/#_1","text":"","title":"\u7406\u89e3\u7f51\u7edc\u534f\u8bae\u5c42"},{"location":"1/3/6/#socket","text":"socket \u88ab\u7ffb\u8bd1\u4e3a\u201c\u5957\u63a5\u5b57\u201d\uff0c\u5b83\u662f\u8ba1\u7b97\u673a\u4e4b\u95f4\u8fdb\u884c\u901a\u4fe1\u7684\u4e00\u79cd\u7ea6\u5b9a\u6216\u4e00\u79cd\u65b9\u5f0f Linux \u4e2d\u7684\u4e00\u5207\u90fd\u662f\u6587\u4ef6 \u4e3a\u4e86\u8868\u793a\u548c\u533a\u5206\u5df2\u7ecf\u6253\u5f00\u7684\u6587\u4ef6\uff0cUNIX/Linux \u4f1a\u7ed9\u6bcf\u4e2a\u6587\u4ef6\u5206\u914d\u4e00\u4e2a ID\uff0c\u8fd9\u4e2a ID \u5c31\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u88ab\u79f0\u4e3a\u6587\u4ef6\u63cf\u8ff0\u7b26 \u7f51\u7edc\u8fde\u63a5\u4e5f\u662f\u4e00\u4e2a\u6587\u4ef6\uff0c\u5b83\u4e5f\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26 \u670d\u52a1\u5668\u7aef\u5148\u521d\u59cb\u5316 Socket\uff0c\u7136\u540e\u4e0e\u7aef\u53e3\u7ed1\u5b9a\uff08bind\uff09\uff0c\u5bf9\u7aef\u53e3\u8fdb\u884c\u76d1\u542c\uff08listen\uff09\uff0c\u8c03\u7528accept \u963b\u585e\uff0c\u7b49\u5f85\u5ba2\u6237\u7aef\u8fde\u63a5 \u5728\u8fd9\u65f6\u5982\u679c\u6709\u4e2a\u5ba2\u6237\u7aef\u521d\u59cb\u5316\u4e00\u4e2a Socket\uff0c\u7136\u540e\u8fde\u63a5\u670d\u52a1\u5668\uff08connect\uff09\uff0c\u5982\u679c\u8fde\u63a5\u6210\u529f\uff0c\u8fd9\u65f6\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u5668\u7aef\u7684\u8fde\u63a5\u5c31\u5efa\u7acb\u4e86 \u670d\u52a1\u7aef\u7684 Accept \u63a5\u6536\u5230\u8bf7\u6c42\u4ee5\u540e\uff0c\u4f1a\u751f\u6210\u8fde\u63a5 FD\uff0c\u501f\u52a9\u8fd9\u4e2a FD \u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u666e\u901a\u7684\u6587\u4ef6\u64cd\u4f5c\u51fd\u6570\u6765\u4f20\u8f93\u6570\u636e\u4e86\uff0c\u4f8b\u5982\uff1a \u7528 read() \u8bfb\u53d6\u4ece\u8fdc\u7a0b\u8ba1\u7b97\u673a\u4f20\u6765\u7684\u6570\u636e \u7528 write() \u5411\u8fdc\u7a0b\u8ba1\u7b97\u673a\u5199\u5165\u6570\u636e","title":"\u7406\u89e3 Socket"},{"location":"1/3/6/#nethttp","text":"\u6ce8\u518c handle \u5904\u7406\u51fd\u6570 http.HandleFunc(\"/healthz\", healthz) //Use the default DefaultServeMux. ListenAndService err := http.ListenAndServe(\":80\", nil) if err != nil { log.Fatal(err) } \u5b9a\u4e49 handle \u5904\u7406\u51fd\u6570 func healthz(w http.ResponseWriter, r *http.Request) { io.WriteString(w, \"ok\") }","title":"\u7406\u89e3 net.http \u5305"},{"location":"1/3/6/#io","text":"","title":"\u963b\u585e IO \u6a21\u578b"},{"location":"1/3/6/#io_1","text":"","title":"\u975e\u963b\u585e IO \u6a21\u578b"},{"location":"1/3/6/#io_2","text":"","title":"IO \u591a\u8def\u590d\u7528"},{"location":"1/3/6/#io_3","text":"","title":"\u5f02\u6b65 IO"},{"location":"1/3/6/#linux-epoll","text":"","title":"Linux epoll"},{"location":"1/3/6/#go-httpserver","text":"Go \u8bed\u8a00\u5c06\u534f\u7a0b\u4e0e fd \u8d44\u6e90\u7ed1\u5b9a \u4e00\u4e2a socket fd \u4e0e\u4e00\u4e2a\u534f\u7a0b\u7ed1\u5b9a \u5f53 socket fd \u672a\u5c31\u7eea\u65f6\uff0c\u5c06\u5bf9\u5e94\u534f\u7a0b\u8bbe\u7f6e\u4e3a Gwaiting \u72b6\u6001\uff0c\u5c06 CPU \u65f6\u95f4\u7247\u8ba9\u7ed9\u5176\u4ed6\u534f\u7a0b Go \u8bed\u8a00 runtime \u8c03\u5ea6\u5668\u8fdb\u884c\u8c03\u5ea6\u5524\u9192\u534f\u7a0b\u65f6\uff0c\u68c0\u67e5 fd \u662f\u5426\u5c31\u7eea\uff0c\u5982\u679c\u5c31\u7eea\u5219\u5c06\u534f\u7a0b\u7f6e\u4e3aGrunnable \u5e76\u52a0\u5165\u6267\u884c\u961f\u5217 \u534f\u7a0b\u88ab\u8c03\u5ea6\u540e\u5904\u7406 fd \u6570\u636e","title":"Go \u8bed\u8a00\u9ad8\u6027\u80fd httpserver \u7684\u5b9e\u73b0\u7ec6\u8282"},{"location":"1/3/6/#_2","text":"\u4ee3\u7801\u5b9e\u73b0\u7ec6\u8282","title":"\u4ee3\u7801\u5b9e\u73b0\u7ec6\u8282"},{"location":"1/3/7/","text":"\u8c03\u8bd5 debug gdb: Gccgo \u539f\u751f\u652f\u6301 gdb\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528 gdb \u8c03\u8bd5 Go \u8bed\u8a00\u4ee3\u7801\uff0c\u4f46 dlv \u5bf9 Go \u8bed\u8a00 debug \u7684\u652f\u6301\u6bd4 gdb \u66f4\u597d Gdb \u5bf9 Go \u8bed\u8a00\u7684\u6808\u7ba1\u7406\uff0c\u591a\u7ebf\u7a0b\u652f\u6301\u7b49\u65b9\u9762\u505a\u7684\u4e0d\u591f\u597d\uff0c\u8c03\u8bd5\u4ee3\u7801\u65f6\u53ef\u80fd\u6709\u9519\u4e71\u73b0\u8c61 dlv\uff1a Go \u8bed\u8a00\u7684\u4e13\u6709 debugger dlv \u7684\u914d\u7f6e \u914d\u7f6e \u5728 vscode \u4e2d\u914d\u7f6e dlb \u83dc\u5355\uff1aView -> Command Palette \u9009\u62e9 Go : Install/Update Tools\uff0c\u9009\u62e9\u5b89\u88c5 \u5b89\u88c5\u5b8c\u540e\uff0c\u4ece\u6539\u5165\u53e3\u5217\u8868\u4e2d\u53ef\u4ee5\u770b\u5230 dlv \u548c dlv-dap \u5df2\u7ecf\u5b89\u88c5\u597d Debug \u65b9\u6cd5 \u5728\u4ee3\u7801\u4e2d\u8bbe\u7f6e\u65ad\u70b9 \u83dc\u5355\u4e2d\u9009\u62e9 Run -> Start Debugging \u5373\u53ef\u8fdb\u5165\u8c03\u8bd5 \u66f4\u591a debug \u65b9\u6cd5 \u6dfb\u52a0\u65e5\u5fd7 \u5728\u5173\u952e\u4ee3\u7801\u5206\u652f\u4e2d\u52a0\u5165\u65e5\u5fd7 \u57fa\u4e8efmt\u5305\u5c06\u65e5\u5fd7\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa stdout fmt.Println() fmt \u65e0\u65e5\u5fd7\u91cd\u5b9a\u5411\uff0c\u65e0\u65e5\u5fd7\u5206\u7ea7 \u5373\u4e0e\u65e5\u5fd7\u6846\u67b6\u5c06\u65e5\u5fd7\u8f93\u51fa\u5230\u5bf9\u5e94\u7684 appender \u6bd4\u5982\u53ef\u5229\u7528 glog \u8fdb\u884c\u65e5\u5fd7\u8f93\u51fa \u53ef\u914d\u7f6e appender\uff0c\u5c06\u6807\u51c6\u8f93\u51fa\u8f6c\u81f3\u6587\u4ef6 \u652f\u6301\u591a\u7ea7\u65e5\u5fd7\u8f93\u51fa\uff0c\u53ef\u4fee\u6539\u914d\u7f6e\u8c03\u6574\u65e5\u5fd7\u7b49\u7ea7 \u81ea\u5e26\u65f6\u95f4\u6233\u548c\u4ee3\u7801\u884c\uff0c\u65b9\u4fbf\u8c03\u8bd5 Glog \u4f7f\u7528\u65b9\u6cd5\u793a\u4f8b import ( \"flag\" \"github.com/golang/glog\" ) func main() { flag.Set(\"v\", \"4\") glog.V(2).Info(\"Starting http server...\") mux := http.NewServeMux() mux.HandleFunc(\"/\", rootHandler) err := http.ListenAndServe(\":80\", mux) if err != nil { log.Fatal(err) } } \u6027\u80fd\u5206\u6790\uff08Performance Profiling\uff09 code CPU Profiling: \u5728\u4ee3\u7801\u4e2d\u6dfb\u52a0 CPUProfile \u4ee3\u7801\uff0cruntime/pprof \u5305\u63d0\u4f9b\u652f\u6301 var cpuprofile = flag.String(\"cpuprofile\", \"\", \"write cpu profile to file\") func main() { flag.Parse() if *cpuprofile != \"\" { f, err := os.Create(*cpuprofile) if err != nil { log.Fatal(err) } pprof.StartCPUProfile(f) defer pprof.StopCPUProfile() } } \u5206\u6790 CPU \u74f6\u9888 \u8fd0\u884c cpuprofilie \u4ee3\u7801\u540e\uff0c\u4f1a\u5728 /tmp/cpuprofile \u4e2d\u8bb0\u5f55 cpu \u4f7f\u7528\u65f6\u95f4 \u8fd0\u884c go tool pprof /tmp/cpuprofile \u8fdb\u5165\u5206\u6790\u6a21\u5f0f \u8fd0\u884c top10 \u67e5\u770b top 10\u7ebf\u7a0b\uff0c\u663e\u793a 30ms \u82b1\u8d39\u5728 main.main Showing nodes accounting for 30ms, 100% of 30ms total flat flat% sum% cum cum% 30ms 100% 100% 30ms 100% main.main 0 0% 100% 30ms 100% runtime.main (pprof) list main.main \u663e\u793a 30 \u6beb\u79d2\u90fd\u82b1\u8d39\u5728\u5faa\u73af\u4e0a Total: 30ms 30ms 30ms (flat, cum) 100% of Total 20ms 20ms 21: for i := 0; i < 100000000; i++ { 10ms 10ms 22: result += I \u53ef\u6267\u884c web \u547d\u4ee4\u751f\u6210 svg \u6587\u4ef6\uff0c\u5728\u901a\u8fc7\u6d4f\u89c8\u5668\u6253\u5f00 svg \u6587\u4ef6\u67e5\u770b\u56fe\u5f62\u5316\u5206\u6790\u7ed3\u679c \u5176\u4ed6\u53ef\u7528 profiling \u5de5\u5177\u5206\u6790\u7684\u95ee\u9898 CPU profile \u7a0b\u5e8f\u7684 CPU \u4f7f\u7528\u60c5\u51b5\uff0c\u6bcf 100 \u6beb\u79d2\u91c7\u96c6\u4e00\u6b21 CPU \u4f7f\u7528\u60c5\u51b5 Memory Profile \u7a0b\u5e8f\u7684\u5185\u5b58\u4f7f\u7528\u60c5\u51b5 Block Profiling \u975e\u8fd0\u884c\u6001\u7684 goroutine \u7ec6\u8282\uff0c\u5206\u6790\u548c\u67e5\u627e\u6b7b\u9501 Goroutine Profiling \u6240\u6709 goroutines \u7684\u7ec6\u8282\u72b6\u6001\uff0c\u6709\u54ea\u4e9b goroutine\uff0c\u5b83\u4eec\u7684\u8c03\u7528\u5173\u7cfb\u662f\u600e\u6837\u7684 \u9488\u5bf9 http \u670d\u52a1\u7684 pprof net/http/pprof \u5305\u63d0\u4f9b\u652f\u6301 \u5982\u679c\u91c7\u7528\u9ed8\u8ba4 mux handle\uff0c\u5219\u53ea\u9700 import _ \"net/http/pprof\" \u5982\u679c\u91c7\u7528\u81ea\u5b9a\u4e49 mux handle\uff0c\u5219\u9700\u8981\u6ce8\u518c pprof handler import ( \"net/http/pprof\" ) func startHTTP(addr string, s *tnetd.Server) { mux := http.NewServeMux() mux.HandleFunc(\"/debug/pprof/\", pprof.Index) mux.HandleFunc(\"/debug/pprof/profile\", pprof.Profile) mux.HandleFunc(\"/debug/pprof/symbol\", pprof.Symbol) mux.HandleFunc(\"/debug/pprof/trace\", pprof.Trace) server := &http.Server{ Addr: addr, Handler: mux, } server.ListenAndServe() } \u5206\u6790 go profiling \u7ed3\u679c \u5728\u8fd0\u884c\u4e86\u5f00\u542f pprof \u7684\u670d\u52a1\u5668\u4ee5\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee\u5bf9\u5e94\u7684 URL \u83b7\u5f97 profile \u7ed3\u679c allocs: A sampling of all past memory allocations block: Stack traces that led to blocking on synchronization primitives cmdline: The command line invocation of the current program goroutine: Stack traces of all current goroutines heap: A sampling of memory allocations of live objects. You can specify the gc GET parameter to run GC before taking the heap sample. mutex: Stack traces of holders of contended mutexes profile: CPU profile. You can specify the duration in the seconds GET parameter. After you get the profile file, use the go tool pprof command to investigate the profile. threadcreate: Stack traces that led to the creation of new OS threads trace: A trace of execution of the current program. You can specify the duration in the seconds GET parameter. After you get the trace file, use the go tool trace command to investigate the trace. \u7ed3\u679c\u5206\u6790\u793a\u4f8b \u5206\u6790 goroutine \u8fd0\u884c\u60c5\u51b5 curl localhost/debug/pprof/goroutine?debug=2 \u5206\u6790\u5806\u5185\u5b58\u4f7f\u7528\u60c5\u51b5 curl localhost/debug/pprof/heap?debug=2","title":"\u8c03\u8bd5"},{"location":"1/3/7/#_1","text":"","title":"\u8c03\u8bd5"},{"location":"1/3/7/#debug","text":"gdb: Gccgo \u539f\u751f\u652f\u6301 gdb\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528 gdb \u8c03\u8bd5 Go \u8bed\u8a00\u4ee3\u7801\uff0c\u4f46 dlv \u5bf9 Go \u8bed\u8a00 debug \u7684\u652f\u6301\u6bd4 gdb \u66f4\u597d Gdb \u5bf9 Go \u8bed\u8a00\u7684\u6808\u7ba1\u7406\uff0c\u591a\u7ebf\u7a0b\u652f\u6301\u7b49\u65b9\u9762\u505a\u7684\u4e0d\u591f\u597d\uff0c\u8c03\u8bd5\u4ee3\u7801\u65f6\u53ef\u80fd\u6709\u9519\u4e71\u73b0\u8c61 dlv\uff1a Go \u8bed\u8a00\u7684\u4e13\u6709 debugger","title":"debug"},{"location":"1/3/7/#dlv","text":"\u914d\u7f6e \u5728 vscode \u4e2d\u914d\u7f6e dlb \u83dc\u5355\uff1aView -> Command Palette \u9009\u62e9 Go : Install/Update Tools\uff0c\u9009\u62e9\u5b89\u88c5 \u5b89\u88c5\u5b8c\u540e\uff0c\u4ece\u6539\u5165\u53e3\u5217\u8868\u4e2d\u53ef\u4ee5\u770b\u5230 dlv \u548c dlv-dap \u5df2\u7ecf\u5b89\u88c5\u597d Debug \u65b9\u6cd5 \u5728\u4ee3\u7801\u4e2d\u8bbe\u7f6e\u65ad\u70b9 \u83dc\u5355\u4e2d\u9009\u62e9 Run -> Start Debugging \u5373\u53ef\u8fdb\u5165\u8c03\u8bd5","title":"dlv \u7684\u914d\u7f6e"},{"location":"1/3/7/#debug_1","text":"\u6dfb\u52a0\u65e5\u5fd7 \u5728\u5173\u952e\u4ee3\u7801\u5206\u652f\u4e2d\u52a0\u5165\u65e5\u5fd7 \u57fa\u4e8efmt\u5305\u5c06\u65e5\u5fd7\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa stdout fmt.Println() fmt \u65e0\u65e5\u5fd7\u91cd\u5b9a\u5411\uff0c\u65e0\u65e5\u5fd7\u5206\u7ea7 \u5373\u4e0e\u65e5\u5fd7\u6846\u67b6\u5c06\u65e5\u5fd7\u8f93\u51fa\u5230\u5bf9\u5e94\u7684 appender \u6bd4\u5982\u53ef\u5229\u7528 glog \u8fdb\u884c\u65e5\u5fd7\u8f93\u51fa \u53ef\u914d\u7f6e appender\uff0c\u5c06\u6807\u51c6\u8f93\u51fa\u8f6c\u81f3\u6587\u4ef6 \u652f\u6301\u591a\u7ea7\u65e5\u5fd7\u8f93\u51fa\uff0c\u53ef\u4fee\u6539\u914d\u7f6e\u8c03\u6574\u65e5\u5fd7\u7b49\u7ea7 \u81ea\u5e26\u65f6\u95f4\u6233\u548c\u4ee3\u7801\u884c\uff0c\u65b9\u4fbf\u8c03\u8bd5","title":"\u66f4\u591a debug \u65b9\u6cd5"},{"location":"1/3/7/#glog","text":"import ( \"flag\" \"github.com/golang/glog\" ) func main() { flag.Set(\"v\", \"4\") glog.V(2).Info(\"Starting http server...\") mux := http.NewServeMux() mux.HandleFunc(\"/\", rootHandler) err := http.ListenAndServe(\":80\", mux) if err != nil { log.Fatal(err) } }","title":"Glog \u4f7f\u7528\u65b9\u6cd5\u793a\u4f8b"},{"location":"1/3/7/#performance-profiling","text":"code CPU Profiling: \u5728\u4ee3\u7801\u4e2d\u6dfb\u52a0 CPUProfile \u4ee3\u7801\uff0cruntime/pprof \u5305\u63d0\u4f9b\u652f\u6301 var cpuprofile = flag.String(\"cpuprofile\", \"\", \"write cpu profile to file\") func main() { flag.Parse() if *cpuprofile != \"\" { f, err := os.Create(*cpuprofile) if err != nil { log.Fatal(err) } pprof.StartCPUProfile(f) defer pprof.StopCPUProfile() } }","title":"\u6027\u80fd\u5206\u6790\uff08Performance Profiling\uff09"},{"location":"1/3/7/#cpu","text":"\u8fd0\u884c cpuprofilie \u4ee3\u7801\u540e\uff0c\u4f1a\u5728 /tmp/cpuprofile \u4e2d\u8bb0\u5f55 cpu \u4f7f\u7528\u65f6\u95f4 \u8fd0\u884c go tool pprof /tmp/cpuprofile \u8fdb\u5165\u5206\u6790\u6a21\u5f0f \u8fd0\u884c top10 \u67e5\u770b top 10\u7ebf\u7a0b\uff0c\u663e\u793a 30ms \u82b1\u8d39\u5728 main.main Showing nodes accounting for 30ms, 100% of 30ms total flat flat% sum% cum cum% 30ms 100% 100% 30ms 100% main.main 0 0% 100% 30ms 100% runtime.main (pprof) list main.main \u663e\u793a 30 \u6beb\u79d2\u90fd\u82b1\u8d39\u5728\u5faa\u73af\u4e0a Total: 30ms 30ms 30ms (flat, cum) 100% of Total 20ms 20ms 21: for i := 0; i < 100000000; i++ { 10ms 10ms 22: result += I \u53ef\u6267\u884c web \u547d\u4ee4\u751f\u6210 svg \u6587\u4ef6\uff0c\u5728\u901a\u8fc7\u6d4f\u89c8\u5668\u6253\u5f00 svg \u6587\u4ef6\u67e5\u770b\u56fe\u5f62\u5316\u5206\u6790\u7ed3\u679c","title":"\u5206\u6790 CPU \u74f6\u9888"},{"location":"1/3/7/#profiling","text":"CPU profile \u7a0b\u5e8f\u7684 CPU \u4f7f\u7528\u60c5\u51b5\uff0c\u6bcf 100 \u6beb\u79d2\u91c7\u96c6\u4e00\u6b21 CPU \u4f7f\u7528\u60c5\u51b5 Memory Profile \u7a0b\u5e8f\u7684\u5185\u5b58\u4f7f\u7528\u60c5\u51b5 Block Profiling \u975e\u8fd0\u884c\u6001\u7684 goroutine \u7ec6\u8282\uff0c\u5206\u6790\u548c\u67e5\u627e\u6b7b\u9501 Goroutine Profiling \u6240\u6709 goroutines \u7684\u7ec6\u8282\u72b6\u6001\uff0c\u6709\u54ea\u4e9b goroutine\uff0c\u5b83\u4eec\u7684\u8c03\u7528\u5173\u7cfb\u662f\u600e\u6837\u7684","title":"\u5176\u4ed6\u53ef\u7528 profiling \u5de5\u5177\u5206\u6790\u7684\u95ee\u9898"},{"location":"1/3/7/#http-pprof","text":"net/http/pprof \u5305\u63d0\u4f9b\u652f\u6301 \u5982\u679c\u91c7\u7528\u9ed8\u8ba4 mux handle\uff0c\u5219\u53ea\u9700 import _ \"net/http/pprof\" \u5982\u679c\u91c7\u7528\u81ea\u5b9a\u4e49 mux handle\uff0c\u5219\u9700\u8981\u6ce8\u518c pprof handler import ( \"net/http/pprof\" ) func startHTTP(addr string, s *tnetd.Server) { mux := http.NewServeMux() mux.HandleFunc(\"/debug/pprof/\", pprof.Index) mux.HandleFunc(\"/debug/pprof/profile\", pprof.Profile) mux.HandleFunc(\"/debug/pprof/symbol\", pprof.Symbol) mux.HandleFunc(\"/debug/pprof/trace\", pprof.Trace) server := &http.Server{ Addr: addr, Handler: mux, } server.ListenAndServe() }","title":"\u9488\u5bf9 http \u670d\u52a1\u7684 pprof"},{"location":"1/3/7/#go-profiling","text":"\u5728\u8fd0\u884c\u4e86\u5f00\u542f pprof \u7684\u670d\u52a1\u5668\u4ee5\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee\u5bf9\u5e94\u7684 URL \u83b7\u5f97 profile \u7ed3\u679c allocs: A sampling of all past memory allocations block: Stack traces that led to blocking on synchronization primitives cmdline: The command line invocation of the current program goroutine: Stack traces of all current goroutines heap: A sampling of memory allocations of live objects. You can specify the gc GET parameter to run GC before taking the heap sample. mutex: Stack traces of holders of contended mutexes profile: CPU profile. You can specify the duration in the seconds GET parameter. After you get the profile file, use the go tool pprof command to investigate the profile. threadcreate: Stack traces that led to the creation of new OS threads trace: A trace of execution of the current program. You can specify the duration in the seconds GET parameter. After you get the trace file, use the go tool trace command to investigate the trace.","title":"\u5206\u6790 go profiling \u7ed3\u679c"},{"location":"1/3/7/#_2","text":"\u5206\u6790 goroutine \u8fd0\u884c\u60c5\u51b5 curl localhost/debug/pprof/goroutine?debug=2 \u5206\u6790\u5806\u5185\u5b58\u4f7f\u7528\u60c5\u51b5 curl localhost/debug/pprof/heap?debug=2","title":"\u7ed3\u679c\u5206\u6790\u793a\u4f8b"},{"location":"1/3/8/","text":"Kubernetes \u4e2d\u5e38\u7528\u4ee3\u7801\u89e3\u8bfb Rate Limit Queue func (r *ItemExponentialFailureRateLimiter) When(item interface{}) time.Duration { r.failuresLock.Lock() defer r.failuresLock.Unlock() exp := r.failures[item] r.failures[item] = r.failures[item] + 1 // The backoff is capped such that \u2018calculated\u2019 value never overflows. backoff := float64(r.baseDelay.Nanoseconds()) * math.Pow(2, float64(exp)) if backoff > math.MaxInt64 { return r.maxDelay } calculated := time.Duration(backoff) if calculated > r.maxDelay { return r.maxDelay } return calculated }","title":"Kubernetes \u4e2d\u5e38\u7528\u4ee3\u7801\u89e3\u8bfb"},{"location":"1/3/8/#kubernetes","text":"","title":"Kubernetes \u4e2d\u5e38\u7528\u4ee3\u7801\u89e3\u8bfb"},{"location":"1/3/8/#rate-limit-queue","text":"func (r *ItemExponentialFailureRateLimiter) When(item interface{}) time.Duration { r.failuresLock.Lock() defer r.failuresLock.Unlock() exp := r.failures[item] r.failures[item] = r.failures[item] + 1 // The backoff is capped such that \u2018calculated\u2019 value never overflows. backoff := float64(r.baseDelay.Nanoseconds()) * math.Pow(2, float64(exp)) if backoff > math.MaxInt64 { return r.maxDelay } calculated := time.Duration(backoff) if calculated > r.maxDelay { return r.maxDelay } return calculated }","title":"Rate Limit Queue"},{"location":"1/3/9/","text":"Kubernetes \u65e5\u5e38\u8fd0\u7ef4\u4e2d\u7684\u4ee3\u7801\u8c03\u8bd5\u573a\u666f \u6848\u4f8b1\uff1a\u7a7a\u6307\u9488 \u95ee\u9898\u63cf\u8ff0 Kubenetes \u8c03\u5ea6\u5668\u5728\u8c03\u5ea6\u6709\u5916\u6302\u5b58\u50a8\u9700\u6c42\u7684 pod \u7684\u65f6\u5019\uff0c\u5728\u83b7\u53d6\u8282\u70b9\u4fe1\u606f\u5931\u8d25\u65f6\u4f1a\u5f02\u5e38\u9000\u51fa panic: runtime error: invalid memory address or nil pointer dereference[signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x105e283] \u6839\u56e0\u5206\u6790 nil pointe \u662f Go \u8bed\u8a00\u4e2d\u6700\u5e38\u51fa\u73b0\u7684\u4e00\u7c7b\u9519\u8bef\uff0c\u4e5f\u6700\u5bb9\u6613\u5224\u65ad\uff0c\u901a\u5e38\u5728 call stack \u4e2d\u5c31\u4f1a\u544a\u8bc9\u4f60\u54ea\u884c\u4ee3\u7801\u6709\u95ee\u9898 \u5728\u8c03\u5ea6\u5668 csi.go \u4e2d\u7684\u5982\u4e0b\u4ee3\u7801\uff0c\u5f53 node \u4e3a nil \u7684\u65f6\u5019\uff0c\u5bf9 node \u7684\u5f15\u7528 node.Name \u5c31\u4f1a\u5f15\u53d1\u7a7a\u6307\u9488 node := nodeInfo.Node() if node == nil { return framework.NewStatus(framework.Error, fmt.Sprintf(\"node not found: %s\" , node.Name)) } \u89e3\u51b3\u529e\u6cd5 \u5f53\u6307\u9488\u4e3a\u7a7a\u65f6\uff0c\u4e0d\u8981\u7ee7\u7eed\u5f15\u7528\u3002 \u89e3\u51b3\u529e\u6cd5 \u6848\u4f8b2\uff1aMap \u7684\u8bfb\u5199\u51b2\u7a81 \u95ee\u9898\u63cf\u8ff0\uff1a \u7a0b\u5e8f\u5728\u904d\u5386 Kubernetes \u5bf9\u8c61\u7684 Annotation \u65f6\u5f02\u5e38\u9000\u51fa \u6839\u56e0\u5206\u6790 Kubernetes \u5bf9\u8c61\u4e2d Label \u548c Annotation \u662f map[string]string \u7ecf\u5e38\u6709\u4ee3\u7801\u9700\u8981\u4fee\u6539\u8fd9\u4e24\u4e2a Map \u540c\u65f6\u53ef\u80fd\u6709\u5176\u4ed6\u7ebf\u7a0b for...range \u904d\u5386 \u89e3\u51b3\u65b9\u6cd5\uff1a \u7528 sync.RWMutex \u52a0\u9501 \u4f7f\u7528\u7ebf\u7a0b\u5b89\u5168 Map\uff0c\u6bd4\u5982 sync.Map{} \u6848\u4f8b3\uff1akube-proxy \u6d88\u8017 10 \u4e2a CPU \u95ee\u9898\u63cf\u8ff0: \u5ba2\u6237\u6c47\u62a5\u95ee\u9898\uff0ckube-proxy \u6d88\u8017\u4e86\u4e3b\u673a 10 \u4e2a CPU \u6839\u56e0\u5206\u6790 \u767b\u5f55\u95ee\u9898\u673a\u5668\uff0c\u6267\u884c top \u547d\u4ee4\u67e5\u770b cpu \u6d88\u8017\uff0c\u53ef\u4ee5\u770b\u5230 kube-proxy \u7684 cpu \u6d88\u8017\u548c pid \u4fe1\u606f \u5bf9 kube-proxy \u8fdb\u7a0b\u8fd0\u884c System profiling tool\uff0c\u53d1\u73b0 10 \u4e2a CPU \u4e2d\uff0c\u8d85\u8fc7 60% \u7684 CPU \u90fd\u5728\u505a\u5783\u573e\u56de\u6536\uff0c\u8fd9\u8bf4\u660e GC \u9700\u8981\u56de\u6536\u7684\u5bf9\u8c61\u592a\u591a\u4e86\uff0c\u8bf4\u660e\u7a0b\u5e8f\u521b\u5efa\u4e86\u5927\u91cf\u53ef\u56de\u6536\u5bf9\u8c61\u3002 perf top \u2013p <pid> Overhead Shared Obj Symbol 26.48% kube-proxy [.] runtime.gcDrain 13.86% kube-proxy [.] runtime.greyobject 10.71% kube-proxy [.] runtime.(*lfstack).pop 10.04% kube-proxy [.] runtime.scanobject \u901a\u8fc7 pprof \u5206\u6790\u5185\u5b58\u5360\u7528\u60c5\u51b5 curl 127.0.0.1:10249/debug/pprof/heap?debug=2 1: 245760 [301102: 73998827520] @ 0x11ddcda 0x11f306e 0x11f35f5 0x11fbdce 0x1204a8a 0x114ed76 0x114eacb 0x11 # 0x11ddcd9 k8s.io/kubernetes/vendor/github.com/vishvananda/netlink.(*Handle).RouteListFiltered+0x679 # 0x11f306d k8s.io/kubernetes/pkg/proxy/ipvs.(*netlinkHandle).GetLocalAddresses+0xed # 0x11f35f4 k8s.io/kubernetes/pkg/proxy/ipvs.(*realIPGetter).NodeIPs+0x64 # 0x11fbdcd k8s.io/kubernetes/pkg/proxy/ipvs.(*Proxier).syncProxyRules+0x47dd heap dump \u5206\u6790 GetLocalAddresses \u51fd\u6570\u8c03\u7528\u521b\u5efa\u4e86 301102 \u4e2a\u5bf9\u8c61\uff0c\u5360\u7528\u5185\u5b58 73998827520 \u5982\u6b64\u591a\u7684\u5bf9\u8c61\u88ab\u521b\u5efa\uff0c\u663e\u7136\u4f1a\u5bfc\u81f4 kube-proxy \u8fdb\u7a0b\u5fd9\u4e8e GC\uff0c\u5360\u7528\u5927\u91cf CPU \u5bf9\u7167\u4ee3\u7801\u5206\u6790 GetLocalAddresses \u7684\u5b9e\u73b0\uff0c\u53d1\u73b0\u8be5\u51fd\u6570\u7684\u4e3b\u8981\u76ee\u7684\u662f\u83b7\u53d6\u8282\u70b9\u672c\u673a IP \u5730\u5740\uff0c\u83b7\u53d6\u7684\u65b9\u6cd5\u662f\u901a\u8fc7 ip route \u547d\u4ee4\u83b7\u5f97\u5f53\u524d\u8282\u70b9\u6240\u6709 local \u8def\u7531\u4fe1\u606f\u5e76\u8f6c\u6362\u6210 go struct \u5e76\u8fc7\u6ee4\u6389 ipvs0\u7f51\u53e3\u4e0a\u7684\u8def\u7531\u4fe1\u606f ip route show table local type local proto kernel \u56e0\u4e3a\u96c6\u7fa4\u89c4\u6a21\u8f83\u5927\uff0c\u8be5\u547d\u4ee4\u8fd4\u56de 5000 \u6761\u5de6\u53f3\u8bb0\u5f55\uff0c\u56e0\u6b64\u6bcf\u6b21\u51fd\u6570\u8c03\u7528\u90fd\u4f1a\u6709\u6570\u4e07\u4e2a\u5bf9\u8c61\u88ab\u751f\u6210 \u800c kube-proxy \u5728\u5904\u7406\u6bcf\u4e00\u4e2a\u670d\u52a1\u7684\u65f6\u5019\u90fd\u4f1a\u8c03\u7528\u8be5\u65b9\u6cd5\uff0c\u56e0\u4e3a\u96c6\u7fa4\u6709\u6570\u5343\u4e2a\u670d\u52a1\uff0c\u56e0\u6b64\uff0ckube-proxy\u5728\u53cd\u590d\u8c03\u7528\u8be5\u51fd\u6570\u521b\u5efa\u5927\u91cf\u4e34\u65f6\u5bf9\u8c61 \u4fee\u590d\u65b9\u6cd5 \u51fd\u6570\u8c03\u7528\u63d0\u53d6\u5230\u5faa\u73af\u5916 \u4fee\u590d\u65b9\u6cd5 \u6848\u4f8b4\uff1a\u7ebf\u7a0b\u6c60\u8017\u5c3d \u95ee\u9898\u63cf\u8ff0\uff1a \u5728 Kubernetes \u4e2d\u6709\u4e00\u4e2a\u63a7\u5236\u5668\uff0c\u53eb\u505a endpoint controller\uff0c\u8be5\u63a7\u5236\u5668\u7b26\u5408\u751f\u4ea7\u8005\u6d88\u8d39\u8005\u6a21\u5f0f\uff0c\u9ed8\u8ba4\u67095 \u4e2a worker \u7ebf\u7a0b\u4f5c\u4e3a\u6d88\u8d39\u8005\u3002\u8be5\u6d88\u8d39\u8005\u5728\u5904\u7406\u8bf7\u6c42\u65f6\uff0c\u53ef\u80fd\u8c03\u7528\u7684 LBaaS \u7684 API \u66f4\u65b0\u8d1f\u8f7d\u5747\u8861\u914d\u7f6e\u3002\u6211\u4eec\u53d1\u73b0\u8be5\u63a7\u5236\u5668\u4f1a\u65f6\u4e0d\u65f6\u4e0d\u5de5\u4f5c\uff0c\u5177\u4f53\u8868\u73b0\u4e3a\uff0c\u8be5\u505a\u7684\u914d\u7f6e\u53d8\u66f4\u6ca1\u53d1\u751f\uff0c\u76f8\u5173\u65e5\u5fd7\u4e5f\u4e0d\u6253\u5370\u4e86\u3002 \u6839\u56e0\u5206\u6790\uff1a \u901a\u8fc7 pprof \u6253\u5370\u51fa\u8be5\u8fdb\u7a0b\u7684\u6240\u6709 go routine \u4fe1\u606f\uff0c\u53d1\u73b0 worker \u7ebf\u7a0b\u90fd\u5361\u5728 http \u8bf7\u6c42\u8c03\u7528\u5904\u3002\u5f53worker\u7ebf\u7a0b\u8c03\u7528 LBaaS API \u65f6\uff0c\u5e95\u5c42\u662f net/http \u5305\u8c03\u7528\uff0c\u800c\u5ba2\u6237\u7aef\u5728\u53d1\u8d77\u8fde\u63a5\u8bf7\u6c42\u65f6\uff0c\u672a\u8bbe\u7f6e\u5ba2\u6237\u7aef\u8d85\u65f6\u65f6\u95f4\u3002\u8fd9\u5bfc\u81f4\u5f53\u51fa\u73b0\u67d0\u4e9b\u7f51\u7edc\u5f02\u5e38\u65f6\uff0c\u5ba2\u6237\u7aef\u4f1a\u6c38\u8fdc\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\u3002 \u89e3\u51b3\u65b9\u6cd5\uff1a\u4fee\u6539\u4ee3\u7801\u52a0\u5165\u5ba2\u6237\u7aef\u8d85\u65f6\u63a7\u5236\u3002 \u8bfe\u540e\u7ec3\u4e60 2.2 code \u7f16\u5199\u4e00\u4e2a HTTP \u670d\u52a1\u5668\uff0c\u6b64\u7ec3\u4e60\u4e3a\u6b63\u5f0f\u4f5c\u4e1a\u9700\u8981\u63d0\u4ea4\u5e76\u6279\u6539 \u9f13\u52b1\u7fa4\u91cc\u8ba8\u8bba\uff0c\u4f46\u4e0d\u5efa\u8bae\u5b66\u4e60\u59d4\u5458\u548c\u8bfe\u4ee3\u8868\u53d1\u6ee1\u5206\u7b54\u6848\uff0c\u7ed9\u5927\u5bb6\u7559\u4e00\u70b9\u601d\u8003\u7a7a\u95f4 \u5927\u5bb6\u89c6\u4e2a\u4eba\u4e0d\u540c\u60c5\u51b5\u51b3\u5b9a\u5b8c\u6210\u5230\u54ea\u4e2a\u73af\u8282\uff0c\u4f46\u5c3d\u91cf\u628a a \u90fd\u505a\u5b8c \u63a5\u6536\u5ba2\u6237\u7aef request\uff0c\u5e76\u5c06 request \u4e2d\u5e26\u7684 header \u5199\u5165 response header \u8bfb\u53d6\u5f53\u524d\u7cfb\u7edf\u7684\u73af\u5883\u53d8\u91cf\u4e2d\u7684 VERSION \u914d\u7f6e\uff0c\u5e76\u5199\u5165 response header Server \u7aef\u8bb0\u5f55\u8bbf\u95ee\u65e5\u5fd7\u5305\u62ec\u5ba2\u6237\u7aef IP\uff0cHTTP \u8fd4\u56de\u7801\uff0c\u8f93\u51fa\u5230 server \u7aef\u7684\u6807\u51c6\u8f93\u51fa \u5f53\u8bbf\u95ee localhost/healthz \u65f6\uff0c\u5e94\u8fd4\u56de200","title":"Kubernetes \u65e5\u5e38\u8fd0\u7ef4\u4e2d\u7684\u4ee3\u7801\u8c03\u8bd5\u573a\u666f"},{"location":"1/3/9/#kubernetes","text":"","title":"Kubernetes \u65e5\u5e38\u8fd0\u7ef4\u4e2d\u7684\u4ee3\u7801\u8c03\u8bd5\u573a\u666f"},{"location":"1/3/9/#1","text":"\u95ee\u9898\u63cf\u8ff0 Kubenetes \u8c03\u5ea6\u5668\u5728\u8c03\u5ea6\u6709\u5916\u6302\u5b58\u50a8\u9700\u6c42\u7684 pod \u7684\u65f6\u5019\uff0c\u5728\u83b7\u53d6\u8282\u70b9\u4fe1\u606f\u5931\u8d25\u65f6\u4f1a\u5f02\u5e38\u9000\u51fa panic: runtime error: invalid memory address or nil pointer dereference[signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x105e283] \u6839\u56e0\u5206\u6790 nil pointe \u662f Go \u8bed\u8a00\u4e2d\u6700\u5e38\u51fa\u73b0\u7684\u4e00\u7c7b\u9519\u8bef\uff0c\u4e5f\u6700\u5bb9\u6613\u5224\u65ad\uff0c\u901a\u5e38\u5728 call stack \u4e2d\u5c31\u4f1a\u544a\u8bc9\u4f60\u54ea\u884c\u4ee3\u7801\u6709\u95ee\u9898 \u5728\u8c03\u5ea6\u5668 csi.go \u4e2d\u7684\u5982\u4e0b\u4ee3\u7801\uff0c\u5f53 node \u4e3a nil \u7684\u65f6\u5019\uff0c\u5bf9 node \u7684\u5f15\u7528 node.Name \u5c31\u4f1a\u5f15\u53d1\u7a7a\u6307\u9488 node := nodeInfo.Node() if node == nil { return framework.NewStatus(framework.Error, fmt.Sprintf(\"node not found: %s\" , node.Name)) } \u89e3\u51b3\u529e\u6cd5 \u5f53\u6307\u9488\u4e3a\u7a7a\u65f6\uff0c\u4e0d\u8981\u7ee7\u7eed\u5f15\u7528\u3002 \u89e3\u51b3\u529e\u6cd5","title":"\u6848\u4f8b1\uff1a\u7a7a\u6307\u9488"},{"location":"1/3/9/#2map","text":"\u95ee\u9898\u63cf\u8ff0\uff1a \u7a0b\u5e8f\u5728\u904d\u5386 Kubernetes \u5bf9\u8c61\u7684 Annotation \u65f6\u5f02\u5e38\u9000\u51fa \u6839\u56e0\u5206\u6790 Kubernetes \u5bf9\u8c61\u4e2d Label \u548c Annotation \u662f map[string]string \u7ecf\u5e38\u6709\u4ee3\u7801\u9700\u8981\u4fee\u6539\u8fd9\u4e24\u4e2a Map \u540c\u65f6\u53ef\u80fd\u6709\u5176\u4ed6\u7ebf\u7a0b for...range \u904d\u5386 \u89e3\u51b3\u65b9\u6cd5\uff1a \u7528 sync.RWMutex \u52a0\u9501 \u4f7f\u7528\u7ebf\u7a0b\u5b89\u5168 Map\uff0c\u6bd4\u5982 sync.Map{}","title":"\u6848\u4f8b2\uff1aMap \u7684\u8bfb\u5199\u51b2\u7a81"},{"location":"1/3/9/#3kube-proxy-10-cpu","text":"\u95ee\u9898\u63cf\u8ff0: \u5ba2\u6237\u6c47\u62a5\u95ee\u9898\uff0ckube-proxy \u6d88\u8017\u4e86\u4e3b\u673a 10 \u4e2a CPU \u6839\u56e0\u5206\u6790 \u767b\u5f55\u95ee\u9898\u673a\u5668\uff0c\u6267\u884c top \u547d\u4ee4\u67e5\u770b cpu \u6d88\u8017\uff0c\u53ef\u4ee5\u770b\u5230 kube-proxy \u7684 cpu \u6d88\u8017\u548c pid \u4fe1\u606f \u5bf9 kube-proxy \u8fdb\u7a0b\u8fd0\u884c System profiling tool\uff0c\u53d1\u73b0 10 \u4e2a CPU \u4e2d\uff0c\u8d85\u8fc7 60% \u7684 CPU \u90fd\u5728\u505a\u5783\u573e\u56de\u6536\uff0c\u8fd9\u8bf4\u660e GC \u9700\u8981\u56de\u6536\u7684\u5bf9\u8c61\u592a\u591a\u4e86\uff0c\u8bf4\u660e\u7a0b\u5e8f\u521b\u5efa\u4e86\u5927\u91cf\u53ef\u56de\u6536\u5bf9\u8c61\u3002 perf top \u2013p <pid> Overhead Shared Obj Symbol 26.48% kube-proxy [.] runtime.gcDrain 13.86% kube-proxy [.] runtime.greyobject 10.71% kube-proxy [.] runtime.(*lfstack).pop 10.04% kube-proxy [.] runtime.scanobject \u901a\u8fc7 pprof \u5206\u6790\u5185\u5b58\u5360\u7528\u60c5\u51b5 curl 127.0.0.1:10249/debug/pprof/heap?debug=2 1: 245760 [301102: 73998827520] @ 0x11ddcda 0x11f306e 0x11f35f5 0x11fbdce 0x1204a8a 0x114ed76 0x114eacb 0x11 # 0x11ddcd9 k8s.io/kubernetes/vendor/github.com/vishvananda/netlink.(*Handle).RouteListFiltered+0x679 # 0x11f306d k8s.io/kubernetes/pkg/proxy/ipvs.(*netlinkHandle).GetLocalAddresses+0xed # 0x11f35f4 k8s.io/kubernetes/pkg/proxy/ipvs.(*realIPGetter).NodeIPs+0x64 # 0x11fbdcd k8s.io/kubernetes/pkg/proxy/ipvs.(*Proxier).syncProxyRules+0x47dd heap dump \u5206\u6790 GetLocalAddresses \u51fd\u6570\u8c03\u7528\u521b\u5efa\u4e86 301102 \u4e2a\u5bf9\u8c61\uff0c\u5360\u7528\u5185\u5b58 73998827520 \u5982\u6b64\u591a\u7684\u5bf9\u8c61\u88ab\u521b\u5efa\uff0c\u663e\u7136\u4f1a\u5bfc\u81f4 kube-proxy \u8fdb\u7a0b\u5fd9\u4e8e GC\uff0c\u5360\u7528\u5927\u91cf CPU \u5bf9\u7167\u4ee3\u7801\u5206\u6790 GetLocalAddresses \u7684\u5b9e\u73b0\uff0c\u53d1\u73b0\u8be5\u51fd\u6570\u7684\u4e3b\u8981\u76ee\u7684\u662f\u83b7\u53d6\u8282\u70b9\u672c\u673a IP \u5730\u5740\uff0c\u83b7\u53d6\u7684\u65b9\u6cd5\u662f\u901a\u8fc7 ip route \u547d\u4ee4\u83b7\u5f97\u5f53\u524d\u8282\u70b9\u6240\u6709 local \u8def\u7531\u4fe1\u606f\u5e76\u8f6c\u6362\u6210 go struct \u5e76\u8fc7\u6ee4\u6389 ipvs0\u7f51\u53e3\u4e0a\u7684\u8def\u7531\u4fe1\u606f ip route show table local type local proto kernel \u56e0\u4e3a\u96c6\u7fa4\u89c4\u6a21\u8f83\u5927\uff0c\u8be5\u547d\u4ee4\u8fd4\u56de 5000 \u6761\u5de6\u53f3\u8bb0\u5f55\uff0c\u56e0\u6b64\u6bcf\u6b21\u51fd\u6570\u8c03\u7528\u90fd\u4f1a\u6709\u6570\u4e07\u4e2a\u5bf9\u8c61\u88ab\u751f\u6210 \u800c kube-proxy \u5728\u5904\u7406\u6bcf\u4e00\u4e2a\u670d\u52a1\u7684\u65f6\u5019\u90fd\u4f1a\u8c03\u7528\u8be5\u65b9\u6cd5\uff0c\u56e0\u4e3a\u96c6\u7fa4\u6709\u6570\u5343\u4e2a\u670d\u52a1\uff0c\u56e0\u6b64\uff0ckube-proxy\u5728\u53cd\u590d\u8c03\u7528\u8be5\u51fd\u6570\u521b\u5efa\u5927\u91cf\u4e34\u65f6\u5bf9\u8c61 \u4fee\u590d\u65b9\u6cd5 \u51fd\u6570\u8c03\u7528\u63d0\u53d6\u5230\u5faa\u73af\u5916 \u4fee\u590d\u65b9\u6cd5","title":"\u6848\u4f8b3\uff1akube-proxy \u6d88\u8017 10 \u4e2a CPU"},{"location":"1/3/9/#4","text":"\u95ee\u9898\u63cf\u8ff0\uff1a \u5728 Kubernetes \u4e2d\u6709\u4e00\u4e2a\u63a7\u5236\u5668\uff0c\u53eb\u505a endpoint controller\uff0c\u8be5\u63a7\u5236\u5668\u7b26\u5408\u751f\u4ea7\u8005\u6d88\u8d39\u8005\u6a21\u5f0f\uff0c\u9ed8\u8ba4\u67095 \u4e2a worker \u7ebf\u7a0b\u4f5c\u4e3a\u6d88\u8d39\u8005\u3002\u8be5\u6d88\u8d39\u8005\u5728\u5904\u7406\u8bf7\u6c42\u65f6\uff0c\u53ef\u80fd\u8c03\u7528\u7684 LBaaS \u7684 API \u66f4\u65b0\u8d1f\u8f7d\u5747\u8861\u914d\u7f6e\u3002\u6211\u4eec\u53d1\u73b0\u8be5\u63a7\u5236\u5668\u4f1a\u65f6\u4e0d\u65f6\u4e0d\u5de5\u4f5c\uff0c\u5177\u4f53\u8868\u73b0\u4e3a\uff0c\u8be5\u505a\u7684\u914d\u7f6e\u53d8\u66f4\u6ca1\u53d1\u751f\uff0c\u76f8\u5173\u65e5\u5fd7\u4e5f\u4e0d\u6253\u5370\u4e86\u3002 \u6839\u56e0\u5206\u6790\uff1a \u901a\u8fc7 pprof \u6253\u5370\u51fa\u8be5\u8fdb\u7a0b\u7684\u6240\u6709 go routine \u4fe1\u606f\uff0c\u53d1\u73b0 worker \u7ebf\u7a0b\u90fd\u5361\u5728 http \u8bf7\u6c42\u8c03\u7528\u5904\u3002\u5f53worker\u7ebf\u7a0b\u8c03\u7528 LBaaS API \u65f6\uff0c\u5e95\u5c42\u662f net/http \u5305\u8c03\u7528\uff0c\u800c\u5ba2\u6237\u7aef\u5728\u53d1\u8d77\u8fde\u63a5\u8bf7\u6c42\u65f6\uff0c\u672a\u8bbe\u7f6e\u5ba2\u6237\u7aef\u8d85\u65f6\u65f6\u95f4\u3002\u8fd9\u5bfc\u81f4\u5f53\u51fa\u73b0\u67d0\u4e9b\u7f51\u7edc\u5f02\u5e38\u65f6\uff0c\u5ba2\u6237\u7aef\u4f1a\u6c38\u8fdc\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\u3002 \u89e3\u51b3\u65b9\u6cd5\uff1a\u4fee\u6539\u4ee3\u7801\u52a0\u5165\u5ba2\u6237\u7aef\u8d85\u65f6\u63a7\u5236\u3002","title":"\u6848\u4f8b4\uff1a\u7ebf\u7a0b\u6c60\u8017\u5c3d"},{"location":"1/3/9/#22","text":"code \u7f16\u5199\u4e00\u4e2a HTTP \u670d\u52a1\u5668\uff0c\u6b64\u7ec3\u4e60\u4e3a\u6b63\u5f0f\u4f5c\u4e1a\u9700\u8981\u63d0\u4ea4\u5e76\u6279\u6539 \u9f13\u52b1\u7fa4\u91cc\u8ba8\u8bba\uff0c\u4f46\u4e0d\u5efa\u8bae\u5b66\u4e60\u59d4\u5458\u548c\u8bfe\u4ee3\u8868\u53d1\u6ee1\u5206\u7b54\u6848\uff0c\u7ed9\u5927\u5bb6\u7559\u4e00\u70b9\u601d\u8003\u7a7a\u95f4 \u5927\u5bb6\u89c6\u4e2a\u4eba\u4e0d\u540c\u60c5\u51b5\u51b3\u5b9a\u5b8c\u6210\u5230\u54ea\u4e2a\u73af\u8282\uff0c\u4f46\u5c3d\u91cf\u628a a \u90fd\u505a\u5b8c \u63a5\u6536\u5ba2\u6237\u7aef request\uff0c\u5e76\u5c06 request \u4e2d\u5e26\u7684 header \u5199\u5165 response header \u8bfb\u53d6\u5f53\u524d\u7cfb\u7edf\u7684\u73af\u5883\u53d8\u91cf\u4e2d\u7684 VERSION \u914d\u7f6e\uff0c\u5e76\u5199\u5165 response header Server \u7aef\u8bb0\u5f55\u8bbf\u95ee\u65e5\u5fd7\u5305\u62ec\u5ba2\u6237\u7aef IP\uff0cHTTP \u8fd4\u56de\u7801\uff0c\u8f93\u51fa\u5230 server \u7aef\u7684\u6807\u51c6\u8f93\u51fa \u5f53\u8bbf\u95ee localhost/healthz \u65f6\uff0c\u5e94\u8fd4\u56de200","title":"\u8bfe\u540e\u7ec3\u4e60 2.2"},{"location":"2/1/1/","text":"\u4ece\u7cfb\u7edf\u67b6\u6784\u8c08\u8d77 \u4f20\u7edf\u5206\u5c42\u67b6\u6784 vs \u5fae\u670d\u52a1 \u5fae\u670d\u52a1\u6539\u9020 \u5206\u79bb\u5fae\u670d\u52a1\u7684\u65b9\u6cd5\u5efa\u8bae\uff1a \u5ba1\u89c6\u5e76\u53d1\u73b0\u53ef\u4ee5\u5206\u79bb\u7684\u4e1a\u52a1\u903b\u8f91\u4e1a\u52a1\u903b\u8f91 \u5bfb\u627e\u5929\u751f\u9694\u79bb\u7684\u4ee3\u7801\u6a21\u5757\uff0c\u53ef\u4ee5\u501f\u52a9\u4e8e\u9759\u6001\u4ee3\u7801\u5206\u6790\u5de5\u5177 \u4e0d\u540c\u5e76\u53d1\u89c4\u6a21\uff0c\u4e0d\u540c\u5185\u5b58\u9700\u6c42\u7684\u6a21\u5757\u90fd\u53ef\u4ee5\u5206\u79bb\u51fa\u4e0d\u540c\u7684\u5fae\u670d\u52a1\uff0c\u6b64\u65b9\u6cd5\u53ef\u63d0\u9ad8\u8d44\u6e90\u5229\u7528\u7387\uff0c\u8282\u7701\u6210\u672c\u4e00\u4e9b\u5e38\u7528\u7684\u53ef\u5fae\u670d\u52a1\u5316\u7684\u7ec4\u4ef6\uff1a \u7528\u6237\u548c\u8d26\u6237\u7ba1\u7406 \u6388\u6743\u548c\u4f1a\u8bdd\u7ba1\u7406 \u7cfb\u7edf\u914d\u7f6e \u901a\u77e5\u548c\u901a\u8baf\u670d\u52a1 \u7167\u7247\uff0c\u591a\u5a92\u4f53\uff0c\u5143\u6570\u636e\u7b49 \u5206\u89e3\u539f\u5219\uff1a\u57fa\u4e8e size, scope and capabilities \u5fae\u670d\u52a1\u95f4\u901a\u8baf \u70b9\u5bf9\u70b9\uff1a \u591a\u7528\u4e8e\u7cfb\u7edf\u5185\u90e8\u591a\u7ec4\u4ef6\u4e4b\u95f4\u901a\u8baf\uff1b \u6709\u5927\u91cf\u7684\u91cd\u590d\u6a21\u5757\u5982\u8ba4\u8bc1\u6388\u6743\uff1b \u7f3a\u5c11\u7edf\u4e00\u89c4\u8303\uff0c\u5982\u76d1\u63a7\uff0c\u5ba1\u8ba1\u7b49\u529f\u80fd\uff1b \u540e\u671f\u7ef4\u62a4\u6210\u672c\u9ad8\uff0c\u670d\u52a1\u548c\u670d\u52a1\u7684\u4f9d\u8d56\u5173\u7cfb\u9519\u7efc\u590d\u6742\u96be\u4ee5\u7ba1\u7406\u3002 API \u7f51\u5173: \u57fa\u4e8e\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684 message gateway \u65b0 API \u901a\u8fc7\u6ce8\u518c\u81f3 Gateway \u5b9e\u73b0 \u6574\u5408\u5b9e\u73b0 Common","title":"\u4ece\u7cfb\u7edf\u67b6\u6784\u8c08\u8d77"},{"location":"2/1/1/#_1","text":"","title":"\u4ece\u7cfb\u7edf\u67b6\u6784\u8c08\u8d77"},{"location":"2/1/1/#vs","text":"","title":"\u4f20\u7edf\u5206\u5c42\u67b6\u6784 vs \u5fae\u670d\u52a1"},{"location":"2/1/1/#_2","text":"\u5206\u79bb\u5fae\u670d\u52a1\u7684\u65b9\u6cd5\u5efa\u8bae\uff1a \u5ba1\u89c6\u5e76\u53d1\u73b0\u53ef\u4ee5\u5206\u79bb\u7684\u4e1a\u52a1\u903b\u8f91\u4e1a\u52a1\u903b\u8f91 \u5bfb\u627e\u5929\u751f\u9694\u79bb\u7684\u4ee3\u7801\u6a21\u5757\uff0c\u53ef\u4ee5\u501f\u52a9\u4e8e\u9759\u6001\u4ee3\u7801\u5206\u6790\u5de5\u5177 \u4e0d\u540c\u5e76\u53d1\u89c4\u6a21\uff0c\u4e0d\u540c\u5185\u5b58\u9700\u6c42\u7684\u6a21\u5757\u90fd\u53ef\u4ee5\u5206\u79bb\u51fa\u4e0d\u540c\u7684\u5fae\u670d\u52a1\uff0c\u6b64\u65b9\u6cd5\u53ef\u63d0\u9ad8\u8d44\u6e90\u5229\u7528\u7387\uff0c\u8282\u7701\u6210\u672c\u4e00\u4e9b\u5e38\u7528\u7684\u53ef\u5fae\u670d\u52a1\u5316\u7684\u7ec4\u4ef6\uff1a \u7528\u6237\u548c\u8d26\u6237\u7ba1\u7406 \u6388\u6743\u548c\u4f1a\u8bdd\u7ba1\u7406 \u7cfb\u7edf\u914d\u7f6e \u901a\u77e5\u548c\u901a\u8baf\u670d\u52a1 \u7167\u7247\uff0c\u591a\u5a92\u4f53\uff0c\u5143\u6570\u636e\u7b49 \u5206\u89e3\u539f\u5219\uff1a\u57fa\u4e8e size, scope and capabilities","title":"\u5fae\u670d\u52a1\u6539\u9020"},{"location":"2/1/1/#_3","text":"\u70b9\u5bf9\u70b9\uff1a \u591a\u7528\u4e8e\u7cfb\u7edf\u5185\u90e8\u591a\u7ec4\u4ef6\u4e4b\u95f4\u901a\u8baf\uff1b \u6709\u5927\u91cf\u7684\u91cd\u590d\u6a21\u5757\u5982\u8ba4\u8bc1\u6388\u6743\uff1b \u7f3a\u5c11\u7edf\u4e00\u89c4\u8303\uff0c\u5982\u76d1\u63a7\uff0c\u5ba1\u8ba1\u7b49\u529f\u80fd\uff1b \u540e\u671f\u7ef4\u62a4\u6210\u672c\u9ad8\uff0c\u670d\u52a1\u548c\u670d\u52a1\u7684\u4f9d\u8d56\u5173\u7cfb\u9519\u7efc\u590d\u6742\u96be\u4ee5\u7ba1\u7406\u3002 API \u7f51\u5173: \u57fa\u4e8e\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684 message gateway \u65b0 API \u901a\u8fc7\u6ce8\u518c\u81f3 Gateway \u5b9e\u73b0 \u6574\u5408\u5b9e\u73b0 Common","title":"\u5fae\u670d\u52a1\u95f4\u901a\u8baf"},{"location":"2/1/2/","text":"\u7406\u89e3 Docker Docker \u57fa\u4e8e Linux \u5185\u6838\u7684 Cgroup\uff0cNamespace\uff0c\u4ee5\u53ca Union FS \u7b49\u6280\u672f\uff0c\u5bf9\u8fdb\u7a0b\u8fdb\u884c\u5c01\u88c5\u9694\u79bb\uff0c\u5c5e\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u5c42\u9762\u7684\u865a\u62df\u5316\u6280\u672f\uff0c\u7531\u4e8e\u9694\u79bb\u7684\u8fdb\u7a0b\u72ec\u7acb\u4e8e\u5bbf\u4e3b\u548c\u5176\u5b83\u7684\u9694\u79bb\u7684\u8fdb\u7a0b\uff0c\u56e0\u6b64\u4e5f\u79f0\u5176\u4e3a\u5bb9\u5668\u3002 \u6700\u521d\u5b9e\u73b0\u662f\u57fa\u4e8e LXC\uff0c\u4ece 0.7 \u4ee5\u540e\u5f00\u59cb\u53bb\u9664 LXC\uff0c\u8f6c\u800c\u4f7f\u7528\u81ea\u884c\u5f00\u53d1\u7684 Libcontainer\uff0c\u4ece 1.11 \u5f00\u59cb\uff0c\u5219\u8fdb\u4e00\u6b65\u6f14\u8fdb\u4e3a\u4f7f\u7528 runC \u548c Containerd\u3002 Docker \u5728\u5bb9\u5668\u7684\u57fa\u7840\u4e0a\uff0c\u8fdb\u884c\u4e86\u8fdb\u4e00\u6b65\u7684\u5c01\u88c5\uff0c\u4ece\u6587\u4ef6\u7cfb\u7edf\u3001\u7f51\u7edc\u4e92\u8054\u5230\u8fdb\u7a0b\u9694\u79bb\u7b49\u7b49\uff0c\u6781\u5927\u7684\u7b80\u5316\u4e86\u5bb9\u5668\u7684\u521b\u5efa\u548c\u7ef4\u62a4\uff0c\u4f7f\u5f97 Docker \u6280\u672f\u6bd4\u865a\u62df\u673a\u6280\u672f\u66f4\u4e3a\u8f7b\u4fbf\u3001\u5feb\u6377\u3002 \u4e3a\u4ec0\u4e48\u8981\u7528 Docker \u66f4\u9ad8\u6548\u5730\u5229\u7528\u7cfb\u7edf\u8d44\u6e90 \u66f4\u5feb\u901f\u7684\u542f\u52a8\u65f6\u95f4 \u4e00\u81f4\u7684\u8fd0\u884c\u73af\u5883 \u6301\u7eed\u4ea4\u4ed8\u548c\u90e8\u7f72 \u66f4\u8f7b\u677e\u5730\u8fc1\u79fb \u66f4\u8f7b\u677e\u5730\u7ef4\u62a4\u548c\u6269\u5c55 ...... \u865a\u62df\u673a\u548c\u5bb9\u5668\u8fd0\u884c\u6001\u7684\u5bf9\u6bd4 \u6027\u80fd\u5bf9\u6bd4 \u5b89\u88c5 Docker \u5728 ubuntu \u4e0a\u5b89\u88c5 Docker \u8fd0\u884c\u65f6\uff0c\u53c2\u8003 https://docs.docker.com/engine/install/ubuntu/ $ sudo apt-get update $ sudo apt-get install \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg-agent \\ software-properties-common $ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - $ sudo add-apt-repository \\ \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) \\ stable\" $ sudo apt-get update $ sudo apt-get install docker-ce docker-ce-cli containerd.io \u5bb9\u5668\u64cd\u4f5c \u542f\u52a8\uff1a docker run -it \u4ea4\u4e92 -d \u540e\u53f0\u8fd0\u884c -p \u7aef\u53e3\u6620\u5c04 -v \u78c1\u76d8\u6302\u8f7d \u542f\u52a8\u5df2\u7ec8\u6b62\u5bb9\u5668 docker start \u505c\u6b62\u5bb9\u5668 docker stop \u67e5\u770b\u5bb9\u5668\u8fdb\u7a0b docker ps \u67e5\u770b\u5bb9\u5668\u7ec6\u8282\uff1a docker inspect <containerid> \u8fdb\u5165\u5bb9\u5668\uff1b docker exec -it <containerid> bash Docker attach\uff1a \u901a\u8fc7 nsenter PID=$(docker inspect --format \"{{ .State.Pid }}\" <container>) $ nsenter --target $PID --mount --uts --ipc --net --pid \u62f7\u8d1d\u6587\u4ef6\u81f3\u5bb9\u5668\u5185\uff1a docker cp file1 <containerid>:/file-to-path \u521d\u8bc6\u5bb9\u5668 cat Dockerfile FROM ubuntu ENV MY_SERVICE_PORT=80 ADD bin/amd64/httpserver /httpserver ENTRYPOINT /httpserver \u5c06 Dockerfile \u6253\u5305\u6210\u955c\u50cf docker build -t cncamp/httpserver:${tag} . docker push cncamp/httpserver:v1.0 \u8fd0\u884c\u5bb9\u5668 docker run -d cncamp/httpserver:v1.0 \u5bb9\u5668\u6807\u51c6 Open Container Initiative\uff08OCI\uff09 \u8f7b\u91cf\u7ea7\u5f00\u653e\u5f0f\u7ba1\u7406\u7ec4\u7ec7\uff08\u9879\u76ee\uff09 OCI \u4e3b\u8981\u5b9a\u4e49\u4e24\u4e2a\u89c4\u8303 Runtime Specification \u6587\u4ef6\u7cfb\u7edf\u5305\u5982\u4f55\u89e3\u538b\u81f3\u786c\u76d8\uff0c\u5171\u8fd0\u884c\u65f6\u8fd0\u884c\u3002 Image Specification \u5982\u4f55\u901a\u8fc7\u6784\u5efa\u7cfb\u7edf\u6253\u5305\uff0c\u751f\u6210\u955c\u50cf\u6e05\u5355\uff08Manifest\uff09\u3001\u6587\u4ef6\u7cfb\u7edf\u5e8f\u5217\u5316\u6587\u4ef6\u3001\u955c\u50cf\u914d\u7f6e\u3002 \u5bb9\u5668\u4e3b\u8981\u7279\u6027 Namespace Linux Namespace \u662f\u4e00\u79cd Linux Kernel \u63d0\u4f9b\u7684\u8d44\u6e90\u9694\u79bb\u65b9\u6848\uff1a \u7cfb\u7edf\u53ef\u4ee5\u4e3a\u8fdb\u7a0b\u5206\u914d\u4e0d\u540c\u7684 Namespace\uff1b \u5e76\u4fdd\u8bc1\u4e0d\u540c\u7684 Namespace \u8d44\u6e90\u72ec\u7acb\u5206\u914d\u3001\u8fdb\u7a0b\u5f7c\u6b64\u9694\u79bb\uff0c\u5373\u4e0d\u540c\u7684 Namespace \u4e0b\u7684\u8fdb\u7a0b\u4e92\u4e0d\u5e72\u6270 \u3002 Linux \u5185\u6838\u4ee3\u7801\u4e2d Namespace \u7684\u5b9e\u73b0 \u8fdb\u7a0b\u6570\u636e\u7ed3\u6784 struct task_struct { ... /* namespaces */ struct nsproxy *nsproxy; ... } Namespace \u6570\u636e\u7ed3\u6784 struct nsproxy { atomic_t count; struct uts_namespace *uts_ns; struct ipc_namespace *ipc_ns; struct mnt_namespace *mnt_ns; struct pid_namespace *pid_ns_for_children; struct net *net_ns; } Linux \u5bf9 Namespace \u64cd\u4f5c\u65b9\u6cd5 clone \u5728\u521b\u5efa\u65b0\u8fdb\u7a0b\u7684\u7cfb\u7edf\u8c03\u7528\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7 flags \u53c2\u6570\u6307\u5b9a\u9700\u8981\u65b0\u5efa\u7684 Namespace \u7c7b\u578b\uff1a // CLONE_NEWCGROUP / CLONE_NEWIPC / CLONE_NEWNET / CLONE_NEWNS / CLONE_NEWPID / CLONE_NEWUSER / CLONE_NEWUTS int clone(int (*fn)(void *), void *child_stack, int flags, void *arg) setns \u8be5\u7cfb\u7edf\u8c03\u7528\u53ef\u4ee5\u8ba9\u8c03\u7528\u8fdb\u7a0b\u52a0\u5165\u67d0\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684 Namespace \u4e2d\uff1a Int setns(int fd, int nstype) unshare \u8be5\u7cfb\u7edf\u8c03\u7528\u53ef\u4ee5\u5c06\u8c03\u7528\u8fdb\u7a0b\u79fb\u52a8\u5230\u65b0\u7684 Namespace \u4e0b\uff1a int unshare(int flags) \u9694\u79bb\u6027 \u2013 Linux Namespace \u9694\u79bb\u6027 - Linux Namespace Pid namespace \u4e0d\u540c\u7528\u6237\u7684\u8fdb\u7a0b\u5c31\u662f\u901a\u8fc7 Pid namespace \u9694\u79bb\u5f00\u7684\uff0c\u4e14\u4e0d\u540c namespace \u4e2d\u53ef\u4ee5\u6709\u76f8\u540c Pid\u3002 \u6709\u4e86 Pid namespace, \u6bcf\u4e2a namespace \u4e2d\u7684 Pid \u80fd\u591f\u76f8\u4e92\u9694\u79bb\u3002 net namespace \u7f51\u7edc\u9694\u79bb\u662f\u901a\u8fc7 net namespace \u5b9e\u73b0\u7684\uff0c \u6bcf\u4e2a net namespace \u6709\u72ec\u7acb\u7684 network devices, IP addresses, IP routing tables, /proc/net \u76ee\u5f55\u3002 Docker \u9ed8\u8ba4\u91c7\u7528 veth \u7684\u65b9\u5f0f\u5c06 container \u4e2d\u7684\u865a\u62df\u7f51\u5361\u540c host \u4e0a\u7684\u4e00\u4e2a docker bridge: docker0 \u8fde\u63a5\u5728\u4e00\u8d77\u3002 ipc namespace Container \u4e2d\u8fdb\u7a0b\u4ea4\u4e92\u8fd8\u662f\u91c7\u7528 linux \u5e38\u89c1\u7684\u8fdb\u7a0b\u95f4\u4ea4\u4e92\u65b9\u6cd5 \uff08interprocess communication \u2013 IPC\uff09, \u5305\u62ec\u5e38\u89c1\u7684\u4fe1\u53f7\u91cf\u3001\u6d88\u606f\u961f\u5217\u548c\u5171\u4eab\u5185\u5b58\u3002 container \u7684\u8fdb\u7a0b\u95f4\u4ea4\u4e92\u5b9e\u9645\u4e0a\u8fd8\u662f host\u4e0a \u5177\u6709\u76f8\u540c Pid namespace \u4e2d\u7684\u8fdb\u7a0b\u95f4\u4ea4\u4e92\uff0c\u56e0\u6b64\u9700\u8981\u5728 IPC\u8d44\u6e90\u7533\u8bf7\u65f6\u52a0\u5165 namespace \u4fe1\u606f - \u6bcf\u4e2a IPC \u8d44\u6e90\u6709\u4e00\u4e2a\u552f\u4e00\u7684 32 \u4f4d ID\u3002 mnt namespace mnt namespace \u5141\u8bb8\u4e0d\u540c namespace \u7684\u8fdb\u7a0b\u770b\u5230\u7684\u6587\u4ef6\u7ed3\u6784\u4e0d\u540c\uff0c\u8fd9\u6837\u6bcf\u4e2a namespace \u4e2d\u7684\u8fdb\u7a0b\u6240\u770b\u5230\u7684\u6587\u4ef6\u76ee\u5f55\u5c31\u88ab\u9694\u79bb\u5f00\u4e86\u3002 uts namespace UTS(\u201cUNIX Time-sharing System\u201d) namespace\u5141\u8bb8\u6bcf\u4e2a container \u62e5\u6709\u72ec\u7acb\u7684 hostname \u548c domain name, \u4f7f\u5176\u5728\u7f51\u7edc\u4e0a\u53ef\u4ee5\u88ab\u89c6\u4f5c\u4e00\u4e2a\u72ec\u7acb\u7684\u8282\u70b9\u800c\u975e Host \u4e0a\u7684\u4e00\u4e2a\u8fdb\u7a0b\u3002 user namespace \u6bcf\u4e2a container \u53ef\u4ee5\u6709\u4e0d\u540c\u7684 user \u548c group id, \u4e5f\u5c31\u662f\u8bf4\u53ef\u4ee5\u5728 container \u5185\u90e8\u7528 container \u5185\u90e8\u7684\u7528\u6237\u6267\u884c\u7a0b\u5e8f\u800c\u975e Host \u4e0a\u7684\u7528\u6237\u3002 \u5173\u4e8e namespace \u7684\u5e38\u7528\u64cd\u4f5c code \u67e5\u770b\u5f53\u524d\u7cfb\u7edf\u7684 namespace\uff1a lsns \u2013t <type> \u67e5\u770b\u67d0\u8fdb\u7a0b\u7684 namespace\uff1a ls -la /proc/<pid>/ns/ \u8fdb\u5165\u67d0 namespace \u8fd0\u884c\u547d\u4ee4\uff1a nsenter -t <pid> -n ip addr Namespace \u7ec3\u4e60 \u5728\u65b0 network namespace \u6267\u884c sleep \u6307\u4ee4\uff1a unshare -fn sleep 60 \u67e5\u770b\u8fdb\u7a0b\u4fe1\u606f ps -ef|grep sleep root 32882 4935 0 10:00 pts/0 00:00:00 unshare -fn sleep 60 root 32883 32882 0 10:00 pts/0 00:00:00 sleep 60 \u67e5\u770b\u7f51\u7edc Namespace lsns -t net 4026532508 net 2 32882 root unassigned unshare \u8fdb\u5165\u6539\u8fdb\u7a0b\u6240\u5728 Namespace \u67e5\u770b\u7f51\u7edc\u914d\u7f6e\uff0c\u4e0e\u4e3b\u673a\u4e0d\u4e00\u81f4 nsenter -t 32882 -n ip a 1: lo: <LOOPBACK> mtu 65536 qdisc noop state DOWN group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 Cgroups Cgroups \uff08Control Groups\uff09\u662f Linux \u4e0b\u7528\u4e8e\u5bf9\u4e00\u4e2a\u6216\u4e00\u7ec4\u8fdb\u7a0b\u8fdb\u884c\u8d44\u6e90\u63a7\u5236\u548c\u76d1\u63a7\u7684\u673a\u5236\uff1b \u53ef\u4ee5\u5bf9\u8bf8\u5982 CPU \u4f7f\u7528\u65f6\u95f4\u3001\u5185\u5b58\u3001\u78c1\u76d8 I/O \u7b49\u8fdb\u7a0b\u6240\u9700\u7684\u8d44\u6e90\u8fdb\u884c\u9650\u5236\uff1b \u4e0d\u540c\u8d44\u6e90\u7684\u5177\u4f53\u7ba1\u7406\u5de5\u4f5c\u7531\u76f8\u5e94\u7684 Cgroup \u5b50\u7cfb\u7edf\uff08Subsystem\uff09\u6765\u5b9e\u73b0 \uff1b \u9488\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u8d44\u6e90\u9650\u5236\uff0c\u53ea\u8981\u5c06\u9650\u5236\u7b56\u7565\u5728\u4e0d\u540c\u7684\u7684\u5b50\u7cfb\u7edf\u4e0a\u8fdb\u884c\u5173\u8054\u5373\u53ef \uff1b Cgroups \u5728\u4e0d\u540c\u7684\u7cfb\u7edf\u8d44\u6e90\u7ba1\u7406\u5b50\u7cfb\u7edf\u4e2d\u4ee5\u5c42\u7ea7\u6811\uff08Hierarchy\uff09\u7684\u65b9\u5f0f\u6765\u7ec4\u7ec7\u7ba1\u7406\uff1a\u6bcf\u4e2a Cgroup \u90fd\u53ef\u4ee5\u5305\u542b\u5176\u4ed6\u7684\u5b50 Cgroup\uff0c\u56e0\u6b64\u5b50 Cgroup \u80fd\u4f7f\u7528\u7684\u8d44\u6e90\u9664\u4e86\u53d7\u672c Cgroup \u914d\u7f6e\u7684\u8d44\u6e90\u53c2\u6570\u9650\u5236\uff0c\u8fd8\u53d7\u5230\u7236Cgroup \u8bbe\u7f6e\u7684\u8d44\u6e90\u9650\u5236 \u3002 Linux \u5185\u6838\u4ee3\u7801\u4e2d Cgroups \u7684\u5b9e\u73b0 \u8fdb\u7a0b\u6570\u636e\u7ed3\u6784 struct task_struct { #ifdef CONFIG_CGROUPS struct css_set __rcu *cgroups; struct list_head cg_list; #endif } css_set \u662f cgroup_subsys_state \u5bf9\u8c61\u7684\u96c6\u5408\u6570\u636e\u7ed3\u6784 struct css_set { /* * Set of subsystem states, one for each subsystem. This array is * immutable after creation apart from the init_css_set during * subsystem registration (at boot time). */ struct cgroup_subsys_state *subsys[CGROUP_SUBSYS_COUNT]; }; \u53ef\u914d\u989d/\u53ef\u5ea6\u91cf - Control Groups (cgroups) cgroups \u5b9e\u73b0\u4e86\u5bf9\u8d44\u6e90\u7684\u914d\u989d\u548c\u5ea6\u91cf blkio: \u8fd9\u4e2a\u5b50\u7cfb\u7edf\u8bbe\u7f6e\u9650\u5236\u6bcf\u4e2a\u5757\u8bbe\u5907\u7684\u8f93\u5165\u8f93\u51fa\u63a7\u5236\u3002\u4f8b\u5982:\u78c1\u76d8\uff0c\u5149\u76d8\u4ee5\u53ca USB \u7b49\u7b49\u3002 CPU: \u8fd9\u4e2a\u5b50\u7cfb\u7edf\u4f7f\u7528\u8c03\u5ea6\u7a0b\u5e8f\u4e3a cgroup \u4efb\u52a1\u63d0\u4f9b CPU \u7684\u8bbf\u95ee\u3002 cpuacct: \u4ea7\u751f cgroup \u4efb\u52a1\u7684 CPU \u8d44\u6e90\u62a5\u544a\u3002 cpuset: \u5982\u679c\u662f\u591a\u6838\u5fc3\u7684 CPU\uff0c\u8fd9\u4e2a\u5b50\u7cfb\u7edf\u4f1a\u4e3a cgroup \u4efb\u52a1\u5206\u914d\u5355\u72ec\u7684 CPU \u548c\u5185\u5b58\u3002 devices: \u5141\u8bb8\u6216\u62d2\u7edd cgroup \u4efb\u52a1\u5bf9\u8bbe\u5907\u7684\u8bbf\u95ee\u3002 freezer: \u6682\u505c\u548c\u6062\u590d cgroup \u4efb\u52a1\u3002 memory: \u8bbe\u7f6e\u6bcf\u4e2a cgroup \u7684\u5185\u5b58\u9650\u5236\u4ee5\u53ca\u4ea7\u751f\u5185\u5b58\u8d44\u6e90\u62a5\u544a\u3002 net_cls: \u6807\u8bb0\u6bcf\u4e2a\u7f51\u7edc\u5305\u4ee5\u4f9b cgroup \u65b9\u4fbf\u4f7f\u7528\u3002 ns: \u540d\u79f0\u7a7a\u95f4\u5b50\u7cfb\u7edf\u3002 pid: \u8fdb\u7a0b\u6807\u8bc6\u5b50\u7cfb\u7edf\u3002 CPU \u5b50\u7cfb\u7edf cpu.shares\uff1a \u53ef\u51fa\u8ba9\u7684\u80fd\u83b7\u5f97 CPU \u4f7f\u7528\u65f6\u95f4\u7684\u76f8\u5bf9\u503c\u3002 cpu.cfs_period_us: cfs_period_us \u7528\u6765\u914d\u7f6e\u65f6\u95f4\u5468\u671f\u957f\u5ea6\uff0c\u5355\u4f4d\u4e3a us\uff08\u5fae\u79d2\uff09\u3002 cpu.cfs_quota_us\uff1a cfs_quota_us \u7528\u6765\u914d\u7f6e\u5f53\u524d Cgroup \u5728 cfs_period_us \u65f6\u95f4\u5185\u6700\u591a\u80fd\u4f7f\u7528\u7684 CPU \u65f6\u95f4\u6570\uff0c\u5355\u4f4d\u4e3a us\uff08\u5fae\u79d2\uff09\u3002 cpu.stat: Cgroup \u5185\u7684\u8fdb\u7a0b\u4f7f\u7528\u7684 CPU \u65f6\u95f4\u7edf\u8ba1\u3002 nr_periods: \u7ecf\u8fc7 cpu.cfs_period_us \u7684\u65f6\u95f4\u5468\u671f\u6570\u91cf\u3002 nr_throttled: \u5728\u7ecf\u8fc7\u7684\u5468\u671f\u5185\uff0c\u6709\u591a\u5c11\u6b21\u56e0\u4e3a\u8fdb\u7a0b\u5728\u6307\u5b9a\u7684\u65f6\u95f4\u5468\u671f\u5185\u7528\u5149\u4e86\u914d\u989d\u65f6\u95f4\u800c\u53d7\u5230\u9650\u5236\u3002 throttled_time: Cgroup \u4e2d\u7684\u8fdb\u7a0b\u88ab\u9650\u5236\u4f7f\u7528 CPU \u7684\u603b\u7528\u65f6\uff0c\u5355\u4f4d\u662f ns\uff08\u7eb3\u79d2\uff09\u3002 Linux \u8c03\u5ea6\u5668 \u5185\u6838\u9ed8\u8ba4\u63d0\u4f9b\u4e865\u4e2a\u8c03\u5ea6\u5668\uff0cLinux \u5185\u6838\u4f7f\u7528 struct sched_class \u6765\u5bf9\u8c03\u5ea6\u5668\u8fdb\u884c\u62bd\u8c61\uff1a Stop \u8c03\u5ea6\u5668\uff0cstop_sched_class\uff1a\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u8c03\u5ea6\u7c7b\uff0c\u53ef\u4ee5\u62a2\u5360\u5176\u4ed6\u6240\u6709\u8fdb\u7a0b\uff0c\u4e0d\u80fd\u88ab\u5176\u4ed6\u8fdb\u7a0b\u62a2\u5360\uff1b Deadline \u8c03\u5ea6\u5668\uff0cdl_sched_class\uff1a\u4f7f\u7528\u7ea2\u9ed1\u6811\uff0c\u628a\u8fdb\u7a0b\u6309\u7167\u7edd\u5bf9\u622a\u6b62\u671f\u9650\u8fdb\u884c\u6392\u5e8f\uff0c\u9009\u62e9\u6700\u5c0f\u8fdb\u7a0b\u8fdb\u884c\u8c03\u5ea6\u8fd0\u884c\uff1b RT \u8c03\u5ea6\u5668\uff0c rt_sched_class\uff1a\u5b9e\u65f6\u8c03\u5ea6\u5668\uff0c\u4e3a\u6bcf\u4e2a\u4f18\u5148\u7ea7\u7ef4\u62a4\u4e00\u4e2a\u961f\u5217\uff1b CFS \u8c03\u5ea6\u5668\uff0c cfs_sched_class\uff1a\u5b8c\u5168\u516c\u5e73\u8c03\u5ea6\u5668\uff0c\u91c7\u7528\u5b8c\u5168\u516c\u5e73\u8c03\u5ea6\u7b97\u6cd5\uff0c\u5f15\u5165\u865a\u62df\u8fd0\u884c\u65f6\u95f4\u6982\u5ff5\uff1b IDLE-Task \u8c03\u5ea6\u5668\uff0c idle_sched_class\uff1a\u7a7a\u95f2\u8c03\u5ea6\u5668\uff0c\u6bcf\u4e2a CPU \u90fd\u4f1a\u6709\u4e00\u4e2a idle \u7ebf\u7a0b\uff0c\u5f53\u6ca1\u6709\u5176\u4ed6\u8fdb\u7a0b\u53ef\u4ee5\u8c03\u5ea6\u65f6\uff0c\u8c03\u5ea6\u8fd0\u884c idle \u7ebf\u7a0b\u3002 CFS \u8c03\u5ea6\u5668 CFS \u662f Completely Fair Scheduler \u7b80\u79f0\uff0c\u5373\u5b8c\u5168\u516c\u5e73\u8c03\u5ea6\u5668\u3002 CFS \u5b9e\u73b0\u7684\u4e3b\u8981\u601d\u60f3\u662f\u7ef4\u62a4\u4e3a\u4efb\u52a1\u63d0\u4f9b\u5904\u7406\u5668\u65f6\u95f4\u65b9\u9762\u7684\u5e73\u8861\uff0c\u8fd9\u610f\u5473\u7740\u5e94\u7ed9\u8fdb\u7a0b\u5206\u914d\u76f8\u5f53\u6570\u91cf\u7684\u5904\u7406\u5668\u3002 \u5206\u7ed9\u67d0\u4e2a\u4efb\u52a1\u7684\u65f6\u95f4\u5931\u53bb\u5e73\u8861\u65f6\uff0c\u5e94\u7ed9\u5931\u53bb\u5e73\u8861\u7684\u4efb\u52a1\u5206\u914d\u65f6\u95f4\uff0c\u8ba9\u5176\u6267\u884c\u3002 CFS \u901a\u8fc7\u865a\u62df\u8fd0\u884c\u65f6\u95f4\uff08vruntime\uff09\u6765\u5b9e\u73b0\u5e73\u8861\uff0c\u7ef4\u62a4\u63d0\u4f9b\u7ed9\u67d0\u4e2a\u4efb\u52a1\u7684\u65f6\u95f4\u91cf\u3002 vruntime = \u5b9e\u9645\u8fd0\u884c\u65f6\u95f4*1024 / \u8fdb\u7a0b\u6743\u91cd \u8fdb\u7a0b\u6309\u7167\u5404\u81ea\u4e0d\u540c\u7684\u901f\u7387\u5728\u7269\u7406\u65f6\u949f\u8282\u62cd\u5185\u524d\u8fdb\uff0c\u4f18\u5148\u7ea7\u9ad8\u5219\u6743\u91cd\u5927\uff0c\u5176\u865a\u62df\u65f6\u949f\u6bd4\u771f\u5b9e\u65f6\u949f\u8dd1\u5f97\u6162\uff0c\u4f46\u83b7\u5f97\u6bd4\u8f83\u591a\u7684\u8fd0\u884c\u65f6\u95f4\u3002 vruntime \u7ea2\u9ed1\u6811 CFS \u8c03\u5ea6\u5668\u6ca1\u6709\u5c06\u8fdb\u7a0b\u7ef4\u62a4\u5728\u8fd0\u884c\u961f\u5217\u4e2d\uff0c\u800c\u662f\u7ef4\u62a4\u4e86\u4e00\u4e2a\u4ee5\u865a\u62df\u8fd0\u884c\u65f6\u95f4\u4e3a\u987a\u5e8f\u7684\u7ea2\u9ed1\u6811\u3002 \u7ea2\u9ed1\u6811\u7684\u4e3b\u8981\u7279\u70b9\u6709\uff1a \u81ea\u5e73\u8861\uff0c\u6811\u4e0a\u6ca1\u6709\u4e00\u6761\u8def\u5f84\u4f1a\u6bd4\u5176\u4ed6\u8def\u5f84\u957f\u51fa\u4fe9\u500d\u3002 O(log n) \u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u80fd\u591f\u5728\u6811\u4e0a\u8fdb\u884c\u5feb\u901f\u9ad8\u6548\u5730\u63d2\u5165\u6216\u5220\u9664\u8fdb\u7a0b\u3002 CFS\u8fdb\u7a0b\u8c03\u5ea6 \u5728\u65f6\u949f\u5468\u671f\u5f00\u59cb\u65f6\uff0c\u8c03\u5ea6\u5668\u8c03\u7528 __schedule() \u51fd\u6570\u6765\u5f00\u59cb\u8c03\u5ea6\u7684\u8fd0\u884c\u3002 __schedule() \u51fd\u6570\u8c03\u7528 pick_next_task() \u8ba9\u8fdb\u7a0b\u8c03\u5ea6\u5668\u4ece\u5c31\u7eea\u961f\u5217\u4e2d\u9009\u62e9\u4e00\u4e2a\u6700\u5408\u9002\u7684\u8fdb\u7a0b next\uff0c\u5373\u7ea2\u9ed1\u6811\u6700\u5de6\u8fb9\u7684\u8282\u70b9\u3002 \u901a\u8fc7 context_switch() \u5207\u6362\u5230\u65b0\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u4ece\u800c\u4fdd\u8bc1 next \u8fdb\u7a0b\u8fd0\u884c\u3002 \u5728\u65f6\u949f\u5468\u671f\u7ed3\u675f\u65f6\uff0c\u8c03\u5ea6\u5668\u8c03\u7528 entity_tick() \u51fd\u6570\u6765\u66f4\u65b0\u8fdb\u7a0b\u8d1f\u8f7d\u3001\u8fdb\u7a0b\u72b6\u6001\u4ee5\u53ca vruntime\uff08\u5f53\u524dvruntime + \u8be5\u65f6\u949f\u5468\u671f\u5185\u8fd0\u884c\u7684\u65f6\u95f4\uff09\u3002 \u6700\u540e\uff0c\u5c06\u8be5\u8fdb\u7a0b\u7684\u865a\u62df\u65f6\u95f4\u4e0e\u5c31\u7eea\u961f\u5217\u7ea2\u9ed1\u6811\u4e2d\u6700\u5de6\u8fb9\u7684\u8c03\u5ea6\u5b9e\u4f53\u7684\u865a\u62df\u65f6\u95f4\u505a\u6bd4\u8f83\uff0c\u5982\u679c\u5c0f\u4e8e\u5750\u5de6\u8fb9\u7684\u65f6\u95f4\uff0c\u5219\u4e0d\u7528\u89e6\u53d1\u8c03\u5ea6\uff0c\u7ee7\u7eed\u8c03\u5ea6\u5f53\u524d\u8c03\u5ea6\u5b9e\u4f53\u3002 CPU \u5b50\u7cfb\u7edf\u7ec3\u4e60 code \u5728 cgroup cpu \u5b50\u7cfb\u7edf\u76ee\u5f55\u4e2d\u521b\u5efa\u76ee\u5f55\u7ed3\u6784 cd /sys/fs/cgroup/cpu mkdir cpudemo cd cpudemo \u8fd0\u884c busyloop \u6267\u884c top \u67e5\u770b CPU \u4f7f\u7528\u60c5\u51b5\uff0cCPU \u5360\u7528 200% \u901a\u8fc7 cgroup \u9650\u5236 cpu cd /sys/fs/cgroup/cpu/cpudemo \u628a\u8fdb\u7a0b\u6dfb\u52a0\u5230 cgroup \u8fdb\u7a0b\u914d\u7f6e\u7ec4 echo ps -ef|grep busyloop|grep -v grep|awk '{print $2}' > cgroup.procs \u8bbe\u7f6e cpuquota echo 10000 > cpu.cfs_quota_us \u6267\u884c top \u67e5\u770b CPU \u4f7f\u7528\u60c5\u51b5\uff0cCPU \u5360\u7528\u53d8\u4e3a10% cpuacct \u5b50\u7cfb\u7edf \u7528\u4e8e\u7edf\u8ba1 Cgroup \u53ca\u5176\u5b50 Cgroup \u4e0b\u8fdb\u7a0b\u7684 CPU \u7684\u4f7f\u7528\u60c5\u51b5\u3002 cpuacct.usage \u5305\u542b\u8be5 Cgroup \u53ca\u5176\u5b50 Cgroup \u4e0b\u8fdb\u7a0b\u4f7f\u7528 CPU \u7684\u65f6\u95f4\uff0c\u5355\u4f4d\u662f ns\uff08\u7eb3\u79d2\uff09\u3002 cpuacct.stat \u5305\u542b\u8be5 Cgroup \u53ca\u5176\u5b50 Cgroup \u4e0b\u8fdb\u7a0b\u4f7f\u7528\u7684 CPU \u65f6\u95f4\uff0c\u4ee5\u53ca\u7528\u6237\u6001\u548c\u5185\u6838\u6001\u7684\u65f6\u95f4\u3002 Memory \u5b50\u7cfb\u7edf memory.usage_in_bytes cgroup \u4e0b\u8fdb\u7a0b\u4f7f\u7528\u7684\u5185\u5b58\uff0c\u5305\u542b cgroup \u53ca\u5176\u5b50 cgroup \u4e0b\u7684\u8fdb\u7a0b\u4f7f\u7528\u7684\u5185\u5b58 memory.max_usage_in_bytes cgroup \u4e0b\u8fdb\u7a0b\u4f7f\u7528\u5185\u5b58\u7684\u6700\u5927\u503c\uff0c\u5305\u542b\u5b50 cgroup \u7684\u5185\u5b58\u4f7f\u7528\u91cf\u3002 memory.limit_in_bytes \u8bbe\u7f6e Cgroup \u4e0b\u8fdb\u7a0b\u6700\u591a\u80fd\u4f7f\u7528\u7684\u5185\u5b58\u3002\u5982\u679c\u8bbe\u7f6e\u4e3a -1\uff0c\u8868\u793a\u5bf9\u8be5 cgroup \u7684\u5185\u5b58\u4f7f\u7528\u4e0d\u505a\u9650\u5236\u3002 memory.soft_limit_in_bytes \u8fd9\u4e2a\u9650\u5236\u5e76\u4e0d\u4f1a\u963b\u6b62\u8fdb\u7a0b\u4f7f\u7528\u8d85\u8fc7\u9650\u989d\u7684\u5185\u5b58\uff0c\u53ea\u662f\u5728\u7cfb\u7edf\u5185\u5b58\u8db3\u591f\u65f6\uff0c\u4f1a\u4f18\u5148\u56de\u6536\u8d85\u8fc7\u9650\u989d\u7684\u5185\u5b58\uff0c\u4f7f\u4e4b\u5411\u9650\u5b9a\u503c\u9760\u62e2\u3002 memory.oom_control \u8bbe\u7f6e\u662f\u5426\u5728 Cgroup \u4e2d\u4f7f\u7528 OOM\uff08Out of Memory\uff09Killer\uff0c\u9ed8\u8ba4\u4e3a\u4f7f\u7528\u3002\u5f53\u5c5e\u4e8e\u8be5 cgroup \u7684\u8fdb\u7a0b\u4f7f\u7528\u7684\u5185\u5b58\u8d85\u8fc7\u6700\u5927\u7684\u9650\u5b9a\u503c\u65f6\uff0c\u4f1a\u7acb\u523b\u88ab OOM Killer \u5904\u7406\u3002 Cgroup driver systemd: \u5f53\u64cd\u4f5c\u7cfb\u7edf\u4f7f\u7528 systemd \u4f5c\u4e3a init system \u65f6\uff0c\u521d\u59cb\u5316\u8fdb\u7a0b\u751f\u6210\u4e00\u4e2a\u6839 cgroup \u76ee\u5f55\u7ed3\u6784\u5e76\u4f5c\u4e3a cgroup\u7ba1\u7406\u5668\u3002 systemd \u4e0e cgroup \u7d27\u5bc6\u7ed3\u5408\uff0c\u5e76\u4e14\u4e3a\u6bcf\u4e2a systemd unit \u5206\u914d cgroup\u3002 cgroupfs: docker \u9ed8\u8ba4\u7528 cgroupfs \u4f5c\u4e3a cgroup \u9a71\u52a8\u3002 \u5b58\u5728\u95ee\u9898\uff1a \u5728 systemd \u4f5c\u4e3a init system \u7684\u7cfb\u7edf\u4e2d\uff0c\u9ed8\u8ba4\u5e76\u5b58\u7740\u4e24\u5957 groupdriver\u3002 \u8fd9\u4f1a\u4f7f\u5f97\u7cfb\u7edf\u4e2d Docker \u548c kubelet \u7ba1\u7406\u7684\u8fdb\u7a0b\u88ab cgroupfs \u9a71\u52a8\u7ba1\uff0c\u800c systemd \u62c9\u8d77\u7684\u670d\u52a1\u7531systemd \u9a71\u52a8\u7ba1\uff0c\u8ba9 cgroup \u7ba1\u7406\u6df7\u4e71\u4e14\u5bb9\u6613\u5728\u8d44\u6e90\u7d27\u5f20\u65f6\u5f15\u53d1\u95ee\u9898\u3002 \u56e0\u6b64 kubelet \u4f1a\u9ed8\u8ba4--cgroup-driver=systemd\uff0c\u82e5\u8fd0\u884c\u65f6 cgroup \u4e0d\u4e00\u81f4\u65f6\uff0ckubelet \u4f1a\u62a5\u9519\u3002 \u8bfe\u540e\u7ec3\u4e603.1 code Memory \u5b50\u7cfb\u7edf\u7ec3\u4e60 \u5728 cgroup memory \u5b50\u7cfb\u7edf\u76ee\u5f55\u4e2d\u521b\u5efa\u76ee\u5f55\u7ed3\u6784 cd /sys/fs/cgroup/memory mkdir memorydemo cd memorydemo \u8fd0\u884c malloc\uff08\u5728linux\u673a\u5668make build\uff09 \u67e5\u770b\u5185\u5b58\u4f7f\u7528\u60c5\u51b5 watch 'ps -aux|grep malloc|grep -v grep\u2018 \u901a\u8fc7 cgroup \u9650\u5236 memory \u628a\u8fdb\u7a0b\u6dfb\u52a0\u5230cgroup\u8fdb\u7a0b\u914d\u7f6e\u7ec4 echo ps -ef|grep malloc |grep -v grep|awk '{print $2}' > cgroup.procs \u8bbe\u7f6e memory.limit_in_bytes echo 104960000 > memory.limit_in_bytes \u7b49\u5f85\u8fdb\u7a0b\u88ab oom kill \u6587\u4ef6\u7cfb\u7edf Union FS \u5c06\u4e0d\u540c\u76ee\u5f55\u6302\u8f7d\u5230\u540c\u4e00\u4e2a\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u4e0b \uff08unite several directories into a single virtual filesystem\uff09\u7684\u6587\u4ef6\u7cfb\u7edf \u652f\u6301\u4e3a\u6bcf\u4e00\u4e2a\u6210\u5458\u76ee\u5f55\uff08\u7c7b\u4f3cGit Branch\uff09\u8bbe\u5b9a readonly\u3001readwrite \u548c whiteout-able \u6743\u9650 \u6587\u4ef6\u7cfb\u7edf\u5206\u5c42, \u5bf9 readonly \u6743\u9650\u7684 branch \u53ef\u4ee5\u903b\u8f91\u4e0a\u8fdb\u884c\u4fee\u6539(\u589e\u91cf\u5730, \u4e0d\u5f71\u54cd readonly \u90e8\u5206\u7684)\u3002 \u901a\u5e38 Union FS \u6709\u4e24\u4e2a\u7528\u9014, \u4e00\u65b9\u9762\u53ef\u4ee5\u5c06\u591a\u4e2a disk \u6302\u5230\u540c\u4e00\u4e2a\u76ee\u5f55\u4e0b, \u53e6\u4e00\u4e2a\u66f4\u5e38\u7528\u7684\u5c31\u662f\u5c06\u4e00\u4e2areadonly \u7684 branch \u548c\u4e00\u4e2a writeable \u7684 branch \u8054\u5408\u5728\u4e00\u8d77\u3002 \u5bb9\u5668\u955c\u50cf Docker \u7684\u6587\u4ef6\u7cfb\u7edf \u5178\u578b\u7684 Linux \u6587\u4ef6\u7cfb\u7edf\u7ec4\u6210\uff1a Bootfs\uff08boot file system\uff09 Bootloader - \u5f15\u5bfc\u52a0\u8f7d kernel\uff0c Kernel - \u5f53 kernel \u88ab\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\u540e umount bootfs\u3002 rootfs \uff08root file system\uff09 /dev\uff0c/proc\uff0c/bin\uff0c/etc \u7b49\u6807\u51c6\u76ee\u5f55\u548c\u6587\u4ef6\u3002 \u5bf9\u4e8e\u4e0d\u540c\u7684 linux \u53d1\u884c\u7248, bootfs \u57fa\u672c\u662f\u4e00\u81f4\u7684\uff0c\u4f46 rootfs \u4f1a\u6709\u5dee\u522b\u3002 Docker \u542f\u52a8 Linux \u5728\u542f\u52a8\u540e\uff0c\u9996\u5148\u5c06 rootfs \u8bbe\u7f6e\u4e3a readonly, \u8fdb\u884c\u4e00\u7cfb\u5217\u68c0\u67e5, \u7136\u540e\u5c06\u5176\u5207\u6362\u4e3a \u201creadwrite\u201d\u4f9b\u7528\u6237\u4f7f\u7528\u3002Docker \u542f\u52a8 \u521d\u59cb\u5316\u65f6\u4e5f\u662f\u5c06 rootfs \u4ee5 readonly \u65b9\u5f0f\u52a0\u8f7d\u5e76\u68c0\u67e5\uff0c\u7136\u800c\u63a5\u4e0b\u6765\u5229\u7528 union mount \u7684\u65b9\u5f0f\u5c06\u4e00\u4e2areadwrite \u6587\u4ef6\u7cfb\u7edf\u6302\u8f7d\u5728 readonly \u7684 rootfs \u4e4b\u4e0a\uff1b - \u5e76\u4e14\u5141\u8bb8\u518d\u6b21\u5c06\u4e0b\u5c42\u7684 FS\uff08file system\uff09 \u8bbe\u5b9a\u4e3a readonly \u5e76\u4e14\u5411\u4e0a\u53e0\u52a0\u3002 \u8fd9\u6837\u4e00\u7ec4 readonly \u548c\u4e00\u4e2a writeable \u7684\u7ed3\u6784\u6784\u6210\u4e00\u4e2a container \u7684\u8fd0\u884c\u65f6\u6001, \u6bcf\u4e00\u4e2a FS \u88ab\u79f0\u4f5c\u4e00\u4e2a FS\u5c42\u3002 \u5199\u64cd\u4f5c \u7531\u4e8e\u955c\u50cf\u5177\u6709\u5171\u4eab\u7279\u6027\uff0c\u6240\u4ee5\u5bf9\u5bb9\u5668\u53ef\u5199\u5c42\u7684\u64cd\u4f5c\u9700\u8981\u4f9d\u8d56\u5b58\u50a8\u9a71\u52a8\u63d0\u4f9b\u7684\u5199\u65f6\u590d\u5236\u548c\u7528\u65f6\u5206\u914d\u673a\u5236\uff0c\u4ee5\u6b64\u6765\u652f\u6301\u5bf9\u5bb9\u5668\u53ef\u5199\u5c42\u7684\u4fee\u6539\uff0c\u8fdb\u800c\u63d0\u9ad8\u5bf9\u5b58\u50a8\u548c\u5185\u5b58\u8d44\u6e90\u7684\u5229\u7528\u7387\u3002 \u5199\u65f6\u590d\u5236 \u5199\u65f6\u590d\u5236\uff0c\u5373 Copy-on-Write\u3002 \u4e00\u4e2a\u955c\u50cf\u53ef\u4ee5\u88ab\u591a\u4e2a\u5bb9\u5668\u4f7f\u7528\uff0c\u4f46\u662f\u4e0d\u9700\u8981\u5728\u5185\u5b58\u548c\u78c1\u76d8\u4e0a\u505a\u591a\u4e2a\u62f7\u8d1d\u3002 \u5728\u9700\u8981\u5bf9\u955c\u50cf\u63d0\u4f9b\u7684\u6587\u4ef6\u8fdb\u884c\u4fee\u6539\u65f6\uff0c\u8be5\u6587\u4ef6\u4f1a\u4ece\u955c\u50cf\u7684\u6587\u4ef6\u7cfb\u7edf\u88ab\u590d\u5236\u5230\u5bb9\u5668\u7684\u53ef\u5199\u5c42\u7684\u6587\u4ef6\u7cfb\u7edf\u8fdb\u884c\u4fee\u6539\uff0c\u800c\u955c\u50cf\u91cc\u9762\u7684\u6587\u4ef6\u4e0d\u4f1a\u6539\u53d8\u3002 \u4e0d\u540c\u5bb9\u5668\u5bf9\u6587\u4ef6\u7684\u4fee\u6539\u90fd\u76f8\u4e92\u72ec\u7acb\u3001\u4e92\u4e0d\u5f71\u54cd\u3002 \u7528\u65f6\u5206\u914d \u6309\u9700\u5206\u914d\u7a7a\u95f4\uff0c\u800c\u975e\u63d0\u524d\u5206\u914d\uff0c\u5373\u5f53\u4e00\u4e2a\u6587\u4ef6\u88ab\u521b\u5efa\u51fa\u6765\u540e\uff0c\u624d\u4f1a\u5206\u914d\u7a7a\u95f4\u3002 \u5bb9\u5668\u5b58\u50a8\u9a71\u52a8 \u4ee5 OverlayFS \u4e3a\u4f8b OverlayFS \u4e5f\u662f\u4e00\u79cd\u4e0e AUFS \u7c7b\u4f3c\u7684\u8054\u5408\u6587\u4ef6\u7cfb\u7edf\uff0c\u540c\u6837\u5c5e\u4e8e\u6587\u4ef6\u7ea7\u7684\u5b58\u50a8\u9a71\u52a8\uff0c\u5305\u542b\u4e86\u6700\u521d\u7684 Overlay \u548c\u66f4\u65b0\u66f4\u7a33\u5b9a\u7684 overlay2\u3002 Overlay \u53ea\u6709\u4e24\u5c42\uff1aupper \u5c42\u548c lower \u5c42\uff0cLower \u5c42\u4ee3\u8868\u955c\u50cf\u5c42\uff0cupper \u5c42\u4ee3\u8868\u5bb9\u5668\u53ef\u5199\u5c42\u3002 OverlayFS \u6587\u4ef6\u7cfb\u7edf\u7ec3\u4e60 code mkdir upper lower merged work echo \"from lower\" > lower/in_lower.txt echo \"from upper\" > upper/in_upper.txt echo \"from lower\" > lower/in_both.txt echo \"from upper\" > upper/in_both.txt sudo mount -t overlay overlay -o lowerdir=`pwd`/lower,upperdir=`pwd`/upper,workdir=`pwd`/work `pwd`/merged cat merged/in_both.txt delete merged/in_both.txt delete merged/in_lower.txt delete merged/in_upper.txt OCI \u5bb9\u5668\u6807\u51c6 Open Container Initiative OCI \u7ec4\u7ec7\u4e8e 2015 \u5e74\u521b\u5efa\uff0c\u662f\u4e00\u4e2a\u81f4\u529b\u4e8e\u5b9a\u4e49\u5bb9\u5668\u955c\u50cf\u6807\u51c6\u548c\u8fd0\u884c\u65f6\u6807\u51c6\u7684\u5f00\u653e\u5f0f\u7ec4\u7ec7\u3002 OCI \u5b9a\u4e49\u4e86\u955c\u50cf\u6807\u51c6\uff08Runtime Specification\uff09\u3001\u8fd0\u884c\u65f6\u6807\u51c6\uff08Image Specification\uff09\u548c\u5206\u53d1\u6807\u51c6\uff08Distribution Specification\uff09 \u955c\u50cf\u6807\u51c6\u5b9a\u4e49\u5e94\u7528\u5982\u4f55\u6253\u5305 \u8fd0\u884c\u65f6\u6807\u51c6\u5b9a\u4e49\u5982\u4f55\u89e3\u538b\u5e94\u7528\u5305\u5e76\u8fd0\u884c \u5206\u53d1\u6807\u51c6\u5b9a\u4e49\u5982\u4f55\u5206\u53d1\u5bb9\u5668\u955c\u50cf Docker \u5f15\u64ce\u67b6\u6784 \u7f51\u7edc code \u5355\u673a\u7248\u7f51\u7edc Null(--net=None) \u628a\u5bb9\u5668\u653e\u5165\u72ec\u7acb\u7684\u7f51\u7edc\u7a7a\u95f4\u4f46\u4e0d\u505a\u4efb\u4f55\u7f51\u7edc\u914d\u7f6e\uff1b \u7528\u6237\u9700\u8981\u901a\u8fc7\u8fd0\u884c docker network \u547d\u4ee4\u6765\u5b8c\u6210\u7f51\u7edc\u914d\u7f6e\u3002 Host \u4f7f\u7528\u4e3b\u673a\u7f51\u7edc\u540d\u7a7a\u95f4\uff0c\u590d\u7528\u4e3b\u673a\u7f51\u7edc\u3002 Container \u91cd\u7528\u5176\u4ed6\u5bb9\u5668\u7684\u7f51\u7edc\u3002 Bridge(--net=bridge) \u4f7f\u7528 Linux \u7f51\u6865\u548c iptables \u63d0\u4f9b\u5bb9\u5668\u4e92\u8054\uff0cDocker \u5728\u6bcf\u53f0\u4e3b\u673a\u4e0a\u521b\u5efa\u4e00\u4e2a\u540d\u53eb docker0 \u7684\u7f51\u6865\uff0c\u901a\u8fc7 veth pair \u6765\u8fde\u63a5\u8be5\u4e3b\u673a\u7684\u6bcf\u4e00\u4e2a EndPoint\u3002 \u96c6\u7fa4\u7248\u7f51\u7edc Overlay(libnetwork, libkv) \u901a\u8fc7\u7f51\u7edc\u5c01\u5305\u5b9e\u73b0\u3002 Remote(work with remote drivers) Underlay\uff1a \u4f7f\u7528\u73b0\u6709\u5e95\u5c42\u7f51\u7edc\uff0c\u4e3a\u6bcf\u4e00\u4e2a\u5bb9\u5668\u914d\u7f6e\u53ef\u8def\u7531\u7684\u7f51\u7edc IP\u3002 Overlay\uff1a \u901a\u8fc7\u7f51\u7edc\u5c01\u5305\u5b9e\u73b0\u3002 Null \u6a21\u5f0f Null \u6a21\u5f0f\u662f\u4e00\u4e2a\u7a7a\u5b9e\u73b0\uff1b \u53ef\u4ee5\u901a\u8fc7 Null \u6a21\u5f0f\u542f\u52a8\u5bb9\u5668\u5e76\u5728\u5bbf\u4e3b\u673a\u4e0a\u901a\u8fc7\u547d\u4ee4\u4e3a\u5bb9\u5668\u914d\u7f6e\u7f51\u7edc\u3002 mkdir -p /var/run/netns find -L /var/run/netns -type l -delete ln -s /proc/$pid/ns/net /var/run/netns/$pid ip link add A type veth peer name B brctl addif br0 A ip link set A up ip link set B netns $pid ip netns exec $pid ip link set dev B name eth0 ip netns exec $pid ip link set eth0 up ip netns exec $pid ip addr add $SETIP/$SETMASK dev eth0 ip netns exec $pid ip route add default via $GATEWAY \u9ed8\u8ba4\u6a21\u5f0f\u2013 \u7f51\u6865\u548c NAT \u4e3a\u4e3b\u673a eth0 \u5206\u914d IP 192.168.0.101\uff1b \u542f\u52a8 docker daemon\uff0c\u67e5\u770b\u4e3b\u673a iptables\uff1b POSTROUTING -A POSTROUTING -s 172.17.0.0/16 ! -o docker0 -j MASQUERADE \u5728\u4e3b\u673a\u542f\u52a8\u5bb9\u5668\uff1a docker run -d --name ssh -p 2333:22 centos-ssh Docker \u4f1a\u4ee5\u6807\u51c6\u6a21\u5f0f\u914d\u7f6e\u7f51\u7edc\uff1a \u521b\u5efa veth pair\uff1b \u5c06 veth pair\u7684\u4e00\u7aef\u8fde\u63a5\u5230 docker0 \u7f51\u6865\uff1b veth pair \u7684\u53e6\u5916\u4e00\u7aef\u8bbe\u7f6e\u4e3a\u5bb9\u5668\u540d\u7a7a\u95f4\u7684 eth0\uff1b \u4e3a\u5bb9\u5668\u540d\u7a7a\u95f4\u7684 eth0 \u5206\u914d ip\uff1b \u4e3b\u673a\u4e0a\u7684 Iptables \u89c4\u5219\uff1aPREROUTING -A DOCKER ! -i docker0 -p tcp -m tcp --dport 2333 -j DNAT --to-destination 172.17.0.2:22\u3002 Underlay \u91c7\u7528 Linux \u7f51\u6865\u8bbe\u5907\uff08sbrctl\uff09\uff0c\u901a\u8fc7\u7269\u7406\u7f51\u7edc\u8fde\u901a\u5bb9\u5668\uff1b \u521b\u5efa\u65b0\u7684\u7f51\u6865\u8bbe\u5907 mydr0\uff1b \u5c06\u4e3b\u673a\u7f51\u5361\u52a0\u5165\u7f51\u6865\uff1b \u628a\u4e3b\u673a\u7f51\u5361\u7684\u5730\u5740\u914d\u7f6e\u5230\u7f51\u6865\uff0c\u5e76\u628a\u9ed8\u8ba4\u8def\u7531\u89c4\u5219\u8f6c\u79fb\u5230\u7f51\u6865 mydr0\uff1b \u542f\u52a8\u5bb9\u5668\uff1b \u521b\u5efa veth \u5bf9\uff0c\u5e76\u4e14\u628a\u4e00\u4e2a peer \u6dfb\u52a0\u5230\u7f51\u6865 mydr0\uff1b \u914d\u7f6e\u5bb9\u5668\u628a veth \u7684\u53e6\u4e00\u4e2a peer \u5206\u914d\u7ed9\u5bb9\u5668\u7f51\u5361\uff1b Docker Libnetwork Overlay Docker overlay \u7f51\u7edc\u9a71\u52a8\u539f\u751f\u652f\u6301\u591a\u4e3b\u673a\u7f51\u7edc\uff1b Libnetwork \u662f\u4e00\u4e2a\u5185\u7f6e\u7684\u57fa\u4e8e VXLAN \u7684\u7f51\u7edc\u9a71\u52a8\u3002 VXLAN Overlay network sample \u2013 Flannel \u540c\u4e00\u4e3b\u673a\u5185\u7684 Pod \u53ef\u4ee5\u4f7f\u7528\u7f51\u6865\u8fdb\u884c\u901a\u4fe1\u3002 \u4e0d\u540c\u4e3b\u673a\u4e0a\u7684 Pod \u5c06\u901a\u8fc7flanneld \u5c06\u5176\u6d41\u91cf\u5c01\u88c5\u5728 UDP\u6570\u636e\u5305\u4e2d \u3002 Flannel packet sample","title":"\u7406\u89e3 Docker"},{"location":"2/1/2/#docker","text":"","title":"\u7406\u89e3 Docker"},{"location":"2/1/2/#docker_1","text":"\u57fa\u4e8e Linux \u5185\u6838\u7684 Cgroup\uff0cNamespace\uff0c\u4ee5\u53ca Union FS \u7b49\u6280\u672f\uff0c\u5bf9\u8fdb\u7a0b\u8fdb\u884c\u5c01\u88c5\u9694\u79bb\uff0c\u5c5e\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u5c42\u9762\u7684\u865a\u62df\u5316\u6280\u672f\uff0c\u7531\u4e8e\u9694\u79bb\u7684\u8fdb\u7a0b\u72ec\u7acb\u4e8e\u5bbf\u4e3b\u548c\u5176\u5b83\u7684\u9694\u79bb\u7684\u8fdb\u7a0b\uff0c\u56e0\u6b64\u4e5f\u79f0\u5176\u4e3a\u5bb9\u5668\u3002 \u6700\u521d\u5b9e\u73b0\u662f\u57fa\u4e8e LXC\uff0c\u4ece 0.7 \u4ee5\u540e\u5f00\u59cb\u53bb\u9664 LXC\uff0c\u8f6c\u800c\u4f7f\u7528\u81ea\u884c\u5f00\u53d1\u7684 Libcontainer\uff0c\u4ece 1.11 \u5f00\u59cb\uff0c\u5219\u8fdb\u4e00\u6b65\u6f14\u8fdb\u4e3a\u4f7f\u7528 runC \u548c Containerd\u3002 Docker \u5728\u5bb9\u5668\u7684\u57fa\u7840\u4e0a\uff0c\u8fdb\u884c\u4e86\u8fdb\u4e00\u6b65\u7684\u5c01\u88c5\uff0c\u4ece\u6587\u4ef6\u7cfb\u7edf\u3001\u7f51\u7edc\u4e92\u8054\u5230\u8fdb\u7a0b\u9694\u79bb\u7b49\u7b49\uff0c\u6781\u5927\u7684\u7b80\u5316\u4e86\u5bb9\u5668\u7684\u521b\u5efa\u548c\u7ef4\u62a4\uff0c\u4f7f\u5f97 Docker \u6280\u672f\u6bd4\u865a\u62df\u673a\u6280\u672f\u66f4\u4e3a\u8f7b\u4fbf\u3001\u5feb\u6377\u3002","title":"Docker"},{"location":"2/1/2/#docker_2","text":"\u66f4\u9ad8\u6548\u5730\u5229\u7528\u7cfb\u7edf\u8d44\u6e90 \u66f4\u5feb\u901f\u7684\u542f\u52a8\u65f6\u95f4 \u4e00\u81f4\u7684\u8fd0\u884c\u73af\u5883 \u6301\u7eed\u4ea4\u4ed8\u548c\u90e8\u7f72 \u66f4\u8f7b\u677e\u5730\u8fc1\u79fb \u66f4\u8f7b\u677e\u5730\u7ef4\u62a4\u548c\u6269\u5c55 ......","title":"\u4e3a\u4ec0\u4e48\u8981\u7528 Docker"},{"location":"2/1/2/#_1","text":"","title":"\u865a\u62df\u673a\u548c\u5bb9\u5668\u8fd0\u884c\u6001\u7684\u5bf9\u6bd4"},{"location":"2/1/2/#_2","text":"","title":"\u6027\u80fd\u5bf9\u6bd4"},{"location":"2/1/2/#docker_3","text":"\u5728 ubuntu \u4e0a\u5b89\u88c5 Docker \u8fd0\u884c\u65f6\uff0c\u53c2\u8003 https://docs.docker.com/engine/install/ubuntu/ $ sudo apt-get update $ sudo apt-get install \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg-agent \\ software-properties-common $ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - $ sudo add-apt-repository \\ \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) \\ stable\" $ sudo apt-get update $ sudo apt-get install docker-ce docker-ce-cli containerd.io","title":"\u5b89\u88c5 Docker"},{"location":"2/1/2/#_3","text":"\u542f\u52a8\uff1a docker run -it \u4ea4\u4e92 -d \u540e\u53f0\u8fd0\u884c -p \u7aef\u53e3\u6620\u5c04 -v \u78c1\u76d8\u6302\u8f7d \u542f\u52a8\u5df2\u7ec8\u6b62\u5bb9\u5668 docker start \u505c\u6b62\u5bb9\u5668 docker stop \u67e5\u770b\u5bb9\u5668\u8fdb\u7a0b docker ps \u67e5\u770b\u5bb9\u5668\u7ec6\u8282\uff1a docker inspect <containerid> \u8fdb\u5165\u5bb9\u5668\uff1b docker exec -it <containerid> bash Docker attach\uff1a \u901a\u8fc7 nsenter PID=$(docker inspect --format \"{{ .State.Pid }}\" <container>) $ nsenter --target $PID --mount --uts --ipc --net --pid \u62f7\u8d1d\u6587\u4ef6\u81f3\u5bb9\u5668\u5185\uff1a docker cp file1 <containerid>:/file-to-path","title":"\u5bb9\u5668\u64cd\u4f5c"},{"location":"2/1/2/#_4","text":"cat Dockerfile FROM ubuntu ENV MY_SERVICE_PORT=80 ADD bin/amd64/httpserver /httpserver ENTRYPOINT /httpserver \u5c06 Dockerfile \u6253\u5305\u6210\u955c\u50cf docker build -t cncamp/httpserver:${tag} . docker push cncamp/httpserver:v1.0 \u8fd0\u884c\u5bb9\u5668 docker run -d cncamp/httpserver:v1.0","title":"\u521d\u8bc6\u5bb9\u5668"},{"location":"2/1/2/#_5","text":"Open Container Initiative\uff08OCI\uff09 \u8f7b\u91cf\u7ea7\u5f00\u653e\u5f0f\u7ba1\u7406\u7ec4\u7ec7\uff08\u9879\u76ee\uff09 OCI \u4e3b\u8981\u5b9a\u4e49\u4e24\u4e2a\u89c4\u8303 Runtime Specification \u6587\u4ef6\u7cfb\u7edf\u5305\u5982\u4f55\u89e3\u538b\u81f3\u786c\u76d8\uff0c\u5171\u8fd0\u884c\u65f6\u8fd0\u884c\u3002 Image Specification \u5982\u4f55\u901a\u8fc7\u6784\u5efa\u7cfb\u7edf\u6253\u5305\uff0c\u751f\u6210\u955c\u50cf\u6e05\u5355\uff08Manifest\uff09\u3001\u6587\u4ef6\u7cfb\u7edf\u5e8f\u5217\u5316\u6587\u4ef6\u3001\u955c\u50cf\u914d\u7f6e\u3002","title":"\u5bb9\u5668\u6807\u51c6"},{"location":"2/1/2/#_6","text":"","title":"\u5bb9\u5668\u4e3b\u8981\u7279\u6027"},{"location":"2/1/2/#namespace","text":"Linux Namespace \u662f\u4e00\u79cd Linux Kernel \u63d0\u4f9b\u7684\u8d44\u6e90\u9694\u79bb\u65b9\u6848\uff1a \u7cfb\u7edf\u53ef\u4ee5\u4e3a\u8fdb\u7a0b\u5206\u914d\u4e0d\u540c\u7684 Namespace\uff1b \u5e76\u4fdd\u8bc1\u4e0d\u540c\u7684 Namespace \u8d44\u6e90\u72ec\u7acb\u5206\u914d\u3001\u8fdb\u7a0b\u5f7c\u6b64\u9694\u79bb\uff0c\u5373\u4e0d\u540c\u7684 Namespace \u4e0b\u7684\u8fdb\u7a0b\u4e92\u4e0d\u5e72\u6270 \u3002","title":"Namespace"},{"location":"2/1/2/#linux-namespace","text":"\u8fdb\u7a0b\u6570\u636e\u7ed3\u6784 struct task_struct { ... /* namespaces */ struct nsproxy *nsproxy; ... } Namespace \u6570\u636e\u7ed3\u6784 struct nsproxy { atomic_t count; struct uts_namespace *uts_ns; struct ipc_namespace *ipc_ns; struct mnt_namespace *mnt_ns; struct pid_namespace *pid_ns_for_children; struct net *net_ns; }","title":"Linux \u5185\u6838\u4ee3\u7801\u4e2d Namespace \u7684\u5b9e\u73b0"},{"location":"2/1/2/#linux-namespace_1","text":"clone \u5728\u521b\u5efa\u65b0\u8fdb\u7a0b\u7684\u7cfb\u7edf\u8c03\u7528\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7 flags \u53c2\u6570\u6307\u5b9a\u9700\u8981\u65b0\u5efa\u7684 Namespace \u7c7b\u578b\uff1a // CLONE_NEWCGROUP / CLONE_NEWIPC / CLONE_NEWNET / CLONE_NEWNS / CLONE_NEWPID / CLONE_NEWUSER / CLONE_NEWUTS int clone(int (*fn)(void *), void *child_stack, int flags, void *arg) setns \u8be5\u7cfb\u7edf\u8c03\u7528\u53ef\u4ee5\u8ba9\u8c03\u7528\u8fdb\u7a0b\u52a0\u5165\u67d0\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684 Namespace \u4e2d\uff1a Int setns(int fd, int nstype) unshare \u8be5\u7cfb\u7edf\u8c03\u7528\u53ef\u4ee5\u5c06\u8c03\u7528\u8fdb\u7a0b\u79fb\u52a8\u5230\u65b0\u7684 Namespace \u4e0b\uff1a int unshare(int flags)","title":"Linux \u5bf9 Namespace \u64cd\u4f5c\u65b9\u6cd5"},{"location":"2/1/2/#linux-namespace_2","text":"","title":"\u9694\u79bb\u6027 \u2013 Linux Namespace"},{"location":"2/1/2/#-linux-namespace","text":"Pid namespace \u4e0d\u540c\u7528\u6237\u7684\u8fdb\u7a0b\u5c31\u662f\u901a\u8fc7 Pid namespace \u9694\u79bb\u5f00\u7684\uff0c\u4e14\u4e0d\u540c namespace \u4e2d\u53ef\u4ee5\u6709\u76f8\u540c Pid\u3002 \u6709\u4e86 Pid namespace, \u6bcf\u4e2a namespace \u4e2d\u7684 Pid \u80fd\u591f\u76f8\u4e92\u9694\u79bb\u3002 net namespace \u7f51\u7edc\u9694\u79bb\u662f\u901a\u8fc7 net namespace \u5b9e\u73b0\u7684\uff0c \u6bcf\u4e2a net namespace \u6709\u72ec\u7acb\u7684 network devices, IP addresses, IP routing tables, /proc/net \u76ee\u5f55\u3002 Docker \u9ed8\u8ba4\u91c7\u7528 veth \u7684\u65b9\u5f0f\u5c06 container \u4e2d\u7684\u865a\u62df\u7f51\u5361\u540c host \u4e0a\u7684\u4e00\u4e2a docker bridge: docker0 \u8fde\u63a5\u5728\u4e00\u8d77\u3002 ipc namespace Container \u4e2d\u8fdb\u7a0b\u4ea4\u4e92\u8fd8\u662f\u91c7\u7528 linux \u5e38\u89c1\u7684\u8fdb\u7a0b\u95f4\u4ea4\u4e92\u65b9\u6cd5 \uff08interprocess communication \u2013 IPC\uff09, \u5305\u62ec\u5e38\u89c1\u7684\u4fe1\u53f7\u91cf\u3001\u6d88\u606f\u961f\u5217\u548c\u5171\u4eab\u5185\u5b58\u3002 container \u7684\u8fdb\u7a0b\u95f4\u4ea4\u4e92\u5b9e\u9645\u4e0a\u8fd8\u662f host\u4e0a \u5177\u6709\u76f8\u540c Pid namespace \u4e2d\u7684\u8fdb\u7a0b\u95f4\u4ea4\u4e92\uff0c\u56e0\u6b64\u9700\u8981\u5728 IPC\u8d44\u6e90\u7533\u8bf7\u65f6\u52a0\u5165 namespace \u4fe1\u606f - \u6bcf\u4e2a IPC \u8d44\u6e90\u6709\u4e00\u4e2a\u552f\u4e00\u7684 32 \u4f4d ID\u3002 mnt namespace mnt namespace \u5141\u8bb8\u4e0d\u540c namespace \u7684\u8fdb\u7a0b\u770b\u5230\u7684\u6587\u4ef6\u7ed3\u6784\u4e0d\u540c\uff0c\u8fd9\u6837\u6bcf\u4e2a namespace \u4e2d\u7684\u8fdb\u7a0b\u6240\u770b\u5230\u7684\u6587\u4ef6\u76ee\u5f55\u5c31\u88ab\u9694\u79bb\u5f00\u4e86\u3002 uts namespace UTS(\u201cUNIX Time-sharing System\u201d) namespace\u5141\u8bb8\u6bcf\u4e2a container \u62e5\u6709\u72ec\u7acb\u7684 hostname \u548c domain name, \u4f7f\u5176\u5728\u7f51\u7edc\u4e0a\u53ef\u4ee5\u88ab\u89c6\u4f5c\u4e00\u4e2a\u72ec\u7acb\u7684\u8282\u70b9\u800c\u975e Host \u4e0a\u7684\u4e00\u4e2a\u8fdb\u7a0b\u3002 user namespace \u6bcf\u4e2a container \u53ef\u4ee5\u6709\u4e0d\u540c\u7684 user \u548c group id, \u4e5f\u5c31\u662f\u8bf4\u53ef\u4ee5\u5728 container \u5185\u90e8\u7528 container \u5185\u90e8\u7684\u7528\u6237\u6267\u884c\u7a0b\u5e8f\u800c\u975e Host \u4e0a\u7684\u7528\u6237\u3002","title":"\u9694\u79bb\u6027 - Linux Namespace"},{"location":"2/1/2/#namespace_1","text":"code \u67e5\u770b\u5f53\u524d\u7cfb\u7edf\u7684 namespace\uff1a lsns \u2013t <type> \u67e5\u770b\u67d0\u8fdb\u7a0b\u7684 namespace\uff1a ls -la /proc/<pid>/ns/ \u8fdb\u5165\u67d0 namespace \u8fd0\u884c\u547d\u4ee4\uff1a nsenter -t <pid> -n ip addr","title":"\u5173\u4e8e namespace \u7684\u5e38\u7528\u64cd\u4f5c"},{"location":"2/1/2/#namespace_2","text":"\u5728\u65b0 network namespace \u6267\u884c sleep \u6307\u4ee4\uff1a unshare -fn sleep 60 \u67e5\u770b\u8fdb\u7a0b\u4fe1\u606f ps -ef|grep sleep root 32882 4935 0 10:00 pts/0 00:00:00 unshare -fn sleep 60 root 32883 32882 0 10:00 pts/0 00:00:00 sleep 60 \u67e5\u770b\u7f51\u7edc Namespace lsns -t net 4026532508 net 2 32882 root unassigned unshare \u8fdb\u5165\u6539\u8fdb\u7a0b\u6240\u5728 Namespace \u67e5\u770b\u7f51\u7edc\u914d\u7f6e\uff0c\u4e0e\u4e3b\u673a\u4e0d\u4e00\u81f4 nsenter -t 32882 -n ip a 1: lo: <LOOPBACK> mtu 65536 qdisc noop state DOWN group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00","title":"Namespace \u7ec3\u4e60"},{"location":"2/1/2/#cgroups","text":"Cgroups \uff08Control Groups\uff09\u662f Linux \u4e0b\u7528\u4e8e\u5bf9\u4e00\u4e2a\u6216\u4e00\u7ec4\u8fdb\u7a0b\u8fdb\u884c\u8d44\u6e90\u63a7\u5236\u548c\u76d1\u63a7\u7684\u673a\u5236\uff1b \u53ef\u4ee5\u5bf9\u8bf8\u5982 CPU \u4f7f\u7528\u65f6\u95f4\u3001\u5185\u5b58\u3001\u78c1\u76d8 I/O \u7b49\u8fdb\u7a0b\u6240\u9700\u7684\u8d44\u6e90\u8fdb\u884c\u9650\u5236\uff1b \u4e0d\u540c\u8d44\u6e90\u7684\u5177\u4f53\u7ba1\u7406\u5de5\u4f5c\u7531\u76f8\u5e94\u7684 Cgroup \u5b50\u7cfb\u7edf\uff08Subsystem\uff09\u6765\u5b9e\u73b0 \uff1b \u9488\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u8d44\u6e90\u9650\u5236\uff0c\u53ea\u8981\u5c06\u9650\u5236\u7b56\u7565\u5728\u4e0d\u540c\u7684\u7684\u5b50\u7cfb\u7edf\u4e0a\u8fdb\u884c\u5173\u8054\u5373\u53ef \uff1b Cgroups \u5728\u4e0d\u540c\u7684\u7cfb\u7edf\u8d44\u6e90\u7ba1\u7406\u5b50\u7cfb\u7edf\u4e2d\u4ee5\u5c42\u7ea7\u6811\uff08Hierarchy\uff09\u7684\u65b9\u5f0f\u6765\u7ec4\u7ec7\u7ba1\u7406\uff1a\u6bcf\u4e2a Cgroup \u90fd\u53ef\u4ee5\u5305\u542b\u5176\u4ed6\u7684\u5b50 Cgroup\uff0c\u56e0\u6b64\u5b50 Cgroup \u80fd\u4f7f\u7528\u7684\u8d44\u6e90\u9664\u4e86\u53d7\u672c Cgroup \u914d\u7f6e\u7684\u8d44\u6e90\u53c2\u6570\u9650\u5236\uff0c\u8fd8\u53d7\u5230\u7236Cgroup \u8bbe\u7f6e\u7684\u8d44\u6e90\u9650\u5236 \u3002","title":"Cgroups"},{"location":"2/1/2/#linux-cgroups","text":"\u8fdb\u7a0b\u6570\u636e\u7ed3\u6784 struct task_struct { #ifdef CONFIG_CGROUPS struct css_set __rcu *cgroups; struct list_head cg_list; #endif } css_set \u662f cgroup_subsys_state \u5bf9\u8c61\u7684\u96c6\u5408\u6570\u636e\u7ed3\u6784 struct css_set { /* * Set of subsystem states, one for each subsystem. This array is * immutable after creation apart from the init_css_set during * subsystem registration (at boot time). */ struct cgroup_subsys_state *subsys[CGROUP_SUBSYS_COUNT]; };","title":"Linux \u5185\u6838\u4ee3\u7801\u4e2d Cgroups \u7684\u5b9e\u73b0"},{"location":"2/1/2/#-control-groups-cgroups","text":"cgroups \u5b9e\u73b0\u4e86\u5bf9\u8d44\u6e90\u7684\u914d\u989d\u548c\u5ea6\u91cf blkio: \u8fd9\u4e2a\u5b50\u7cfb\u7edf\u8bbe\u7f6e\u9650\u5236\u6bcf\u4e2a\u5757\u8bbe\u5907\u7684\u8f93\u5165\u8f93\u51fa\u63a7\u5236\u3002\u4f8b\u5982:\u78c1\u76d8\uff0c\u5149\u76d8\u4ee5\u53ca USB \u7b49\u7b49\u3002 CPU: \u8fd9\u4e2a\u5b50\u7cfb\u7edf\u4f7f\u7528\u8c03\u5ea6\u7a0b\u5e8f\u4e3a cgroup \u4efb\u52a1\u63d0\u4f9b CPU \u7684\u8bbf\u95ee\u3002 cpuacct: \u4ea7\u751f cgroup \u4efb\u52a1\u7684 CPU \u8d44\u6e90\u62a5\u544a\u3002 cpuset: \u5982\u679c\u662f\u591a\u6838\u5fc3\u7684 CPU\uff0c\u8fd9\u4e2a\u5b50\u7cfb\u7edf\u4f1a\u4e3a cgroup \u4efb\u52a1\u5206\u914d\u5355\u72ec\u7684 CPU \u548c\u5185\u5b58\u3002 devices: \u5141\u8bb8\u6216\u62d2\u7edd cgroup \u4efb\u52a1\u5bf9\u8bbe\u5907\u7684\u8bbf\u95ee\u3002 freezer: \u6682\u505c\u548c\u6062\u590d cgroup \u4efb\u52a1\u3002 memory: \u8bbe\u7f6e\u6bcf\u4e2a cgroup \u7684\u5185\u5b58\u9650\u5236\u4ee5\u53ca\u4ea7\u751f\u5185\u5b58\u8d44\u6e90\u62a5\u544a\u3002 net_cls: \u6807\u8bb0\u6bcf\u4e2a\u7f51\u7edc\u5305\u4ee5\u4f9b cgroup \u65b9\u4fbf\u4f7f\u7528\u3002 ns: \u540d\u79f0\u7a7a\u95f4\u5b50\u7cfb\u7edf\u3002 pid: \u8fdb\u7a0b\u6807\u8bc6\u5b50\u7cfb\u7edf\u3002","title":"\u53ef\u914d\u989d/\u53ef\u5ea6\u91cf - Control Groups (cgroups)"},{"location":"2/1/2/#cpu","text":"cpu.shares\uff1a \u53ef\u51fa\u8ba9\u7684\u80fd\u83b7\u5f97 CPU \u4f7f\u7528\u65f6\u95f4\u7684\u76f8\u5bf9\u503c\u3002 cpu.cfs_period_us: cfs_period_us \u7528\u6765\u914d\u7f6e\u65f6\u95f4\u5468\u671f\u957f\u5ea6\uff0c\u5355\u4f4d\u4e3a us\uff08\u5fae\u79d2\uff09\u3002 cpu.cfs_quota_us\uff1a cfs_quota_us \u7528\u6765\u914d\u7f6e\u5f53\u524d Cgroup \u5728 cfs_period_us \u65f6\u95f4\u5185\u6700\u591a\u80fd\u4f7f\u7528\u7684 CPU \u65f6\u95f4\u6570\uff0c\u5355\u4f4d\u4e3a us\uff08\u5fae\u79d2\uff09\u3002 cpu.stat: Cgroup \u5185\u7684\u8fdb\u7a0b\u4f7f\u7528\u7684 CPU \u65f6\u95f4\u7edf\u8ba1\u3002 nr_periods: \u7ecf\u8fc7 cpu.cfs_period_us \u7684\u65f6\u95f4\u5468\u671f\u6570\u91cf\u3002 nr_throttled: \u5728\u7ecf\u8fc7\u7684\u5468\u671f\u5185\uff0c\u6709\u591a\u5c11\u6b21\u56e0\u4e3a\u8fdb\u7a0b\u5728\u6307\u5b9a\u7684\u65f6\u95f4\u5468\u671f\u5185\u7528\u5149\u4e86\u914d\u989d\u65f6\u95f4\u800c\u53d7\u5230\u9650\u5236\u3002 throttled_time: Cgroup \u4e2d\u7684\u8fdb\u7a0b\u88ab\u9650\u5236\u4f7f\u7528 CPU \u7684\u603b\u7528\u65f6\uff0c\u5355\u4f4d\u662f ns\uff08\u7eb3\u79d2\uff09\u3002","title":"CPU \u5b50\u7cfb\u7edf"},{"location":"2/1/2/#linux","text":"\u5185\u6838\u9ed8\u8ba4\u63d0\u4f9b\u4e865\u4e2a\u8c03\u5ea6\u5668\uff0cLinux \u5185\u6838\u4f7f\u7528 struct sched_class \u6765\u5bf9\u8c03\u5ea6\u5668\u8fdb\u884c\u62bd\u8c61\uff1a Stop \u8c03\u5ea6\u5668\uff0cstop_sched_class\uff1a\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u8c03\u5ea6\u7c7b\uff0c\u53ef\u4ee5\u62a2\u5360\u5176\u4ed6\u6240\u6709\u8fdb\u7a0b\uff0c\u4e0d\u80fd\u88ab\u5176\u4ed6\u8fdb\u7a0b\u62a2\u5360\uff1b Deadline \u8c03\u5ea6\u5668\uff0cdl_sched_class\uff1a\u4f7f\u7528\u7ea2\u9ed1\u6811\uff0c\u628a\u8fdb\u7a0b\u6309\u7167\u7edd\u5bf9\u622a\u6b62\u671f\u9650\u8fdb\u884c\u6392\u5e8f\uff0c\u9009\u62e9\u6700\u5c0f\u8fdb\u7a0b\u8fdb\u884c\u8c03\u5ea6\u8fd0\u884c\uff1b RT \u8c03\u5ea6\u5668\uff0c rt_sched_class\uff1a\u5b9e\u65f6\u8c03\u5ea6\u5668\uff0c\u4e3a\u6bcf\u4e2a\u4f18\u5148\u7ea7\u7ef4\u62a4\u4e00\u4e2a\u961f\u5217\uff1b CFS \u8c03\u5ea6\u5668\uff0c cfs_sched_class\uff1a\u5b8c\u5168\u516c\u5e73\u8c03\u5ea6\u5668\uff0c\u91c7\u7528\u5b8c\u5168\u516c\u5e73\u8c03\u5ea6\u7b97\u6cd5\uff0c\u5f15\u5165\u865a\u62df\u8fd0\u884c\u65f6\u95f4\u6982\u5ff5\uff1b IDLE-Task \u8c03\u5ea6\u5668\uff0c idle_sched_class\uff1a\u7a7a\u95f2\u8c03\u5ea6\u5668\uff0c\u6bcf\u4e2a CPU \u90fd\u4f1a\u6709\u4e00\u4e2a idle \u7ebf\u7a0b\uff0c\u5f53\u6ca1\u6709\u5176\u4ed6\u8fdb\u7a0b\u53ef\u4ee5\u8c03\u5ea6\u65f6\uff0c\u8c03\u5ea6\u8fd0\u884c idle \u7ebf\u7a0b\u3002","title":"Linux \u8c03\u5ea6\u5668"},{"location":"2/1/2/#cfs","text":"CFS \u662f Completely Fair Scheduler \u7b80\u79f0\uff0c\u5373\u5b8c\u5168\u516c\u5e73\u8c03\u5ea6\u5668\u3002 CFS \u5b9e\u73b0\u7684\u4e3b\u8981\u601d\u60f3\u662f\u7ef4\u62a4\u4e3a\u4efb\u52a1\u63d0\u4f9b\u5904\u7406\u5668\u65f6\u95f4\u65b9\u9762\u7684\u5e73\u8861\uff0c\u8fd9\u610f\u5473\u7740\u5e94\u7ed9\u8fdb\u7a0b\u5206\u914d\u76f8\u5f53\u6570\u91cf\u7684\u5904\u7406\u5668\u3002 \u5206\u7ed9\u67d0\u4e2a\u4efb\u52a1\u7684\u65f6\u95f4\u5931\u53bb\u5e73\u8861\u65f6\uff0c\u5e94\u7ed9\u5931\u53bb\u5e73\u8861\u7684\u4efb\u52a1\u5206\u914d\u65f6\u95f4\uff0c\u8ba9\u5176\u6267\u884c\u3002 CFS \u901a\u8fc7\u865a\u62df\u8fd0\u884c\u65f6\u95f4\uff08vruntime\uff09\u6765\u5b9e\u73b0\u5e73\u8861\uff0c\u7ef4\u62a4\u63d0\u4f9b\u7ed9\u67d0\u4e2a\u4efb\u52a1\u7684\u65f6\u95f4\u91cf\u3002 vruntime = \u5b9e\u9645\u8fd0\u884c\u65f6\u95f4*1024 / \u8fdb\u7a0b\u6743\u91cd \u8fdb\u7a0b\u6309\u7167\u5404\u81ea\u4e0d\u540c\u7684\u901f\u7387\u5728\u7269\u7406\u65f6\u949f\u8282\u62cd\u5185\u524d\u8fdb\uff0c\u4f18\u5148\u7ea7\u9ad8\u5219\u6743\u91cd\u5927\uff0c\u5176\u865a\u62df\u65f6\u949f\u6bd4\u771f\u5b9e\u65f6\u949f\u8dd1\u5f97\u6162\uff0c\u4f46\u83b7\u5f97\u6bd4\u8f83\u591a\u7684\u8fd0\u884c\u65f6\u95f4\u3002","title":"CFS \u8c03\u5ea6\u5668"},{"location":"2/1/2/#vruntime","text":"CFS \u8c03\u5ea6\u5668\u6ca1\u6709\u5c06\u8fdb\u7a0b\u7ef4\u62a4\u5728\u8fd0\u884c\u961f\u5217\u4e2d\uff0c\u800c\u662f\u7ef4\u62a4\u4e86\u4e00\u4e2a\u4ee5\u865a\u62df\u8fd0\u884c\u65f6\u95f4\u4e3a\u987a\u5e8f\u7684\u7ea2\u9ed1\u6811\u3002 \u7ea2\u9ed1\u6811\u7684\u4e3b\u8981\u7279\u70b9\u6709\uff1a \u81ea\u5e73\u8861\uff0c\u6811\u4e0a\u6ca1\u6709\u4e00\u6761\u8def\u5f84\u4f1a\u6bd4\u5176\u4ed6\u8def\u5f84\u957f\u51fa\u4fe9\u500d\u3002 O(log n) \u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u80fd\u591f\u5728\u6811\u4e0a\u8fdb\u884c\u5feb\u901f\u9ad8\u6548\u5730\u63d2\u5165\u6216\u5220\u9664\u8fdb\u7a0b\u3002","title":"vruntime \u7ea2\u9ed1\u6811"},{"location":"2/1/2/#cfs_1","text":"\u5728\u65f6\u949f\u5468\u671f\u5f00\u59cb\u65f6\uff0c\u8c03\u5ea6\u5668\u8c03\u7528 __schedule() \u51fd\u6570\u6765\u5f00\u59cb\u8c03\u5ea6\u7684\u8fd0\u884c\u3002 __schedule() \u51fd\u6570\u8c03\u7528 pick_next_task() \u8ba9\u8fdb\u7a0b\u8c03\u5ea6\u5668\u4ece\u5c31\u7eea\u961f\u5217\u4e2d\u9009\u62e9\u4e00\u4e2a\u6700\u5408\u9002\u7684\u8fdb\u7a0b next\uff0c\u5373\u7ea2\u9ed1\u6811\u6700\u5de6\u8fb9\u7684\u8282\u70b9\u3002 \u901a\u8fc7 context_switch() \u5207\u6362\u5230\u65b0\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u4ece\u800c\u4fdd\u8bc1 next \u8fdb\u7a0b\u8fd0\u884c\u3002 \u5728\u65f6\u949f\u5468\u671f\u7ed3\u675f\u65f6\uff0c\u8c03\u5ea6\u5668\u8c03\u7528 entity_tick() \u51fd\u6570\u6765\u66f4\u65b0\u8fdb\u7a0b\u8d1f\u8f7d\u3001\u8fdb\u7a0b\u72b6\u6001\u4ee5\u53ca vruntime\uff08\u5f53\u524dvruntime + \u8be5\u65f6\u949f\u5468\u671f\u5185\u8fd0\u884c\u7684\u65f6\u95f4\uff09\u3002 \u6700\u540e\uff0c\u5c06\u8be5\u8fdb\u7a0b\u7684\u865a\u62df\u65f6\u95f4\u4e0e\u5c31\u7eea\u961f\u5217\u7ea2\u9ed1\u6811\u4e2d\u6700\u5de6\u8fb9\u7684\u8c03\u5ea6\u5b9e\u4f53\u7684\u865a\u62df\u65f6\u95f4\u505a\u6bd4\u8f83\uff0c\u5982\u679c\u5c0f\u4e8e\u5750\u5de6\u8fb9\u7684\u65f6\u95f4\uff0c\u5219\u4e0d\u7528\u89e6\u53d1\u8c03\u5ea6\uff0c\u7ee7\u7eed\u8c03\u5ea6\u5f53\u524d\u8c03\u5ea6\u5b9e\u4f53\u3002","title":"CFS\u8fdb\u7a0b\u8c03\u5ea6"},{"location":"2/1/2/#cpu_1","text":"code \u5728 cgroup cpu \u5b50\u7cfb\u7edf\u76ee\u5f55\u4e2d\u521b\u5efa\u76ee\u5f55\u7ed3\u6784 cd /sys/fs/cgroup/cpu mkdir cpudemo cd cpudemo \u8fd0\u884c busyloop \u6267\u884c top \u67e5\u770b CPU \u4f7f\u7528\u60c5\u51b5\uff0cCPU \u5360\u7528 200% \u901a\u8fc7 cgroup \u9650\u5236 cpu cd /sys/fs/cgroup/cpu/cpudemo \u628a\u8fdb\u7a0b\u6dfb\u52a0\u5230 cgroup \u8fdb\u7a0b\u914d\u7f6e\u7ec4 echo ps -ef|grep busyloop|grep -v grep|awk '{print $2}' > cgroup.procs \u8bbe\u7f6e cpuquota echo 10000 > cpu.cfs_quota_us \u6267\u884c top \u67e5\u770b CPU \u4f7f\u7528\u60c5\u51b5\uff0cCPU \u5360\u7528\u53d8\u4e3a10%","title":"CPU \u5b50\u7cfb\u7edf\u7ec3\u4e60"},{"location":"2/1/2/#cpuacct","text":"\u7528\u4e8e\u7edf\u8ba1 Cgroup \u53ca\u5176\u5b50 Cgroup \u4e0b\u8fdb\u7a0b\u7684 CPU \u7684\u4f7f\u7528\u60c5\u51b5\u3002 cpuacct.usage \u5305\u542b\u8be5 Cgroup \u53ca\u5176\u5b50 Cgroup \u4e0b\u8fdb\u7a0b\u4f7f\u7528 CPU \u7684\u65f6\u95f4\uff0c\u5355\u4f4d\u662f ns\uff08\u7eb3\u79d2\uff09\u3002 cpuacct.stat \u5305\u542b\u8be5 Cgroup \u53ca\u5176\u5b50 Cgroup \u4e0b\u8fdb\u7a0b\u4f7f\u7528\u7684 CPU \u65f6\u95f4\uff0c\u4ee5\u53ca\u7528\u6237\u6001\u548c\u5185\u6838\u6001\u7684\u65f6\u95f4\u3002","title":"cpuacct \u5b50\u7cfb\u7edf"},{"location":"2/1/2/#memory","text":"memory.usage_in_bytes cgroup \u4e0b\u8fdb\u7a0b\u4f7f\u7528\u7684\u5185\u5b58\uff0c\u5305\u542b cgroup \u53ca\u5176\u5b50 cgroup \u4e0b\u7684\u8fdb\u7a0b\u4f7f\u7528\u7684\u5185\u5b58 memory.max_usage_in_bytes cgroup \u4e0b\u8fdb\u7a0b\u4f7f\u7528\u5185\u5b58\u7684\u6700\u5927\u503c\uff0c\u5305\u542b\u5b50 cgroup \u7684\u5185\u5b58\u4f7f\u7528\u91cf\u3002 memory.limit_in_bytes \u8bbe\u7f6e Cgroup \u4e0b\u8fdb\u7a0b\u6700\u591a\u80fd\u4f7f\u7528\u7684\u5185\u5b58\u3002\u5982\u679c\u8bbe\u7f6e\u4e3a -1\uff0c\u8868\u793a\u5bf9\u8be5 cgroup \u7684\u5185\u5b58\u4f7f\u7528\u4e0d\u505a\u9650\u5236\u3002 memory.soft_limit_in_bytes \u8fd9\u4e2a\u9650\u5236\u5e76\u4e0d\u4f1a\u963b\u6b62\u8fdb\u7a0b\u4f7f\u7528\u8d85\u8fc7\u9650\u989d\u7684\u5185\u5b58\uff0c\u53ea\u662f\u5728\u7cfb\u7edf\u5185\u5b58\u8db3\u591f\u65f6\uff0c\u4f1a\u4f18\u5148\u56de\u6536\u8d85\u8fc7\u9650\u989d\u7684\u5185\u5b58\uff0c\u4f7f\u4e4b\u5411\u9650\u5b9a\u503c\u9760\u62e2\u3002 memory.oom_control \u8bbe\u7f6e\u662f\u5426\u5728 Cgroup \u4e2d\u4f7f\u7528 OOM\uff08Out of Memory\uff09Killer\uff0c\u9ed8\u8ba4\u4e3a\u4f7f\u7528\u3002\u5f53\u5c5e\u4e8e\u8be5 cgroup \u7684\u8fdb\u7a0b\u4f7f\u7528\u7684\u5185\u5b58\u8d85\u8fc7\u6700\u5927\u7684\u9650\u5b9a\u503c\u65f6\uff0c\u4f1a\u7acb\u523b\u88ab OOM Killer \u5904\u7406\u3002","title":"Memory \u5b50\u7cfb\u7edf"},{"location":"2/1/2/#cgroup-driver","text":"systemd: \u5f53\u64cd\u4f5c\u7cfb\u7edf\u4f7f\u7528 systemd \u4f5c\u4e3a init system \u65f6\uff0c\u521d\u59cb\u5316\u8fdb\u7a0b\u751f\u6210\u4e00\u4e2a\u6839 cgroup \u76ee\u5f55\u7ed3\u6784\u5e76\u4f5c\u4e3a cgroup\u7ba1\u7406\u5668\u3002 systemd \u4e0e cgroup \u7d27\u5bc6\u7ed3\u5408\uff0c\u5e76\u4e14\u4e3a\u6bcf\u4e2a systemd unit \u5206\u914d cgroup\u3002 cgroupfs: docker \u9ed8\u8ba4\u7528 cgroupfs \u4f5c\u4e3a cgroup \u9a71\u52a8\u3002 \u5b58\u5728\u95ee\u9898\uff1a \u5728 systemd \u4f5c\u4e3a init system \u7684\u7cfb\u7edf\u4e2d\uff0c\u9ed8\u8ba4\u5e76\u5b58\u7740\u4e24\u5957 groupdriver\u3002 \u8fd9\u4f1a\u4f7f\u5f97\u7cfb\u7edf\u4e2d Docker \u548c kubelet \u7ba1\u7406\u7684\u8fdb\u7a0b\u88ab cgroupfs \u9a71\u52a8\u7ba1\uff0c\u800c systemd \u62c9\u8d77\u7684\u670d\u52a1\u7531systemd \u9a71\u52a8\u7ba1\uff0c\u8ba9 cgroup \u7ba1\u7406\u6df7\u4e71\u4e14\u5bb9\u6613\u5728\u8d44\u6e90\u7d27\u5f20\u65f6\u5f15\u53d1\u95ee\u9898\u3002 \u56e0\u6b64 kubelet \u4f1a\u9ed8\u8ba4--cgroup-driver=systemd\uff0c\u82e5\u8fd0\u884c\u65f6 cgroup \u4e0d\u4e00\u81f4\u65f6\uff0ckubelet \u4f1a\u62a5\u9519\u3002","title":"Cgroup driver"},{"location":"2/1/2/#31","text":"code Memory \u5b50\u7cfb\u7edf\u7ec3\u4e60 \u5728 cgroup memory \u5b50\u7cfb\u7edf\u76ee\u5f55\u4e2d\u521b\u5efa\u76ee\u5f55\u7ed3\u6784 cd /sys/fs/cgroup/memory mkdir memorydemo cd memorydemo \u8fd0\u884c malloc\uff08\u5728linux\u673a\u5668make build\uff09 \u67e5\u770b\u5185\u5b58\u4f7f\u7528\u60c5\u51b5 watch 'ps -aux|grep malloc|grep -v grep\u2018 \u901a\u8fc7 cgroup \u9650\u5236 memory \u628a\u8fdb\u7a0b\u6dfb\u52a0\u5230cgroup\u8fdb\u7a0b\u914d\u7f6e\u7ec4 echo ps -ef|grep malloc |grep -v grep|awk '{print $2}' > cgroup.procs \u8bbe\u7f6e memory.limit_in_bytes echo 104960000 > memory.limit_in_bytes \u7b49\u5f85\u8fdb\u7a0b\u88ab oom kill","title":"\u8bfe\u540e\u7ec3\u4e603.1"},{"location":"2/1/2/#_7","text":"Union FS \u5c06\u4e0d\u540c\u76ee\u5f55\u6302\u8f7d\u5230\u540c\u4e00\u4e2a\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u4e0b \uff08unite several directories into a single virtual filesystem\uff09\u7684\u6587\u4ef6\u7cfb\u7edf \u652f\u6301\u4e3a\u6bcf\u4e00\u4e2a\u6210\u5458\u76ee\u5f55\uff08\u7c7b\u4f3cGit Branch\uff09\u8bbe\u5b9a readonly\u3001readwrite \u548c whiteout-able \u6743\u9650 \u6587\u4ef6\u7cfb\u7edf\u5206\u5c42, \u5bf9 readonly \u6743\u9650\u7684 branch \u53ef\u4ee5\u903b\u8f91\u4e0a\u8fdb\u884c\u4fee\u6539(\u589e\u91cf\u5730, \u4e0d\u5f71\u54cd readonly \u90e8\u5206\u7684)\u3002 \u901a\u5e38 Union FS \u6709\u4e24\u4e2a\u7528\u9014, \u4e00\u65b9\u9762\u53ef\u4ee5\u5c06\u591a\u4e2a disk \u6302\u5230\u540c\u4e00\u4e2a\u76ee\u5f55\u4e0b, \u53e6\u4e00\u4e2a\u66f4\u5e38\u7528\u7684\u5c31\u662f\u5c06\u4e00\u4e2areadonly \u7684 branch \u548c\u4e00\u4e2a writeable \u7684 branch \u8054\u5408\u5728\u4e00\u8d77\u3002","title":"\u6587\u4ef6\u7cfb\u7edf"},{"location":"2/1/2/#_8","text":"","title":"\u5bb9\u5668\u955c\u50cf"},{"location":"2/1/2/#docker_4","text":"\u5178\u578b\u7684 Linux \u6587\u4ef6\u7cfb\u7edf\u7ec4\u6210\uff1a Bootfs\uff08boot file system\uff09 Bootloader - \u5f15\u5bfc\u52a0\u8f7d kernel\uff0c Kernel - \u5f53 kernel \u88ab\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\u540e umount bootfs\u3002 rootfs \uff08root file system\uff09 /dev\uff0c/proc\uff0c/bin\uff0c/etc \u7b49\u6807\u51c6\u76ee\u5f55\u548c\u6587\u4ef6\u3002 \u5bf9\u4e8e\u4e0d\u540c\u7684 linux \u53d1\u884c\u7248, bootfs \u57fa\u672c\u662f\u4e00\u81f4\u7684\uff0c\u4f46 rootfs \u4f1a\u6709\u5dee\u522b\u3002","title":"Docker \u7684\u6587\u4ef6\u7cfb\u7edf"},{"location":"2/1/2/#docker_5","text":"Linux \u5728\u542f\u52a8\u540e\uff0c\u9996\u5148\u5c06 rootfs \u8bbe\u7f6e\u4e3a readonly, \u8fdb\u884c\u4e00\u7cfb\u5217\u68c0\u67e5, \u7136\u540e\u5c06\u5176\u5207\u6362\u4e3a \u201creadwrite\u201d\u4f9b\u7528\u6237\u4f7f\u7528\u3002Docker \u542f\u52a8 \u521d\u59cb\u5316\u65f6\u4e5f\u662f\u5c06 rootfs \u4ee5 readonly \u65b9\u5f0f\u52a0\u8f7d\u5e76\u68c0\u67e5\uff0c\u7136\u800c\u63a5\u4e0b\u6765\u5229\u7528 union mount \u7684\u65b9\u5f0f\u5c06\u4e00\u4e2areadwrite \u6587\u4ef6\u7cfb\u7edf\u6302\u8f7d\u5728 readonly \u7684 rootfs \u4e4b\u4e0a\uff1b - \u5e76\u4e14\u5141\u8bb8\u518d\u6b21\u5c06\u4e0b\u5c42\u7684 FS\uff08file system\uff09 \u8bbe\u5b9a\u4e3a readonly \u5e76\u4e14\u5411\u4e0a\u53e0\u52a0\u3002 \u8fd9\u6837\u4e00\u7ec4 readonly \u548c\u4e00\u4e2a writeable \u7684\u7ed3\u6784\u6784\u6210\u4e00\u4e2a container \u7684\u8fd0\u884c\u65f6\u6001, \u6bcf\u4e00\u4e2a FS \u88ab\u79f0\u4f5c\u4e00\u4e2a FS\u5c42\u3002","title":"Docker \u542f\u52a8"},{"location":"2/1/2/#_9","text":"\u7531\u4e8e\u955c\u50cf\u5177\u6709\u5171\u4eab\u7279\u6027\uff0c\u6240\u4ee5\u5bf9\u5bb9\u5668\u53ef\u5199\u5c42\u7684\u64cd\u4f5c\u9700\u8981\u4f9d\u8d56\u5b58\u50a8\u9a71\u52a8\u63d0\u4f9b\u7684\u5199\u65f6\u590d\u5236\u548c\u7528\u65f6\u5206\u914d\u673a\u5236\uff0c\u4ee5\u6b64\u6765\u652f\u6301\u5bf9\u5bb9\u5668\u53ef\u5199\u5c42\u7684\u4fee\u6539\uff0c\u8fdb\u800c\u63d0\u9ad8\u5bf9\u5b58\u50a8\u548c\u5185\u5b58\u8d44\u6e90\u7684\u5229\u7528\u7387\u3002 \u5199\u65f6\u590d\u5236 \u5199\u65f6\u590d\u5236\uff0c\u5373 Copy-on-Write\u3002 \u4e00\u4e2a\u955c\u50cf\u53ef\u4ee5\u88ab\u591a\u4e2a\u5bb9\u5668\u4f7f\u7528\uff0c\u4f46\u662f\u4e0d\u9700\u8981\u5728\u5185\u5b58\u548c\u78c1\u76d8\u4e0a\u505a\u591a\u4e2a\u62f7\u8d1d\u3002 \u5728\u9700\u8981\u5bf9\u955c\u50cf\u63d0\u4f9b\u7684\u6587\u4ef6\u8fdb\u884c\u4fee\u6539\u65f6\uff0c\u8be5\u6587\u4ef6\u4f1a\u4ece\u955c\u50cf\u7684\u6587\u4ef6\u7cfb\u7edf\u88ab\u590d\u5236\u5230\u5bb9\u5668\u7684\u53ef\u5199\u5c42\u7684\u6587\u4ef6\u7cfb\u7edf\u8fdb\u884c\u4fee\u6539\uff0c\u800c\u955c\u50cf\u91cc\u9762\u7684\u6587\u4ef6\u4e0d\u4f1a\u6539\u53d8\u3002 \u4e0d\u540c\u5bb9\u5668\u5bf9\u6587\u4ef6\u7684\u4fee\u6539\u90fd\u76f8\u4e92\u72ec\u7acb\u3001\u4e92\u4e0d\u5f71\u54cd\u3002 \u7528\u65f6\u5206\u914d \u6309\u9700\u5206\u914d\u7a7a\u95f4\uff0c\u800c\u975e\u63d0\u524d\u5206\u914d\uff0c\u5373\u5f53\u4e00\u4e2a\u6587\u4ef6\u88ab\u521b\u5efa\u51fa\u6765\u540e\uff0c\u624d\u4f1a\u5206\u914d\u7a7a\u95f4\u3002","title":"\u5199\u64cd\u4f5c"},{"location":"2/1/2/#_10","text":"","title":"\u5bb9\u5668\u5b58\u50a8\u9a71\u52a8"},{"location":"2/1/2/#overlayfs","text":"OverlayFS \u4e5f\u662f\u4e00\u79cd\u4e0e AUFS \u7c7b\u4f3c\u7684\u8054\u5408\u6587\u4ef6\u7cfb\u7edf\uff0c\u540c\u6837\u5c5e\u4e8e\u6587\u4ef6\u7ea7\u7684\u5b58\u50a8\u9a71\u52a8\uff0c\u5305\u542b\u4e86\u6700\u521d\u7684 Overlay \u548c\u66f4\u65b0\u66f4\u7a33\u5b9a\u7684 overlay2\u3002 Overlay \u53ea\u6709\u4e24\u5c42\uff1aupper \u5c42\u548c lower \u5c42\uff0cLower \u5c42\u4ee3\u8868\u955c\u50cf\u5c42\uff0cupper \u5c42\u4ee3\u8868\u5bb9\u5668\u53ef\u5199\u5c42\u3002","title":"\u4ee5 OverlayFS \u4e3a\u4f8b"},{"location":"2/1/2/#overlayfs_1","text":"code mkdir upper lower merged work echo \"from lower\" > lower/in_lower.txt echo \"from upper\" > upper/in_upper.txt echo \"from lower\" > lower/in_both.txt echo \"from upper\" > upper/in_both.txt sudo mount -t overlay overlay -o lowerdir=`pwd`/lower,upperdir=`pwd`/upper,workdir=`pwd`/work `pwd`/merged cat merged/in_both.txt delete merged/in_both.txt delete merged/in_lower.txt delete merged/in_upper.txt","title":"OverlayFS \u6587\u4ef6\u7cfb\u7edf\u7ec3\u4e60"},{"location":"2/1/2/#oci","text":"Open Container Initiative OCI \u7ec4\u7ec7\u4e8e 2015 \u5e74\u521b\u5efa\uff0c\u662f\u4e00\u4e2a\u81f4\u529b\u4e8e\u5b9a\u4e49\u5bb9\u5668\u955c\u50cf\u6807\u51c6\u548c\u8fd0\u884c\u65f6\u6807\u51c6\u7684\u5f00\u653e\u5f0f\u7ec4\u7ec7\u3002 OCI \u5b9a\u4e49\u4e86\u955c\u50cf\u6807\u51c6\uff08Runtime Specification\uff09\u3001\u8fd0\u884c\u65f6\u6807\u51c6\uff08Image Specification\uff09\u548c\u5206\u53d1\u6807\u51c6\uff08Distribution Specification\uff09 \u955c\u50cf\u6807\u51c6\u5b9a\u4e49\u5e94\u7528\u5982\u4f55\u6253\u5305 \u8fd0\u884c\u65f6\u6807\u51c6\u5b9a\u4e49\u5982\u4f55\u89e3\u538b\u5e94\u7528\u5305\u5e76\u8fd0\u884c \u5206\u53d1\u6807\u51c6\u5b9a\u4e49\u5982\u4f55\u5206\u53d1\u5bb9\u5668\u955c\u50cf","title":"OCI \u5bb9\u5668\u6807\u51c6"},{"location":"2/1/2/#docker_6","text":"","title":"Docker \u5f15\u64ce\u67b6\u6784"},{"location":"2/1/2/#_11","text":"code","title":"\u7f51\u7edc"},{"location":"2/1/2/#_12","text":"Null(--net=None) \u628a\u5bb9\u5668\u653e\u5165\u72ec\u7acb\u7684\u7f51\u7edc\u7a7a\u95f4\u4f46\u4e0d\u505a\u4efb\u4f55\u7f51\u7edc\u914d\u7f6e\uff1b \u7528\u6237\u9700\u8981\u901a\u8fc7\u8fd0\u884c docker network \u547d\u4ee4\u6765\u5b8c\u6210\u7f51\u7edc\u914d\u7f6e\u3002 Host \u4f7f\u7528\u4e3b\u673a\u7f51\u7edc\u540d\u7a7a\u95f4\uff0c\u590d\u7528\u4e3b\u673a\u7f51\u7edc\u3002 Container \u91cd\u7528\u5176\u4ed6\u5bb9\u5668\u7684\u7f51\u7edc\u3002 Bridge(--net=bridge) \u4f7f\u7528 Linux \u7f51\u6865\u548c iptables \u63d0\u4f9b\u5bb9\u5668\u4e92\u8054\uff0cDocker \u5728\u6bcf\u53f0\u4e3b\u673a\u4e0a\u521b\u5efa\u4e00\u4e2a\u540d\u53eb docker0 \u7684\u7f51\u6865\uff0c\u901a\u8fc7 veth pair \u6765\u8fde\u63a5\u8be5\u4e3b\u673a\u7684\u6bcf\u4e00\u4e2a EndPoint\u3002","title":"\u5355\u673a\u7248\u7f51\u7edc"},{"location":"2/1/2/#_13","text":"Overlay(libnetwork, libkv) \u901a\u8fc7\u7f51\u7edc\u5c01\u5305\u5b9e\u73b0\u3002 Remote(work with remote drivers) Underlay\uff1a \u4f7f\u7528\u73b0\u6709\u5e95\u5c42\u7f51\u7edc\uff0c\u4e3a\u6bcf\u4e00\u4e2a\u5bb9\u5668\u914d\u7f6e\u53ef\u8def\u7531\u7684\u7f51\u7edc IP\u3002 Overlay\uff1a \u901a\u8fc7\u7f51\u7edc\u5c01\u5305\u5b9e\u73b0\u3002","title":"\u96c6\u7fa4\u7248\u7f51\u7edc"},{"location":"2/1/2/#null","text":"Null \u6a21\u5f0f\u662f\u4e00\u4e2a\u7a7a\u5b9e\u73b0\uff1b \u53ef\u4ee5\u901a\u8fc7 Null \u6a21\u5f0f\u542f\u52a8\u5bb9\u5668\u5e76\u5728\u5bbf\u4e3b\u673a\u4e0a\u901a\u8fc7\u547d\u4ee4\u4e3a\u5bb9\u5668\u914d\u7f6e\u7f51\u7edc\u3002 mkdir -p /var/run/netns find -L /var/run/netns -type l -delete ln -s /proc/$pid/ns/net /var/run/netns/$pid ip link add A type veth peer name B brctl addif br0 A ip link set A up ip link set B netns $pid ip netns exec $pid ip link set dev B name eth0 ip netns exec $pid ip link set eth0 up ip netns exec $pid ip addr add $SETIP/$SETMASK dev eth0 ip netns exec $pid ip route add default via $GATEWAY","title":"Null \u6a21\u5f0f"},{"location":"2/1/2/#nat","text":"\u4e3a\u4e3b\u673a eth0 \u5206\u914d IP 192.168.0.101\uff1b \u542f\u52a8 docker daemon\uff0c\u67e5\u770b\u4e3b\u673a iptables\uff1b POSTROUTING -A POSTROUTING -s 172.17.0.0/16 ! -o docker0 -j MASQUERADE \u5728\u4e3b\u673a\u542f\u52a8\u5bb9\u5668\uff1a docker run -d --name ssh -p 2333:22 centos-ssh Docker \u4f1a\u4ee5\u6807\u51c6\u6a21\u5f0f\u914d\u7f6e\u7f51\u7edc\uff1a \u521b\u5efa veth pair\uff1b \u5c06 veth pair\u7684\u4e00\u7aef\u8fde\u63a5\u5230 docker0 \u7f51\u6865\uff1b veth pair \u7684\u53e6\u5916\u4e00\u7aef\u8bbe\u7f6e\u4e3a\u5bb9\u5668\u540d\u7a7a\u95f4\u7684 eth0\uff1b \u4e3a\u5bb9\u5668\u540d\u7a7a\u95f4\u7684 eth0 \u5206\u914d ip\uff1b \u4e3b\u673a\u4e0a\u7684 Iptables \u89c4\u5219\uff1aPREROUTING -A DOCKER ! -i docker0 -p tcp -m tcp --dport 2333 -j DNAT --to-destination 172.17.0.2:22\u3002","title":"\u9ed8\u8ba4\u6a21\u5f0f\u2013 \u7f51\u6865\u548c NAT"},{"location":"2/1/2/#underlay","text":"\u91c7\u7528 Linux \u7f51\u6865\u8bbe\u5907\uff08sbrctl\uff09\uff0c\u901a\u8fc7\u7269\u7406\u7f51\u7edc\u8fde\u901a\u5bb9\u5668\uff1b \u521b\u5efa\u65b0\u7684\u7f51\u6865\u8bbe\u5907 mydr0\uff1b \u5c06\u4e3b\u673a\u7f51\u5361\u52a0\u5165\u7f51\u6865\uff1b \u628a\u4e3b\u673a\u7f51\u5361\u7684\u5730\u5740\u914d\u7f6e\u5230\u7f51\u6865\uff0c\u5e76\u628a\u9ed8\u8ba4\u8def\u7531\u89c4\u5219\u8f6c\u79fb\u5230\u7f51\u6865 mydr0\uff1b \u542f\u52a8\u5bb9\u5668\uff1b \u521b\u5efa veth \u5bf9\uff0c\u5e76\u4e14\u628a\u4e00\u4e2a peer \u6dfb\u52a0\u5230\u7f51\u6865 mydr0\uff1b \u914d\u7f6e\u5bb9\u5668\u628a veth \u7684\u53e6\u4e00\u4e2a peer \u5206\u914d\u7ed9\u5bb9\u5668\u7f51\u5361\uff1b","title":"Underlay"},{"location":"2/1/2/#docker-libnetwork-overlay","text":"Docker overlay \u7f51\u7edc\u9a71\u52a8\u539f\u751f\u652f\u6301\u591a\u4e3b\u673a\u7f51\u7edc\uff1b Libnetwork \u662f\u4e00\u4e2a\u5185\u7f6e\u7684\u57fa\u4e8e VXLAN \u7684\u7f51\u7edc\u9a71\u52a8\u3002","title":"Docker Libnetwork Overlay"},{"location":"2/1/2/#vxlan","text":"","title":"VXLAN"},{"location":"2/1/2/#overlay-network-sample-flannel","text":"\u540c\u4e00\u4e3b\u673a\u5185\u7684 Pod \u53ef\u4ee5\u4f7f\u7528\u7f51\u6865\u8fdb\u884c\u901a\u4fe1\u3002 \u4e0d\u540c\u4e3b\u673a\u4e0a\u7684 Pod \u5c06\u901a\u8fc7flanneld \u5c06\u5176\u6d41\u91cf\u5c01\u88c5\u5728 UDP\u6570\u636e\u5305\u4e2d \u3002","title":"Overlay network sample \u2013 Flannel"},{"location":"2/1/2/#flannel-packet-sample","text":"","title":"Flannel packet sample"},{"location":"2/1/3/","text":"Dockerfile \u7684\u6700\u4f73\u5b9e\u8df5 \u521b\u5efa docker \u955c\u50cf \u5b9a\u4e49 dockerfile FROM ubuntu # so apt-get doesn't complain ENV DEBIAN_FRONTEND=noninteractive RUN sed -i 's/^exit 101/exit 0/' /usr/sbin/policy-rc.d RUN \\ apt-get update && \\ apt-get install -y ca-certificates && \\ apt-get install -y curl && \\ rm -rf /var/lib/apt/lists/* ADD ./bin/eic eic ENTRYPOINT [\"/eic\"] docker build \u56de\u987e 12 Factor \u4e4b\u8fdb\u7a0b \u8fd0\u884c\u73af\u5883\u4e2d\uff0c\u5e94\u7528\u7a0b\u5e8f\u901a\u5e38\u662f\u4ee5\u4e00\u4e2a\u548c\u591a\u4e2a \u8fdb\u7a0b \u8fd0\u884c\u7684\u3002 12-Factor \u5e94\u7528\u7684\u8fdb\u7a0b\u5fc5\u987b\u65e0\u72b6\u6001\uff08Stateless\uff09\u4e14\u65e0\u5171\u4eab\uff08Share nothing\uff09\u3002 \u4efb\u4f55\u9700\u8981\u6301\u4e45\u5316\u7684\u6570\u636e\u90fd\u8981\u5b58\u50a8\u5728\u540e\u7aef\u670d\u52a1\u5185\uff0c\u6bd4\u5982\u6570\u636e\u5e93\u3002 \u5e94\u5728\u6784\u5efa\u9636\u6bb5\u5c06\u6e90\u4ee3\u7801\u7f16\u8bd1\u6210\u5f85\u6267\u884c\u5e94\u7528\u3002 Session Sticky \u662f 12-Factor \u6781\u529b\u53cd\u5bf9\u7684\u3002 Session \u4e2d\u7684\u6570\u636e\u5e94\u8be5\u4fdd\u5b58\u5728\u8bf8\u5982 Memcached \u6216 Redis \u8fd9\u6837\u7684\u5e26\u6709\u8fc7\u671f\u65f6\u95f4\u7684\u7f13\u5b58\u4e2d\u3002 Docker \u9075\u5faa\u4ee5\u4e0a\u539f\u5219\u7ba1\u7406\u548c\u6784\u5efa\u5e94\u7528\u3002 \u7406\u89e3\u6784\u5efa\u4e0a\u4e0b\u6587\uff08Build Context\uff09 \u5f53\u8fd0\u884c docker build \u547d\u4ee4\u65f6\uff0c\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u88ab\u79f0\u4e3a\u6784\u5efa\u4e0a\u4e0b\u6587\u3002 docker build \u9ed8\u8ba4\u67e5\u627e\u5f53\u524d\u76ee\u5f55\u7684 Dockerfile \u4f5c\u4e3a\u6784\u5efa\u8f93\u5165\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 \u2013f \u6307\u5b9a Dockerfile\u3002 docker build \u2013f ./Dockerfile \u5f53 docker build \u8fd0\u884c\u65f6\uff0c\u9996\u5148\u4f1a\u628a\u6784\u5efa\u4e0a\u4e0b\u6587\u4f20\u8f93\u7ed9 docker daemon\uff0c\u628a\u6ca1\u7528\u7684\u6587\u4ef6\u5305\u542b\u5728\u6784\u5efa\u4e0a\u4e0b\u6587\u65f6\uff0c\u4f1a\u5bfc\u81f4\u4f20\u8f93\u65f6\u95f4\u957f\uff0c\u6784\u5efa\u9700\u8981\u7684\u8d44\u6e90\u591a\uff0c\u6784\u5efa\u51fa\u7684\u955c\u50cf\u5927\u7b49\u95ee\u9898\u3002 \u8bd5\u7740\u5230\u4e00\u4e2a\u5305\u542b\u6587\u4ef6\u5f88\u591a\u7684\u76ee\u5f55\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff0c\u4f1a\u611f\u53d7\u5230\u5dee\u5f02\uff1b docker build -f $GOPATH/src/github.com/cncamp/golang/httpserver/Dockerfile \uff1b docker build $GOPATH/src/github.com/cncamp/golang/httpserver/\uff1b \u53ef\u4ee5\u901a\u8fc7.dockerignore\u6587\u4ef6\u4ece\u7f16\u8bd1\u4e0a\u4e0b\u6587\u6392\u9664\u67d0\u4e9b\u6587\u4ef6\u3002 \u56e0\u6b64\u9700\u8981\u786e\u4fdd\u6784\u5efa\u4e0a\u4e0b\u6587\u6e05\u6670\uff0c\u6bd4\u5982\u521b\u5efa\u4e00\u4e2a\u4e13\u95e8\u7684\u76ee\u5f55\u653e\u7f6e Dockerfile\uff0c\u5e76\u5728\u76ee\u5f55\u4e2d\u8fd0\u884c docker build\u3002 \u955c\u50cf\u6784\u5efa\u65e5\u5fd7 docker build $GOPATH/src/github.com/cncamp/golang/httpserver/ Sending build context to Docker daemon 14.57MB Step 1/4 : FROM ubuntu ---> cf0f3ca922e0 Step 2/4 : ENV MY_SERVICE_PORT=80 ---> Using cache ---> a7d824f74410 Step 3/4 : ADD bin/amd64/httpserver /httpserver ---> Using cache ---> 00bb47fce704 Step 4/4 : ENTRYPOINT /httpserver ---> Using cache ---> f77ee3366d08 Successfully built f77ee3366d08 Build Cache \u6784\u5efa\u5bb9\u5668\u955c\u50cf\u65f6\uff0cDocker \u4f9d\u6b21\u8bfb\u53d6 Dockerfile \u4e2d\u7684\u6307\u4ee4\uff0c\u5e76\u6309\u987a\u5e8f\u4f9d\u6b21\u6267\u884c\u6784\u5efa\u6307\u4ee4\u3002 Docker \u8bfb\u53d6\u6307\u4ee4\u540e\uff0c\u4f1a\u5148\u5224\u65ad\u7f13\u5b58\u4e2d\u662f\u5426\u6709\u53ef\u7528\u7684\u5df2\u5b58\u955c\u50cf\uff0c\u53ea\u6709\u5df2\u5b58\u955c\u50cf\u4e0d\u5b58\u5728\u65f6\u624d\u4f1a\u91cd\u65b0\u6784\u5efa\u3002 \u901a\u5e38 Docker \u7b80\u5355\u5224\u65ad Dockerfile \u4e2d\u7684\u6307\u4ee4\u4e0e\u955c\u50cf\u3002 \u9488\u5bf9 ADD \u548c COPY \u6307\u4ee4\uff0cDocker \u5224\u65ad\u8be5\u955c\u50cf\u5c42\u6bcf\u4e00\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\u5e76\u751f\u6210\u4e00\u4e2a checksum\uff0c\u4e0e\u73b0\u5b58\u955c\u50cf\u6bd4\u8f83\u65f6\uff0cDocker \u6bd4\u8f83\u7684\u662f\u4e8c\u8005\u7684 checksum\u3002 \u5176\u4ed6\u6307\u4ee4\uff0c\u6bd4\u5982 RUN apt-get -y update\uff0cDocker \u7b80\u5355\u6bd4\u8f83\u4e0e\u73b0\u5b58\u955c\u50cf\u4e2d\u7684\u6307\u4ee4\u5b57\u4e32\u662f\u5426\u4e00\u81f4\u3002 \u5f53\u67d0\u4e00\u5c42 cache \u5931\u6548\u4ee5\u540e\uff0c\u6240\u6709\u6240\u6709\u5c42\u7ea7\u7684 cache \u5747\u4e00\u5e76\u5931\u6548\uff0c\u540e\u7eed\u6307\u4ee4\u90fd\u91cd\u65b0\u6784\u5efa\u955c\u50cf\u3002 \u591a\u6bb5\u6784\u5efa\uff08Multi-stage build\uff09 \u6709\u6548\u51cf\u5c11\u955c\u50cf\u5c42\u7ea7\u7684\u65b9\u5f0f FROM golang:1.16-alpine AS build RUN apk add --no-cache git RUN go get github.com/golang/dep/cmd/dep COPY Gopkg.lock Gopkg.toml /go/src/project/ WORKDIR /go/src/project/ RUN dep ensure -vendor-only COPY . /go/src/project/ RUN go build -o /bin/project\uff08\u53ea\u6709\u8fd9\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u662f\u4ea7\u7ebf\u9700\u8981\u7684\uff0c\u5176\u4ed6\u90fd\u662fwaste\uff09 FROM scratch COPY --from=build /bin/project /bin/project ENTRYPOINT [\"/bin/project\"] CMD [\"--help\"] Dockerfile \u5e38\u7528\u6307\u4ee4 FROM\uff1a\u9009\u62e9\u57fa\u7840\u955c\u50cf\uff0c\u63a8\u8350 alpine FROM [--platform=<platform>] <image>[@<digest>] [AS <name>] docker \u57fa\u7840\u955c\u50cf: scratch: \u7a7a\u955c\u50cf\uff0c\u57fa\u7840\u955c\u50cf scratch \u662f Docker \u4e2d\u9884\u7559\u7684\u6700\u5c0f\u7684\u57fa\u7840\u955c\u50cf\u3002bosybox\u3001Go \u8bed\u8a00\u7f16\u8bd1\u6253\u5305\u7684\u955c\u50cf\u90fd\u53ef\u4ee5\u57fa\u4e8e scratch \u6765\u6784\u5efa\u3002 scratch\u955c\u50cf\u4e0d\u5728\u955c\u50cf\u4ed3\u5e93\u4e2d\uff0c\u4f46\u662f\u53ef\u4ee5\u5728 Dockerfile \u5f15\u7528\u3002 \u8fd0\u884c\u4e00\u4e2a\u5305\u542b\u6240\u6709\u4f9d\u8d56\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5982 Golang \u7a0b\u5e8f\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 scratch \u4f5c\u4e3a\u57fa\u7840\u955c\u50cf\u3002 busybox BusyBox \u662f\u4e00\u4e2a\u96c6\u6210\u4e86\u4e00\u767e\u591a\u4e2a\u6700\u5e38\u7528 Linux \u547d\u4ee4\u548c\u5de5\u5177\uff08\u5982 cat\u3001echo\u3001grep\u3001mount\u3001telnet \u7b49\uff09\u7684\u7cbe\u7b80\u5de5\u5177\u7bb1\uff0c\u5b83\u53ea\u6709\u51e0 MB \u7684\u5927\u5c0f\uff0c\u5f88\u65b9\u4fbf\u8fdb\u884c\u5404\u79cd\u5feb\u901f\u9a8c\u8bc1\uff0c\u88ab\u8a89\u4e3a\u201cLinux\u7cfb\u7edf\u7684\u745e\u58eb\u519b\u5200\u201d\u3002BusyBox \u53ef\u8fd0\u884c\u4e8e\u591a\u6b3e POSIX \u73af\u5883\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u5982 Linux\uff08\u5305\u62ecAndroid\uff09\u3001Hurd\u3001FreeBSD \u7b49\u3002 Alpine Alpine \u64cd\u4f5c\u7cfb\u7edf\u662f\u4e00\u4e2a\u9762\u5411\u5b89\u5168\u7684\u8f7b\u578b Linux \u53d1\u884c\u7248\u3002\u5b83\u4e0d\u540c\u4e8e\u901a\u5e38\u7684 Linux \u53d1\u884c\u7248\uff0cAlpine \u91c7\u7528\u4e86 musl libc \u548c BusyBox \u4ee5\u51cf\u5c0f\u7cfb\u7edf\u7684\u4f53\u79ef\u548c\u8fd0\u884c\u65f6\u8d44\u6e90\u6d88\u8017\uff0c\u4f46\u529f\u80fd\u4e0a\u6bd4 BusyBox \u53c8\u5b8c\u5584\u5f97\u591a\u3002\u5728\u4fdd\u6301\u7626\u8eab\u7684\u540c\u65f6\uff0cAlpine \u8fd8\u63d0\u4f9b\u4e86\u81ea\u5df1\u7684\u5305\u7ba1\u7406\u5de5\u5177 apk\uff0c\u53ef\u4ee5\u901a\u8fc7 https://pkgs.alpinelinux.org/packages \u67e5\u8be2\u5305\u4fe1\u606f\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7apk\u547d\u4ee4\u76f4\u63a5\u67e5\u8be2\u548c\u5b89\u88c5\u5404\u79cd\u8f6f\u4ef6\u3002 Alpine Docker \u955c\u50cf\u4e5f\u7ee7\u627f\u4e86 Alpine Linux \u53d1\u884c\u7248\u7684\u8fd9\u4e9b\u4f18\u52bf\u3002\u76f8\u6bd4\u4e8e\u5176\u4ed6 Docker \u955c\u50cf\uff0c\u5b83\u7684\u5bb9\u91cf\u975e\u5e38\u5c0f\uff0c\u4ec5\u4ec5\u53ea\u6709 5MB \u5de6\u53f3\uff08Ubuntu\u7cfb\u5217\u955c\u50cf\u63a5\u8fd1200MB\uff09\uff0c\u4e14\u62e5\u6709\u975e\u5e38\u53cb\u597d\u7684\u5305\u7ba1\u7406\u673a\u5236\u3002\u5b98\u65b9\u955c\u50cf\u6765\u81ea docker-alpine \u9879\u76ee\u3002 \u76ee\u524d Docker \u5b98\u65b9\u5df2\u5f00\u59cb\u63a8\u8350\u4f7f\u7528 Alpine \u66ff\u4ee3\u4e4b\u524d\u7684 Ubuntu \u4f5c\u4e3a\u57fa\u7840\u955c\u50cf\u73af\u5883\u3002\u8fd9\u6837\u4f1a\u5e26\u6765\u591a\u4e2a\u597d\u5904\uff0c\u5305\u62ec\u955c\u50cf\u4e0b\u8f7d\u901f\u5ea6\u52a0\u5feb\uff0c\u955c\u50cf\u5b89\u5168\u6027\u63d0\u9ad8\uff0c\u4e3b\u673a\u4e4b\u95f4\u7684\u5207\u6362\u66f4\u65b9\u4fbf\uff0c\u5360\u7528\u66f4\u5c11\u78c1\u76d8\u7a7a\u95f4\u7b49\u3002 LABELS\uff1a\u6309\u6807\u7b7e\u7ec4\u7ec7\u9879\u76ee LABEL multi.label1=\"value1\" multi.label2=\"value2\" other=\"value3\u201d \u914d\u5408 label filter \u53ef\u8fc7\u6ee4\u955c\u50cf\u67e5\u8be2\u7ed3\u679c docker images -f label=multi.label1=\"value1\" RUN\uff1a\u6267\u884c\u547d\u4ee4 \u6700\u5e38\u89c1\u7684\u7528\u6cd5\u662f RUN apt-get update && apt-get install\uff0c\u8fd9\u4e24\u6761\u547d\u4ee4\u5e94\u8be5\u6c38\u8fdc\u7528&&\u8fde\u63a5\uff0c\u5982\u679c\u5206\u5f00\u6267\u884c\uff0cRUN apt-get update \u6784\u5efa\u5c42\u88ab\u7f13\u5b58\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u65b0 package \u65e0\u6cd5\u5b89\u88c5 CMD\uff1a\u5bb9\u5668\u955c\u50cf\u4e2d\u5305\u542b\u5e94\u7528\u7684\u8fd0\u884c\u547d\u4ee4\uff0c\u9700\u8981\u5e26\u53c2\u6570 CMD [\"executable\", \"param1\", \"param2\"\u2026] EXPOSE\uff1a\u53d1\u5e03\u7aef\u53e3 EXPOSE <port> [<port>/<protocol>...] - \u662f\u955c\u50cf\u521b\u5efa\u8005\u548c\u4f7f\u7528\u8005\u7684\u7ea6\u5b9a - \u5728 docker run \u2013P \u65f6\uff0cdocker \u4f1a\u81ea\u52a8\u6620\u5c04 expose \u7684\u7aef\u53e3\u5230\u4e3b\u673a\u5927\u7aef\u53e3\uff0c\u59820.0.0.0:32768->80/tcp ENV \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf ENV <key>=<value> ... ADD\uff1a\u4ece\u6e90\u5730\u5740\uff08\u6587\u4ef6\uff0c\u76ee\u5f55\u6216\u8005 URL \uff09\u590d\u5236\u6587\u4ef6\u5230\u76ee\u6807\u8def\u5f84 ADD [--chown=<user>:<group>] <src>... <dest> ADD [--chown=<user>:<group>] [\u201c<src>\u201d,... \u201c<dest>\u201d] \uff08\u8def\u5f84\u4e2d\u6709\u7a7a\u683c\u65f6\u4f7f\u7528\uff09 ADD \u652f\u6301 Go \u98ce\u683c\u7684\u901a\u914d\u7b26\uff0c\u5982 ADD check* /testdir/ src \u5982\u679c\u662f\u6587\u4ef6\uff0c\u5219\u5fc5\u987b\u5305\u542b\u5728\u7f16\u8bd1\u4e0a\u4e0b\u6587\u4e2d\uff0cADD \u6307\u4ee4\u65e0\u6cd5\u6dfb\u52a0\u7f16\u8bd1\u4e0a\u4e0b\u6587\u4e4b\u5916\u7684\u6587\u4ef6 src \u5982\u679c\u662f URL \u5982\u679c dest \u7ed3\u5c3e\u6ca1\u6709/\uff0c\u90a3\u4e48 dest \u662f\u76ee\u6807\u6587\u4ef6\u540d\uff0c\u5982\u679c dest \u7ed3\u5c3e\u6709/\uff0c\u90a3\u4e48 dest \u662f\u76ee\u6807\u76ee\u5f55\u540d \u5982\u679c src \u662f\u4e00\u4e2a\u76ee\u5f55\uff0c\u5219\u6240\u6709\u6587\u4ef6\u90fd\u4f1a\u88ab\u590d\u5236\u81f3 dest \u5982\u679c src \u662f\u4e00\u4e2a\u672c\u5730\u538b\u7f29\u6587\u4ef6\uff0c\u5219\u5728 ADD \u7684\u540c\u65f6\u5b8c\u6574\u89e3\u538b\u64cd\u4f5c \u5982\u679c dest \u4e0d\u5b58\u5728\uff0c\u5219 ADD \u6307\u4ee4\u4f1a\u521b\u5efa\u76ee\u6807\u76ee\u5f55 \u5e94\u5c3d\u91cf\u51cf\u5c11\u901a\u8fc7 ADD URL \u6dfb\u52a0 remote \u6587\u4ef6\uff0c\u5efa\u8bae\u4f7f\u7528 curl \u6216\u8005 wget && untar COPY\uff1a\u4ece\u6e90\u5730\u5740\uff08\u6587\u4ef6\uff0c\u76ee\u5f55\u6216\u8005URL\uff09\u590d\u5236\u6587\u4ef6\u5230\u76ee\u6807\u8def\u5f84 COPY [--chown=<user>:<group>] <src>... <dest> COPY [--chown=<user>:<group>] [\"<src>\",... \"<dest>\"] // \u8def\u5f84\u4e2d\u6709\u7a7a\u683c\u65f6\u4f7f\u7528 COPY \u7684\u4f7f\u7528\u4e0e ADD \u7c7b\u4f3c\uff0c\u4f46\u6709\u5982\u4e0b\u533a\u522b COPY \u53ea\u652f\u6301\u672c\u5730\u6587\u4ef6\u7684\u590d\u5236\uff0c\u4e0d\u652f\u6301 URL COPY \u4e0d\u89e3\u538b\u6587\u4ef6 COPY \u53ef\u4ee5\u7528\u4e8e\u591a\u9636\u6bb5\u7f16\u8bd1\u573a\u666f\uff0c\u53ef\u4ee5\u7528\u524d\u4e00\u4e2a\u4e34\u65f6\u955c\u50cf\u4e2d\u62f7\u8d1d\u6587\u4ef6 COPY --from=build /bin/project /bin/project COPY \u8bed\u4e49\u4e0a\u66f4\u76f4\u767d\uff0c\u590d\u5236\u672c\u5730\u6587\u4ef6\u65f6\uff0c\u4f18\u5148\u4f7f\u7528 COPY ENTRYPOINT\uff1a\u5b9a\u4e49\u53ef\u4ee5\u6267\u884c\u7684\u5bb9\u5668\u955c\u50cf\u5165\u53e3\u547d\u4ee4 ENTRYPOINT [\"executable\", \"param1\", \"param2\"] // docker run\u53c2\u6570\u8ffd\u52a0\u6a21\u5f0f ENTRYPOINT command param1 param2 // docker run \u53c2\u6570\u66ff\u6362\u6a21\u5f0f docker run \u2013entrypoint \u53ef\u66ff\u6362 Dockerfile \u4e2d\u5b9a\u4e49\u7684 ENTRYPOINT ENTRYPOINT \u7684\u6700\u4f73\u5b9e\u8df5\u662f\u7528 ENTRYPOINT \u5b9a\u4e49\u955c\u50cf\u4e3b\u547d\u4ee4\uff0c\u5e76\u901a\u8fc7 CMD \u5b9a\u4e49\u4e3b\u8981\u53c2\u6570\uff0c\u5982\u4e0b\u6240\u793a ENTRYPOINT [\"s3cmd\"] CMD [\"--help\"] VOLUME\uff1a \u5c06\u6307\u5b9a\u76ee\u5f55\u5b9a\u4e49\u4e3a\u5916\u6302\u5b58\u50a8\u5377\uff0cDockerfile \u4e2d\u5728\u8be5\u6307\u4ee4\u4e4b\u540e\u6240\u6709\u5bf9\u540c\u4e00\u76ee\u5f55\u7684\u4fee\u6539\u90fd\u65e0\u6548 VOLUME [\"/data\"] \u7b49\u4ef7\u4e8e docker run \u2013v /data\uff0c \u53ef\u901a\u8fc7 docker inspect \u67e5\u770b\u4e3b\u673a\u7684 mount point\uff0c/var/lib/docker/volumes/<containerid>/_data USER\uff1a\u5207\u6362\u8fd0\u884c\u955c\u50cf\u7684\u7528\u6237\u548c\u7528\u6237\u7ec4\uff0c\u56e0\u5b89\u5168\u6027\u8981\u6c42\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u573a\u666f\u8981\u6c42\u5bb9\u5668\u5e94\u7528\u8981\u4ee5 non-root \u8eab\u4efd\u8fd0\u884c USER <user>[:<group>] WORKDIR\uff1a\u7b49\u4ef7\u4e8e cd\uff0c\u5207\u6362\u5de5\u4f5c\u76ee\u5f55 WORKDIR /path/to/workdir \u5176\u4ed6\u975e\u5e38\u7528\u6307\u4ee4 ARG ONBUILD STOPSIGNAL HEALTHCHECK SHELL Dockerfile \u6700\u4f73\u5b9e\u8df5 \u4e0d\u8981\u5b89\u88c5\u65e0\u6548\u8f6f\u4ef6\u5305\u3002 \u5e94\u7b80\u5316\u955c\u50cf\u4e2d\u540c\u65f6\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570\uff0c\u7406\u60f3\u72b6\u51b5\u4e0b\uff0c\u6bcf\u4e2a\u955c\u50cf\u5e94\u8be5\u53ea\u6709\u4e00\u4e2a\u8fdb\u7a0b\u3002 \u5f53\u65e0\u6cd5\u907f\u514d\u540c\u4e00\u955c\u50cf\u8fd0\u884c\u591a\u8fdb\u7a0b\u65f6\uff0c\u5e94\u9009\u62e9\u5408\u7406\u7684\u521d\u59cb\u5316\u8fdb\u7a0b\uff08init process\uff09\u3002 \u6700\u5c0f\u5316\u5c42\u7ea7\u6570 \u6700\u65b0\u7684 docker \u53ea\u6709 RUN\uff0c COPY\uff0cADD \u521b\u5efa\u65b0\u5c42\uff0c\u5176\u4ed6\u6307\u4ee4\u521b\u5efa\u4e34\u65f6\u5c42\uff0c\u4e0d\u4f1a\u589e\u52a0\u955c\u50cf\u5927\u5c0f\u3002 \u6bd4\u5982 EXPOSE \u6307\u4ee4\u5c31\u4e0d\u4f1a\u751f\u6210\u65b0\u5c42\u3002 \u591a\u6761 RUN \u547d\u4ee4\u53ef\u901a\u8fc7\u8fde\u63a5\u7b26\u8fde\u63a5\u6210\u4e00\u6761\u6307\u4ee4\u96c6\u4ee5\u51cf\u5c11\u5c42\u6570\u3002 \u901a\u8fc7\u591a\u6bb5\u6784\u5efa\u51cf\u5c11\u955c\u50cf\u5c42\u6570\u3002 \u628a\u591a\u884c\u53c2\u6570\u6309\u5b57\u6bcd\u6392\u5e8f\uff0c\u53ef\u4ee5\u51cf\u5c11\u53ef\u80fd\u51fa\u73b0\u7684\u91cd\u590d\u53c2\u6570\uff0c\u5e76\u4e14\u63d0\u9ad8\u53ef\u8bfb\u6027\u3002 \u7f16\u5199 dockerfile \u7684\u65f6\u5019\uff0c\u5e94\u8be5\u628a\u53d8\u66f4\u9891\u7387\u4f4e\u7684\u7f16\u8bd1\u6307\u4ee4\u4f18\u5148\u6784\u5efa\u4ee5\u4fbf\u653e\u5728\u955c\u50cf\u5e95\u5c42\u4ee5\u6709\u6548\u5229\u7528 build cache\u3002 \u590d\u5236\u6587\u4ef6\u65f6\uff0c\u6bcf\u4e2a\u6587\u4ef6\u5e94\u72ec\u7acb\u590d\u5236\uff0c\u8fd9\u786e\u4fdd\u67d0\u4e2a\u6587\u4ef6\u53d8\u66f4\u65f6\uff0c\u53ea\u5f71\u54cd\u6539\u6587\u4ef6\u5bf9\u5e94\u7684\u7f13\u5b58\u3002 \u76ee\u6807\uff1a\u6613\u7ba1\u7406\u3001\u5c11\u6f0f\u6d1e\u3001\u955c\u50cf\u5c0f\u3001\u5c42\u7ea7\u5c11\u3001\u5229\u7528\u7f13\u5b58\u3002 \u591a\u8fdb\u7a0b\u7684\u5bb9\u5668\u955c\u50cf \u9009\u62e9\u9002\u5f53\u7684 init \u8fdb\u7a0b \u9700\u8981\u6355\u83b7 SIGTERM \u4fe1\u53f7\u5e76\u5b8c\u6210\u5b50\u8fdb\u7a0b\u7684\u4f18\u96c5\u7ec8\u6b62 \u8d1f\u8d23\u6e05\u7406\u9000\u51fa\u7684\u5b50\u8fdb\u7a0b\u4ee5\u907f\u514d\u50f5\u5c38\u8fdb\u7a0b \u5f00\u6e90\u9879\u76ee: https://github.com/krallin/tini Docker \u955c\u50cf\u7ba1\u7406 docker save/load docker tag docker push/pull \u57fa\u4e8e Docker \u955c\u50cf\u7684\u7248\u672c\u7ba1\u7406 Docker tag docker tag \u547d\u4ee4\u53ef\u4ee5\u4e3a\u5bb9\u5668\u955c\u50cf\u6dfb\u52a0\u6807\u7b7e docker tag 0e5574283393 hub.docker.com/cncamp/httpserver:v1.0 hub.docker.com\uff1a \u955c\u50cf\u4ed3\u5e93\u5730\u5740\uff0c\u5982\u679c\u4e0d\u586b\uff0c\u5219\u9ed8\u8ba4\u4e3a hub.docker.com cncamp: repositry httpserver\uff1a\u955c\u50cf\u540d v1.0\uff1atag\uff0c\u5e38\u7528\u6765\u8bb0\u5f55\u7248\u672c\u4fe1\u606f Docker tag \u4e0e github \u7684\u7248\u672c\u7ba1\u7406\u5408\u529b \u4ee5 Kubernetes \u4e3a\u4f8b \u5f00\u53d1\u5206\u652f git checkout master Release \u5206\u652f git checkout \u2013b release-1.21 \u5728\u5e76\u884c\u671f\uff0c\u6240\u6709\u7684\u53d8\u66f4\u540c\u65f6\u653e\u8fdb master \u548c release branch \u7248\u672c\u53d1\u5e03 \u4ee5 release branch \u4e3a\u57fa\u7840\u6784\u5efa\u955c\u50cf\uff0c\u5e76\u4e3a\u955c\u50cf\u6807\u8bb0\u7248\u672c\u4fe1\u606f\uff1adocker tag 0e5574283393 k8s.io/kubernetes/apiserver:v1.21 \u5728 github \u4e2d\u4fdd\u5b58 release \u4ee3\u7801\u5feb\u7167 git tag v1.21 \u955c\u50cf\u4ed3\u5e93 Docker hub https://hub.docker.com/ \u521b\u5efa\u79c1\u6709\u955c\u50cf\u4ed3\u5e93 sudo docker run -d -p 5000:5000 registry Docker \u4f18\u52bf \u5c01\u88c5\u6027\uff1a \u4e0d\u9700\u8981\u518d\u542f\u52a8\u5185\u6838\uff0c\u6240\u4ee5\u5e94\u7528\u6269\u7f29\u5bb9\u65f6\u53ef\u4ee5\u79d2\u901f\u542f\u52a8\u3002 \u8d44\u6e90\u5229\u7528\u7387\u9ad8\uff0c\u76f4\u63a5\u4f7f\u7528\u5bbf\u4e3b\u673a\u5185\u6838\u8c03\u5ea6\u8d44\u6e90\uff0c\u6027\u80fd\u635f\u5931\u5c0f\u3002 \u65b9\u4fbf\u7684 CPU\u3001\u5185\u5b58\u8d44\u6e90\u8c03\u6574\u3002 \u80fd\u5b9e\u73b0\u79d2\u7ea7\u5feb\u901f\u56de\u6eda\u3002 \u4e00\u952e\u542f\u52a8\u6240\u6709\u4f9d\u8d56\u670d\u52a1\uff0c\u6d4b\u8bd5\u4e0d\u7528\u4e3a\u642d\u5efa\u73af\u5883\u72af\u6101\uff0cPE \u4e5f\u4e0d\u7528\u4e3a\u5efa\u7ad9\u590d\u6742\u62c5\u5fc3\u3002 \u955c\u50cf\u4e00\u6b21\u7f16\u8bd1\uff0c\u968f\u5904\u4f7f\u7528\u3002 \u6d4b\u8bd5\u3001\u751f\u4ea7\u73af\u5883\u9ad8\u5ea6\u4e00\u81f4\uff08\u6570\u636e\u9664\u5916\uff09\u3002 \u9694\u79bb\u6027\uff1a \u5e94\u7528\u7684\u8fd0\u884c\u73af\u5883\u548c\u5bbf\u4e3b\u673a\u73af\u5883\u65e0\u5173\uff0c\u5b8c\u5168\u7531\u955c\u50cf\u63a7\u5236\uff0c\u4e00\u53f0\u7269\u7406\u673a\u4e0a\u90e8\u7f72\u591a\u79cd\u73af\u5883\u7684\u955c\u50cf\u6d4b\u8bd5\u3002 \u591a\u4e2a\u5e94\u7528\u7248\u672c\u53ef\u4ee5\u5e76\u5b58\u5728\u673a\u5668\u4e0a\u3002 \u955c\u50cf\u589e\u91cf\u5206\u53d1\uff1a \u7531\u4e8e\u91c7\u7528\u4e86 Union FS\uff0c \u7b80\u5355\u6765\u8bf4\u5c31\u662f\u652f\u6301\u5c06\u4e0d\u540c\u7684\u76ee\u5f55\u6302\u8f7d\u5230\u540c\u4e00\u4e2a\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u4e0b\uff0c\u5e76\u5b9e\u73b0\u4e00\u79cd layer \u7684\u6982\u5ff5\uff0c\u6bcf\u6b21\u53d1\u5e03\u53ea\u4f20\u8f93\u53d8\u5316\u7684\u90e8\u5206\uff0c\u8282\u7ea6\u5e26\u5bbd\u3002 \u793e\u533a\u6d3b\u8dc3\uff1a Docker \u547d\u4ee4\u7b80\u5355\u3001\u6613\u7528\uff0c\u793e\u533a\u5341\u5206\u6d3b\u8dc3\uff0c\u4e14\u5468\u8fb9\u7ec4\u4ef6\u4e30\u5bcc\u3002 \u5bb9\u5668\u7684\u52a3\u52bf\uff1f \u8bfe\u540e\u4f5c\u4e1a\uff1a\u601d\u8003\u5e76\u8ba8\u8bba\u5bb9\u5668\u7684\u52a3\u52bf\u3002 \u8bfe\u540e\u7ec3\u4e60 3.2 \u6784\u5efa\u672c\u5730\u955c\u50cf \u7f16\u5199 Dockerfile \u5c06\u7ec3\u4e60 2.2 \u7f16\u5199\u7684 httpserver \u5bb9\u5668\u5316 \u8bf7\u601d\u8003\u6709\u54ea\u4e9b\u6700\u4f73\u5b9e\u8df5\u53ef\u4ee5\u5f15\u5165\u5230 Dockerfile \u4e2d\u6765 \u5c06\u955c\u50cf\u63a8\u9001\u81f3 Docker \u5b98\u65b9\u955c\u50cf\u4ed3\u5e93 \u901a\u8fc7 Docker \u547d\u4ee4\u672c\u5730\u542f\u52a8 httpserver \u901a\u8fc7 nsenter \u8fdb\u5165\u5bb9\u5668\u67e5\u770b IP \u914d\u7f6e \u53c2\u8003\u8d44\u6599 Linux\u5185\u6838CFS\u8c03\u5ea6\u5668 CFS\u8c03\u5ea6\u5668\uff085\uff09-\u5e26\u5bbd\u63a7\u5236","title":"Dockerfile \u7684\u6700\u4f73\u5b9e\u8df5"},{"location":"2/1/3/#dockerfile","text":"","title":"Dockerfile \u7684\u6700\u4f73\u5b9e\u8df5"},{"location":"2/1/3/#docker","text":"\u5b9a\u4e49 dockerfile FROM ubuntu # so apt-get doesn't complain ENV DEBIAN_FRONTEND=noninteractive RUN sed -i 's/^exit 101/exit 0/' /usr/sbin/policy-rc.d RUN \\ apt-get update && \\ apt-get install -y ca-certificates && \\ apt-get install -y curl && \\ rm -rf /var/lib/apt/lists/* ADD ./bin/eic eic ENTRYPOINT [\"/eic\"] docker build","title":"\u521b\u5efa docker \u955c\u50cf"},{"location":"2/1/3/#12-factor","text":"\u8fd0\u884c\u73af\u5883\u4e2d\uff0c\u5e94\u7528\u7a0b\u5e8f\u901a\u5e38\u662f\u4ee5\u4e00\u4e2a\u548c\u591a\u4e2a \u8fdb\u7a0b \u8fd0\u884c\u7684\u3002 12-Factor \u5e94\u7528\u7684\u8fdb\u7a0b\u5fc5\u987b\u65e0\u72b6\u6001\uff08Stateless\uff09\u4e14\u65e0\u5171\u4eab\uff08Share nothing\uff09\u3002 \u4efb\u4f55\u9700\u8981\u6301\u4e45\u5316\u7684\u6570\u636e\u90fd\u8981\u5b58\u50a8\u5728\u540e\u7aef\u670d\u52a1\u5185\uff0c\u6bd4\u5982\u6570\u636e\u5e93\u3002 \u5e94\u5728\u6784\u5efa\u9636\u6bb5\u5c06\u6e90\u4ee3\u7801\u7f16\u8bd1\u6210\u5f85\u6267\u884c\u5e94\u7528\u3002 Session Sticky \u662f 12-Factor \u6781\u529b\u53cd\u5bf9\u7684\u3002 Session \u4e2d\u7684\u6570\u636e\u5e94\u8be5\u4fdd\u5b58\u5728\u8bf8\u5982 Memcached \u6216 Redis \u8fd9\u6837\u7684\u5e26\u6709\u8fc7\u671f\u65f6\u95f4\u7684\u7f13\u5b58\u4e2d\u3002 Docker \u9075\u5faa\u4ee5\u4e0a\u539f\u5219\u7ba1\u7406\u548c\u6784\u5efa\u5e94\u7528\u3002","title":"\u56de\u987e 12 Factor \u4e4b\u8fdb\u7a0b"},{"location":"2/1/3/#build-context","text":"\u5f53\u8fd0\u884c docker build \u547d\u4ee4\u65f6\uff0c\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u88ab\u79f0\u4e3a\u6784\u5efa\u4e0a\u4e0b\u6587\u3002 docker build \u9ed8\u8ba4\u67e5\u627e\u5f53\u524d\u76ee\u5f55\u7684 Dockerfile \u4f5c\u4e3a\u6784\u5efa\u8f93\u5165\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 \u2013f \u6307\u5b9a Dockerfile\u3002 docker build \u2013f ./Dockerfile \u5f53 docker build \u8fd0\u884c\u65f6\uff0c\u9996\u5148\u4f1a\u628a\u6784\u5efa\u4e0a\u4e0b\u6587\u4f20\u8f93\u7ed9 docker daemon\uff0c\u628a\u6ca1\u7528\u7684\u6587\u4ef6\u5305\u542b\u5728\u6784\u5efa\u4e0a\u4e0b\u6587\u65f6\uff0c\u4f1a\u5bfc\u81f4\u4f20\u8f93\u65f6\u95f4\u957f\uff0c\u6784\u5efa\u9700\u8981\u7684\u8d44\u6e90\u591a\uff0c\u6784\u5efa\u51fa\u7684\u955c\u50cf\u5927\u7b49\u95ee\u9898\u3002 \u8bd5\u7740\u5230\u4e00\u4e2a\u5305\u542b\u6587\u4ef6\u5f88\u591a\u7684\u76ee\u5f55\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff0c\u4f1a\u611f\u53d7\u5230\u5dee\u5f02\uff1b docker build -f $GOPATH/src/github.com/cncamp/golang/httpserver/Dockerfile \uff1b docker build $GOPATH/src/github.com/cncamp/golang/httpserver/\uff1b \u53ef\u4ee5\u901a\u8fc7.dockerignore\u6587\u4ef6\u4ece\u7f16\u8bd1\u4e0a\u4e0b\u6587\u6392\u9664\u67d0\u4e9b\u6587\u4ef6\u3002 \u56e0\u6b64\u9700\u8981\u786e\u4fdd\u6784\u5efa\u4e0a\u4e0b\u6587\u6e05\u6670\uff0c\u6bd4\u5982\u521b\u5efa\u4e00\u4e2a\u4e13\u95e8\u7684\u76ee\u5f55\u653e\u7f6e Dockerfile\uff0c\u5e76\u5728\u76ee\u5f55\u4e2d\u8fd0\u884c docker build\u3002","title":"\u7406\u89e3\u6784\u5efa\u4e0a\u4e0b\u6587\uff08Build Context\uff09"},{"location":"2/1/3/#_1","text":"docker build $GOPATH/src/github.com/cncamp/golang/httpserver/ Sending build context to Docker daemon 14.57MB Step 1/4 : FROM ubuntu ---> cf0f3ca922e0 Step 2/4 : ENV MY_SERVICE_PORT=80 ---> Using cache ---> a7d824f74410 Step 3/4 : ADD bin/amd64/httpserver /httpserver ---> Using cache ---> 00bb47fce704 Step 4/4 : ENTRYPOINT /httpserver ---> Using cache ---> f77ee3366d08 Successfully built f77ee3366d08","title":"\u955c\u50cf\u6784\u5efa\u65e5\u5fd7"},{"location":"2/1/3/#build-cache","text":"\u6784\u5efa\u5bb9\u5668\u955c\u50cf\u65f6\uff0cDocker \u4f9d\u6b21\u8bfb\u53d6 Dockerfile \u4e2d\u7684\u6307\u4ee4\uff0c\u5e76\u6309\u987a\u5e8f\u4f9d\u6b21\u6267\u884c\u6784\u5efa\u6307\u4ee4\u3002 Docker \u8bfb\u53d6\u6307\u4ee4\u540e\uff0c\u4f1a\u5148\u5224\u65ad\u7f13\u5b58\u4e2d\u662f\u5426\u6709\u53ef\u7528\u7684\u5df2\u5b58\u955c\u50cf\uff0c\u53ea\u6709\u5df2\u5b58\u955c\u50cf\u4e0d\u5b58\u5728\u65f6\u624d\u4f1a\u91cd\u65b0\u6784\u5efa\u3002 \u901a\u5e38 Docker \u7b80\u5355\u5224\u65ad Dockerfile \u4e2d\u7684\u6307\u4ee4\u4e0e\u955c\u50cf\u3002 \u9488\u5bf9 ADD \u548c COPY \u6307\u4ee4\uff0cDocker \u5224\u65ad\u8be5\u955c\u50cf\u5c42\u6bcf\u4e00\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\u5e76\u751f\u6210\u4e00\u4e2a checksum\uff0c\u4e0e\u73b0\u5b58\u955c\u50cf\u6bd4\u8f83\u65f6\uff0cDocker \u6bd4\u8f83\u7684\u662f\u4e8c\u8005\u7684 checksum\u3002 \u5176\u4ed6\u6307\u4ee4\uff0c\u6bd4\u5982 RUN apt-get -y update\uff0cDocker \u7b80\u5355\u6bd4\u8f83\u4e0e\u73b0\u5b58\u955c\u50cf\u4e2d\u7684\u6307\u4ee4\u5b57\u4e32\u662f\u5426\u4e00\u81f4\u3002 \u5f53\u67d0\u4e00\u5c42 cache \u5931\u6548\u4ee5\u540e\uff0c\u6240\u6709\u6240\u6709\u5c42\u7ea7\u7684 cache \u5747\u4e00\u5e76\u5931\u6548\uff0c\u540e\u7eed\u6307\u4ee4\u90fd\u91cd\u65b0\u6784\u5efa\u955c\u50cf\u3002","title":"Build Cache"},{"location":"2/1/3/#multi-stage-build","text":"\u6709\u6548\u51cf\u5c11\u955c\u50cf\u5c42\u7ea7\u7684\u65b9\u5f0f FROM golang:1.16-alpine AS build RUN apk add --no-cache git RUN go get github.com/golang/dep/cmd/dep COPY Gopkg.lock Gopkg.toml /go/src/project/ WORKDIR /go/src/project/ RUN dep ensure -vendor-only COPY . /go/src/project/ RUN go build -o /bin/project\uff08\u53ea\u6709\u8fd9\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u662f\u4ea7\u7ebf\u9700\u8981\u7684\uff0c\u5176\u4ed6\u90fd\u662fwaste\uff09 FROM scratch COPY --from=build /bin/project /bin/project ENTRYPOINT [\"/bin/project\"] CMD [\"--help\"]","title":"\u591a\u6bb5\u6784\u5efa\uff08Multi-stage build\uff09"},{"location":"2/1/3/#dockerfile_1","text":"FROM\uff1a\u9009\u62e9\u57fa\u7840\u955c\u50cf\uff0c\u63a8\u8350 alpine FROM [--platform=<platform>] <image>[@<digest>] [AS <name>] docker \u57fa\u7840\u955c\u50cf: scratch: \u7a7a\u955c\u50cf\uff0c\u57fa\u7840\u955c\u50cf scratch \u662f Docker \u4e2d\u9884\u7559\u7684\u6700\u5c0f\u7684\u57fa\u7840\u955c\u50cf\u3002bosybox\u3001Go \u8bed\u8a00\u7f16\u8bd1\u6253\u5305\u7684\u955c\u50cf\u90fd\u53ef\u4ee5\u57fa\u4e8e scratch \u6765\u6784\u5efa\u3002 scratch\u955c\u50cf\u4e0d\u5728\u955c\u50cf\u4ed3\u5e93\u4e2d\uff0c\u4f46\u662f\u53ef\u4ee5\u5728 Dockerfile \u5f15\u7528\u3002 \u8fd0\u884c\u4e00\u4e2a\u5305\u542b\u6240\u6709\u4f9d\u8d56\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5982 Golang \u7a0b\u5e8f\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 scratch \u4f5c\u4e3a\u57fa\u7840\u955c\u50cf\u3002 busybox BusyBox \u662f\u4e00\u4e2a\u96c6\u6210\u4e86\u4e00\u767e\u591a\u4e2a\u6700\u5e38\u7528 Linux \u547d\u4ee4\u548c\u5de5\u5177\uff08\u5982 cat\u3001echo\u3001grep\u3001mount\u3001telnet \u7b49\uff09\u7684\u7cbe\u7b80\u5de5\u5177\u7bb1\uff0c\u5b83\u53ea\u6709\u51e0 MB \u7684\u5927\u5c0f\uff0c\u5f88\u65b9\u4fbf\u8fdb\u884c\u5404\u79cd\u5feb\u901f\u9a8c\u8bc1\uff0c\u88ab\u8a89\u4e3a\u201cLinux\u7cfb\u7edf\u7684\u745e\u58eb\u519b\u5200\u201d\u3002BusyBox \u53ef\u8fd0\u884c\u4e8e\u591a\u6b3e POSIX \u73af\u5883\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u5982 Linux\uff08\u5305\u62ecAndroid\uff09\u3001Hurd\u3001FreeBSD \u7b49\u3002 Alpine Alpine \u64cd\u4f5c\u7cfb\u7edf\u662f\u4e00\u4e2a\u9762\u5411\u5b89\u5168\u7684\u8f7b\u578b Linux \u53d1\u884c\u7248\u3002\u5b83\u4e0d\u540c\u4e8e\u901a\u5e38\u7684 Linux \u53d1\u884c\u7248\uff0cAlpine \u91c7\u7528\u4e86 musl libc \u548c BusyBox \u4ee5\u51cf\u5c0f\u7cfb\u7edf\u7684\u4f53\u79ef\u548c\u8fd0\u884c\u65f6\u8d44\u6e90\u6d88\u8017\uff0c\u4f46\u529f\u80fd\u4e0a\u6bd4 BusyBox \u53c8\u5b8c\u5584\u5f97\u591a\u3002\u5728\u4fdd\u6301\u7626\u8eab\u7684\u540c\u65f6\uff0cAlpine \u8fd8\u63d0\u4f9b\u4e86\u81ea\u5df1\u7684\u5305\u7ba1\u7406\u5de5\u5177 apk\uff0c\u53ef\u4ee5\u901a\u8fc7 https://pkgs.alpinelinux.org/packages \u67e5\u8be2\u5305\u4fe1\u606f\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7apk\u547d\u4ee4\u76f4\u63a5\u67e5\u8be2\u548c\u5b89\u88c5\u5404\u79cd\u8f6f\u4ef6\u3002 Alpine Docker \u955c\u50cf\u4e5f\u7ee7\u627f\u4e86 Alpine Linux \u53d1\u884c\u7248\u7684\u8fd9\u4e9b\u4f18\u52bf\u3002\u76f8\u6bd4\u4e8e\u5176\u4ed6 Docker \u955c\u50cf\uff0c\u5b83\u7684\u5bb9\u91cf\u975e\u5e38\u5c0f\uff0c\u4ec5\u4ec5\u53ea\u6709 5MB \u5de6\u53f3\uff08Ubuntu\u7cfb\u5217\u955c\u50cf\u63a5\u8fd1200MB\uff09\uff0c\u4e14\u62e5\u6709\u975e\u5e38\u53cb\u597d\u7684\u5305\u7ba1\u7406\u673a\u5236\u3002\u5b98\u65b9\u955c\u50cf\u6765\u81ea docker-alpine \u9879\u76ee\u3002 \u76ee\u524d Docker \u5b98\u65b9\u5df2\u5f00\u59cb\u63a8\u8350\u4f7f\u7528 Alpine \u66ff\u4ee3\u4e4b\u524d\u7684 Ubuntu \u4f5c\u4e3a\u57fa\u7840\u955c\u50cf\u73af\u5883\u3002\u8fd9\u6837\u4f1a\u5e26\u6765\u591a\u4e2a\u597d\u5904\uff0c\u5305\u62ec\u955c\u50cf\u4e0b\u8f7d\u901f\u5ea6\u52a0\u5feb\uff0c\u955c\u50cf\u5b89\u5168\u6027\u63d0\u9ad8\uff0c\u4e3b\u673a\u4e4b\u95f4\u7684\u5207\u6362\u66f4\u65b9\u4fbf\uff0c\u5360\u7528\u66f4\u5c11\u78c1\u76d8\u7a7a\u95f4\u7b49\u3002 LABELS\uff1a\u6309\u6807\u7b7e\u7ec4\u7ec7\u9879\u76ee LABEL multi.label1=\"value1\" multi.label2=\"value2\" other=\"value3\u201d \u914d\u5408 label filter \u53ef\u8fc7\u6ee4\u955c\u50cf\u67e5\u8be2\u7ed3\u679c docker images -f label=multi.label1=\"value1\" RUN\uff1a\u6267\u884c\u547d\u4ee4 \u6700\u5e38\u89c1\u7684\u7528\u6cd5\u662f RUN apt-get update && apt-get install\uff0c\u8fd9\u4e24\u6761\u547d\u4ee4\u5e94\u8be5\u6c38\u8fdc\u7528&&\u8fde\u63a5\uff0c\u5982\u679c\u5206\u5f00\u6267\u884c\uff0cRUN apt-get update \u6784\u5efa\u5c42\u88ab\u7f13\u5b58\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u65b0 package \u65e0\u6cd5\u5b89\u88c5 CMD\uff1a\u5bb9\u5668\u955c\u50cf\u4e2d\u5305\u542b\u5e94\u7528\u7684\u8fd0\u884c\u547d\u4ee4\uff0c\u9700\u8981\u5e26\u53c2\u6570 CMD [\"executable\", \"param1\", \"param2\"\u2026] EXPOSE\uff1a\u53d1\u5e03\u7aef\u53e3 EXPOSE <port> [<port>/<protocol>...] - \u662f\u955c\u50cf\u521b\u5efa\u8005\u548c\u4f7f\u7528\u8005\u7684\u7ea6\u5b9a - \u5728 docker run \u2013P \u65f6\uff0cdocker \u4f1a\u81ea\u52a8\u6620\u5c04 expose \u7684\u7aef\u53e3\u5230\u4e3b\u673a\u5927\u7aef\u53e3\uff0c\u59820.0.0.0:32768->80/tcp ENV \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf ENV <key>=<value> ... ADD\uff1a\u4ece\u6e90\u5730\u5740\uff08\u6587\u4ef6\uff0c\u76ee\u5f55\u6216\u8005 URL \uff09\u590d\u5236\u6587\u4ef6\u5230\u76ee\u6807\u8def\u5f84 ADD [--chown=<user>:<group>] <src>... <dest> ADD [--chown=<user>:<group>] [\u201c<src>\u201d,... \u201c<dest>\u201d] \uff08\u8def\u5f84\u4e2d\u6709\u7a7a\u683c\u65f6\u4f7f\u7528\uff09 ADD \u652f\u6301 Go \u98ce\u683c\u7684\u901a\u914d\u7b26\uff0c\u5982 ADD check* /testdir/ src \u5982\u679c\u662f\u6587\u4ef6\uff0c\u5219\u5fc5\u987b\u5305\u542b\u5728\u7f16\u8bd1\u4e0a\u4e0b\u6587\u4e2d\uff0cADD \u6307\u4ee4\u65e0\u6cd5\u6dfb\u52a0\u7f16\u8bd1\u4e0a\u4e0b\u6587\u4e4b\u5916\u7684\u6587\u4ef6 src \u5982\u679c\u662f URL \u5982\u679c dest \u7ed3\u5c3e\u6ca1\u6709/\uff0c\u90a3\u4e48 dest \u662f\u76ee\u6807\u6587\u4ef6\u540d\uff0c\u5982\u679c dest \u7ed3\u5c3e\u6709/\uff0c\u90a3\u4e48 dest \u662f\u76ee\u6807\u76ee\u5f55\u540d \u5982\u679c src \u662f\u4e00\u4e2a\u76ee\u5f55\uff0c\u5219\u6240\u6709\u6587\u4ef6\u90fd\u4f1a\u88ab\u590d\u5236\u81f3 dest \u5982\u679c src \u662f\u4e00\u4e2a\u672c\u5730\u538b\u7f29\u6587\u4ef6\uff0c\u5219\u5728 ADD \u7684\u540c\u65f6\u5b8c\u6574\u89e3\u538b\u64cd\u4f5c \u5982\u679c dest \u4e0d\u5b58\u5728\uff0c\u5219 ADD \u6307\u4ee4\u4f1a\u521b\u5efa\u76ee\u6807\u76ee\u5f55 \u5e94\u5c3d\u91cf\u51cf\u5c11\u901a\u8fc7 ADD URL \u6dfb\u52a0 remote \u6587\u4ef6\uff0c\u5efa\u8bae\u4f7f\u7528 curl \u6216\u8005 wget && untar COPY\uff1a\u4ece\u6e90\u5730\u5740\uff08\u6587\u4ef6\uff0c\u76ee\u5f55\u6216\u8005URL\uff09\u590d\u5236\u6587\u4ef6\u5230\u76ee\u6807\u8def\u5f84 COPY [--chown=<user>:<group>] <src>... <dest> COPY [--chown=<user>:<group>] [\"<src>\",... \"<dest>\"] // \u8def\u5f84\u4e2d\u6709\u7a7a\u683c\u65f6\u4f7f\u7528 COPY \u7684\u4f7f\u7528\u4e0e ADD \u7c7b\u4f3c\uff0c\u4f46\u6709\u5982\u4e0b\u533a\u522b COPY \u53ea\u652f\u6301\u672c\u5730\u6587\u4ef6\u7684\u590d\u5236\uff0c\u4e0d\u652f\u6301 URL COPY \u4e0d\u89e3\u538b\u6587\u4ef6 COPY \u53ef\u4ee5\u7528\u4e8e\u591a\u9636\u6bb5\u7f16\u8bd1\u573a\u666f\uff0c\u53ef\u4ee5\u7528\u524d\u4e00\u4e2a\u4e34\u65f6\u955c\u50cf\u4e2d\u62f7\u8d1d\u6587\u4ef6 COPY --from=build /bin/project /bin/project COPY \u8bed\u4e49\u4e0a\u66f4\u76f4\u767d\uff0c\u590d\u5236\u672c\u5730\u6587\u4ef6\u65f6\uff0c\u4f18\u5148\u4f7f\u7528 COPY ENTRYPOINT\uff1a\u5b9a\u4e49\u53ef\u4ee5\u6267\u884c\u7684\u5bb9\u5668\u955c\u50cf\u5165\u53e3\u547d\u4ee4 ENTRYPOINT [\"executable\", \"param1\", \"param2\"] // docker run\u53c2\u6570\u8ffd\u52a0\u6a21\u5f0f ENTRYPOINT command param1 param2 // docker run \u53c2\u6570\u66ff\u6362\u6a21\u5f0f docker run \u2013entrypoint \u53ef\u66ff\u6362 Dockerfile \u4e2d\u5b9a\u4e49\u7684 ENTRYPOINT ENTRYPOINT \u7684\u6700\u4f73\u5b9e\u8df5\u662f\u7528 ENTRYPOINT \u5b9a\u4e49\u955c\u50cf\u4e3b\u547d\u4ee4\uff0c\u5e76\u901a\u8fc7 CMD \u5b9a\u4e49\u4e3b\u8981\u53c2\u6570\uff0c\u5982\u4e0b\u6240\u793a ENTRYPOINT [\"s3cmd\"] CMD [\"--help\"] VOLUME\uff1a \u5c06\u6307\u5b9a\u76ee\u5f55\u5b9a\u4e49\u4e3a\u5916\u6302\u5b58\u50a8\u5377\uff0cDockerfile \u4e2d\u5728\u8be5\u6307\u4ee4\u4e4b\u540e\u6240\u6709\u5bf9\u540c\u4e00\u76ee\u5f55\u7684\u4fee\u6539\u90fd\u65e0\u6548 VOLUME [\"/data\"] \u7b49\u4ef7\u4e8e docker run \u2013v /data\uff0c \u53ef\u901a\u8fc7 docker inspect \u67e5\u770b\u4e3b\u673a\u7684 mount point\uff0c/var/lib/docker/volumes/<containerid>/_data USER\uff1a\u5207\u6362\u8fd0\u884c\u955c\u50cf\u7684\u7528\u6237\u548c\u7528\u6237\u7ec4\uff0c\u56e0\u5b89\u5168\u6027\u8981\u6c42\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u573a\u666f\u8981\u6c42\u5bb9\u5668\u5e94\u7528\u8981\u4ee5 non-root \u8eab\u4efd\u8fd0\u884c USER <user>[:<group>] WORKDIR\uff1a\u7b49\u4ef7\u4e8e cd\uff0c\u5207\u6362\u5de5\u4f5c\u76ee\u5f55 WORKDIR /path/to/workdir \u5176\u4ed6\u975e\u5e38\u7528\u6307\u4ee4 ARG ONBUILD STOPSIGNAL HEALTHCHECK SHELL","title":"Dockerfile \u5e38\u7528\u6307\u4ee4"},{"location":"2/1/3/#dockerfile_2","text":"\u4e0d\u8981\u5b89\u88c5\u65e0\u6548\u8f6f\u4ef6\u5305\u3002 \u5e94\u7b80\u5316\u955c\u50cf\u4e2d\u540c\u65f6\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570\uff0c\u7406\u60f3\u72b6\u51b5\u4e0b\uff0c\u6bcf\u4e2a\u955c\u50cf\u5e94\u8be5\u53ea\u6709\u4e00\u4e2a\u8fdb\u7a0b\u3002 \u5f53\u65e0\u6cd5\u907f\u514d\u540c\u4e00\u955c\u50cf\u8fd0\u884c\u591a\u8fdb\u7a0b\u65f6\uff0c\u5e94\u9009\u62e9\u5408\u7406\u7684\u521d\u59cb\u5316\u8fdb\u7a0b\uff08init process\uff09\u3002 \u6700\u5c0f\u5316\u5c42\u7ea7\u6570 \u6700\u65b0\u7684 docker \u53ea\u6709 RUN\uff0c COPY\uff0cADD \u521b\u5efa\u65b0\u5c42\uff0c\u5176\u4ed6\u6307\u4ee4\u521b\u5efa\u4e34\u65f6\u5c42\uff0c\u4e0d\u4f1a\u589e\u52a0\u955c\u50cf\u5927\u5c0f\u3002 \u6bd4\u5982 EXPOSE \u6307\u4ee4\u5c31\u4e0d\u4f1a\u751f\u6210\u65b0\u5c42\u3002 \u591a\u6761 RUN \u547d\u4ee4\u53ef\u901a\u8fc7\u8fde\u63a5\u7b26\u8fde\u63a5\u6210\u4e00\u6761\u6307\u4ee4\u96c6\u4ee5\u51cf\u5c11\u5c42\u6570\u3002 \u901a\u8fc7\u591a\u6bb5\u6784\u5efa\u51cf\u5c11\u955c\u50cf\u5c42\u6570\u3002 \u628a\u591a\u884c\u53c2\u6570\u6309\u5b57\u6bcd\u6392\u5e8f\uff0c\u53ef\u4ee5\u51cf\u5c11\u53ef\u80fd\u51fa\u73b0\u7684\u91cd\u590d\u53c2\u6570\uff0c\u5e76\u4e14\u63d0\u9ad8\u53ef\u8bfb\u6027\u3002 \u7f16\u5199 dockerfile \u7684\u65f6\u5019\uff0c\u5e94\u8be5\u628a\u53d8\u66f4\u9891\u7387\u4f4e\u7684\u7f16\u8bd1\u6307\u4ee4\u4f18\u5148\u6784\u5efa\u4ee5\u4fbf\u653e\u5728\u955c\u50cf\u5e95\u5c42\u4ee5\u6709\u6548\u5229\u7528 build cache\u3002 \u590d\u5236\u6587\u4ef6\u65f6\uff0c\u6bcf\u4e2a\u6587\u4ef6\u5e94\u72ec\u7acb\u590d\u5236\uff0c\u8fd9\u786e\u4fdd\u67d0\u4e2a\u6587\u4ef6\u53d8\u66f4\u65f6\uff0c\u53ea\u5f71\u54cd\u6539\u6587\u4ef6\u5bf9\u5e94\u7684\u7f13\u5b58\u3002 \u76ee\u6807\uff1a\u6613\u7ba1\u7406\u3001\u5c11\u6f0f\u6d1e\u3001\u955c\u50cf\u5c0f\u3001\u5c42\u7ea7\u5c11\u3001\u5229\u7528\u7f13\u5b58\u3002","title":"Dockerfile \u6700\u4f73\u5b9e\u8df5"},{"location":"2/1/3/#_2","text":"\u9009\u62e9\u9002\u5f53\u7684 init \u8fdb\u7a0b \u9700\u8981\u6355\u83b7 SIGTERM \u4fe1\u53f7\u5e76\u5b8c\u6210\u5b50\u8fdb\u7a0b\u7684\u4f18\u96c5\u7ec8\u6b62 \u8d1f\u8d23\u6e05\u7406\u9000\u51fa\u7684\u5b50\u8fdb\u7a0b\u4ee5\u907f\u514d\u50f5\u5c38\u8fdb\u7a0b \u5f00\u6e90\u9879\u76ee: https://github.com/krallin/tini","title":"\u591a\u8fdb\u7a0b\u7684\u5bb9\u5668\u955c\u50cf"},{"location":"2/1/3/#docker_1","text":"docker save/load docker tag docker push/pull","title":"Docker \u955c\u50cf\u7ba1\u7406"},{"location":"2/1/3/#docker_2","text":"Docker tag docker tag \u547d\u4ee4\u53ef\u4ee5\u4e3a\u5bb9\u5668\u955c\u50cf\u6dfb\u52a0\u6807\u7b7e docker tag 0e5574283393 hub.docker.com/cncamp/httpserver:v1.0 hub.docker.com\uff1a \u955c\u50cf\u4ed3\u5e93\u5730\u5740\uff0c\u5982\u679c\u4e0d\u586b\uff0c\u5219\u9ed8\u8ba4\u4e3a hub.docker.com cncamp: repositry httpserver\uff1a\u955c\u50cf\u540d v1.0\uff1atag\uff0c\u5e38\u7528\u6765\u8bb0\u5f55\u7248\u672c\u4fe1\u606f","title":"\u57fa\u4e8e Docker \u955c\u50cf\u7684\u7248\u672c\u7ba1\u7406"},{"location":"2/1/3/#docker-tag-github","text":"\u4ee5 Kubernetes \u4e3a\u4f8b \u5f00\u53d1\u5206\u652f git checkout master Release \u5206\u652f git checkout \u2013b release-1.21 \u5728\u5e76\u884c\u671f\uff0c\u6240\u6709\u7684\u53d8\u66f4\u540c\u65f6\u653e\u8fdb master \u548c release branch \u7248\u672c\u53d1\u5e03 \u4ee5 release branch \u4e3a\u57fa\u7840\u6784\u5efa\u955c\u50cf\uff0c\u5e76\u4e3a\u955c\u50cf\u6807\u8bb0\u7248\u672c\u4fe1\u606f\uff1adocker tag 0e5574283393 k8s.io/kubernetes/apiserver:v1.21 \u5728 github \u4e2d\u4fdd\u5b58 release \u4ee3\u7801\u5feb\u7167 git tag v1.21","title":"Docker tag \u4e0e github \u7684\u7248\u672c\u7ba1\u7406\u5408\u529b"},{"location":"2/1/3/#_3","text":"Docker hub https://hub.docker.com/ \u521b\u5efa\u79c1\u6709\u955c\u50cf\u4ed3\u5e93 sudo docker run -d -p 5000:5000 registry","title":"\u955c\u50cf\u4ed3\u5e93"},{"location":"2/1/3/#docker_3","text":"\u5c01\u88c5\u6027\uff1a \u4e0d\u9700\u8981\u518d\u542f\u52a8\u5185\u6838\uff0c\u6240\u4ee5\u5e94\u7528\u6269\u7f29\u5bb9\u65f6\u53ef\u4ee5\u79d2\u901f\u542f\u52a8\u3002 \u8d44\u6e90\u5229\u7528\u7387\u9ad8\uff0c\u76f4\u63a5\u4f7f\u7528\u5bbf\u4e3b\u673a\u5185\u6838\u8c03\u5ea6\u8d44\u6e90\uff0c\u6027\u80fd\u635f\u5931\u5c0f\u3002 \u65b9\u4fbf\u7684 CPU\u3001\u5185\u5b58\u8d44\u6e90\u8c03\u6574\u3002 \u80fd\u5b9e\u73b0\u79d2\u7ea7\u5feb\u901f\u56de\u6eda\u3002 \u4e00\u952e\u542f\u52a8\u6240\u6709\u4f9d\u8d56\u670d\u52a1\uff0c\u6d4b\u8bd5\u4e0d\u7528\u4e3a\u642d\u5efa\u73af\u5883\u72af\u6101\uff0cPE \u4e5f\u4e0d\u7528\u4e3a\u5efa\u7ad9\u590d\u6742\u62c5\u5fc3\u3002 \u955c\u50cf\u4e00\u6b21\u7f16\u8bd1\uff0c\u968f\u5904\u4f7f\u7528\u3002 \u6d4b\u8bd5\u3001\u751f\u4ea7\u73af\u5883\u9ad8\u5ea6\u4e00\u81f4\uff08\u6570\u636e\u9664\u5916\uff09\u3002 \u9694\u79bb\u6027\uff1a \u5e94\u7528\u7684\u8fd0\u884c\u73af\u5883\u548c\u5bbf\u4e3b\u673a\u73af\u5883\u65e0\u5173\uff0c\u5b8c\u5168\u7531\u955c\u50cf\u63a7\u5236\uff0c\u4e00\u53f0\u7269\u7406\u673a\u4e0a\u90e8\u7f72\u591a\u79cd\u73af\u5883\u7684\u955c\u50cf\u6d4b\u8bd5\u3002 \u591a\u4e2a\u5e94\u7528\u7248\u672c\u53ef\u4ee5\u5e76\u5b58\u5728\u673a\u5668\u4e0a\u3002 \u955c\u50cf\u589e\u91cf\u5206\u53d1\uff1a \u7531\u4e8e\u91c7\u7528\u4e86 Union FS\uff0c \u7b80\u5355\u6765\u8bf4\u5c31\u662f\u652f\u6301\u5c06\u4e0d\u540c\u7684\u76ee\u5f55\u6302\u8f7d\u5230\u540c\u4e00\u4e2a\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u4e0b\uff0c\u5e76\u5b9e\u73b0\u4e00\u79cd layer \u7684\u6982\u5ff5\uff0c\u6bcf\u6b21\u53d1\u5e03\u53ea\u4f20\u8f93\u53d8\u5316\u7684\u90e8\u5206\uff0c\u8282\u7ea6\u5e26\u5bbd\u3002 \u793e\u533a\u6d3b\u8dc3\uff1a Docker \u547d\u4ee4\u7b80\u5355\u3001\u6613\u7528\uff0c\u793e\u533a\u5341\u5206\u6d3b\u8dc3\uff0c\u4e14\u5468\u8fb9\u7ec4\u4ef6\u4e30\u5bcc\u3002","title":"Docker \u4f18\u52bf"},{"location":"2/1/3/#_4","text":"\u8bfe\u540e\u4f5c\u4e1a\uff1a\u601d\u8003\u5e76\u8ba8\u8bba\u5bb9\u5668\u7684\u52a3\u52bf\u3002","title":"\u5bb9\u5668\u7684\u52a3\u52bf\uff1f"},{"location":"2/1/3/#32","text":"\u6784\u5efa\u672c\u5730\u955c\u50cf \u7f16\u5199 Dockerfile \u5c06\u7ec3\u4e60 2.2 \u7f16\u5199\u7684 httpserver \u5bb9\u5668\u5316 \u8bf7\u601d\u8003\u6709\u54ea\u4e9b\u6700\u4f73\u5b9e\u8df5\u53ef\u4ee5\u5f15\u5165\u5230 Dockerfile \u4e2d\u6765 \u5c06\u955c\u50cf\u63a8\u9001\u81f3 Docker \u5b98\u65b9\u955c\u50cf\u4ed3\u5e93 \u901a\u8fc7 Docker \u547d\u4ee4\u672c\u5730\u542f\u52a8 httpserver \u901a\u8fc7 nsenter \u8fdb\u5165\u5bb9\u5668\u67e5\u770b IP \u914d\u7f6e","title":"\u8bfe\u540e\u7ec3\u4e60 3.2"},{"location":"2/1/3/#_5","text":"Linux\u5185\u6838CFS\u8c03\u5ea6\u5668 CFS\u8c03\u5ea6\u5668\uff085\uff09-\u5e26\u5bbd\u63a7\u5236","title":"\u53c2\u8003\u8d44\u6599"},{"location":"2/2/1/","text":"\u4e91\u8ba1\u7b97 \u4ec0\u4e48\u662f\u4e91\u8ba1\u7b97 \u4e91\u8ba1\u7b97\u5e73\u53f0\u7684\u5206\u7c7b \u4ee5 Openstack \u4e3a\u5178\u578b\u7684\u865a\u62df\u5316\u5e73\u53f0 \u865a\u62df\u673a\u6784\u5efa\u548c\u4e1a\u52a1\u4ee3\u7801\u90e8\u7f72\u5206\u79bb\u3002 \u53ef\u53d8\u7684\u57fa\u7840\u67b6\u6784\u4f7f\u540e\u7eed\u7ef4\u62a4\u98ce\u9669\u53d8\u5927\u3002 \u4ee5\u8c37\u6b4c borg \u4e3a\u5178\u578b\u7684\u57fa\u4e8e\u8fdb\u7a0b\u7684\u4f5c\u4e1a\u8c03\u5ea6\u5e73\u53f0 \u6280\u672f\u7684\u8fed\u4ee3\u5f15\u53d1 borg \u7684\u6362\u4ee3\u9700\u6c42\u3002 \u65e9\u671f\u7684\u9694\u79bb\u4f9d\u9760 chroot jail \u5b9e\u73b0\uff0c\u4e00\u4e9b\u4e0d\u5408\u7406\u7684\u8bbe\u8ba1\u9700\u8981\u5728\u65b0\u4ea7\u54c1\u4e2d\u6539\u8fdb\u3002 \u5bf9\u8c61\u4e4b\u95f4\u7684\u5f3a\u4f9d\u8d56 job \u548c task \u662f\u5f3a\u5305\u542b\u5173\u7cfb\uff0c\u4e0d\u5229\u4e8e\u91cd\u7ec4\u3002 \u6240\u6709\u5bb9\u5668\u5171\u4eab IP\uff0c\u4f1a\u5bfc\u81f4\u7aef\u53e3\u51b2\u7a81\uff0c\u9694\u79bb\u56f0\u96be\u7b49\u95ee\u9898\u3002 \u4e3a\u8d85\u7ea7\u7528\u6237\u6dfb\u52a0\u590d\u6742\u903b\u8f91\u5bfc\u81f4\u7cfb\u7edf\u8fc7\u4e8e\u590d\u6742\u3002","title":"\u4e91\u8ba1\u7b97"},{"location":"2/2/1/#_1","text":"","title":"\u4e91\u8ba1\u7b97"},{"location":"2/2/1/#_2","text":"","title":"\u4ec0\u4e48\u662f\u4e91\u8ba1\u7b97"},{"location":"2/2/1/#_3","text":"\u4ee5 Openstack \u4e3a\u5178\u578b\u7684\u865a\u62df\u5316\u5e73\u53f0 \u865a\u62df\u673a\u6784\u5efa\u548c\u4e1a\u52a1\u4ee3\u7801\u90e8\u7f72\u5206\u79bb\u3002 \u53ef\u53d8\u7684\u57fa\u7840\u67b6\u6784\u4f7f\u540e\u7eed\u7ef4\u62a4\u98ce\u9669\u53d8\u5927\u3002 \u4ee5\u8c37\u6b4c borg \u4e3a\u5178\u578b\u7684\u57fa\u4e8e\u8fdb\u7a0b\u7684\u4f5c\u4e1a\u8c03\u5ea6\u5e73\u53f0 \u6280\u672f\u7684\u8fed\u4ee3\u5f15\u53d1 borg \u7684\u6362\u4ee3\u9700\u6c42\u3002 \u65e9\u671f\u7684\u9694\u79bb\u4f9d\u9760 chroot jail \u5b9e\u73b0\uff0c\u4e00\u4e9b\u4e0d\u5408\u7406\u7684\u8bbe\u8ba1\u9700\u8981\u5728\u65b0\u4ea7\u54c1\u4e2d\u6539\u8fdb\u3002 \u5bf9\u8c61\u4e4b\u95f4\u7684\u5f3a\u4f9d\u8d56 job \u548c task \u662f\u5f3a\u5305\u542b\u5173\u7cfb\uff0c\u4e0d\u5229\u4e8e\u91cd\u7ec4\u3002 \u6240\u6709\u5bb9\u5668\u5171\u4eab IP\uff0c\u4f1a\u5bfc\u81f4\u7aef\u53e3\u51b2\u7a81\uff0c\u9694\u79bb\u56f0\u96be\u7b49\u95ee\u9898\u3002 \u4e3a\u8d85\u7ea7\u7528\u6237\u6dfb\u52a0\u590d\u6742\u903b\u8f91\u5bfc\u81f4\u7cfb\u7edf\u8fc7\u4e8e\u590d\u6742\u3002","title":"\u4e91\u8ba1\u7b97\u5e73\u53f0\u7684\u5206\u7c7b"},{"location":"2/2/2/","text":"Kubernetes \u67b6\u6784\u57fa\u7840 Borg Google Borg \u7b80\u4ecb \u7279\u6027 \u7269\u7406\u8d44\u6e90\u5229\u7528\u7387\u9ad8\u3002 \u670d\u52a1\u5668\u5171\u4eab\uff0c\u5728\u8fdb\u7a0b\u7ea7\u522b\u505a\u9694\u79bb\u3002 \u5e94\u7528\u9ad8\u53ef\u7528\uff0c\u6545\u969c\u6062\u590d\u65f6\u95f4\u77ed\u3002 \u8c03\u5ea6\u7b56\u7565\u7075\u6d3b\u3002 \u5e94\u7528\u63a5\u5165\u548c\u4f7f\u7528\u65b9\u4fbf\uff0c\u63d0\u4f9b\u4e86\u5b8c\u5907\u7684 Job \u63cf\u8ff0\u8bed\u8a00\uff0c\u670d\u52a1\u53d1\u73b0\uff0c\u5b9e\u65f6\u72b6\u6001\u76d1\u63a7\u548c\u8bca\u65ad\u5de5\u5177\u3002 \u4f18\u52bf \u5bf9\u5916\u9690\u85cf\u5e95\u5c42\u8d44\u6e90\u7ba1\u7406\u548c\u8c03\u5ea6\u3001\u6545\u969c\u5904\u7406\u7b49\u3002 \u5b9e\u73b0\u5e94\u7528\u7684\u9ad8\u53ef\u9760\u548c\u9ad8\u53ef\u7528\u3002 \u8db3\u591f\u5f39\u6027\uff0c\u652f\u6301\u5e94\u7528\u8dd1\u5728\u6210\u5343\u4e0a\u4e07\u7684\u673a\u5668\u4e0a\u3002 \u57fa\u672c\u6982\u5ff5 Workload prod\uff1a\u5728\u7ebf\u4efb\u52a1\uff0c\u957f\u671f\u8fd0\u884c\u3001\u5bf9\u5ef6\u65f6\u654f\u611f\u3001\u9762\u5411\u7ec8\u7aef\u7528\u6237\u7b49\uff0c\u6bd4\u5982Gmail, Google Docs, Web Search \u670d\u52a1\u7b49\u3002 non-prod \uff1a\u79bb\u7ebf\u4efb\u52a1\uff0c\u4e5f\u79f0\u4e3a\u6279\u5904\u7406\u4efb\u52a1\uff08Batch\uff09\uff0c\u6bd4\u5982\u4e00\u4e9b\u5206\u5e03\u5f0f\u8ba1\u7b97\u670d\u52a1\u7b49\u3002 Cell \u4e00\u4e2a Cell \u4e0a\u8dd1\u4e00\u4e2a\u96c6\u7fa4\u7ba1\u7406\u7cfb\u7edf Borg\u3002 \u901a\u8fc7\u5b9a\u4e49 Cell \u53ef\u4ee5\u8ba9Borg \u5bf9\u670d\u52a1\u5668\u8d44\u6e90\u8fdb\u884c\u7edf\u4e00\u62bd\u8c61\uff0c\u4f5c\u4e3a\u7528\u6237\u5c31\u65e0\u9700\u77e5\u9053\u81ea\u5df1\u7684\u5e94\u7528\u8dd1\u5728\u54ea\u53f0\u673a\u5668\u4e0a\uff0c\u4e5f\u4e0d\u7528\u5173\u5fc3\u8d44\u6e90\u5206\u914d\u3001\u7a0b\u5e8f\u5b89\u88c5\u3001\u4f9d\u8d56\u7ba1\u7406\u3001\u5065\u5eb7\u68c0\u67e5\u53ca\u6545\u969c\u6062\u590d\u7b49\u3002 Job \u548c Task \u7528\u6237\u4ee5 Job \u7684\u5f62\u5f0f\u63d0\u4ea4\u5e94\u7528\u90e8\u7f72\u8bf7\u6c42\u3002\u4e00\u4e2aJob \u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u76f8\u540c\u7684 Task\uff0c\u6bcf\u4e2a Task\u8fd0\u884c\u76f8\u540c\u7684\u5e94\u7528\u7a0b\u5e8f\uff0cTask \u6570\u91cf\u5c31\u662f\u5e94\u7528\u7684\u526f\u672c\u6570\u3002 \u6bcf\u4e2a Job \u53ef\u4ee5\u5b9a\u4e49\u5c5e\u6027\u3001\u5143\u4fe1\u606f\u548c\u4f18\u5148\u7ea7\uff0c\u4f18\u5148\u7ea7\u6d89\u53ca\u5230\u62a2\u5360\u5f0f\u8c03\u5ea6\u8fc7\u7a0b\u3002 Naming Borg \u7684\u670d\u52a1\u53d1\u73b0\u901a\u8fc7BNS \uff08 Borg NameService\uff09\u6765\u5b9e\u73b0\u3002 50.jfoo.ubar.cc.borg.google.com \u53ef\u8868\u793a\u5728\u4e00\u4e2a\u540d\u4e3a cc \u7684 Cell\u4e2d\u7531\u7528\u6237 uBar \u90e8\u7f72\u7684\u4e00\u4e2a\u540d\u4e3a jFoo \u7684 Job\u4e0b\u7684\u7b2c50\u4e2a Task\u3002 Borg \u67b6\u6784 Borgmaster \u4e3b\u8fdb\u7a0b\uff1a \u5904\u7406\u5ba2\u6237\u7aef RPC \u8bf7\u6c42\uff0c\u6bd4\u5982\u521b\u5efa Job\uff0c\u67e5\u8be2 Job \u7b49\u3002 \u7ef4\u62a4\u7cfb\u7edf\u7ec4\u4ef6\u548c\u670d\u52a1\u7684\u72b6\u6001\uff0c\u6bd4\u5982\u670d\u52a1\u5668\u3001Task \u7b49\u3002 \u8d1f\u8d23\u4e0e Borglet \u901a\u4fe1\u3002 Scheduler \u8fdb\u7a0b\uff1a \u8c03\u5ea6\u7b56\u7565 Worst Fit \u8c03\u5ea6\u5230\u6700\u7a7a\u95f2\u7684\u673a\u5668\uff0c\u6700\u7ec8\u4f7f\u5f97\u6bcf\u53f0\u673a\u5668\u7684\u8d44\u6e90\u6d88\u8017\u76f8\u8fd1\u3002 Best Fit \u8c03\u5ea6\u5230\u521a\u521a\u597d\u6ee1\u8db3\u8d44\u6e90\u7684\u673a\u5668\uff0c\u65b9\u4fbf\u5f97\u51fa\u6700\u5c0f\u9700\u6c42\u673a\u5668\u7684\u8d44\u6e90\uff0c\u5c06\u591a\u4f59\u673a\u5668\u8e22\u51fa\u8282\u7ea6\u6210\u672c\u3002 Hybrid \u8c03\u5ea6\u4f18\u5316 Score caching: \u5f53\u670d\u52a1\u5668\u6216\u8005\u4efb\u52a1\u7684\u72b6\u6001\u672a\u53d1\u751f\u53d8\u66f4\u6216\u8005\u53d8\u66f4\u5f88\u5c11\u65f6\uff0c\u76f4\u63a5\u91c7\u7528\u7f13\u5b58\u6570\u636e\uff0c\u907f\u514d\u91cd\u590d\u8ba1\u7b97\u3002 Equivalence classes: \u8c03\u5ea6\u540c\u4e00 Job \u4e0b\u591a\u4e2a\u76f8\u540c\u7684 Task \u53ea\u9700\u8ba1\u7b97\u4e00\u6b21\u3002 Relaxed randomization: \u5f15\u5165\u4e00\u4e9b\u968f\u673a\u6027\uff0c\u5373\u6bcf\u6b21\u968f\u673a\u9009\u62e9\u4e00\u4e9b\u673a\u5668\uff0c\u53ea\u8981\u7b26\u5408\u9700\u6c42\u7684\u670d\u52a1\u5668\u6570\u91cf\u8fbe\u5230\u4e00\u5b9a\u503c\u65f6\uff0c\u5c31\u53ef\u4ee5\u505c\u6b62\u8ba1\u7b97\uff0c\u65e0\u9700\u6bcf\u6b21\u5bf9 Cell \u4e2d\u6240\u6709\u670d\u52a1\u5668\u8fdb\u884c feasibility checking\u3002 Borglet\uff1a Borglet \u662f\u90e8\u7f72\u5728\u6240\u6709\u670d\u52a1\u5668\u4e0a\u7684 Agent\uff0c\u8d1f\u8d23\u63a5\u6536 Borgmaster \u8fdb\u7a0b\u7684\u6307\u4ee4\u3002 \u5e94\u7528\u9ad8\u53ef\u7528 \u88ab\u62a2\u5360\u7684 non-prod \u4efb\u52a1\u653e\u56de pending queue\uff0c\u7b49\u5f85\u91cd\u65b0\u8c03\u5ea6\u3002 \u591a\u526f\u672c\u5e94\u7528\u8de8\u6545\u969c\u57df\u90e8\u7f72\u3002 \u6240\u8c13\u6545\u969c\u57df\u6709\u5927\u6709\u5c0f\uff0c\u6bd4\u5982\u76f8\u540c\u673a\u5668\u3001\u76f8\u540c\u673a\u67b6\u6216\u76f8\u540c\u7535\u6e90\u63d2\u5ea7\u7b49\uff0c\u4e00\u6302\u5168\u6302\u3002 \u5bf9\u4e8e\u7c7b\u4f3c\u670d\u52a1\u5668\u6216\u64cd\u4f5c\u7cfb\u7edf\u5347\u7ea7\u7684\u7ef4\u62a4\u64cd\u4f5c\uff0c\u907f\u514d\u5927\u91cf\u670d\u52a1\u5668\u540c\u65f6\u8fdb\u884c\u3002 \u652f\u6301 \u5e42\u7b49\u6027 \uff0c\u652f\u6301\u5ba2\u6237\u7aef\u91cd\u590d\u64cd\u4f5c\u3002 \u5f53\u670d\u52a1\u5668\u72b6\u6001\u53d8\u4e3a\u4e0d\u53ef\u7528\u65f6\uff0c\u8981\u63a7\u5236\u91cd\u65b0\u8c03\u5ea6\u4efb\u52a1\u7684\u901f\u7387\u3002 \u56e0\u4e3a Borg \u65e0\u6cd5\u533a\u5206\u662f\u8282\u70b9\u6545\u969c\u8fd8\u662f\u51fa\u73b0\u4e86\u77ed\u6682\u7684\u7f51\u7edc\u5206\u533a\uff0c\u5982\u679c\u662f\u540e\u8005\uff0c\u9759\u9759\u5730\u7b49\u5f85\u7f51\u7edc\u6062\u590d\u66f4\u5229\u4e8e\u4fdd\u969c\u670d\u52a1\u53ef\u7528\u6027\u3002 \u5f53\u67d0\u79cd\u201c\u4efb\u52a1 @ \u670d\u52a1\u5668\u201d\u7684\u7ec4\u5408\u51fa\u73b0\u6545\u969c\u65f6\uff0c\u4e0b\u6b21\u91cd\u65b0\u8c03\u5ea6\u65f6\u9700\u907f\u514d\u8fd9\u79cd\u7ec4\u5408\u518d\u6b21\u51fa\u73b0\uff0c\u56e0\u4e3a\u6781\u5927\u53ef\u80fd\u4f1a\u518d\u6b21\u51fa\u73b0\u76f8\u540c\u6545\u969c\u3002 \u8bb0\u5f55\u8be6\u7ec6\u7684\u5185\u90e8\u4fe1\u606f\uff0c\u4fbf\u4e8e\u6545\u969c\u6392\u67e5\u548c\u5206\u6790\u3002 \u4fdd\u969c\u5e94\u7528\u9ad8\u53ef\u7528\u7684\u5173\u952e\u6027\u8bbe\u8ba1\u539f\u5219\uff1a \u65e0\u8bba\u4f55\u79cd\u539f\u56e0\uff0c\u5373\u4f7f Borgmaster \u6216\u8005 Borglet \u6302\u6389\u3001\u5931\u8054\uff0c\u90fd\u4e0d\u80fd\u6740\u6389\u6b63\u5728\u8fd0\u884c\u7684\u670d\u52a1\uff08Task\uff09\u3002 Borg \u7cfb\u7edf\u81ea\u8eab\u9ad8\u53ef\u7528 Borgmaster \u7ec4\u4ef6\u591a\u526f\u672c\u8bbe\u8ba1\u3002 \u91c7\u7528\u4e00\u4e9b\u7b80\u5355\u7684\u548c\u5e95\u5c42\uff08low-level\uff09\u7684\u5de5\u5177\u6765\u90e8\u7f72 Borg \u7cfb\u7edf\u5b9e\u4f8b\uff0c\u907f\u514d\u5f15\u5165\u8fc7\u591a\u7684\u5916\u90e8\u4f9d\u8d56\u3002 \u6bcf\u4e2a Cell \u7684 Borg \u5747\u72ec\u7acb\u90e8\u7f72\uff0c\u907f\u514d\u4e0d\u540c Borg \u7cfb\u7edf\u76f8\u4e92\u5f71\u54cd\u3002 \u8d44\u6e90\u5229\u7528\u7387 \u901a\u8fc7\u5c06\u5728\u7ebf\u4efb\u52a1\uff08prod\uff09\u548c\u79bb\u7ebf\u4efb\u52a1\uff08non-prod\uff0cBatch\uff09\u6df7\u5408\u90e8\u7f72\uff0c\u7a7a\u95f2\u65f6\uff0c\u79bb\u7ebf\u4efb\u52a1\u53ef\u4ee5\u5145\u5206\u5229\u7528\u8ba1\u7b97\u8d44\u6e90\uff1b\u7e41\u5fd9\u65f6\uff0c\u5728\u7ebf\u4efb\u52a1\u901a\u8fc7\u62a2\u5360\u7684\u65b9\u5f0f\u4fdd\u8bc1\u4f18\u5148\u5f97\u5230\u6267\u884c\uff0c\u5408\u7406\u5730\u5229\u7528\u8d44\u6e90\u3002 98% \u7684\u670d\u52a1\u5668\u5b9e\u73b0\u4e86\u6df7\u90e8\u3002 90% \u7684\u670d\u52a1\u5668\u4e2d\u8dd1\u4e86\u8d85\u8fc7 25 \u4e2a Task \u548c 4500 \u4e2a\u7ebf\u7a0b\u3002 \u5728\u4e00\u4e2a\u4e2d\u7b49\u89c4\u6a21\u7684 Cell \u91cc\uff0c\u5728\u7ebf\u4efb\u52a1\u548c\u79bb\u7ebf\u4efb\u52a1\u72ec\u7acb\u90e8\u7f72\u6bd4\u6df7\u5408\u90e8\u7f72\u6240\u9700\u7684\u670d\u52a1\u5668\u6570\u91cf\u591a\u51fa\u7ea6 20%-30%\u3002\u53ef\u4ee5\u7b80\u5355\u7b97\u4e00\u7b14\u8d26\uff0cGoogle \u7684\u670d\u52a1\u5668\u6570\u91cf\u5728\u5343\u4e07\u7ea7\u522b\uff0c\u6309 20% \u7b97\u4e5f\u662f\u767e\u4e07\u7ea7\u522b\uff0c\u5927\u6982\u80fd\u7701\u4e0b\u7684\u670d\u52a1\u5668\u91c7\u8d2d\u8d39\u7528\u5c31\u662f\u767e\u4ebf\u7ea7\u522b\u4e86\uff0c\u8fd9\u8fd8\u4e0d\u5305\u62ec\u7701\u4e0b\u7684\u673a\u623f\u7b49\u57fa\u7840\u8bbe\u65bd\u548c\u7535\u8d39\u7b49\u8d39\u7528\u3002 Brog \u8c03\u5ea6\u539f\u7406 \u9694\u79bb\u6027 \u5b89\u5168\u6027\u9694\u79bb\uff1a \u65e9\u671f\u91c7\u7528 Chroot jail\uff0c\u540e\u671f\u7248\u672c\u57fa\u4e8e Namespace\u3002 \u6027\u80fd\u9694\u79bb\uff1a \u91c7\u7528\u57fa\u4e8e Cgroup \u7684\u5bb9\u5668\u6280\u672f\u5b9e\u73b0\u3002 \u5728\u7ebf\u4efb\u52a1\uff08prod\uff09\u662f\u5ef6\u65f6\u654f\u611f\uff08latency-sensitive\uff09\u578b\u7684\uff0c\u4f18\u5148\u7ea7\u9ad8\uff0c\u800c\u79bb\u7ebf\u4efb\u52a1\uff08non-prod\uff0cBatch\uff09\u4f18\u5148\u7ea7\u4f4e\u3002 Borg \u901a\u8fc7\u4e0d\u540c\u4f18\u5148\u7ea7\u4e4b\u95f4\u7684\u62a2\u5360\u5f0f\u8c03\u5ea6\u6765\u4f18\u5148\u4fdd\u969c\u5728\u7ebf\u4efb\u52a1\u7684\u6027\u80fd\uff0c\u727a\u7272\u79bb\u7ebf\u4efb\u52a1\u3002 Borg \u5c06\u8d44\u6e90\u7c7b\u578b\u5206\u6210\u4e24\u7c7b\uff1a \u53ef\u538b\u69a8\u7684\uff08compressible\uff09\uff0cCPU \u662f\u53ef\u538b\u69a8\u8d44\u6e90\uff0c\u8d44\u6e90\u8017\u5c3d\u4e0d\u4f1a\u7ec8\u6b62\u8fdb\u7a0b\uff1b \u4e0d\u53ef\u538b\u69a8\u7684\uff08non-compressible\uff09\uff0c\u5185\u5b58\u662f\u4e0d\u53ef\u538b\u69a8\u8d44\u6e90\uff0c\u8d44\u6e90\u8017\u5c3d\u8fdb\u7a0b\u4f1a\u88ab\u7ec8\u6b62\u3002 \u4ec0\u4e48\u662f Kubernetes\uff08K8s\uff09 Kubernetes \u662f\u8c37\u6b4c\u5f00\u6e90\u7684\u5bb9\u5668\u96c6\u7fa4\u7ba1\u7406\u7cfb\u7edf\uff0c\u662f Google \u591a\u5e74\u5927\u89c4\u6a21\u5bb9\u5668\u7ba1\u7406\u6280\u672f Borg \u7684\u5f00\u6e90\u7248\u672c\uff0c\u4e3b\u8981\u529f\u80fd\u5305\u62ec\uff1a \u57fa\u4e8e\u5bb9\u5668\u7684\u5e94\u7528\u90e8\u7f72\u3001\u7ef4\u62a4\u548c\u6eda\u52a8\u5347\u7ea7\uff1b \u8d1f\u8f7d\u5747\u8861\u548c\u670d\u52a1\u53d1\u73b0\uff1b \u8de8\u673a\u5668\u548c\u8de8\u5730\u533a\u7684\u96c6\u7fa4\u8c03\u5ea6\uff1b \u81ea\u52a8\u4f38\u7f29\uff1b \u65e0\u72b6\u6001\u670d\u52a1\u548c\u6709\u72b6\u6001\u670d\u52a1\uff1b \u63d2\u4ef6\u673a\u5236\u4fdd\u8bc1\u6269\u5c55\u6027\u3002 \u547d\u4ee4\u5f0f\uff08 Imperative\uff09vs \u58f0\u660e\u5f0f\uff08 Declarative\uff09 \u547d\u4ee4\u5f0f\u7cfb\u7edf\u5173\u6ce8 \u201c\u5982\u4f55\u505a\u201d \u5728\u8f6f\u4ef6\u5de5\u7a0b\u9886\u57df\uff0c\u547d\u4ee4\u5f0f\u7cfb\u7edf\u662f\u5199\u51fa\u89e3\u51b3\u67d0\u4e2a\u95ee\u9898\u3001\u5b8c\u6210\u67d0\u4e2a\u4efb\u52a1\u6216\u8005\u8fbe\u5230\u67d0\u4e2a\u76ee\u6807\u7684\u660e\u786e\u6b65\u9aa4\u3002\u6b64\u65b9\u6cd5\u660e\u786e\u5199\u51fa\u7cfb\u7edf\u5e94\u8be5\u6267\u884c\u67d0\u6307\u4ee4\uff0c\u5e76\u4e14\u671f\u5f85\u7cfb\u7edf\u8fd4\u56de\u671f\u671b\u7ed3\u679c\u3002 \u58f0\u660e\u5f0f\u7cfb\u7edf\u5173\u6ce8\u201c\u505a\u4ec0\u4e48\u201d \u5728\u8f6f\u4ef6\u5de5\u7a0b\u9886\u57df\uff0c\u58f0\u660e\u5f0f\u7cfb\u7edf\u6307\u7a0b\u5e8f\u4ee3\u7801\u63cf\u8ff0\u7cfb\u7edf\u5e94\u8be5\u505a\u4ec0\u4e48\u800c\u4e0d\u662f\u600e\u4e48\u505a\u3002\u4ec5\u9650\u4e8e\u63cf\u8ff0\u8981\u8fbe\u5230\u4ec0\u4e48\u76ee\u7684\uff0c\u5982\u4f55\u8fbe\u5230\u76ee\u7684\u4ea4\u7ed9\u7cfb\u7edf\u3002 \u58f0\u660e\u5f0f\uff08Declaritive\uff09\u7cfb\u7edf\u89c4\u8303 \u547d\u4ee4\u5f0f\uff1a \u6211\u8981\u4f60\u505a\u4ec0\u4e48\uff0c\u600e\u4e48\u505a\uff0c\u8bf7\u4e25\u683c\u6309\u7167\u6211\u8bf4\u7684\u505a\u3002 \u58f0\u660e\u5f0f\uff1a \u6211\u9700\u8981\u4f60\u5e2e\u6211\u505a\u70b9\u4e8b\uff0c\u4f46\u662f\u6211\u53ea\u544a\u8bc9\u4f60\u6211\u9700\u8981\u4f60\u505a\u4ec0\u4e48\uff0c\u4e0d\u662f\u4f60\u5e94\u8be5\u600e\u4e48\u505a\u3002 \u76f4\u63a5\u58f0\u660e\uff1a\u6211\u76f4\u63a5\u544a\u8bc9\u4f60\u6211\u9700\u8981\u4ec0\u4e48\u3002 \u95f4\u63a5\u58f0\u660e\uff1a\u6211\u4e0d\u76f4\u63a5\u544a\u8bc9\u4f60\u6211\u7684\u9700\u6c42\uff0c\u6211\u4f1a\u628a\u6211\u7684\u9700\u6c42\u653e\u5728\u7279\u5b9a\u7684\u5730\u65b9\uff0c\u8bf7\u5728\u65b9\u4fbf\u7684\u65f6\u5019\u62ff\u51fa\u6765\u5904\u7406\u3002 \u5e42\u7b49\u6027\uff1a \u72b6\u6001\u56fa\u5b9a\uff0c\u6bcf\u6b21\u6211\u8981\u4f60\u505a\u4e8b\uff0c\u8bf7\u7ed9\u6211\u8fd4\u56de\u76f8\u540c\u7ed3\u679c\u3002 \u9762\u5411\u5bf9\u8c61\u7684\uff1a \u628a\u4e00\u5207\u62bd\u8c61\u6210\u5bf9\u8c61\u3002 Kubernetes\uff1a\u58f0\u660e\u5f0f\u7cfb\u7edf Kubernetes \u7684\u6240\u6709\u7ba1\u7406\u80fd\u529b\u6784\u5efa\u5728\u5bf9\u8c61\u62bd\u8c61\u7684\u57fa\u7840\u4e0a\uff0c\u6838\u5fc3\u5bf9\u8c61\u5305\u62ec\uff1a Node \uff1a\u8ba1\u7b97\u8282\u70b9\u7684\u62bd\u8c61\uff0c\u7528\u6765\u63cf\u8ff0\u8ba1\u7b97\u8282\u70b9\u7684\u8d44\u6e90\u62bd\u8c61\u3001\u5065\u5eb7\u72b6\u6001\u7b49\u3002 Namespace \uff1a\u8d44\u6e90\u9694\u79bb\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u4e3a\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u76ee\u5f55\u7ed3\u6784\u3002 Pod \uff1a\u7528\u6765\u63cf\u8ff0\u5e94\u7528\u5b9e\u4f8b\uff0c\u5305\u62ec\u955c\u50cf\u5730\u5740\u3001\u8d44\u6e90\u9700\u6c42\u7b49\u3002 Kubernetes \u4e2d\u6700\u6838\u5fc3\u7684\u5bf9\u8c61\uff0c\u4e5f\u662f\u6253\u901a\u5e94\u7528\u548c\u57fa\u7840\u67b6\u6784\u7684\u79d8\u5bc6\u6b66\u5668\u3002 Service \uff1a\u670d\u52a1\u5982\u4f55\u5c06\u5e94\u7528\u53d1\u5e03\u6210\u670d\u52a1\uff0c\u672c\u8d28\u4e0a\u662f\u8d1f\u8f7d\u5747\u8861\u548c\u57df\u540d\u670d\u52a1\u7684\u58f0\u660e\u3002 Kubernetes \u91c7\u7528\u4e0e Borg \u7c7b\u4f3c\u7684\u67b6\u6784 \u4e3b\u8981\u7ec4\u4ef6 Kubernetes \u7684\u4e3b\u8282\u70b9\uff08Master Node\uff09 API\u670d\u52a1\u5668: API Server \u8fd9\u662f Kubernetes \u63a7\u5236\u9762\u677f\u4e2d\u552f\u4e00\u5e26\u6709\u7528\u6237\u53ef\u8bbf\u95ee API \u4ee5\u53ca\u7528\u6237\u53ef\u4ea4\u4e92\u7684\u7ec4\u4ef6\u3002API \u670d\u52a1\u5668\u4f1a\u66b4\u9732\u4e00\u4e2a RESTful \u7684 Kubernetes API \u5e76\u4f7f\u7528 JSON \u683c\u5f0f\u7684\u6e05\u5355\u6587\u4ef6\uff08manifest files\uff09\u3002 \u7fa4\u7684\u6570\u636e\u5b58\u50a8: Cluster Data Store Kubernetes \u4f7f \u7528\u201cetcd\u201d\u3002\u8fd9\u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u3001\u7a33\u5b9a\u7684\u3001\u9ad8\u53ef\u7528\u7684\u952e\u503c\u5b58\u50a8\uff0c\u88abKubernetes \u7528\u4e8e\u957f\u4e45\u50a8\u5b58\u6240\u6709\u7684 API \u5bf9\u8c61\u3002 \u63a7\u5236\u7ba1\u7406\u5668: Controller Manager \u88ab\u79f0\u4e3a\u201ckube-controller manager\u201d\uff0c\u5b83\u8fd0\u884c\u7740\u6240\u6709\u5904\u7406\u96c6\u7fa4\u65e5\u5e38\u4efb\u52a1\u7684\u63a7\u5236\u5668\u3002\u5305\u62ec\u4e86\u8282\u70b9\u63a7\u5236\u5668\u3001\u526f\u672c\u63a7\u5236\u5668\u3001\u7aef\u70b9\uff08endpoint\uff09\u63a7\u5236\u5668\u4ee5\u53ca\u670d\u52a1\u8d26\u6237\u7b49\u3002 \u8c03\u5ea6\u5668: Scheduler \u8c03\u5ea6\u5668\u4f1a\u76d1\u63a7\u65b0\u5efa\u7684 pods\uff08\u4e00\u7ec4\u6216\u4e00\u4e2a\u5bb9\u5668\uff09\u5e76\u5c06\u5176\u5206\u914d\u7ed9\u8282\u70b9\u3002 Kubernetes \u7684\u5de5\u4f5c\u8282\u70b9\uff08Worker Node\uff09 Kubelet \u8d1f\u8d23\u8c03\u5ea6\u5230\u5bf9\u5e94\u8282\u70b9\u7684 Pod \u7684\u751f\u547d\u5468\u671f\u7ba1\u7406\uff0c\u6267\u884c\u4efb\u52a1\u5e76\u5c06 Pod \u72b6\u6001\u62a5\u544a\u7ed9\u4e3b\u8282\u70b9\u7684\u6e20\u9053\uff0c\u901a\u8fc7\u5bb9\u5668\u8fd0\u884c\u65f6\uff08\u62c9\u53d6\u955c\u50cf\u3001\u542f\u52a8\u548c\u505c\u6b62\u5bb9\u5668\u7b49\uff09\u6765\u8fd0\u884c\u8fd9\u4e9b\u5bb9\u5668\u3002\u5b83\u8fd8\u4f1a\u5b9a\u671f\u6267\u884c\u88ab\u8bf7\u6c42\u7684\u5bb9\u5668\u7684\u5065\u5eb7\u63a2\u6d4b\u7a0b\u5e8f\u3002 Kube-proxy \u5b83\u8d1f\u8d23\u8282\u70b9\u7684\u7f51\u7edc\uff0c\u5728\u4e3b\u673a\u4e0a\u7ef4\u62a4\u7f51\u7edc\u89c4\u5219\u5e76\u6267\u884c\u8fde\u63a5\u8f6c\u53d1\u3002\u5b83\u8fd8\u8d1f\u8d23\u5bf9\u6b63\u5728\u670d\u52a1\u7684 pods \u8fdb\u884c\u8d1f\u8f7d\u5e73\u8861\u3002 etcd etcd \u662f CoreOS \u57fa\u4e8e Raft \u5f00\u53d1\u7684\u5206\u5e03\u5f0f key-value \u5b58\u50a8\uff0c\u53ef\u7528\u4e8e\u670d\u52a1\u53d1\u73b0\u3001\u5171\u4eab\u914d\u7f6e\u4ee5\u53ca\u4e00\u81f4\u6027\u4fdd\u969c\uff08\u5982\u6570\u636e\u5e93\u9009\u4e3b\u3001\u5206\u5e03\u5f0f\u9501\u7b49\uff09\u3002 \u57fa\u672c\u7684 key-value \u5b58\u50a8\uff1b \u76d1\u542c\u673a\u5236\uff1b key \u7684\u8fc7\u671f\u53ca\u7eed\u7ea6\u673a\u5236\uff0c\u7528\u4e8e\u76d1\u63a7\u548c\u670d\u52a1\u53d1\u73b0\uff1b \u539f\u5b50 CAS \u548c CAD\uff0c\u7528\u4e8e\u5206\u5e03\u5f0f\u9501\u548c leader \u9009\u4e3e\u3002 \u76f4\u63a5\u8bbf\u95ee etcd \u7684\u6570\u636e \u901a\u8fc7 etcd \u8fdb\u7a0b\u67e5\u770b\u542f\u52a8\u53c2\u6570 \u8fdb\u5165\u5bb9\u5668 ps -ef|grep etcd sh: ps: command not found \u600e\u4e48\u529e\uff1f\u5230\u4e3b\u673a Namespace \u67e5\u770b cert \u4fe1\u606f \u8fdb\u5165\u5bb9\u5668\u67e5\u8be2\u6570\u636e export ETCDCTL_API=3 etcdctl --endpoints https://localhost:2379 --cert /etc/kubernetes/pki/etcd/server.crt --key /etc/kubernetes/pki/etcd/server.key --cacert /etc/kubernetes/pki/etcd/ca.crt get --keys-only --prefix / \u76d1\u542c\u5bf9\u8c61\u53d8\u5316 etcdctl --endpoints https://localhost:2379 --cert /etc/kubernetes/pki/etcd/server.crt --key /etc/kubernetes/pki/etcd/server.key --cacert /etc/kubernetes/pki/etcd/ca.crt watch --prefix /registry/services/specs/default/mynginx APIServer Kube-APIServer \u662f Kubernetes \u6700\u91cd\u8981\u7684\u6838\u5fc3\u7ec4\u4ef6\u4e4b\u4e00\uff0c\u4e3b\u8981\u63d0\u4f9b\u4ee5\u4e0b\u529f\u80fd\uff1a \u63d0\u4f9b\u96c6\u7fa4\u7ba1\u7406\u7684 REST API \u63a5\u53e3\uff0c\u5305\u62ec: \u8ba4\u8bc1 Authentication\uff1b \u6388\u6743 Authorization\uff1b \u51c6\u5165 Admission\uff08Mutating & Valiating\uff09\u3002 \u63d0\u4f9b\u5176\u4ed6\u6a21\u5757\u4e4b\u95f4\u7684\u6570\u636e\u4ea4\u4e92\u548c\u901a\u4fe1\u7684\u67a2\u7ebd\uff08\u5176\u4ed6\u6a21\u5757\u901a\u8fc7 APIServer \u67e5\u8be2\u6216\u4fee\u6539\u6570\u636e\uff0c\u53ea\u6709 APIServer \u624d\u76f4\u63a5\u64cd\u4f5c etcd\uff09\u3002 APIServer \u63d0\u4f9b etcd \u6570\u636e\u7f13\u5b58\u4ee5\u51cf\u5c11\u96c6\u7fa4\u5bf9 etcd \u7684\u8bbf\u95ee\u3002 APIServer \u5c55\u5f00 Controller Manager Controller Manager \u662f\u96c6\u7fa4\u7684\u5927\u8111\uff0c\u662f\u786e\u4fdd\u6574\u4e2a\u96c6\u7fa4\u52a8\u8d77\u6765\u7684\u5173\u952e\uff1b \u4f5c\u7528\u662f\u786e\u4fdd Kubernetes \u9075\u5faa\u58f0\u660e\u5f0f\u7cfb\u7edf\u89c4\u8303\uff0c\u786e\u4fdd\u7cfb\u7edf\u7684\u771f\u5b9e\u72b6\u6001\uff08ActualState\uff09\u4e0e\u7528\u6237\u5b9a\u4e49\u7684\u671f\u671b\u72b6\u6001\uff08Desired State\uff09\u4e00\u81f4\uff1b Controller Manager \u662f\u591a\u4e2a\u63a7\u5236\u5668\u7684\u7ec4\u5408\uff0c\u6bcf\u4e2a Controller \u4e8b\u5b9e\u4e0a\u90fd\u662f\u4e00\u4e2a control loop\uff0c\u8d1f\u8d23\u4fa6\u542c\u5176\u7ba1\u63a7\u7684\u5bf9\u8c61\uff0c\u5f53\u5bf9\u8c61\u53d1\u751f\u53d8\u66f4\u65f6\u5b8c\u6210\u914d\u7f6e\uff1b Controller \u914d\u7f6e\u5931\u8d25\u901a\u5e38\u4f1a\u89e6\u53d1\u81ea\u52a8\u91cd\u8bd5\uff0c\u6574\u4e2a\u96c6\u7fa4\u4f1a\u5728\u63a7\u5236\u5668\u4e0d\u65ad\u91cd\u8bd5\u7684\u673a\u5236\u4e0b\u786e\u4fdd\u6700\u7ec8\u4e00\u81f4\u6027\uff08 Eventual Consistency \uff09\u3002 \u63a7\u5236\u5668\u7684\u5de5\u4f5c\u6d41\u7a0b Informer \u7684\u5185\u90e8\u673a\u5236 \u63a7\u5236\u5668\u7684\u534f\u540c\u5de5\u4f5c\u539f\u7406 Scheduler \u7279\u6b8a\u7684 Controller\uff0c\u5de5\u4f5c\u539f\u7406\u4e0e\u5176\u4ed6\u63a7\u5236\u5668\u65e0\u5dee\u522b\u3002 Scheduler \u7684\u7279\u6b8a\u804c\u8d23\u5728\u4e8e\u76d1\u63a7\u5f53\u524d\u96c6\u7fa4\u6240\u6709\u672a\u8c03\u5ea6\u7684 Pod\uff0c\u5e76\u4e14\u83b7\u53d6\u5f53\u524d\u96c6\u7fa4\u6240\u6709\u8282\u70b9\u7684\u5065\u5eb7\u72b6\u51b5\u548c\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\uff0c\u4e3a\u5f85\u8c03\u5ea6 Pod \u9009\u62e9\u6700\u4f73\u8ba1\u7b97\u8282\u70b9\uff0c\u5b8c\u6210\u8c03\u5ea6\u3002 \u8c03\u5ea6\u9636\u6bb5\u5206\u4e3a\uff1a - Predict\uff1a\u8fc7\u6ee4\u4e0d\u80fd\u6ee1\u8db3\u4e1a\u52a1\u9700\u6c42\u7684\u8282\u70b9\uff0c\u5982\u8d44\u6e90\u4e0d\u8db3\u3001\u7aef\u53e3\u51b2\u7a81\u7b49\u3002 - Priority\uff1a\u6309\u65e2\u5b9a\u8981\u7d20\u5c06\u6ee1\u8db3\u8c03\u5ea6\u9700\u6c42\u7684\u8282\u70b9\u8bc4\u5206\uff0c\u9009\u62e9\u6700\u4f73\u8282\u70b9\u3002 - Bind\uff1a\u5c06\u8ba1\u7b97\u8282\u70b9\u4e0e Pod \u7ed1\u5b9a\uff0c\u5b8c\u6210\u8c03\u5ea6\u3002 Kubelet Kubernetes \u7684\u521d\u59cb\u5316\u7cfb\u7edf\uff08init system\uff09 \u4ece\u4e0d\u540c\u6e90\u83b7\u53d6 Pod \u6e05\u5355\uff0c\u5e76\u6309\u9700\u6c42\u542f\u505c Pod \u7684\u6838\u5fc3\u7ec4\u4ef6\uff1a Pod \u6e05\u5355\u53ef\u4ece\u672c\u5730\u6587\u4ef6\u76ee\u5f55\uff0c\u7ed9\u5b9a\u7684 HTTPServer \u6216 Kube-APIServer \u7b49\u6e90\u5934\u83b7\u53d6\uff1b Kubelet \u5c06\u8fd0\u884c\u65f6\uff0c\u7f51\u7edc\u548c\u5b58\u50a8\u62bd\u8c61\u6210\u4e86 CRI\uff0cCNI\uff0cCSI\u3002 \u8d1f\u8d23\u6c47\u62a5\u5f53\u524d\u8282\u70b9\u7684\u8d44\u6e90\u4fe1\u606f\u548c\u5065\u5eb7\u72b6\u6001\uff1b \u8d1f\u8d23 Pod \u7684\u5065\u5eb7\u68c0\u67e5\u548c\u72b6\u6001\u6c47\u62a5\u3002 Kube-Proxy \u76d1\u63a7\u96c6\u7fa4\u4e2d\u7528\u6237\u53d1\u5e03\u7684\u670d\u52a1\uff0c\u5e76\u5b8c\u6210\u8d1f\u8f7d\u5747\u8861\u914d\u7f6e\u3002 \u6bcf\u4e2a\u8282\u70b9\u7684 Kube-Proxy \u90fd\u4f1a\u914d\u7f6e\u76f8\u540c\u7684\u8d1f\u8f7d\u5747\u8861\u7b56\u7565\uff0c\u4f7f\u5f97\u6574\u4e2a\u96c6\u7fa4\u7684\u670d\u52a1\u53d1\u73b0\u5efa\u7acb\u5728\u5206\u5e03\u5f0f\u8d1f\u8f7d\u5747\u8861\u5668\u4e4b\u4e0a\uff0c\u670d\u52a1\u8c03\u7528\u65e0\u9700\u7ecf\u8fc7\u989d\u5916\u7684\u7f51\u7edc\u8df3\u8f6c\uff08Network Hop\uff09\u3002 \u8d1f\u8f7d\u5747\u8861\u914d\u7f6e\u57fa\u4e8e\u4e0d\u540c\u63d2\u4ef6\u5b9e\u73b0\uff1a userspace\u3002 \u64cd\u4f5c\u7cfb\u7edf\u7f51\u7edc\u534f\u8bae\u6808\u4e0d\u540c\u7684 Hooks \u70b9\u548c\u63d2\u4ef6\uff1a iptables\uff1b ipvs\u3002 \u63a8\u8350\u7684 Add-ons kube-dns\uff1a\u8d1f\u8d23\u4e3a\u6574\u4e2a\u96c6\u7fa4\u63d0\u4f9b DNS \u670d\u52a1\uff1b Ingress Controller\uff1a\u4e3a\u670d\u52a1\u63d0\u4f9b\u5916\u7f51\u5165\u53e3\uff1b MetricsServer\uff1a\u63d0\u4f9b\u8d44\u6e90\u76d1\u63a7\uff1b Dashboard\uff1a\u63d0\u4f9b GUI\uff1b Fluentd-Elasticsearch\uff1a\u63d0\u4f9b\u96c6\u7fa4\u65e5\u5fd7\u91c7\u96c6\u3001\u5b58\u50a8\u4e0e\u67e5\u8be2\u3002","title":"Kubernetes \u67b6\u6784\u57fa\u7840"},{"location":"2/2/2/#kubernetes","text":"","title":"Kubernetes \u67b6\u6784\u57fa\u7840"},{"location":"2/2/2/#borg","text":"","title":"Borg"},{"location":"2/2/2/#google-borg","text":"","title":"Google Borg \u7b80\u4ecb"},{"location":"2/2/2/#_1","text":"\u7269\u7406\u8d44\u6e90\u5229\u7528\u7387\u9ad8\u3002 \u670d\u52a1\u5668\u5171\u4eab\uff0c\u5728\u8fdb\u7a0b\u7ea7\u522b\u505a\u9694\u79bb\u3002 \u5e94\u7528\u9ad8\u53ef\u7528\uff0c\u6545\u969c\u6062\u590d\u65f6\u95f4\u77ed\u3002 \u8c03\u5ea6\u7b56\u7565\u7075\u6d3b\u3002 \u5e94\u7528\u63a5\u5165\u548c\u4f7f\u7528\u65b9\u4fbf\uff0c\u63d0\u4f9b\u4e86\u5b8c\u5907\u7684 Job \u63cf\u8ff0\u8bed\u8a00\uff0c\u670d\u52a1\u53d1\u73b0\uff0c\u5b9e\u65f6\u72b6\u6001\u76d1\u63a7\u548c\u8bca\u65ad\u5de5\u5177\u3002","title":"\u7279\u6027"},{"location":"2/2/2/#_2","text":"\u5bf9\u5916\u9690\u85cf\u5e95\u5c42\u8d44\u6e90\u7ba1\u7406\u548c\u8c03\u5ea6\u3001\u6545\u969c\u5904\u7406\u7b49\u3002 \u5b9e\u73b0\u5e94\u7528\u7684\u9ad8\u53ef\u9760\u548c\u9ad8\u53ef\u7528\u3002 \u8db3\u591f\u5f39\u6027\uff0c\u652f\u6301\u5e94\u7528\u8dd1\u5728\u6210\u5343\u4e0a\u4e07\u7684\u673a\u5668\u4e0a\u3002","title":"\u4f18\u52bf"},{"location":"2/2/2/#_3","text":"","title":"\u57fa\u672c\u6982\u5ff5"},{"location":"2/2/2/#workload","text":"prod\uff1a\u5728\u7ebf\u4efb\u52a1\uff0c\u957f\u671f\u8fd0\u884c\u3001\u5bf9\u5ef6\u65f6\u654f\u611f\u3001\u9762\u5411\u7ec8\u7aef\u7528\u6237\u7b49\uff0c\u6bd4\u5982Gmail, Google Docs, Web Search \u670d\u52a1\u7b49\u3002 non-prod \uff1a\u79bb\u7ebf\u4efb\u52a1\uff0c\u4e5f\u79f0\u4e3a\u6279\u5904\u7406\u4efb\u52a1\uff08Batch\uff09\uff0c\u6bd4\u5982\u4e00\u4e9b\u5206\u5e03\u5f0f\u8ba1\u7b97\u670d\u52a1\u7b49\u3002","title":"Workload"},{"location":"2/2/2/#cell","text":"\u4e00\u4e2a Cell \u4e0a\u8dd1\u4e00\u4e2a\u96c6\u7fa4\u7ba1\u7406\u7cfb\u7edf Borg\u3002 \u901a\u8fc7\u5b9a\u4e49 Cell \u53ef\u4ee5\u8ba9Borg \u5bf9\u670d\u52a1\u5668\u8d44\u6e90\u8fdb\u884c\u7edf\u4e00\u62bd\u8c61\uff0c\u4f5c\u4e3a\u7528\u6237\u5c31\u65e0\u9700\u77e5\u9053\u81ea\u5df1\u7684\u5e94\u7528\u8dd1\u5728\u54ea\u53f0\u673a\u5668\u4e0a\uff0c\u4e5f\u4e0d\u7528\u5173\u5fc3\u8d44\u6e90\u5206\u914d\u3001\u7a0b\u5e8f\u5b89\u88c5\u3001\u4f9d\u8d56\u7ba1\u7406\u3001\u5065\u5eb7\u68c0\u67e5\u53ca\u6545\u969c\u6062\u590d\u7b49\u3002","title":"Cell"},{"location":"2/2/2/#job-task","text":"\u7528\u6237\u4ee5 Job \u7684\u5f62\u5f0f\u63d0\u4ea4\u5e94\u7528\u90e8\u7f72\u8bf7\u6c42\u3002\u4e00\u4e2aJob \u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u76f8\u540c\u7684 Task\uff0c\u6bcf\u4e2a Task\u8fd0\u884c\u76f8\u540c\u7684\u5e94\u7528\u7a0b\u5e8f\uff0cTask \u6570\u91cf\u5c31\u662f\u5e94\u7528\u7684\u526f\u672c\u6570\u3002 \u6bcf\u4e2a Job \u53ef\u4ee5\u5b9a\u4e49\u5c5e\u6027\u3001\u5143\u4fe1\u606f\u548c\u4f18\u5148\u7ea7\uff0c\u4f18\u5148\u7ea7\u6d89\u53ca\u5230\u62a2\u5360\u5f0f\u8c03\u5ea6\u8fc7\u7a0b\u3002","title":"Job \u548c Task"},{"location":"2/2/2/#naming","text":"Borg \u7684\u670d\u52a1\u53d1\u73b0\u901a\u8fc7BNS \uff08 Borg NameService\uff09\u6765\u5b9e\u73b0\u3002 50.jfoo.ubar.cc.borg.google.com \u53ef\u8868\u793a\u5728\u4e00\u4e2a\u540d\u4e3a cc \u7684 Cell\u4e2d\u7531\u7528\u6237 uBar \u90e8\u7f72\u7684\u4e00\u4e2a\u540d\u4e3a jFoo \u7684 Job\u4e0b\u7684\u7b2c50\u4e2a Task\u3002","title":"Naming"},{"location":"2/2/2/#borg_1","text":"Borgmaster \u4e3b\u8fdb\u7a0b\uff1a \u5904\u7406\u5ba2\u6237\u7aef RPC \u8bf7\u6c42\uff0c\u6bd4\u5982\u521b\u5efa Job\uff0c\u67e5\u8be2 Job \u7b49\u3002 \u7ef4\u62a4\u7cfb\u7edf\u7ec4\u4ef6\u548c\u670d\u52a1\u7684\u72b6\u6001\uff0c\u6bd4\u5982\u670d\u52a1\u5668\u3001Task \u7b49\u3002 \u8d1f\u8d23\u4e0e Borglet \u901a\u4fe1\u3002 Scheduler \u8fdb\u7a0b\uff1a \u8c03\u5ea6\u7b56\u7565 Worst Fit \u8c03\u5ea6\u5230\u6700\u7a7a\u95f2\u7684\u673a\u5668\uff0c\u6700\u7ec8\u4f7f\u5f97\u6bcf\u53f0\u673a\u5668\u7684\u8d44\u6e90\u6d88\u8017\u76f8\u8fd1\u3002 Best Fit \u8c03\u5ea6\u5230\u521a\u521a\u597d\u6ee1\u8db3\u8d44\u6e90\u7684\u673a\u5668\uff0c\u65b9\u4fbf\u5f97\u51fa\u6700\u5c0f\u9700\u6c42\u673a\u5668\u7684\u8d44\u6e90\uff0c\u5c06\u591a\u4f59\u673a\u5668\u8e22\u51fa\u8282\u7ea6\u6210\u672c\u3002 Hybrid \u8c03\u5ea6\u4f18\u5316 Score caching: \u5f53\u670d\u52a1\u5668\u6216\u8005\u4efb\u52a1\u7684\u72b6\u6001\u672a\u53d1\u751f\u53d8\u66f4\u6216\u8005\u53d8\u66f4\u5f88\u5c11\u65f6\uff0c\u76f4\u63a5\u91c7\u7528\u7f13\u5b58\u6570\u636e\uff0c\u907f\u514d\u91cd\u590d\u8ba1\u7b97\u3002 Equivalence classes: \u8c03\u5ea6\u540c\u4e00 Job \u4e0b\u591a\u4e2a\u76f8\u540c\u7684 Task \u53ea\u9700\u8ba1\u7b97\u4e00\u6b21\u3002 Relaxed randomization: \u5f15\u5165\u4e00\u4e9b\u968f\u673a\u6027\uff0c\u5373\u6bcf\u6b21\u968f\u673a\u9009\u62e9\u4e00\u4e9b\u673a\u5668\uff0c\u53ea\u8981\u7b26\u5408\u9700\u6c42\u7684\u670d\u52a1\u5668\u6570\u91cf\u8fbe\u5230\u4e00\u5b9a\u503c\u65f6\uff0c\u5c31\u53ef\u4ee5\u505c\u6b62\u8ba1\u7b97\uff0c\u65e0\u9700\u6bcf\u6b21\u5bf9 Cell \u4e2d\u6240\u6709\u670d\u52a1\u5668\u8fdb\u884c feasibility checking\u3002 Borglet\uff1a Borglet \u662f\u90e8\u7f72\u5728\u6240\u6709\u670d\u52a1\u5668\u4e0a\u7684 Agent\uff0c\u8d1f\u8d23\u63a5\u6536 Borgmaster \u8fdb\u7a0b\u7684\u6307\u4ee4\u3002","title":"Borg \u67b6\u6784"},{"location":"2/2/2/#_4","text":"\u88ab\u62a2\u5360\u7684 non-prod \u4efb\u52a1\u653e\u56de pending queue\uff0c\u7b49\u5f85\u91cd\u65b0\u8c03\u5ea6\u3002 \u591a\u526f\u672c\u5e94\u7528\u8de8\u6545\u969c\u57df\u90e8\u7f72\u3002 \u6240\u8c13\u6545\u969c\u57df\u6709\u5927\u6709\u5c0f\uff0c\u6bd4\u5982\u76f8\u540c\u673a\u5668\u3001\u76f8\u540c\u673a\u67b6\u6216\u76f8\u540c\u7535\u6e90\u63d2\u5ea7\u7b49\uff0c\u4e00\u6302\u5168\u6302\u3002 \u5bf9\u4e8e\u7c7b\u4f3c\u670d\u52a1\u5668\u6216\u64cd\u4f5c\u7cfb\u7edf\u5347\u7ea7\u7684\u7ef4\u62a4\u64cd\u4f5c\uff0c\u907f\u514d\u5927\u91cf\u670d\u52a1\u5668\u540c\u65f6\u8fdb\u884c\u3002 \u652f\u6301 \u5e42\u7b49\u6027 \uff0c\u652f\u6301\u5ba2\u6237\u7aef\u91cd\u590d\u64cd\u4f5c\u3002 \u5f53\u670d\u52a1\u5668\u72b6\u6001\u53d8\u4e3a\u4e0d\u53ef\u7528\u65f6\uff0c\u8981\u63a7\u5236\u91cd\u65b0\u8c03\u5ea6\u4efb\u52a1\u7684\u901f\u7387\u3002 \u56e0\u4e3a Borg \u65e0\u6cd5\u533a\u5206\u662f\u8282\u70b9\u6545\u969c\u8fd8\u662f\u51fa\u73b0\u4e86\u77ed\u6682\u7684\u7f51\u7edc\u5206\u533a\uff0c\u5982\u679c\u662f\u540e\u8005\uff0c\u9759\u9759\u5730\u7b49\u5f85\u7f51\u7edc\u6062\u590d\u66f4\u5229\u4e8e\u4fdd\u969c\u670d\u52a1\u53ef\u7528\u6027\u3002 \u5f53\u67d0\u79cd\u201c\u4efb\u52a1 @ \u670d\u52a1\u5668\u201d\u7684\u7ec4\u5408\u51fa\u73b0\u6545\u969c\u65f6\uff0c\u4e0b\u6b21\u91cd\u65b0\u8c03\u5ea6\u65f6\u9700\u907f\u514d\u8fd9\u79cd\u7ec4\u5408\u518d\u6b21\u51fa\u73b0\uff0c\u56e0\u4e3a\u6781\u5927\u53ef\u80fd\u4f1a\u518d\u6b21\u51fa\u73b0\u76f8\u540c\u6545\u969c\u3002 \u8bb0\u5f55\u8be6\u7ec6\u7684\u5185\u90e8\u4fe1\u606f\uff0c\u4fbf\u4e8e\u6545\u969c\u6392\u67e5\u548c\u5206\u6790\u3002 \u4fdd\u969c\u5e94\u7528\u9ad8\u53ef\u7528\u7684\u5173\u952e\u6027\u8bbe\u8ba1\u539f\u5219\uff1a \u65e0\u8bba\u4f55\u79cd\u539f\u56e0\uff0c\u5373\u4f7f Borgmaster \u6216\u8005 Borglet \u6302\u6389\u3001\u5931\u8054\uff0c\u90fd\u4e0d\u80fd\u6740\u6389\u6b63\u5728\u8fd0\u884c\u7684\u670d\u52a1\uff08Task\uff09\u3002","title":"\u5e94\u7528\u9ad8\u53ef\u7528"},{"location":"2/2/2/#borg_2","text":"Borgmaster \u7ec4\u4ef6\u591a\u526f\u672c\u8bbe\u8ba1\u3002 \u91c7\u7528\u4e00\u4e9b\u7b80\u5355\u7684\u548c\u5e95\u5c42\uff08low-level\uff09\u7684\u5de5\u5177\u6765\u90e8\u7f72 Borg \u7cfb\u7edf\u5b9e\u4f8b\uff0c\u907f\u514d\u5f15\u5165\u8fc7\u591a\u7684\u5916\u90e8\u4f9d\u8d56\u3002 \u6bcf\u4e2a Cell \u7684 Borg \u5747\u72ec\u7acb\u90e8\u7f72\uff0c\u907f\u514d\u4e0d\u540c Borg \u7cfb\u7edf\u76f8\u4e92\u5f71\u54cd\u3002","title":"Borg \u7cfb\u7edf\u81ea\u8eab\u9ad8\u53ef\u7528"},{"location":"2/2/2/#_5","text":"\u901a\u8fc7\u5c06\u5728\u7ebf\u4efb\u52a1\uff08prod\uff09\u548c\u79bb\u7ebf\u4efb\u52a1\uff08non-prod\uff0cBatch\uff09\u6df7\u5408\u90e8\u7f72\uff0c\u7a7a\u95f2\u65f6\uff0c\u79bb\u7ebf\u4efb\u52a1\u53ef\u4ee5\u5145\u5206\u5229\u7528\u8ba1\u7b97\u8d44\u6e90\uff1b\u7e41\u5fd9\u65f6\uff0c\u5728\u7ebf\u4efb\u52a1\u901a\u8fc7\u62a2\u5360\u7684\u65b9\u5f0f\u4fdd\u8bc1\u4f18\u5148\u5f97\u5230\u6267\u884c\uff0c\u5408\u7406\u5730\u5229\u7528\u8d44\u6e90\u3002 98% \u7684\u670d\u52a1\u5668\u5b9e\u73b0\u4e86\u6df7\u90e8\u3002 90% \u7684\u670d\u52a1\u5668\u4e2d\u8dd1\u4e86\u8d85\u8fc7 25 \u4e2a Task \u548c 4500 \u4e2a\u7ebf\u7a0b\u3002 \u5728\u4e00\u4e2a\u4e2d\u7b49\u89c4\u6a21\u7684 Cell \u91cc\uff0c\u5728\u7ebf\u4efb\u52a1\u548c\u79bb\u7ebf\u4efb\u52a1\u72ec\u7acb\u90e8\u7f72\u6bd4\u6df7\u5408\u90e8\u7f72\u6240\u9700\u7684\u670d\u52a1\u5668\u6570\u91cf\u591a\u51fa\u7ea6 20%-30%\u3002\u53ef\u4ee5\u7b80\u5355\u7b97\u4e00\u7b14\u8d26\uff0cGoogle \u7684\u670d\u52a1\u5668\u6570\u91cf\u5728\u5343\u4e07\u7ea7\u522b\uff0c\u6309 20% \u7b97\u4e5f\u662f\u767e\u4e07\u7ea7\u522b\uff0c\u5927\u6982\u80fd\u7701\u4e0b\u7684\u670d\u52a1\u5668\u91c7\u8d2d\u8d39\u7528\u5c31\u662f\u767e\u4ebf\u7ea7\u522b\u4e86\uff0c\u8fd9\u8fd8\u4e0d\u5305\u62ec\u7701\u4e0b\u7684\u673a\u623f\u7b49\u57fa\u7840\u8bbe\u65bd\u548c\u7535\u8d39\u7b49\u8d39\u7528\u3002","title":"\u8d44\u6e90\u5229\u7528\u7387"},{"location":"2/2/2/#brog","text":"","title":"Brog \u8c03\u5ea6\u539f\u7406"},{"location":"2/2/2/#_6","text":"\u5b89\u5168\u6027\u9694\u79bb\uff1a \u65e9\u671f\u91c7\u7528 Chroot jail\uff0c\u540e\u671f\u7248\u672c\u57fa\u4e8e Namespace\u3002 \u6027\u80fd\u9694\u79bb\uff1a \u91c7\u7528\u57fa\u4e8e Cgroup \u7684\u5bb9\u5668\u6280\u672f\u5b9e\u73b0\u3002 \u5728\u7ebf\u4efb\u52a1\uff08prod\uff09\u662f\u5ef6\u65f6\u654f\u611f\uff08latency-sensitive\uff09\u578b\u7684\uff0c\u4f18\u5148\u7ea7\u9ad8\uff0c\u800c\u79bb\u7ebf\u4efb\u52a1\uff08non-prod\uff0cBatch\uff09\u4f18\u5148\u7ea7\u4f4e\u3002 Borg \u901a\u8fc7\u4e0d\u540c\u4f18\u5148\u7ea7\u4e4b\u95f4\u7684\u62a2\u5360\u5f0f\u8c03\u5ea6\u6765\u4f18\u5148\u4fdd\u969c\u5728\u7ebf\u4efb\u52a1\u7684\u6027\u80fd\uff0c\u727a\u7272\u79bb\u7ebf\u4efb\u52a1\u3002 Borg \u5c06\u8d44\u6e90\u7c7b\u578b\u5206\u6210\u4e24\u7c7b\uff1a \u53ef\u538b\u69a8\u7684\uff08compressible\uff09\uff0cCPU \u662f\u53ef\u538b\u69a8\u8d44\u6e90\uff0c\u8d44\u6e90\u8017\u5c3d\u4e0d\u4f1a\u7ec8\u6b62\u8fdb\u7a0b\uff1b \u4e0d\u53ef\u538b\u69a8\u7684\uff08non-compressible\uff09\uff0c\u5185\u5b58\u662f\u4e0d\u53ef\u538b\u69a8\u8d44\u6e90\uff0c\u8d44\u6e90\u8017\u5c3d\u8fdb\u7a0b\u4f1a\u88ab\u7ec8\u6b62\u3002","title":"\u9694\u79bb\u6027"},{"location":"2/2/2/#kubernetesk8s","text":"Kubernetes \u662f\u8c37\u6b4c\u5f00\u6e90\u7684\u5bb9\u5668\u96c6\u7fa4\u7ba1\u7406\u7cfb\u7edf\uff0c\u662f Google \u591a\u5e74\u5927\u89c4\u6a21\u5bb9\u5668\u7ba1\u7406\u6280\u672f Borg \u7684\u5f00\u6e90\u7248\u672c\uff0c\u4e3b\u8981\u529f\u80fd\u5305\u62ec\uff1a \u57fa\u4e8e\u5bb9\u5668\u7684\u5e94\u7528\u90e8\u7f72\u3001\u7ef4\u62a4\u548c\u6eda\u52a8\u5347\u7ea7\uff1b \u8d1f\u8f7d\u5747\u8861\u548c\u670d\u52a1\u53d1\u73b0\uff1b \u8de8\u673a\u5668\u548c\u8de8\u5730\u533a\u7684\u96c6\u7fa4\u8c03\u5ea6\uff1b \u81ea\u52a8\u4f38\u7f29\uff1b \u65e0\u72b6\u6001\u670d\u52a1\u548c\u6709\u72b6\u6001\u670d\u52a1\uff1b \u63d2\u4ef6\u673a\u5236\u4fdd\u8bc1\u6269\u5c55\u6027\u3002","title":"\u4ec0\u4e48\u662f Kubernetes\uff08K8s\uff09"},{"location":"2/2/2/#imperativevs-declarative","text":"\u547d\u4ee4\u5f0f\u7cfb\u7edf\u5173\u6ce8 \u201c\u5982\u4f55\u505a\u201d \u5728\u8f6f\u4ef6\u5de5\u7a0b\u9886\u57df\uff0c\u547d\u4ee4\u5f0f\u7cfb\u7edf\u662f\u5199\u51fa\u89e3\u51b3\u67d0\u4e2a\u95ee\u9898\u3001\u5b8c\u6210\u67d0\u4e2a\u4efb\u52a1\u6216\u8005\u8fbe\u5230\u67d0\u4e2a\u76ee\u6807\u7684\u660e\u786e\u6b65\u9aa4\u3002\u6b64\u65b9\u6cd5\u660e\u786e\u5199\u51fa\u7cfb\u7edf\u5e94\u8be5\u6267\u884c\u67d0\u6307\u4ee4\uff0c\u5e76\u4e14\u671f\u5f85\u7cfb\u7edf\u8fd4\u56de\u671f\u671b\u7ed3\u679c\u3002 \u58f0\u660e\u5f0f\u7cfb\u7edf\u5173\u6ce8\u201c\u505a\u4ec0\u4e48\u201d \u5728\u8f6f\u4ef6\u5de5\u7a0b\u9886\u57df\uff0c\u58f0\u660e\u5f0f\u7cfb\u7edf\u6307\u7a0b\u5e8f\u4ee3\u7801\u63cf\u8ff0\u7cfb\u7edf\u5e94\u8be5\u505a\u4ec0\u4e48\u800c\u4e0d\u662f\u600e\u4e48\u505a\u3002\u4ec5\u9650\u4e8e\u63cf\u8ff0\u8981\u8fbe\u5230\u4ec0\u4e48\u76ee\u7684\uff0c\u5982\u4f55\u8fbe\u5230\u76ee\u7684\u4ea4\u7ed9\u7cfb\u7edf\u3002","title":"\u547d\u4ee4\u5f0f\uff08 Imperative\uff09vs \u58f0\u660e\u5f0f\uff08 Declarative\uff09"},{"location":"2/2/2/#declaritive","text":"\u547d\u4ee4\u5f0f\uff1a \u6211\u8981\u4f60\u505a\u4ec0\u4e48\uff0c\u600e\u4e48\u505a\uff0c\u8bf7\u4e25\u683c\u6309\u7167\u6211\u8bf4\u7684\u505a\u3002 \u58f0\u660e\u5f0f\uff1a \u6211\u9700\u8981\u4f60\u5e2e\u6211\u505a\u70b9\u4e8b\uff0c\u4f46\u662f\u6211\u53ea\u544a\u8bc9\u4f60\u6211\u9700\u8981\u4f60\u505a\u4ec0\u4e48\uff0c\u4e0d\u662f\u4f60\u5e94\u8be5\u600e\u4e48\u505a\u3002 \u76f4\u63a5\u58f0\u660e\uff1a\u6211\u76f4\u63a5\u544a\u8bc9\u4f60\u6211\u9700\u8981\u4ec0\u4e48\u3002 \u95f4\u63a5\u58f0\u660e\uff1a\u6211\u4e0d\u76f4\u63a5\u544a\u8bc9\u4f60\u6211\u7684\u9700\u6c42\uff0c\u6211\u4f1a\u628a\u6211\u7684\u9700\u6c42\u653e\u5728\u7279\u5b9a\u7684\u5730\u65b9\uff0c\u8bf7\u5728\u65b9\u4fbf\u7684\u65f6\u5019\u62ff\u51fa\u6765\u5904\u7406\u3002 \u5e42\u7b49\u6027\uff1a \u72b6\u6001\u56fa\u5b9a\uff0c\u6bcf\u6b21\u6211\u8981\u4f60\u505a\u4e8b\uff0c\u8bf7\u7ed9\u6211\u8fd4\u56de\u76f8\u540c\u7ed3\u679c\u3002 \u9762\u5411\u5bf9\u8c61\u7684\uff1a \u628a\u4e00\u5207\u62bd\u8c61\u6210\u5bf9\u8c61\u3002","title":"\u58f0\u660e\u5f0f\uff08Declaritive\uff09\u7cfb\u7edf\u89c4\u8303"},{"location":"2/2/2/#kubernetes_1","text":"Kubernetes \u7684\u6240\u6709\u7ba1\u7406\u80fd\u529b\u6784\u5efa\u5728\u5bf9\u8c61\u62bd\u8c61\u7684\u57fa\u7840\u4e0a\uff0c\u6838\u5fc3\u5bf9\u8c61\u5305\u62ec\uff1a Node \uff1a\u8ba1\u7b97\u8282\u70b9\u7684\u62bd\u8c61\uff0c\u7528\u6765\u63cf\u8ff0\u8ba1\u7b97\u8282\u70b9\u7684\u8d44\u6e90\u62bd\u8c61\u3001\u5065\u5eb7\u72b6\u6001\u7b49\u3002 Namespace \uff1a\u8d44\u6e90\u9694\u79bb\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u4e3a\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u76ee\u5f55\u7ed3\u6784\u3002 Pod \uff1a\u7528\u6765\u63cf\u8ff0\u5e94\u7528\u5b9e\u4f8b\uff0c\u5305\u62ec\u955c\u50cf\u5730\u5740\u3001\u8d44\u6e90\u9700\u6c42\u7b49\u3002 Kubernetes \u4e2d\u6700\u6838\u5fc3\u7684\u5bf9\u8c61\uff0c\u4e5f\u662f\u6253\u901a\u5e94\u7528\u548c\u57fa\u7840\u67b6\u6784\u7684\u79d8\u5bc6\u6b66\u5668\u3002 Service \uff1a\u670d\u52a1\u5982\u4f55\u5c06\u5e94\u7528\u53d1\u5e03\u6210\u670d\u52a1\uff0c\u672c\u8d28\u4e0a\u662f\u8d1f\u8f7d\u5747\u8861\u548c\u57df\u540d\u670d\u52a1\u7684\u58f0\u660e\u3002","title":"Kubernetes\uff1a\u58f0\u660e\u5f0f\u7cfb\u7edf"},{"location":"2/2/2/#kubernetes-borg","text":"","title":"Kubernetes \u91c7\u7528\u4e0e Borg \u7c7b\u4f3c\u7684\u67b6\u6784"},{"location":"2/2/2/#_7","text":"","title":"\u4e3b\u8981\u7ec4\u4ef6"},{"location":"2/2/2/#kubernetes-master-node","text":"","title":"Kubernetes \u7684\u4e3b\u8282\u70b9\uff08Master Node\uff09"},{"location":"2/2/2/#api-api-server","text":"\u8fd9\u662f Kubernetes \u63a7\u5236\u9762\u677f\u4e2d\u552f\u4e00\u5e26\u6709\u7528\u6237\u53ef\u8bbf\u95ee API \u4ee5\u53ca\u7528\u6237\u53ef\u4ea4\u4e92\u7684\u7ec4\u4ef6\u3002API \u670d\u52a1\u5668\u4f1a\u66b4\u9732\u4e00\u4e2a RESTful \u7684 Kubernetes API \u5e76\u4f7f\u7528 JSON \u683c\u5f0f\u7684\u6e05\u5355\u6587\u4ef6\uff08manifest files\uff09\u3002","title":"API\u670d\u52a1\u5668: API Server"},{"location":"2/2/2/#cluster-data-store","text":"Kubernetes \u4f7f \u7528\u201cetcd\u201d\u3002\u8fd9\u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u3001\u7a33\u5b9a\u7684\u3001\u9ad8\u53ef\u7528\u7684\u952e\u503c\u5b58\u50a8\uff0c\u88abKubernetes \u7528\u4e8e\u957f\u4e45\u50a8\u5b58\u6240\u6709\u7684 API \u5bf9\u8c61\u3002","title":"\u7fa4\u7684\u6570\u636e\u5b58\u50a8: Cluster Data Store"},{"location":"2/2/2/#controller-manager","text":"\u88ab\u79f0\u4e3a\u201ckube-controller manager\u201d\uff0c\u5b83\u8fd0\u884c\u7740\u6240\u6709\u5904\u7406\u96c6\u7fa4\u65e5\u5e38\u4efb\u52a1\u7684\u63a7\u5236\u5668\u3002\u5305\u62ec\u4e86\u8282\u70b9\u63a7\u5236\u5668\u3001\u526f\u672c\u63a7\u5236\u5668\u3001\u7aef\u70b9\uff08endpoint\uff09\u63a7\u5236\u5668\u4ee5\u53ca\u670d\u52a1\u8d26\u6237\u7b49\u3002","title":"\u63a7\u5236\u7ba1\u7406\u5668: Controller Manager"},{"location":"2/2/2/#scheduler","text":"\u8c03\u5ea6\u5668\u4f1a\u76d1\u63a7\u65b0\u5efa\u7684 pods\uff08\u4e00\u7ec4\u6216\u4e00\u4e2a\u5bb9\u5668\uff09\u5e76\u5c06\u5176\u5206\u914d\u7ed9\u8282\u70b9\u3002","title":"\u8c03\u5ea6\u5668: Scheduler"},{"location":"2/2/2/#kubernetes-worker-node","text":"","title":"Kubernetes \u7684\u5de5\u4f5c\u8282\u70b9\uff08Worker Node\uff09"},{"location":"2/2/2/#kubelet","text":"\u8d1f\u8d23\u8c03\u5ea6\u5230\u5bf9\u5e94\u8282\u70b9\u7684 Pod \u7684\u751f\u547d\u5468\u671f\u7ba1\u7406\uff0c\u6267\u884c\u4efb\u52a1\u5e76\u5c06 Pod \u72b6\u6001\u62a5\u544a\u7ed9\u4e3b\u8282\u70b9\u7684\u6e20\u9053\uff0c\u901a\u8fc7\u5bb9\u5668\u8fd0\u884c\u65f6\uff08\u62c9\u53d6\u955c\u50cf\u3001\u542f\u52a8\u548c\u505c\u6b62\u5bb9\u5668\u7b49\uff09\u6765\u8fd0\u884c\u8fd9\u4e9b\u5bb9\u5668\u3002\u5b83\u8fd8\u4f1a\u5b9a\u671f\u6267\u884c\u88ab\u8bf7\u6c42\u7684\u5bb9\u5668\u7684\u5065\u5eb7\u63a2\u6d4b\u7a0b\u5e8f\u3002","title":"Kubelet"},{"location":"2/2/2/#kube-proxy","text":"\u5b83\u8d1f\u8d23\u8282\u70b9\u7684\u7f51\u7edc\uff0c\u5728\u4e3b\u673a\u4e0a\u7ef4\u62a4\u7f51\u7edc\u89c4\u5219\u5e76\u6267\u884c\u8fde\u63a5\u8f6c\u53d1\u3002\u5b83\u8fd8\u8d1f\u8d23\u5bf9\u6b63\u5728\u670d\u52a1\u7684 pods \u8fdb\u884c\u8d1f\u8f7d\u5e73\u8861\u3002","title":"Kube-proxy"},{"location":"2/2/2/#etcd","text":"etcd \u662f CoreOS \u57fa\u4e8e Raft \u5f00\u53d1\u7684\u5206\u5e03\u5f0f key-value \u5b58\u50a8\uff0c\u53ef\u7528\u4e8e\u670d\u52a1\u53d1\u73b0\u3001\u5171\u4eab\u914d\u7f6e\u4ee5\u53ca\u4e00\u81f4\u6027\u4fdd\u969c\uff08\u5982\u6570\u636e\u5e93\u9009\u4e3b\u3001\u5206\u5e03\u5f0f\u9501\u7b49\uff09\u3002 \u57fa\u672c\u7684 key-value \u5b58\u50a8\uff1b \u76d1\u542c\u673a\u5236\uff1b key \u7684\u8fc7\u671f\u53ca\u7eed\u7ea6\u673a\u5236\uff0c\u7528\u4e8e\u76d1\u63a7\u548c\u670d\u52a1\u53d1\u73b0\uff1b \u539f\u5b50 CAS \u548c CAD\uff0c\u7528\u4e8e\u5206\u5e03\u5f0f\u9501\u548c leader \u9009\u4e3e\u3002","title":"etcd"},{"location":"2/2/2/#etcd_1","text":"\u901a\u8fc7 etcd \u8fdb\u7a0b\u67e5\u770b\u542f\u52a8\u53c2\u6570 \u8fdb\u5165\u5bb9\u5668 ps -ef|grep etcd sh: ps: command not found \u600e\u4e48\u529e\uff1f\u5230\u4e3b\u673a Namespace \u67e5\u770b cert \u4fe1\u606f \u8fdb\u5165\u5bb9\u5668\u67e5\u8be2\u6570\u636e export ETCDCTL_API=3 etcdctl --endpoints https://localhost:2379 --cert /etc/kubernetes/pki/etcd/server.crt --key /etc/kubernetes/pki/etcd/server.key --cacert /etc/kubernetes/pki/etcd/ca.crt get --keys-only --prefix / \u76d1\u542c\u5bf9\u8c61\u53d8\u5316 etcdctl --endpoints https://localhost:2379 --cert /etc/kubernetes/pki/etcd/server.crt --key /etc/kubernetes/pki/etcd/server.key --cacert /etc/kubernetes/pki/etcd/ca.crt watch --prefix /registry/services/specs/default/mynginx","title":"\u76f4\u63a5\u8bbf\u95ee etcd \u7684\u6570\u636e"},{"location":"2/2/2/#apiserver","text":"Kube-APIServer \u662f Kubernetes \u6700\u91cd\u8981\u7684\u6838\u5fc3\u7ec4\u4ef6\u4e4b\u4e00\uff0c\u4e3b\u8981\u63d0\u4f9b\u4ee5\u4e0b\u529f\u80fd\uff1a \u63d0\u4f9b\u96c6\u7fa4\u7ba1\u7406\u7684 REST API \u63a5\u53e3\uff0c\u5305\u62ec: \u8ba4\u8bc1 Authentication\uff1b \u6388\u6743 Authorization\uff1b \u51c6\u5165 Admission\uff08Mutating & Valiating\uff09\u3002 \u63d0\u4f9b\u5176\u4ed6\u6a21\u5757\u4e4b\u95f4\u7684\u6570\u636e\u4ea4\u4e92\u548c\u901a\u4fe1\u7684\u67a2\u7ebd\uff08\u5176\u4ed6\u6a21\u5757\u901a\u8fc7 APIServer \u67e5\u8be2\u6216\u4fee\u6539\u6570\u636e\uff0c\u53ea\u6709 APIServer \u624d\u76f4\u63a5\u64cd\u4f5c etcd\uff09\u3002 APIServer \u63d0\u4f9b etcd \u6570\u636e\u7f13\u5b58\u4ee5\u51cf\u5c11\u96c6\u7fa4\u5bf9 etcd \u7684\u8bbf\u95ee\u3002","title":"APIServer"},{"location":"2/2/2/#apiserver_1","text":"","title":"APIServer \u5c55\u5f00"},{"location":"2/2/2/#controller-manager_1","text":"Controller Manager \u662f\u96c6\u7fa4\u7684\u5927\u8111\uff0c\u662f\u786e\u4fdd\u6574\u4e2a\u96c6\u7fa4\u52a8\u8d77\u6765\u7684\u5173\u952e\uff1b \u4f5c\u7528\u662f\u786e\u4fdd Kubernetes \u9075\u5faa\u58f0\u660e\u5f0f\u7cfb\u7edf\u89c4\u8303\uff0c\u786e\u4fdd\u7cfb\u7edf\u7684\u771f\u5b9e\u72b6\u6001\uff08ActualState\uff09\u4e0e\u7528\u6237\u5b9a\u4e49\u7684\u671f\u671b\u72b6\u6001\uff08Desired State\uff09\u4e00\u81f4\uff1b Controller Manager \u662f\u591a\u4e2a\u63a7\u5236\u5668\u7684\u7ec4\u5408\uff0c\u6bcf\u4e2a Controller \u4e8b\u5b9e\u4e0a\u90fd\u662f\u4e00\u4e2a control loop\uff0c\u8d1f\u8d23\u4fa6\u542c\u5176\u7ba1\u63a7\u7684\u5bf9\u8c61\uff0c\u5f53\u5bf9\u8c61\u53d1\u751f\u53d8\u66f4\u65f6\u5b8c\u6210\u914d\u7f6e\uff1b Controller \u914d\u7f6e\u5931\u8d25\u901a\u5e38\u4f1a\u89e6\u53d1\u81ea\u52a8\u91cd\u8bd5\uff0c\u6574\u4e2a\u96c6\u7fa4\u4f1a\u5728\u63a7\u5236\u5668\u4e0d\u65ad\u91cd\u8bd5\u7684\u673a\u5236\u4e0b\u786e\u4fdd\u6700\u7ec8\u4e00\u81f4\u6027\uff08 Eventual Consistency \uff09\u3002","title":"Controller Manager"},{"location":"2/2/2/#_8","text":"","title":"\u63a7\u5236\u5668\u7684\u5de5\u4f5c\u6d41\u7a0b"},{"location":"2/2/2/#informer","text":"","title":"Informer \u7684\u5185\u90e8\u673a\u5236"},{"location":"2/2/2/#_9","text":"","title":"\u63a7\u5236\u5668\u7684\u534f\u540c\u5de5\u4f5c\u539f\u7406"},{"location":"2/2/2/#scheduler_1","text":"\u7279\u6b8a\u7684 Controller\uff0c\u5de5\u4f5c\u539f\u7406\u4e0e\u5176\u4ed6\u63a7\u5236\u5668\u65e0\u5dee\u522b\u3002 Scheduler \u7684\u7279\u6b8a\u804c\u8d23\u5728\u4e8e\u76d1\u63a7\u5f53\u524d\u96c6\u7fa4\u6240\u6709\u672a\u8c03\u5ea6\u7684 Pod\uff0c\u5e76\u4e14\u83b7\u53d6\u5f53\u524d\u96c6\u7fa4\u6240\u6709\u8282\u70b9\u7684\u5065\u5eb7\u72b6\u51b5\u548c\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\uff0c\u4e3a\u5f85\u8c03\u5ea6 Pod \u9009\u62e9\u6700\u4f73\u8ba1\u7b97\u8282\u70b9\uff0c\u5b8c\u6210\u8c03\u5ea6\u3002 \u8c03\u5ea6\u9636\u6bb5\u5206\u4e3a\uff1a - Predict\uff1a\u8fc7\u6ee4\u4e0d\u80fd\u6ee1\u8db3\u4e1a\u52a1\u9700\u6c42\u7684\u8282\u70b9\uff0c\u5982\u8d44\u6e90\u4e0d\u8db3\u3001\u7aef\u53e3\u51b2\u7a81\u7b49\u3002 - Priority\uff1a\u6309\u65e2\u5b9a\u8981\u7d20\u5c06\u6ee1\u8db3\u8c03\u5ea6\u9700\u6c42\u7684\u8282\u70b9\u8bc4\u5206\uff0c\u9009\u62e9\u6700\u4f73\u8282\u70b9\u3002 - Bind\uff1a\u5c06\u8ba1\u7b97\u8282\u70b9\u4e0e Pod \u7ed1\u5b9a\uff0c\u5b8c\u6210\u8c03\u5ea6\u3002","title":"Scheduler"},{"location":"2/2/2/#kubelet_1","text":"Kubernetes \u7684\u521d\u59cb\u5316\u7cfb\u7edf\uff08init system\uff09 \u4ece\u4e0d\u540c\u6e90\u83b7\u53d6 Pod \u6e05\u5355\uff0c\u5e76\u6309\u9700\u6c42\u542f\u505c Pod \u7684\u6838\u5fc3\u7ec4\u4ef6\uff1a Pod \u6e05\u5355\u53ef\u4ece\u672c\u5730\u6587\u4ef6\u76ee\u5f55\uff0c\u7ed9\u5b9a\u7684 HTTPServer \u6216 Kube-APIServer \u7b49\u6e90\u5934\u83b7\u53d6\uff1b Kubelet \u5c06\u8fd0\u884c\u65f6\uff0c\u7f51\u7edc\u548c\u5b58\u50a8\u62bd\u8c61\u6210\u4e86 CRI\uff0cCNI\uff0cCSI\u3002 \u8d1f\u8d23\u6c47\u62a5\u5f53\u524d\u8282\u70b9\u7684\u8d44\u6e90\u4fe1\u606f\u548c\u5065\u5eb7\u72b6\u6001\uff1b \u8d1f\u8d23 Pod \u7684\u5065\u5eb7\u68c0\u67e5\u548c\u72b6\u6001\u6c47\u62a5\u3002","title":"Kubelet"},{"location":"2/2/2/#kube-proxy_1","text":"\u76d1\u63a7\u96c6\u7fa4\u4e2d\u7528\u6237\u53d1\u5e03\u7684\u670d\u52a1\uff0c\u5e76\u5b8c\u6210\u8d1f\u8f7d\u5747\u8861\u914d\u7f6e\u3002 \u6bcf\u4e2a\u8282\u70b9\u7684 Kube-Proxy \u90fd\u4f1a\u914d\u7f6e\u76f8\u540c\u7684\u8d1f\u8f7d\u5747\u8861\u7b56\u7565\uff0c\u4f7f\u5f97\u6574\u4e2a\u96c6\u7fa4\u7684\u670d\u52a1\u53d1\u73b0\u5efa\u7acb\u5728\u5206\u5e03\u5f0f\u8d1f\u8f7d\u5747\u8861\u5668\u4e4b\u4e0a\uff0c\u670d\u52a1\u8c03\u7528\u65e0\u9700\u7ecf\u8fc7\u989d\u5916\u7684\u7f51\u7edc\u8df3\u8f6c\uff08Network Hop\uff09\u3002 \u8d1f\u8f7d\u5747\u8861\u914d\u7f6e\u57fa\u4e8e\u4e0d\u540c\u63d2\u4ef6\u5b9e\u73b0\uff1a userspace\u3002 \u64cd\u4f5c\u7cfb\u7edf\u7f51\u7edc\u534f\u8bae\u6808\u4e0d\u540c\u7684 Hooks \u70b9\u548c\u63d2\u4ef6\uff1a iptables\uff1b ipvs\u3002","title":"Kube-Proxy"},{"location":"2/2/2/#add-ons","text":"kube-dns\uff1a\u8d1f\u8d23\u4e3a\u6574\u4e2a\u96c6\u7fa4\u63d0\u4f9b DNS \u670d\u52a1\uff1b Ingress Controller\uff1a\u4e3a\u670d\u52a1\u63d0\u4f9b\u5916\u7f51\u5165\u53e3\uff1b MetricsServer\uff1a\u63d0\u4f9b\u8d44\u6e90\u76d1\u63a7\uff1b Dashboard\uff1a\u63d0\u4f9b GUI\uff1b Fluentd-Elasticsearch\uff1a\u63d0\u4f9b\u96c6\u7fa4\u65e5\u5fd7\u91c7\u96c6\u3001\u5b58\u50a8\u4e0e\u67e5\u8be2\u3002","title":"\u63a8\u8350\u7684 Add-ons"},{"location":"2/2/3/","text":"\u4e86\u89e3 kubectl Kubectl \u547d\u4ee4\u548c kubeconfig kubectl \u662f\u4e00\u4e2a Kubernetes \u7684\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u5b83\u5141\u8bb8Kubernetes \u7528\u6237\u4ee5\u547d\u4ee4\u884c\u7684\u65b9\u5f0f\u4e0e Kubernetes \u4ea4\u4e92\uff0c\u5176\u9ed8\u8ba4\u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6 ~/.kube/config\u3002 kubectl \u4f1a\u5c06\u63a5\u6536\u5230\u7684\u7528\u6237\u8bf7\u6c42\u8f6c\u5316\u4e3a rest \u8c03\u7528\u4ee5rest client \u7684\u5f62\u5f0f\u4e0e apiserver \u901a\u8baf\u3002 apiserver \u7684\u5730\u5740\uff0c\u7528\u6237\u4fe1\u606f\u7b49\u914d\u7f6e\u5728 kubeconfig\u3002 apiVersion: v1 clusters: - cluster: certificate-authority-data: REDACTED server: https://127.0.0.1:54729 name: kind-kind contexts: - context: cluster: kind-kind user: kind-kind name: kind-kind current-context: kind-kind kind: Config users: - name: kind-kind user: client-certificate-data: REDACTED client-key-data: REDACTED kubectl \u5e38\u7528\u547d\u4ee4 kubectl get po \u2013oyaml -w kubectl: \u53ef\u67e5\u770b\u5bf9\u8c61\u3002 -oyaml: \u8f93\u51fa\u8be6\u7ec6\u4fe1\u606f\u4e3a yaml \u683c\u5f0f\u3002 -w watch: \u8be5\u5bf9\u8c61\u7684\u540e\u7eed\u53d8\u5316\u3002 -owide: \u4ee5\u8be6\u7ec6\u5217\u8868\u7684\u683c\u5f0f\u67e5\u770b\u5bf9\u8c61\u3002 Kubectl describe kubectl describe \u5c55\u793a\u8d44\u6e90\u7684\u8be6\u7ec6\u4fe1\u606f\u548c\u76f8\u5173 Event\u3002 kubectl describe po ubuntu-6fcf6c67db-xvmjh .... Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled 8m13s default-scheduler Successfully assigned ubuntu-6fcf6c67db-xvmjh to k8smaster Normal Pulling 7m56s kubelet, k8smaster pulling image \"ubuntu:16.04\" Normal Pulled 7m50s kubelet, k8smaster Successfully pulled image \"ubuntu:16.04\" Normal Created 7m50s kubelet, k8smaster Created container Normal Started 7m50s kubelet, k8smaster Started container kubectl exec kubectl exec \u63d0\u4f9b\u8fdb\u5165\u8fd0\u884c\u5bb9\u5668\u7684\u901a\u9053\uff0c\u53ef\u4ee5\u8fdb\u5165\u5bb9\u5668\u8fdb\u884c debug \u64cd\u4f5c\u3002 # kubectl exec -it ubuntu-6fcf6c67db-xvmjh bash root@ubuntu-6fcf6c67db-xvmjh:/# hostname -f ubuntu-6fcf6c67db-xvmjh root@ubuntu-6fcf6c67db-xvmjh:/# ... kubectl logs Kubectl logs \u53ef\u67e5\u770b pod \u7684\u6807\u51c6\u8f93\u5165\uff08stdout, stderr\uff09\uff0c\u4e0e tail \u7528\u6cd5\u7c7b\u4f3c\u3002 jianqli:~# kubectl logs ubuntu-6fcf6c67db-xvmjh Mon Mar 25 14:56:02 UTC 2019 Mon Mar 25 14:56:05 UTC 2019 Mon Mar 25 14:56:08 UTC 2019 Mon Mar 25 14:56:11 UTC 2019 Mon Mar 25 14:56:14 UTC 2019 ... \u5982\u679c\u65e5\u5fd7\u5b58\u50a8\u5728\u6587\u4ef6\u4e2d\uff0c\u67e5\u770b\u65e5\u5fd7\u7684\u65b9\u5f0f kubectl exec -it pod_name -- tail -f \u65e5\u5fd7\u8def\u5f84/xxx.log","title":"\u4e86\u89e3 kubectl"},{"location":"2/2/3/#kubectl","text":"","title":"\u4e86\u89e3 kubectl"},{"location":"2/2/3/#kubectl-kubeconfig","text":"kubectl \u662f\u4e00\u4e2a Kubernetes \u7684\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u5b83\u5141\u8bb8Kubernetes \u7528\u6237\u4ee5\u547d\u4ee4\u884c\u7684\u65b9\u5f0f\u4e0e Kubernetes \u4ea4\u4e92\uff0c\u5176\u9ed8\u8ba4\u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6 ~/.kube/config\u3002 kubectl \u4f1a\u5c06\u63a5\u6536\u5230\u7684\u7528\u6237\u8bf7\u6c42\u8f6c\u5316\u4e3a rest \u8c03\u7528\u4ee5rest client \u7684\u5f62\u5f0f\u4e0e apiserver \u901a\u8baf\u3002 apiserver \u7684\u5730\u5740\uff0c\u7528\u6237\u4fe1\u606f\u7b49\u914d\u7f6e\u5728 kubeconfig\u3002 apiVersion: v1 clusters: - cluster: certificate-authority-data: REDACTED server: https://127.0.0.1:54729 name: kind-kind contexts: - context: cluster: kind-kind user: kind-kind name: kind-kind current-context: kind-kind kind: Config users: - name: kind-kind user: client-certificate-data: REDACTED client-key-data: REDACTED","title":"Kubectl \u547d\u4ee4\u548c kubeconfig"},{"location":"2/2/3/#kubectl_1","text":"kubectl get po \u2013oyaml -w kubectl: \u53ef\u67e5\u770b\u5bf9\u8c61\u3002 -oyaml: \u8f93\u51fa\u8be6\u7ec6\u4fe1\u606f\u4e3a yaml \u683c\u5f0f\u3002 -w watch: \u8be5\u5bf9\u8c61\u7684\u540e\u7eed\u53d8\u5316\u3002 -owide: \u4ee5\u8be6\u7ec6\u5217\u8868\u7684\u683c\u5f0f\u67e5\u770b\u5bf9\u8c61\u3002","title":"kubectl \u5e38\u7528\u547d\u4ee4"},{"location":"2/2/3/#kubectl-describe","text":"kubectl describe \u5c55\u793a\u8d44\u6e90\u7684\u8be6\u7ec6\u4fe1\u606f\u548c\u76f8\u5173 Event\u3002 kubectl describe po ubuntu-6fcf6c67db-xvmjh .... Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled 8m13s default-scheduler Successfully assigned ubuntu-6fcf6c67db-xvmjh to k8smaster Normal Pulling 7m56s kubelet, k8smaster pulling image \"ubuntu:16.04\" Normal Pulled 7m50s kubelet, k8smaster Successfully pulled image \"ubuntu:16.04\" Normal Created 7m50s kubelet, k8smaster Created container Normal Started 7m50s kubelet, k8smaster Started container","title":"Kubectl describe"},{"location":"2/2/3/#kubectl-exec","text":"kubectl exec \u63d0\u4f9b\u8fdb\u5165\u8fd0\u884c\u5bb9\u5668\u7684\u901a\u9053\uff0c\u53ef\u4ee5\u8fdb\u5165\u5bb9\u5668\u8fdb\u884c debug \u64cd\u4f5c\u3002 # kubectl exec -it ubuntu-6fcf6c67db-xvmjh bash root@ubuntu-6fcf6c67db-xvmjh:/# hostname -f ubuntu-6fcf6c67db-xvmjh root@ubuntu-6fcf6c67db-xvmjh:/# ...","title":"kubectl exec"},{"location":"2/2/3/#kubectl-logs","text":"Kubectl logs \u53ef\u67e5\u770b pod \u7684\u6807\u51c6\u8f93\u5165\uff08stdout, stderr\uff09\uff0c\u4e0e tail \u7528\u6cd5\u7c7b\u4f3c\u3002 jianqli:~# kubectl logs ubuntu-6fcf6c67db-xvmjh Mon Mar 25 14:56:02 UTC 2019 Mon Mar 25 14:56:05 UTC 2019 Mon Mar 25 14:56:08 UTC 2019 Mon Mar 25 14:56:11 UTC 2019 Mon Mar 25 14:56:14 UTC 2019 ... \u5982\u679c\u65e5\u5fd7\u5b58\u50a8\u5728\u6587\u4ef6\u4e2d\uff0c\u67e5\u770b\u65e5\u5fd7\u7684\u65b9\u5f0f kubectl exec -it pod_name -- tail -f \u65e5\u5fd7\u8def\u5f84/xxx.log","title":"kubectl logs"},{"location":"2/2/4/","text":"\u6df1\u5165\u7406\u89e3 Kubernetes \u4e91\u8ba1\u7b97\u7684\u4f20\u7edf\u5206\u7c7b Kubernetes \u751f\u6001\u7cfb\u7edf Kubernetes \u8bbe\u8ba1\u7406\u5ff5 Kubernetes Master \u5206\u5c42\u67b6\u6784 \u6838\u5fc3\u5c42 \uff1aKubernetes \u6700\u6838\u5fc3\u7684\u529f\u80fd\uff0c\u5bf9\u5916\u63d0\u4f9b API \u6784\u5efa\u9ad8\u5c42\u7684\u5e94\u7528\uff0c\u5bf9\u5185\u63d0\u4f9b\u63d2\u4ef6\u5f0f\u5e94\u7528\u6267\u884c\u73af\u5883\u3002 \u5e94\u7528\u5c42 \uff1a\u90e8\u7f72\uff08\u65e0\u72b6\u6001\u5e94\u7528\u3001\u6709\u72b6\u6001\u5e94\u7528\u3001\u6279\u5904\u7406\u4efb\u52a1\u3001\u96c6\u7fa4\u5e94\u7528\u7b49\uff09\u548c\u8def\u7531\uff08\u670d\u52a1\u53d1\u73b0\u3001DNS \u89e3\u6790\u7b49\uff09\u3002 \u7ba1\u7406\u5c42 \uff1a\u7cfb\u7edf\u5ea6\u91cf\uff08\u5982\u57fa\u7840\u8bbe\u65bd\u3001\u5bb9\u5668\u548c\u7f51\u7edc\u7684\u5ea6\u91cf\uff09\u3001\u81ea\u52a8\u5316\uff08\u5982\u81ea\u52a8\u6269\u5c55\u3001\u52a8\u6001 Provision \u7b49\uff09\u3001\u7b56\u7565\u7ba1\u7406\uff08RBAC\u3001Quota\u3001PSP\u3001NetworkPolicy \u7b49\uff09\u3002 \u63a5\u53e3\u5c42 \uff1aKubectl \u547d\u4ee4\u884c\u5de5\u5177\u3001\u5ba2\u6237\u7aef SDK \u4ee5\u53ca\u96c6\u7fa4\u8054\u90a6\u3002 \u751f\u6001\u7cfb\u7edf \uff1a\u5728\u63a5\u53e3\u5c42\u4e4b\u4e0a\u7684\u5e9e\u5927\u5bb9\u5668\u96c6\u7fa4\u7ba1\u7406\u8c03\u5ea6\u7684\u751f\u6001\u7cfb\u7edf\uff0c\u53ef\u4ee5\u5212\u5206\u4e3a\u4e24\u4e2a\u8303\u7574\uff1a Kubernetes \u5916\u90e8\uff1a\u65e5\u5fd7\u3001\u76d1\u63a7\u3001\u914d\u7f6e\u7ba1\u7406\u3001CI\u3001CD\u3001Workflow\u3001FaaS\u3001OTS \u5e94\u7528\u3001ChatOps \u7b49\uff1b Kubernetes \u5185\u90e8\uff1aCRI\u3001CNI\u3001CVI\u3001\u955c\u50cf\u4ed3\u5e93\u3001Cloud Provider\u3001\u96c6\u7fa4\u81ea\u8eab\u7684\u914d\u7f6e\u548c\u7ba1\u7406\u7b49\u3002 API \u8bbe\u8ba1\u539f\u5219 \u6240\u6709 API \u90fd\u5e94\u662f\u58f0\u660e\u5f0f\u7684 \u76f8\u5bf9\u4e8e\u547d\u4ee4\u5f0f\u64cd\u4f5c\uff0c\u58f0\u660e\u5f0f\u64cd\u4f5c\u5bf9\u4e8e\u91cd\u590d\u64cd\u4f5c\u7684\u6548\u679c\u662f\u7a33\u5b9a\u7684\uff0c\u8fd9\u5bf9\u4e8e\u5bb9\u6613\u51fa\u73b0\u6570\u636e\u4e22\u5931\u6216\u91cd\u590d\u7684\u5206\u5e03\u5f0f\u73af\u5883\u6765\u8bf4\u662f\u5f88\u91cd\u8981\u7684\u3002 \u58f0\u660e\u5f0f\u64cd\u4f5c\u66f4\u6613\u88ab\u7528\u6237\u4f7f\u7528\uff0c\u53ef\u4ee5\u4f7f\u7cfb\u7edf\u5411\u7528\u6237\u9690\u85cf\u5b9e\u73b0\u7684\u7ec6\u8282\uff0c\u540c\u65f6\u4e5f\u4fdd\u7559\u4e86\u7cfb\u7edf\u672a\u6765\u6301\u7eed\u4f18\u5316\u7684\u53ef\u80fd\u6027\u3002 \u6b64\u5916\uff0c\u58f0\u660e\u5f0f\u7684 API \u8fd8\u9690\u542b\u4e86\u6240\u6709\u7684 API \u5bf9\u8c61\u90fd\u662f\u540d\u8bcd\u6027\u8d28\u7684\uff0c\u4f8b\u5982 Service\u3001Volume \u8fd9\u4e9b API \u90fd\u662f\u540d\u8bcd\uff0c\u8fd9\u4e9b\u540d\u8bcd\u63cf\u8ff0\u4e86\u7528\u6237\u6240\u671f\u671b\u5f97\u5230\u7684\u4e00\u4e2a\u76ee\u6807\u5bf9\u8c61\u3002 API \u5bf9\u8c61\u662f\u5f7c\u6b64\u4e92\u8865\u800c\u4e14\u53ef\u7ec4\u5408\u7684 \u8fd9\u5b9e\u9645\u4e0a\u9f13\u52b1 API \u5bf9\u8c61\u5c3d\u91cf\u5b9e\u73b0\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u65f6\u7684\u8981\u6c42\uff0c\u5373\u201c\u9ad8\u5185\u805a\uff0c\u677e\u8026\u5408\u201d\uff0c\u5bf9\u4e1a\u52a1\u76f8\u5173\u7684\u6982\u5ff5\u6709\u4e00\u4e2a\u5408\u9002\u7684\u5206\u89e3\uff0c\u63d0\u9ad8\u5206\u89e3\u51fa\u6765\u7684\u5bf9\u8c61\u7684\u53ef\u91cd\u7528\u6027\u3002 \u9ad8\u5c42 API \u4ee5\u64cd\u4f5c\u610f\u56fe\u4e3a\u57fa\u7840\u8bbe\u8ba1 \u5982\u4f55\u80fd\u591f\u8bbe\u8ba1\u597d API\uff0c\u8ddf\u5982\u4f55\u80fd\u7528\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u6cd5\u8bbe\u8ba1\u597d\u5e94\u7528\u7cfb\u7edf\u6709\u76f8\u901a\u7684\u5730\u65b9\uff0c\u9ad8\u5c42\u8bbe\u8ba1\u4e00\u5b9a\u662f\u4ece\u4e1a\u52a1\u51fa\u53d1\uff0c\u800c\u4e0d\u662f\u8fc7\u65e9\u7684\u4ece\u6280\u672f\u5b9e\u73b0\u51fa\u53d1\u3002 \u56e0\u6b64\uff0c\u9488\u5bf9 Kubernetes \u7684\u9ad8\u5c42 API \u8bbe\u8ba1\uff0c\u4e00\u5b9a\u662f\u4ee5 Kubernetes \u7684\u4e1a\u52a1\u4e3a\u57fa\u7840\u51fa\u53d1\uff0c\u4e5f\u5c31\u662f\u4ee5\u7cfb\u7edf\u8c03\u5ea6\u7ba1\u7406\u5bb9\u5668\u7684\u64cd\u4f5c\u610f\u56fe\u4e3a\u57fa\u7840\u8bbe\u8ba1\u3002 \u4f4e\u5c42 API \u6839\u636e\u9ad8\u5c42 API \u7684\u63a7\u5236\u9700\u8981\u8bbe\u8ba1 \u8bbe\u8ba1\u5b9e\u73b0\u4f4e\u5c42 API \u7684\u76ee\u7684\uff0c\u662f\u4e3a\u4e86\u88ab\u9ad8\u5c42 API \u4f7f\u7528\uff0c\u8003\u8651\u51cf\u5c11\u5197\u4f59\u3001\u63d0\u9ad8\u91cd\u7528\u6027\u7684\u76ee\u7684\uff0c\u4f4e\u5c42 API\u7684\u8bbe\u8ba1\u4e5f\u8981\u4ee5\u9700\u6c42\u4e3a\u57fa\u7840\uff0c\u8981\u5c3d\u91cf\u62b5\u6297\u53d7\u6280\u672f\u5b9e\u73b0\u5f71\u54cd\u7684\u8bf1\u60d1\u3002 \u5c3d\u91cf\u907f\u514d\u7b80\u5355\u5c01\u88c5\uff0c\u4e0d\u8981\u6709\u5728\u5916\u90e8 API \u65e0\u6cd5\u663e\u5f0f\u77e5\u9053\u7684\u5185\u90e8\u9690\u85cf\u7684\u673a\u5236 \u7b80\u5355\u7684\u5c01\u88c5\uff0c\u5b9e\u9645\u6ca1\u6709\u63d0\u4f9b\u65b0\u7684\u529f\u80fd\uff0c\u53cd\u800c\u589e\u52a0\u4e86\u5bf9\u6240\u5c01\u88c5 API \u7684\u4f9d\u8d56\u6027\u3002 \u4f8b\u5982 StatefulSet \u548c ReplicaSet\uff0c\u672c\u6765\u5c31\u662f\u4e24\u79cd Pod \u96c6\u5408\uff0c\u90a3\u4e48 Kubernetes \u5c31\u7528\u4e0d\u540c API \u5bf9\u8c61\u6765\u5b9a\u4e49\u5b83\u4eec\uff0c\u800c\u4e0d\u4f1a\u8bf4\u53ea\u7528\u540c\u4e00\u4e2a ReplicaSet\uff0c\u5185\u90e8\u901a\u8fc7\u7279\u6b8a\u7684\u7b97\u6cd5\u518d\u6765\u533a\u5206\u8fd9\u4e2a ReplicaSet \u662f\u6709\u72b6\u6001\u7684\u8fd8\u662f\u65e0\u72b6\u6001\u3002 API \u64cd\u4f5c\u590d\u6742\u5ea6\u4e0e\u5bf9\u8c61\u6570\u91cf\u6210\u6b63\u6bd4 API \u7684\u64cd\u4f5c\u590d\u6742\u5ea6\u4e0d\u80fd\u8d85\u8fc7 O(N)\uff0c\u5426\u5219\u7cfb\u7edf\u5c31\u4e0d\u5177\u5907\u6c34\u5e73\u4f38\u7f29\u6027\u4e86\u3002 API \u5bf9\u8c61\u72b6\u6001\u4e0d\u80fd\u4f9d\u8d56\u4e8e\u7f51\u7edc\u8fde\u63a5\u72b6\u6001 \u7531\u4e8e\u4f17\u6240\u5468\u77e5\uff0c\u5728\u5206\u5e03\u5f0f\u73af\u5883\u4e0b\uff0c\u7f51\u7edc\u8fde\u63a5\u65ad\u5f00\u662f\u7ecf\u5e38\u53d1\u751f\u7684\u4e8b\u60c5\uff0c\u56e0\u6b64\u8981\u4fdd\u8bc1 API \u5bf9\u8c61\u72b6\u6001\u80fd\u5e94\u5bf9\u7f51\u7edc\u7684\u4e0d\u7a33\u5b9a\uff0cAPI \u5bf9\u8c61\u7684\u72b6\u6001\u5c31\u4e0d\u80fd\u4f9d\u8d56\u4e8e\u7f51\u7edc\u8fde\u63a5\u72b6\u6001\u3002 \u5c3d\u91cf\u907f\u514d\u8ba9\u64cd\u4f5c\u673a\u5236\u4f9d\u8d56\u4e8e\u5168\u5c40\u72b6\u6001 \u56e0\u4e3a\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u8981\u4fdd\u8bc1\u5168\u5c40\u72b6\u6001\u7684\u540c\u6b65\u662f\u975e\u5e38\u56f0\u96be\u7684\u3002 Kubernetes \u5982\u4f55\u901a\u8fc7\u5bf9\u8c61\u7684\u7ec4\u5408\u5b8c\u6210\u4e1a\u52a1\u63cf\u8ff0 \u67b6\u6784\u8bbe\u8ba1\u539f\u5219 \u53ea\u6709 APIServer \u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee etcd \u5b58\u50a8\uff0c\u5176\u4ed6\u670d\u52a1\u5fc5\u987b\u901a\u8fc7 KubernetesAPI \u6765\u8bbf\u95ee\u96c6\u7fa4\u72b6\u6001\uff1b \u5355\u8282\u70b9\u6545\u969c\u4e0d\u5e94\u8be5\u5f71\u54cd\u96c6\u7fa4\u7684\u72b6\u6001\uff1b \u5728\u6ca1\u6709\u65b0\u8bf7\u6c42\u7684\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u7ec4\u4ef6\u5e94\u8be5\u5728\u6545\u969c\u6062\u590d\u540e\u7ee7\u7eed\u6267\u884c\u4e0a\u6b21\u6700\u540e\u6536\u5230\u7684\u8bf7\u6c42\uff08\u6bd4\u5982\u7f51\u7edc\u5206\u533a\u6216\u670d\u52a1\u91cd\u542f\u7b49\uff09\uff1b \u6240\u6709\u7ec4\u4ef6\u90fd\u5e94\u8be5\u5728\u5185\u5b58\u4e2d\u4fdd\u6301\u6240\u9700\u8981\u7684\u72b6\u6001\uff0cAPIServer \u5c06\u72b6\u6001\u5199\u5165 etcd \u5b58\u50a8\uff0c\u800c\u5176\u4ed6\u7ec4\u4ef6\u5219\u901a\u8fc7 APIServer \u66f4\u65b0\u5e76\u76d1\u542c\u6240\u6709\u7684\u53d8\u5316\uff1b \u4f18\u5148\u4f7f\u7528\u4e8b\u4ef6\u76d1\u542c\u800c\u4e0d\u662f\u8f6e\u8be2\u3002 \u5f15\u5bfc\uff08Bootstrapping\uff09\u539f\u5219 Self-hosting \u662f\u76ee\u6807\u3002 \u51cf\u5c11\u4f9d\u8d56\uff0c\u7279\u522b\u662f\u7a33\u6001\u8fd0\u884c\u7684\u4f9d\u8d56\u3002 \u901a\u8fc7\u5206\u5c42\u7684\u539f\u5219\u7ba1\u7406\u4f9d\u8d56\u3002 \u5faa\u73af\u4f9d\u8d56\u95ee\u9898\u7684\u539f\u5219\uff1a \u540c\u65f6\u8fd8\u63a5\u53d7\u5176\u4ed6\u65b9\u5f0f\u7684\u6570\u636e\u8f93\u5165\uff08\u6bd4\u5982\u672c\u5730\u6587\u4ef6\u7b49\uff09\uff0c\u8fd9\u6837\u5728\u5176\u4ed6\u670d\u52a1\u4e0d\u53ef\u7528\u65f6\u8fd8\u53ef\u4ee5\u624b\u52a8\u914d\u7f6e\u5f15\u5bfc\u670d\u52a1\uff1b \u72b6\u6001\u5e94\u8be5\u662f\u53ef\u6062\u590d\u6216\u53ef\u91cd\u65b0\u53d1\u73b0\u7684\uff1b \u652f\u6301\u7b80\u5355\u7684\u542f\u52a8\u4e34\u65f6\u5b9e\u4f8b\u6765\u521b\u5efa\u7a33\u6001\u8fd0\u884c\u6240\u9700\u8981\u7684\u72b6\u6001\uff0c\u4f7f\u7528\u5206\u5e03\u5f0f\u9501\u6216\u6587\u4ef6\u9501\u7b49\u6765\u534f\u8c03\u4e0d\u540c\u72b6\u6001\u7684\u5207\u6362\uff08\u901a\u5e38\u79f0\u4e3a pivoting \u6280\u672f\uff09\uff1b \u81ea\u52a8\u91cd\u542f\u5f02\u5e38\u9000\u51fa\u7684\u670d\u52a1\uff0c\u6bd4\u5982\u526f\u672c\u6216\u8005\u8fdb\u7a0b\u7ba1\u7406\u5668\u7b49\u3002 \u67e5\u770b kubelet \u914d\u7f6e ps -ef|grep kubelet root 580 1 4 12:43 ? 00:25:37 /usr/local/bin/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf --config=/var/lib/kubelet/config.yaml --cgroup-driver=systemd --network-plugin=cni --pod-infra-container-image=registry.cn-beijing.aliyuncs.com/kubesphereio/pause:3.6 --node-ip=192.168.3.150 --hostname-override=cjx-0004 root 1824 1799 7 12:43 ? 00:38:03 kube-apiserver --advertise-address=192.168.3.150 --allow-privileged=true --audit-log-maxage=30 --audit-log-maxbackup=10 --audit-log-maxsize=100 --authorization-mode=Node,RBAC --bind-address=0.0.0.0 --client-ca-file=/etc/kubernetes/pki/ca.crt --enable-admission-plugins=NodeRestriction --enable-bootstrap-token-auth=true --etcd-cafile=/etc/ssl/etcd/ssl/ca.pem --etcd-certfile=/etc/ssl/etcd/ssl/node-cjx-0004.pem --etcd-keyfile=/etc/ssl/etcd/ssl/node-cjx-0004-key.pem --etcd-servers=https://192.168.3.150:2379 --feature-gates=RotateKubeletServerCertificate=true,TTLAfterFinished=true,ExpandCSIVolumes=true,CSIStorageCapacity=true --kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt --kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname --proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt --proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key --requestheader-allowed-names=front-proxy-client --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt --requestheader-extra-headers-prefix=X-Remote-Extra- --requestheader-group-headers=X-Remote-Group --requestheader-username-headers=X-Remote-User --secure-port=6443 --service-account-issuer=https://kubernetes.default.svc.cluster.local --service-account-key-file=/etc/kubernetes/pki/sa.pub --service-account-signing-key-file=/etc/kubernetes/pki/sa.key --service-cluster-ip-range=10.233.0.0/18 --tls-cert-file=/etc/kubernetes/pki/apiserver.crt --tls-private-key-file=/etc/kubernetes/pki/apiserver.key cjx 55386 48634 0 21:43 pts/0 00:00:00 grep --color=auto kubelet cat /var/lib/kubelet/config.yaml ...... staticPodPath: /etc/kubernetes/manifests ...... \u8bfe\u540e\u7ec3\u4e60 4.1 \u7528 Kubeadm \u5b89\u88c5 Kubernetes \u96c6\u7fa4\u3002 \u6838\u5fc3\u6280\u672f\u6982\u5ff5\u548c API \u5bf9\u8c61 API \u5bf9\u8c61\u662f Kubernetes \u96c6\u7fa4\u4e2d\u7684\u7ba1\u7406\u64cd\u4f5c\u5355\u5143\u3002 Kubernetes \u96c6\u7fa4\u7cfb\u7edf\u6bcf\u652f\u6301\u4e00\u9879\u65b0\u529f\u80fd\uff0c\u5f15\u5165\u4e00\u9879\u65b0\u6280\u672f\uff0c\u4e00\u5b9a\u4f1a\u65b0\u5f15\u5165\u5bf9\u5e94\u7684 API \u5bf9\u8c61\uff0c\u652f\u6301\u5bf9\u8be5\u529f\u80fd\u7684\u7ba1\u7406\u64cd\u4f5c\u3002 \u6bcf\u4e2a API \u5bf9\u8c61\u90fd\u6709\u56db\u5927\u7c7b\u5c5e\u6027\uff1a TypeMeta MetaData Spec Status TypeMeta Kubernetes\u5bf9\u8c61\u7684\u6700\u57fa\u672c\u5b9a\u4e49\uff0c\u5b83\u901a\u8fc7\u5f15\u5165GKV\uff08Group\uff0cKind\uff0cVersion\uff09\u6a21\u578b\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5bf9\u8c61\u7684\u7c7b\u578b\u3002 Group Kubernetes \u5b9a\u4e49\u4e86\u975e\u5e38\u591a\u7684\u5bf9\u8c61\uff0c\u5982\u4f55\u5c06\u8fd9\u4e9b\u5bf9\u8c61\u8fdb\u884c\u5f52\u7c7b\u662f\u4e00\u95e8\u5b66\u95ee\uff0c \u5c06\u5bf9\u8c61\u4f9d\u636e\u5176\u529f\u80fd\u8303\u56f4\u5f52\u5165\u4e0d\u540c\u7684\u5206\u7ec4\uff0c\u6bd4\u5982\u628a\u652f\u6491\u6700\u57fa\u672c\u529f\u80fd\u7684\u5bf9\u8c61\u5f52\u5165 core \u7ec4\uff0c\u628a\u4e0e\u5e94\u7528\u90e8\u7f72\u6709\u5173\u7684\u5bf9\u8c61\u5f52\u5165 apps \u7ec4 \uff0c\u4f1a\u4f7f\u8fd9\u4e9b\u5bf9\u8c61\u7684\u53ef\u7ef4\u62a4\u6027\u548c\u53ef\u7406\u89e3\u6027\u66f4\u9ad8\u3002 Kind \u5b9a\u4e49\u4e00\u4e2a\u5bf9\u8c61\u7684\u57fa\u672c\u7c7b\u578b\uff0c\u6bd4\u5982 Node\u3001Pod\u3001Deployment \u7b49\u3002 Version \u793e\u533a\u6bcf\u4e2a\u5b63\u5ea6\u4f1a\u63a8\u51fa\u4e00\u4e2a Kubernetes \u7248\u672c\uff0c\u968f\u7740 Kubernetes \u7248\u672c\u7684\u6f14\u8fdb\uff0c\u5bf9\u8c61\u4ece\u521b\u5efa\u4e4b\u521d\u5230\u80fd\u591f\u5b8c\u5168\u751f\u4ea7\u5316\u5c31\u7eea\u7684\u7248\u672c\u662f\u4e0d\u65ad\u53d8\u5316\u7684\u3002\u4e0e\u8f6f\u4ef6\u7248\u672c\u7c7b\u4f3c\uff0c\u901a\u5e38\u793e\u533a\u63d0\u51fa\u4e00\u4e2a\u6a21\u578b\u5b9a\u4e49\u4ee5\u540e\uff0c\u968f\u7740\u8be5\u5bf9\u8c61\u4e0d\u65ad\u6210\u719f\uff0c\u5176\u7248\u672c\u53ef\u80fd\u4f1a\u4ece v1alpha1 \u5230 v1alpha2\uff0c\u6216\u8005\u5230 v1beta1\uff0c\u6700\u7ec8\u53d8\u6210\u751f\u4ea7\u5c31\u7eea\u7248\u672c v1\u3002 Metadata Metadata \u4e2d\u6709\u4e24\u4e2a\u6700\u91cd\u8981\u7684\u5c5e\u6027\uff1a Namespace\u548cName \uff0c\u5206\u522b\u5b9a\u4e49\u4e86\u5bf9\u8c61\u7684Namespace \u5f52\u5c5e\u53ca\u540d\u5b57\uff0c \u8fd9\u4e24\u4e2a\u5c5e\u6027\u552f\u4e00\u5b9a\u4e49\u4e86\u67d0\u4e2a\u5bf9\u8c61\u5b9e\u4f8b\u3002 Label \u987e\u540d\u601d\u4e49\u5c31\u662f\u7ed9\u5bf9\u8c61\u6253\u6807\u7b7e\uff0c\u4e00\u4e2a\u5bf9\u8c61\u53ef\u4ee5\u6709\u4efb\u610f\u5bf9\u6807\u7b7e\uff0c\u5176\u5b58\u5728\u5f62\u5f0f\u662f\u952e\u503c\u5bf9\u3002Label \u5b9a\u4e49\u4e86\u5bf9\u8c61\u7684\u53ef\u8bc6\u522b\u5c5e\u6027\uff0cKubernetes API \u652f\u6301\u4ee5 Label \u4f5c\u4e3a\u8fc7\u6ee4\u6761\u4ef6\u67e5\u8be2\u5bf9\u8c61\u3002 Annotation Annotation \u4e0e Label \u4e00\u6837\u7528\u952e\u503c\u5bf9\u6765\u5b9a\u4e49\uff0c\u4f46 Annotation \u662f\u4f5c\u4e3a\u5c5e\u6027\u6269\u5c55\uff0c\u66f4\u591a\u9762\u5411\u4e8e\u7cfb\u7edf\u7ba1\u7406\u5458\u548c\u5f00\u53d1\u4eba\u5458\uff0c\u56e0\u6b64\u9700\u8981\u50cf\u5176\u4ed6\u5c5e\u6027\u4e00\u6837\u505a\u5408\u7406\u5f52\u7c7b\u3002\uff08k get node -oyaml\uff0c\u53c2\u8003 node \u8d44\u6e90\u7684\u8bbe\u7f6e\uff09 Finalizer Finalizer \u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u8d44\u6e90\u9501\uff0cKubernetes \u5728\u63a5\u6536\u67d0\u5bf9\u8c61\u7684\u5220\u9664\u8bf7\u6c42\u65f6\uff0c\u4f1a\u68c0\u67e5 Finalizer \u662f\u5426\u4e3a\u7a7a\uff0c\u5982\u679c\u4e0d\u4e3a\u7a7a\u5219\u53ea\u5bf9\u5176\u505a\u903b\u8f91\u5220\u9664\uff0c\u5373\u53ea\u4f1a\u66f4\u65b0\u5bf9\u8c61\u4e2d\u7684metadata.deletionTimestamp \u5b57\u6bb5\u3002 ResourceVersion ResourceVersion \u53ef\u4ee5\u88ab\u770b\u4f5c\u4e00\u79cd\u4e50\u89c2\u9501\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u5728\u4efb\u610f\u65f6\u523b\u90fd\u6709\u5176ResourceVersion\uff0c\u5f53 Kubernetes \u5bf9\u8c61\u88ab\u5ba2\u6237\u7aef\u8bfb\u53d6\u4ee5\u540e\uff0cResourceVersion\u4fe1\u606f\u4e5f\u88ab\u4e00\u5e76\u8bfb\u53d6\u3002\u6b64\u673a\u5236\u786e\u4fdd\u4e86\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u4efb\u610f\u591a\u7ebf\u7a0b\u80fd\u591f\u65e0\u9501\u5e76\u53d1\u8bbf\u95ee\u5bf9\u8c61\uff0c\u6781\u5927\u63d0\u5347\u4e86\u7cfb\u7edf\u7684\u6574\u4f53\u6548\u7387\u3002 Label \u56fe\u7247\u6765\u6e90 Label \u662f\u8bc6\u522b Kubernetes \u5bf9\u8c61\u7684\u6807\u7b7e\uff0c\u4ee5 key/value \u7684\u65b9\u5f0f\u9644\u52a0\u5230\u5bf9\u8c61\u4e0a\u3002 key \u6700\u957f\u4e0d\u80fd\u8d85\u8fc7 63 \u5b57\u8282\uff0cvalue \u53ef\u4ee5\u4e3a\u7a7a\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e0d\u8d85\u8fc7 253 \u5b57\u8282\u7684\u5b57\u7b26\u4e32\u3002 Label \u4e0d\u63d0\u4f9b\u552f\u4e00\u6027\uff0c\u5e76\u4e14\u5b9e\u9645\u4e0a\u7ecf\u5e38\u662f\u5f88\u591a\u5bf9\u8c61\uff08\u5982 Pods\uff09\u90fd\u4f7f\u7528\u76f8\u540c\u7684 label \u6765\u6807\u5fd7\u5177\u4f53\u7684\u5e94\u7528\u3002 Label \u5b9a\u4e49\u597d\u540e\u5176\u4ed6\u5bf9\u8c61\u53ef\u4ee5\u4f7f\u7528 Label Selector \u6765\u9009\u62e9\u4e00\u7ec4\u76f8\u540c label \u7684\u5bf9\u8c61 Label Selector \u652f\u6301\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\uff1a \u7b49\u5f0f\uff0c\u5982 app=nginx \u548c env!=production\uff1b \u96c6\u5408\uff0c\u5982 env in (production, qa)\uff1b \u591a\u4e2a label\uff08\u5b83\u4eec\u4e4b\u95f4\u662f AND \u5173\u7cfb\uff09\uff0c\u5982 app=nginx,env=test\u3002 Annotations Annotations \u662f key/value \u5f62\u5f0f\u9644\u52a0\u4e8e\u5bf9\u8c61\u7684\u6ce8\u89e3\u3002 \u4e0d\u540c\u4e8e Labels \u7528\u4e8e\u6807\u5fd7\u548c\u9009\u62e9\u5bf9\u8c61\uff0cAnnotations \u5219\u662f\u7528\u6765\u8bb0\u5f55\u4e00\u4e9b\u9644\u52a0\u4fe1\u606f\uff0c\u7528\u6765\u8f85\u52a9\u5e94\u7528\u90e8\u7f72\u3001\u5b89\u5168\u7b56\u7565\u4ee5\u53ca\u8c03\u5ea6\u7b56\u7565\u7b49\u3002 \u6bd4\u5982 deployment \u4f7f\u7528 annotations \u6765\u8bb0\u5f55 rolling update \u7684\u72b6\u6001\u3002 Spec \u548c Status Spec \u548c Status \u624d\u662f\u5bf9\u8c61\u7684\u6838\u5fc3\u3002 Spec \u662f\u7528\u6237\u7684\u671f\u671b\u72b6\u6001\uff0c\u7531\u521b\u5efa\u5bf9\u8c61\u7684\u7528\u6237\u7aef\u6765\u5b9a\u4e49\u3002 Status \u662f\u5bf9\u8c61\u7684\u5b9e\u9645\u72b6\u6001\uff0c\u7531\u5bf9\u5e94\u7684\u63a7\u5236\u5668\u6536\u96c6\u5b9e\u9645\u72b6\u6001\u5e76\u66f4\u65b0\u3002 \u4e0e TypeMeta \u548c Metadata \u7b49\u901a\u7528\u5c5e\u6027\u4e0d\u540c\uff0cSpec \u548c Status \u662f\u6bcf\u4e2a\u5bf9\u8c61\u72ec\u6709\u7684\u3002 \u5e38\u7528 Kubernetes \u5bf9\u8c61\u53ca\u5176\u5206\u7ec4","title":"\u6df1\u5165\u7406\u89e3 Kubernetes"},{"location":"2/2/4/#kubernetes","text":"","title":"\u6df1\u5165\u7406\u89e3 Kubernetes"},{"location":"2/2/4/#_1","text":"","title":"\u4e91\u8ba1\u7b97\u7684\u4f20\u7edf\u5206\u7c7b"},{"location":"2/2/4/#kubernetes_1","text":"","title":"Kubernetes \u751f\u6001\u7cfb\u7edf"},{"location":"2/2/4/#kubernetes_2","text":"","title":"Kubernetes \u8bbe\u8ba1\u7406\u5ff5"},{"location":"2/2/4/#kubernetes-master","text":"","title":"Kubernetes Master"},{"location":"2/2/4/#_2","text":"\u6838\u5fc3\u5c42 \uff1aKubernetes \u6700\u6838\u5fc3\u7684\u529f\u80fd\uff0c\u5bf9\u5916\u63d0\u4f9b API \u6784\u5efa\u9ad8\u5c42\u7684\u5e94\u7528\uff0c\u5bf9\u5185\u63d0\u4f9b\u63d2\u4ef6\u5f0f\u5e94\u7528\u6267\u884c\u73af\u5883\u3002 \u5e94\u7528\u5c42 \uff1a\u90e8\u7f72\uff08\u65e0\u72b6\u6001\u5e94\u7528\u3001\u6709\u72b6\u6001\u5e94\u7528\u3001\u6279\u5904\u7406\u4efb\u52a1\u3001\u96c6\u7fa4\u5e94\u7528\u7b49\uff09\u548c\u8def\u7531\uff08\u670d\u52a1\u53d1\u73b0\u3001DNS \u89e3\u6790\u7b49\uff09\u3002 \u7ba1\u7406\u5c42 \uff1a\u7cfb\u7edf\u5ea6\u91cf\uff08\u5982\u57fa\u7840\u8bbe\u65bd\u3001\u5bb9\u5668\u548c\u7f51\u7edc\u7684\u5ea6\u91cf\uff09\u3001\u81ea\u52a8\u5316\uff08\u5982\u81ea\u52a8\u6269\u5c55\u3001\u52a8\u6001 Provision \u7b49\uff09\u3001\u7b56\u7565\u7ba1\u7406\uff08RBAC\u3001Quota\u3001PSP\u3001NetworkPolicy \u7b49\uff09\u3002 \u63a5\u53e3\u5c42 \uff1aKubectl \u547d\u4ee4\u884c\u5de5\u5177\u3001\u5ba2\u6237\u7aef SDK \u4ee5\u53ca\u96c6\u7fa4\u8054\u90a6\u3002 \u751f\u6001\u7cfb\u7edf \uff1a\u5728\u63a5\u53e3\u5c42\u4e4b\u4e0a\u7684\u5e9e\u5927\u5bb9\u5668\u96c6\u7fa4\u7ba1\u7406\u8c03\u5ea6\u7684\u751f\u6001\u7cfb\u7edf\uff0c\u53ef\u4ee5\u5212\u5206\u4e3a\u4e24\u4e2a\u8303\u7574\uff1a Kubernetes \u5916\u90e8\uff1a\u65e5\u5fd7\u3001\u76d1\u63a7\u3001\u914d\u7f6e\u7ba1\u7406\u3001CI\u3001CD\u3001Workflow\u3001FaaS\u3001OTS \u5e94\u7528\u3001ChatOps \u7b49\uff1b Kubernetes \u5185\u90e8\uff1aCRI\u3001CNI\u3001CVI\u3001\u955c\u50cf\u4ed3\u5e93\u3001Cloud Provider\u3001\u96c6\u7fa4\u81ea\u8eab\u7684\u914d\u7f6e\u548c\u7ba1\u7406\u7b49\u3002","title":"\u5206\u5c42\u67b6\u6784"},{"location":"2/2/4/#api","text":"\u6240\u6709 API \u90fd\u5e94\u662f\u58f0\u660e\u5f0f\u7684 \u76f8\u5bf9\u4e8e\u547d\u4ee4\u5f0f\u64cd\u4f5c\uff0c\u58f0\u660e\u5f0f\u64cd\u4f5c\u5bf9\u4e8e\u91cd\u590d\u64cd\u4f5c\u7684\u6548\u679c\u662f\u7a33\u5b9a\u7684\uff0c\u8fd9\u5bf9\u4e8e\u5bb9\u6613\u51fa\u73b0\u6570\u636e\u4e22\u5931\u6216\u91cd\u590d\u7684\u5206\u5e03\u5f0f\u73af\u5883\u6765\u8bf4\u662f\u5f88\u91cd\u8981\u7684\u3002 \u58f0\u660e\u5f0f\u64cd\u4f5c\u66f4\u6613\u88ab\u7528\u6237\u4f7f\u7528\uff0c\u53ef\u4ee5\u4f7f\u7cfb\u7edf\u5411\u7528\u6237\u9690\u85cf\u5b9e\u73b0\u7684\u7ec6\u8282\uff0c\u540c\u65f6\u4e5f\u4fdd\u7559\u4e86\u7cfb\u7edf\u672a\u6765\u6301\u7eed\u4f18\u5316\u7684\u53ef\u80fd\u6027\u3002 \u6b64\u5916\uff0c\u58f0\u660e\u5f0f\u7684 API \u8fd8\u9690\u542b\u4e86\u6240\u6709\u7684 API \u5bf9\u8c61\u90fd\u662f\u540d\u8bcd\u6027\u8d28\u7684\uff0c\u4f8b\u5982 Service\u3001Volume \u8fd9\u4e9b API \u90fd\u662f\u540d\u8bcd\uff0c\u8fd9\u4e9b\u540d\u8bcd\u63cf\u8ff0\u4e86\u7528\u6237\u6240\u671f\u671b\u5f97\u5230\u7684\u4e00\u4e2a\u76ee\u6807\u5bf9\u8c61\u3002 API \u5bf9\u8c61\u662f\u5f7c\u6b64\u4e92\u8865\u800c\u4e14\u53ef\u7ec4\u5408\u7684 \u8fd9\u5b9e\u9645\u4e0a\u9f13\u52b1 API \u5bf9\u8c61\u5c3d\u91cf\u5b9e\u73b0\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u65f6\u7684\u8981\u6c42\uff0c\u5373\u201c\u9ad8\u5185\u805a\uff0c\u677e\u8026\u5408\u201d\uff0c\u5bf9\u4e1a\u52a1\u76f8\u5173\u7684\u6982\u5ff5\u6709\u4e00\u4e2a\u5408\u9002\u7684\u5206\u89e3\uff0c\u63d0\u9ad8\u5206\u89e3\u51fa\u6765\u7684\u5bf9\u8c61\u7684\u53ef\u91cd\u7528\u6027\u3002 \u9ad8\u5c42 API \u4ee5\u64cd\u4f5c\u610f\u56fe\u4e3a\u57fa\u7840\u8bbe\u8ba1 \u5982\u4f55\u80fd\u591f\u8bbe\u8ba1\u597d API\uff0c\u8ddf\u5982\u4f55\u80fd\u7528\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u6cd5\u8bbe\u8ba1\u597d\u5e94\u7528\u7cfb\u7edf\u6709\u76f8\u901a\u7684\u5730\u65b9\uff0c\u9ad8\u5c42\u8bbe\u8ba1\u4e00\u5b9a\u662f\u4ece\u4e1a\u52a1\u51fa\u53d1\uff0c\u800c\u4e0d\u662f\u8fc7\u65e9\u7684\u4ece\u6280\u672f\u5b9e\u73b0\u51fa\u53d1\u3002 \u56e0\u6b64\uff0c\u9488\u5bf9 Kubernetes \u7684\u9ad8\u5c42 API \u8bbe\u8ba1\uff0c\u4e00\u5b9a\u662f\u4ee5 Kubernetes \u7684\u4e1a\u52a1\u4e3a\u57fa\u7840\u51fa\u53d1\uff0c\u4e5f\u5c31\u662f\u4ee5\u7cfb\u7edf\u8c03\u5ea6\u7ba1\u7406\u5bb9\u5668\u7684\u64cd\u4f5c\u610f\u56fe\u4e3a\u57fa\u7840\u8bbe\u8ba1\u3002 \u4f4e\u5c42 API \u6839\u636e\u9ad8\u5c42 API \u7684\u63a7\u5236\u9700\u8981\u8bbe\u8ba1 \u8bbe\u8ba1\u5b9e\u73b0\u4f4e\u5c42 API \u7684\u76ee\u7684\uff0c\u662f\u4e3a\u4e86\u88ab\u9ad8\u5c42 API \u4f7f\u7528\uff0c\u8003\u8651\u51cf\u5c11\u5197\u4f59\u3001\u63d0\u9ad8\u91cd\u7528\u6027\u7684\u76ee\u7684\uff0c\u4f4e\u5c42 API\u7684\u8bbe\u8ba1\u4e5f\u8981\u4ee5\u9700\u6c42\u4e3a\u57fa\u7840\uff0c\u8981\u5c3d\u91cf\u62b5\u6297\u53d7\u6280\u672f\u5b9e\u73b0\u5f71\u54cd\u7684\u8bf1\u60d1\u3002 \u5c3d\u91cf\u907f\u514d\u7b80\u5355\u5c01\u88c5\uff0c\u4e0d\u8981\u6709\u5728\u5916\u90e8 API \u65e0\u6cd5\u663e\u5f0f\u77e5\u9053\u7684\u5185\u90e8\u9690\u85cf\u7684\u673a\u5236 \u7b80\u5355\u7684\u5c01\u88c5\uff0c\u5b9e\u9645\u6ca1\u6709\u63d0\u4f9b\u65b0\u7684\u529f\u80fd\uff0c\u53cd\u800c\u589e\u52a0\u4e86\u5bf9\u6240\u5c01\u88c5 API \u7684\u4f9d\u8d56\u6027\u3002 \u4f8b\u5982 StatefulSet \u548c ReplicaSet\uff0c\u672c\u6765\u5c31\u662f\u4e24\u79cd Pod \u96c6\u5408\uff0c\u90a3\u4e48 Kubernetes \u5c31\u7528\u4e0d\u540c API \u5bf9\u8c61\u6765\u5b9a\u4e49\u5b83\u4eec\uff0c\u800c\u4e0d\u4f1a\u8bf4\u53ea\u7528\u540c\u4e00\u4e2a ReplicaSet\uff0c\u5185\u90e8\u901a\u8fc7\u7279\u6b8a\u7684\u7b97\u6cd5\u518d\u6765\u533a\u5206\u8fd9\u4e2a ReplicaSet \u662f\u6709\u72b6\u6001\u7684\u8fd8\u662f\u65e0\u72b6\u6001\u3002 API \u64cd\u4f5c\u590d\u6742\u5ea6\u4e0e\u5bf9\u8c61\u6570\u91cf\u6210\u6b63\u6bd4 API \u7684\u64cd\u4f5c\u590d\u6742\u5ea6\u4e0d\u80fd\u8d85\u8fc7 O(N)\uff0c\u5426\u5219\u7cfb\u7edf\u5c31\u4e0d\u5177\u5907\u6c34\u5e73\u4f38\u7f29\u6027\u4e86\u3002 API \u5bf9\u8c61\u72b6\u6001\u4e0d\u80fd\u4f9d\u8d56\u4e8e\u7f51\u7edc\u8fde\u63a5\u72b6\u6001 \u7531\u4e8e\u4f17\u6240\u5468\u77e5\uff0c\u5728\u5206\u5e03\u5f0f\u73af\u5883\u4e0b\uff0c\u7f51\u7edc\u8fde\u63a5\u65ad\u5f00\u662f\u7ecf\u5e38\u53d1\u751f\u7684\u4e8b\u60c5\uff0c\u56e0\u6b64\u8981\u4fdd\u8bc1 API \u5bf9\u8c61\u72b6\u6001\u80fd\u5e94\u5bf9\u7f51\u7edc\u7684\u4e0d\u7a33\u5b9a\uff0cAPI \u5bf9\u8c61\u7684\u72b6\u6001\u5c31\u4e0d\u80fd\u4f9d\u8d56\u4e8e\u7f51\u7edc\u8fde\u63a5\u72b6\u6001\u3002 \u5c3d\u91cf\u907f\u514d\u8ba9\u64cd\u4f5c\u673a\u5236\u4f9d\u8d56\u4e8e\u5168\u5c40\u72b6\u6001 \u56e0\u4e3a\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u8981\u4fdd\u8bc1\u5168\u5c40\u72b6\u6001\u7684\u540c\u6b65\u662f\u975e\u5e38\u56f0\u96be\u7684\u3002","title":"API \u8bbe\u8ba1\u539f\u5219"},{"location":"2/2/4/#kubernetes_3","text":"","title":"Kubernetes \u5982\u4f55\u901a\u8fc7\u5bf9\u8c61\u7684\u7ec4\u5408\u5b8c\u6210\u4e1a\u52a1\u63cf\u8ff0"},{"location":"2/2/4/#_3","text":"\u53ea\u6709 APIServer \u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee etcd \u5b58\u50a8\uff0c\u5176\u4ed6\u670d\u52a1\u5fc5\u987b\u901a\u8fc7 KubernetesAPI \u6765\u8bbf\u95ee\u96c6\u7fa4\u72b6\u6001\uff1b \u5355\u8282\u70b9\u6545\u969c\u4e0d\u5e94\u8be5\u5f71\u54cd\u96c6\u7fa4\u7684\u72b6\u6001\uff1b \u5728\u6ca1\u6709\u65b0\u8bf7\u6c42\u7684\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u7ec4\u4ef6\u5e94\u8be5\u5728\u6545\u969c\u6062\u590d\u540e\u7ee7\u7eed\u6267\u884c\u4e0a\u6b21\u6700\u540e\u6536\u5230\u7684\u8bf7\u6c42\uff08\u6bd4\u5982\u7f51\u7edc\u5206\u533a\u6216\u670d\u52a1\u91cd\u542f\u7b49\uff09\uff1b \u6240\u6709\u7ec4\u4ef6\u90fd\u5e94\u8be5\u5728\u5185\u5b58\u4e2d\u4fdd\u6301\u6240\u9700\u8981\u7684\u72b6\u6001\uff0cAPIServer \u5c06\u72b6\u6001\u5199\u5165 etcd \u5b58\u50a8\uff0c\u800c\u5176\u4ed6\u7ec4\u4ef6\u5219\u901a\u8fc7 APIServer \u66f4\u65b0\u5e76\u76d1\u542c\u6240\u6709\u7684\u53d8\u5316\uff1b \u4f18\u5148\u4f7f\u7528\u4e8b\u4ef6\u76d1\u542c\u800c\u4e0d\u662f\u8f6e\u8be2\u3002","title":"\u67b6\u6784\u8bbe\u8ba1\u539f\u5219"},{"location":"2/2/4/#bootstrapping","text":"Self-hosting \u662f\u76ee\u6807\u3002 \u51cf\u5c11\u4f9d\u8d56\uff0c\u7279\u522b\u662f\u7a33\u6001\u8fd0\u884c\u7684\u4f9d\u8d56\u3002 \u901a\u8fc7\u5206\u5c42\u7684\u539f\u5219\u7ba1\u7406\u4f9d\u8d56\u3002 \u5faa\u73af\u4f9d\u8d56\u95ee\u9898\u7684\u539f\u5219\uff1a \u540c\u65f6\u8fd8\u63a5\u53d7\u5176\u4ed6\u65b9\u5f0f\u7684\u6570\u636e\u8f93\u5165\uff08\u6bd4\u5982\u672c\u5730\u6587\u4ef6\u7b49\uff09\uff0c\u8fd9\u6837\u5728\u5176\u4ed6\u670d\u52a1\u4e0d\u53ef\u7528\u65f6\u8fd8\u53ef\u4ee5\u624b\u52a8\u914d\u7f6e\u5f15\u5bfc\u670d\u52a1\uff1b \u72b6\u6001\u5e94\u8be5\u662f\u53ef\u6062\u590d\u6216\u53ef\u91cd\u65b0\u53d1\u73b0\u7684\uff1b \u652f\u6301\u7b80\u5355\u7684\u542f\u52a8\u4e34\u65f6\u5b9e\u4f8b\u6765\u521b\u5efa\u7a33\u6001\u8fd0\u884c\u6240\u9700\u8981\u7684\u72b6\u6001\uff0c\u4f7f\u7528\u5206\u5e03\u5f0f\u9501\u6216\u6587\u4ef6\u9501\u7b49\u6765\u534f\u8c03\u4e0d\u540c\u72b6\u6001\u7684\u5207\u6362\uff08\u901a\u5e38\u79f0\u4e3a pivoting \u6280\u672f\uff09\uff1b \u81ea\u52a8\u91cd\u542f\u5f02\u5e38\u9000\u51fa\u7684\u670d\u52a1\uff0c\u6bd4\u5982\u526f\u672c\u6216\u8005\u8fdb\u7a0b\u7ba1\u7406\u5668\u7b49\u3002","title":"\u5f15\u5bfc\uff08Bootstrapping\uff09\u539f\u5219"},{"location":"2/2/4/#kubelet","text":"ps -ef|grep kubelet root 580 1 4 12:43 ? 00:25:37 /usr/local/bin/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf --config=/var/lib/kubelet/config.yaml --cgroup-driver=systemd --network-plugin=cni --pod-infra-container-image=registry.cn-beijing.aliyuncs.com/kubesphereio/pause:3.6 --node-ip=192.168.3.150 --hostname-override=cjx-0004 root 1824 1799 7 12:43 ? 00:38:03 kube-apiserver --advertise-address=192.168.3.150 --allow-privileged=true --audit-log-maxage=30 --audit-log-maxbackup=10 --audit-log-maxsize=100 --authorization-mode=Node,RBAC --bind-address=0.0.0.0 --client-ca-file=/etc/kubernetes/pki/ca.crt --enable-admission-plugins=NodeRestriction --enable-bootstrap-token-auth=true --etcd-cafile=/etc/ssl/etcd/ssl/ca.pem --etcd-certfile=/etc/ssl/etcd/ssl/node-cjx-0004.pem --etcd-keyfile=/etc/ssl/etcd/ssl/node-cjx-0004-key.pem --etcd-servers=https://192.168.3.150:2379 --feature-gates=RotateKubeletServerCertificate=true,TTLAfterFinished=true,ExpandCSIVolumes=true,CSIStorageCapacity=true --kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt --kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname --proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt --proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key --requestheader-allowed-names=front-proxy-client --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt --requestheader-extra-headers-prefix=X-Remote-Extra- --requestheader-group-headers=X-Remote-Group --requestheader-username-headers=X-Remote-User --secure-port=6443 --service-account-issuer=https://kubernetes.default.svc.cluster.local --service-account-key-file=/etc/kubernetes/pki/sa.pub --service-account-signing-key-file=/etc/kubernetes/pki/sa.key --service-cluster-ip-range=10.233.0.0/18 --tls-cert-file=/etc/kubernetes/pki/apiserver.crt --tls-private-key-file=/etc/kubernetes/pki/apiserver.key cjx 55386 48634 0 21:43 pts/0 00:00:00 grep --color=auto kubelet cat /var/lib/kubelet/config.yaml ...... staticPodPath: /etc/kubernetes/manifests ......","title":"\u67e5\u770b kubelet \u914d\u7f6e"},{"location":"2/2/4/#41","text":"\u7528 Kubeadm \u5b89\u88c5 Kubernetes \u96c6\u7fa4\u3002","title":"\u8bfe\u540e\u7ec3\u4e60 4.1"},{"location":"2/2/4/#api_1","text":"API \u5bf9\u8c61\u662f Kubernetes \u96c6\u7fa4\u4e2d\u7684\u7ba1\u7406\u64cd\u4f5c\u5355\u5143\u3002 Kubernetes \u96c6\u7fa4\u7cfb\u7edf\u6bcf\u652f\u6301\u4e00\u9879\u65b0\u529f\u80fd\uff0c\u5f15\u5165\u4e00\u9879\u65b0\u6280\u672f\uff0c\u4e00\u5b9a\u4f1a\u65b0\u5f15\u5165\u5bf9\u5e94\u7684 API \u5bf9\u8c61\uff0c\u652f\u6301\u5bf9\u8be5\u529f\u80fd\u7684\u7ba1\u7406\u64cd\u4f5c\u3002 \u6bcf\u4e2a API \u5bf9\u8c61\u90fd\u6709\u56db\u5927\u7c7b\u5c5e\u6027\uff1a TypeMeta MetaData Spec Status","title":"\u6838\u5fc3\u6280\u672f\u6982\u5ff5\u548c API \u5bf9\u8c61"},{"location":"2/2/4/#typemeta","text":"Kubernetes\u5bf9\u8c61\u7684\u6700\u57fa\u672c\u5b9a\u4e49\uff0c\u5b83\u901a\u8fc7\u5f15\u5165GKV\uff08Group\uff0cKind\uff0cVersion\uff09\u6a21\u578b\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5bf9\u8c61\u7684\u7c7b\u578b\u3002 Group Kubernetes \u5b9a\u4e49\u4e86\u975e\u5e38\u591a\u7684\u5bf9\u8c61\uff0c\u5982\u4f55\u5c06\u8fd9\u4e9b\u5bf9\u8c61\u8fdb\u884c\u5f52\u7c7b\u662f\u4e00\u95e8\u5b66\u95ee\uff0c \u5c06\u5bf9\u8c61\u4f9d\u636e\u5176\u529f\u80fd\u8303\u56f4\u5f52\u5165\u4e0d\u540c\u7684\u5206\u7ec4\uff0c\u6bd4\u5982\u628a\u652f\u6491\u6700\u57fa\u672c\u529f\u80fd\u7684\u5bf9\u8c61\u5f52\u5165 core \u7ec4\uff0c\u628a\u4e0e\u5e94\u7528\u90e8\u7f72\u6709\u5173\u7684\u5bf9\u8c61\u5f52\u5165 apps \u7ec4 \uff0c\u4f1a\u4f7f\u8fd9\u4e9b\u5bf9\u8c61\u7684\u53ef\u7ef4\u62a4\u6027\u548c\u53ef\u7406\u89e3\u6027\u66f4\u9ad8\u3002 Kind \u5b9a\u4e49\u4e00\u4e2a\u5bf9\u8c61\u7684\u57fa\u672c\u7c7b\u578b\uff0c\u6bd4\u5982 Node\u3001Pod\u3001Deployment \u7b49\u3002 Version \u793e\u533a\u6bcf\u4e2a\u5b63\u5ea6\u4f1a\u63a8\u51fa\u4e00\u4e2a Kubernetes \u7248\u672c\uff0c\u968f\u7740 Kubernetes \u7248\u672c\u7684\u6f14\u8fdb\uff0c\u5bf9\u8c61\u4ece\u521b\u5efa\u4e4b\u521d\u5230\u80fd\u591f\u5b8c\u5168\u751f\u4ea7\u5316\u5c31\u7eea\u7684\u7248\u672c\u662f\u4e0d\u65ad\u53d8\u5316\u7684\u3002\u4e0e\u8f6f\u4ef6\u7248\u672c\u7c7b\u4f3c\uff0c\u901a\u5e38\u793e\u533a\u63d0\u51fa\u4e00\u4e2a\u6a21\u578b\u5b9a\u4e49\u4ee5\u540e\uff0c\u968f\u7740\u8be5\u5bf9\u8c61\u4e0d\u65ad\u6210\u719f\uff0c\u5176\u7248\u672c\u53ef\u80fd\u4f1a\u4ece v1alpha1 \u5230 v1alpha2\uff0c\u6216\u8005\u5230 v1beta1\uff0c\u6700\u7ec8\u53d8\u6210\u751f\u4ea7\u5c31\u7eea\u7248\u672c v1\u3002","title":"TypeMeta"},{"location":"2/2/4/#metadata","text":"Metadata \u4e2d\u6709\u4e24\u4e2a\u6700\u91cd\u8981\u7684\u5c5e\u6027\uff1a Namespace\u548cName \uff0c\u5206\u522b\u5b9a\u4e49\u4e86\u5bf9\u8c61\u7684Namespace \u5f52\u5c5e\u53ca\u540d\u5b57\uff0c \u8fd9\u4e24\u4e2a\u5c5e\u6027\u552f\u4e00\u5b9a\u4e49\u4e86\u67d0\u4e2a\u5bf9\u8c61\u5b9e\u4f8b\u3002 Label \u987e\u540d\u601d\u4e49\u5c31\u662f\u7ed9\u5bf9\u8c61\u6253\u6807\u7b7e\uff0c\u4e00\u4e2a\u5bf9\u8c61\u53ef\u4ee5\u6709\u4efb\u610f\u5bf9\u6807\u7b7e\uff0c\u5176\u5b58\u5728\u5f62\u5f0f\u662f\u952e\u503c\u5bf9\u3002Label \u5b9a\u4e49\u4e86\u5bf9\u8c61\u7684\u53ef\u8bc6\u522b\u5c5e\u6027\uff0cKubernetes API \u652f\u6301\u4ee5 Label \u4f5c\u4e3a\u8fc7\u6ee4\u6761\u4ef6\u67e5\u8be2\u5bf9\u8c61\u3002 Annotation Annotation \u4e0e Label \u4e00\u6837\u7528\u952e\u503c\u5bf9\u6765\u5b9a\u4e49\uff0c\u4f46 Annotation \u662f\u4f5c\u4e3a\u5c5e\u6027\u6269\u5c55\uff0c\u66f4\u591a\u9762\u5411\u4e8e\u7cfb\u7edf\u7ba1\u7406\u5458\u548c\u5f00\u53d1\u4eba\u5458\uff0c\u56e0\u6b64\u9700\u8981\u50cf\u5176\u4ed6\u5c5e\u6027\u4e00\u6837\u505a\u5408\u7406\u5f52\u7c7b\u3002\uff08k get node -oyaml\uff0c\u53c2\u8003 node \u8d44\u6e90\u7684\u8bbe\u7f6e\uff09 Finalizer Finalizer \u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u8d44\u6e90\u9501\uff0cKubernetes \u5728\u63a5\u6536\u67d0\u5bf9\u8c61\u7684\u5220\u9664\u8bf7\u6c42\u65f6\uff0c\u4f1a\u68c0\u67e5 Finalizer \u662f\u5426\u4e3a\u7a7a\uff0c\u5982\u679c\u4e0d\u4e3a\u7a7a\u5219\u53ea\u5bf9\u5176\u505a\u903b\u8f91\u5220\u9664\uff0c\u5373\u53ea\u4f1a\u66f4\u65b0\u5bf9\u8c61\u4e2d\u7684metadata.deletionTimestamp \u5b57\u6bb5\u3002 ResourceVersion ResourceVersion \u53ef\u4ee5\u88ab\u770b\u4f5c\u4e00\u79cd\u4e50\u89c2\u9501\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u5728\u4efb\u610f\u65f6\u523b\u90fd\u6709\u5176ResourceVersion\uff0c\u5f53 Kubernetes \u5bf9\u8c61\u88ab\u5ba2\u6237\u7aef\u8bfb\u53d6\u4ee5\u540e\uff0cResourceVersion\u4fe1\u606f\u4e5f\u88ab\u4e00\u5e76\u8bfb\u53d6\u3002\u6b64\u673a\u5236\u786e\u4fdd\u4e86\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u4efb\u610f\u591a\u7ebf\u7a0b\u80fd\u591f\u65e0\u9501\u5e76\u53d1\u8bbf\u95ee\u5bf9\u8c61\uff0c\u6781\u5927\u63d0\u5347\u4e86\u7cfb\u7edf\u7684\u6574\u4f53\u6548\u7387\u3002","title":"Metadata"},{"location":"2/2/4/#label","text":"\u56fe\u7247\u6765\u6e90 Label \u662f\u8bc6\u522b Kubernetes \u5bf9\u8c61\u7684\u6807\u7b7e\uff0c\u4ee5 key/value \u7684\u65b9\u5f0f\u9644\u52a0\u5230\u5bf9\u8c61\u4e0a\u3002 key \u6700\u957f\u4e0d\u80fd\u8d85\u8fc7 63 \u5b57\u8282\uff0cvalue \u53ef\u4ee5\u4e3a\u7a7a\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e0d\u8d85\u8fc7 253 \u5b57\u8282\u7684\u5b57\u7b26\u4e32\u3002 Label \u4e0d\u63d0\u4f9b\u552f\u4e00\u6027\uff0c\u5e76\u4e14\u5b9e\u9645\u4e0a\u7ecf\u5e38\u662f\u5f88\u591a\u5bf9\u8c61\uff08\u5982 Pods\uff09\u90fd\u4f7f\u7528\u76f8\u540c\u7684 label \u6765\u6807\u5fd7\u5177\u4f53\u7684\u5e94\u7528\u3002 Label \u5b9a\u4e49\u597d\u540e\u5176\u4ed6\u5bf9\u8c61\u53ef\u4ee5\u4f7f\u7528 Label Selector \u6765\u9009\u62e9\u4e00\u7ec4\u76f8\u540c label \u7684\u5bf9\u8c61 Label Selector \u652f\u6301\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\uff1a \u7b49\u5f0f\uff0c\u5982 app=nginx \u548c env!=production\uff1b \u96c6\u5408\uff0c\u5982 env in (production, qa)\uff1b \u591a\u4e2a label\uff08\u5b83\u4eec\u4e4b\u95f4\u662f AND \u5173\u7cfb\uff09\uff0c\u5982 app=nginx,env=test\u3002","title":"Label"},{"location":"2/2/4/#annotations","text":"Annotations \u662f key/value \u5f62\u5f0f\u9644\u52a0\u4e8e\u5bf9\u8c61\u7684\u6ce8\u89e3\u3002 \u4e0d\u540c\u4e8e Labels \u7528\u4e8e\u6807\u5fd7\u548c\u9009\u62e9\u5bf9\u8c61\uff0cAnnotations \u5219\u662f\u7528\u6765\u8bb0\u5f55\u4e00\u4e9b\u9644\u52a0\u4fe1\u606f\uff0c\u7528\u6765\u8f85\u52a9\u5e94\u7528\u90e8\u7f72\u3001\u5b89\u5168\u7b56\u7565\u4ee5\u53ca\u8c03\u5ea6\u7b56\u7565\u7b49\u3002 \u6bd4\u5982 deployment \u4f7f\u7528 annotations \u6765\u8bb0\u5f55 rolling update \u7684\u72b6\u6001\u3002","title":"Annotations"},{"location":"2/2/4/#spec-status","text":"Spec \u548c Status \u624d\u662f\u5bf9\u8c61\u7684\u6838\u5fc3\u3002 Spec \u662f\u7528\u6237\u7684\u671f\u671b\u72b6\u6001\uff0c\u7531\u521b\u5efa\u5bf9\u8c61\u7684\u7528\u6237\u7aef\u6765\u5b9a\u4e49\u3002 Status \u662f\u5bf9\u8c61\u7684\u5b9e\u9645\u72b6\u6001\uff0c\u7531\u5bf9\u5e94\u7684\u63a7\u5236\u5668\u6536\u96c6\u5b9e\u9645\u72b6\u6001\u5e76\u66f4\u65b0\u3002 \u4e0e TypeMeta \u548c Metadata \u7b49\u901a\u7528\u5c5e\u6027\u4e0d\u540c\uff0cSpec \u548c Status \u662f\u6bcf\u4e2a\u5bf9\u8c61\u72ec\u6709\u7684\u3002","title":"Spec \u548c Status"},{"location":"2/2/4/#kubernetes_4","text":"","title":"\u5e38\u7528 Kubernetes \u5bf9\u8c61\u53ca\u5176\u5206\u7ec4"},{"location":"2/2/5/","text":"\u6838\u5fc3\u5bf9\u8c61\u6982\u89c8 Node Node \u662f Pod \u771f\u6b63\u8fd0\u884c\u7684\u4e3b\u673a\uff0c\u53ef\u4ee5\u7269\u7406\u673a\uff0c\u4e5f\u53ef\u4ee5\u662f\u865a\u62df\u673a\u3002 \u4e3a\u4e86\u7ba1\u7406 Pod\uff0c\u6bcf\u4e2a Node \u8282\u70b9\u4e0a\u81f3\u5c11\u8981\u8fd0\u884c container runtime\uff08\u6bd4\u5982 Docker \u6216\u8005 Rkt\uff09\u3001Kubelet \u548c Kube-proxy \u670d\u52a1\u3002 Namespace Namespace \u662f\u5bf9\u4e00\u7ec4\u8d44\u6e90\u548c\u5bf9\u8c61\u7684\u62bd\u8c61\u96c6\u5408 \uff0c\u6bd4\u5982\u53ef\u4ee5\u7528\u6765\u5c06\u7cfb\u7edf\u5185\u90e8\u7684\u5bf9\u8c61\u5212\u5206\u4e3a\u4e0d\u540c\u7684\u9879\u76ee\u7ec4\u6216\u7528\u6237\u7ec4\u3002 \u5e38\u89c1\u7684 pods, services, replication controllers \u548c deployments \u7b49\u90fd\u662f\u5c5e\u4e8e\u67d0\u4e00\u4e2a Namespace \u7684\uff08\u9ed8\u8ba4\u662f default\uff09\uff0c\u800c Node, persistentVolumes \u7b49\u5219\u4e0d\u5c5e\u4e8e\u4efb\u4f55 Namespace\u3002 \u4ec0\u4e48\u662f Pod Pod \u662f\u4e00\u7ec4\u7d27\u5bc6\u5173\u8054\u7684\u5bb9\u5668\u96c6\u5408\uff0c\u5b83\u4eec\u5171\u4eab PID\u3001IPC\u3001Network \u548c UTS namespace\uff0c\u662f Kubernetes \u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d\u3002 Pod \u7684\u8bbe\u8ba1\u7406\u5ff5\u662f\u652f\u6301\u591a\u4e2a\u5bb9\u5668\u5728\u4e00\u4e2a Pod \u4e2d\u5171\u4eab\u7f51\u7edc\u548c\u6587\u4ef6\u7cfb\u7edf\uff0c\u53ef\u4ee5\u901a\u8fc7\u8fdb\u7a0b\u95f4\u901a\u4fe1\u548c\u6587\u4ef6\u5171\u4eab\u8fd9\u79cd\u7b80\u5355\u9ad8\u6548\u7684\u65b9\u5f0f\u7ec4\u5408\u5b8c\u6210\u670d\u52a1\u3002 \u540c\u4e00\u4e2a Pod \u4e2d\u7684\u4e0d\u540c\u5bb9\u5668\u53ef\u5171\u4eab\u8d44\u6e90\uff1a \u5171\u4eab\u7f51\u7edc Namespace\uff1b \u53ef\u901a\u8fc7\u6302\u8f7d\u5b58\u50a8\u5377\u5171\u4eab\u5b58\u50a8\uff1b \u5171\u4eab Security Context\u3002 apiVersion: v1 kind: Pod metadata: name: hello spec: containers: - image: nginx:1.15 name: nginx \u5982\u4f55\u901a\u8fc7 Pod \u5bf9\u8c61\u5b9a\u4e49\u652f\u6491\u5e94\u7528\u8fd0\u884c \u914d\u7f6e\u4fe1\u606f\u6765\u6e90 \u73af\u5883\u53d8\u91cf \u5b58\u50a8\u5377 \u901a\u8fc7\u5b58\u50a8\u5377\u53ef\u4ee5\u5c06\u5916\u6302\u5b58\u50a8\u6302\u8f7d\u5230 Pod \u5185\u90e8\u4f7f\u7528\u3002 \u5b58\u50a8\u5377\u5b9a\u4e49\u5305\u62ec\u4e24\u4e2a\u90e8\u5206: Volume \u548c VolumeMounts\u3002 Volume\uff1a\u5b9a\u4e49 Pod \u53ef\u4ee5\u4f7f\u7528\u7684\u5b58\u50a8\u5377\u6765\u6e90\uff1b VolumeMounts\uff1a\u5b9a\u4e49\u5b58\u50a8\u5377\u5982\u4f55 Mount \u5230\u5bb9\u5668\u5185\u90e8\u3002 apiVersion: v1 kind: Pod metadata: name: hello-volume spec: containers: - image: nginx:1.15 name: nginx volumeMounts: - name: data mountPath: /data volumes: - name: data emptyDir: {} Pod \u7f51\u7edc Pod\u7684\u591a\u4e2a\u5bb9\u5668\u662f\u5171\u4eab\u7f51\u7edc Namespace \u7684\uff0c\u8fd9\u610f\u5473\u7740\uff1a \u540c\u4e00\u4e2a Pod \u4e2d\u7684\u4e0d\u540c\u5bb9\u5668\u53ef\u4ee5\u5f7c\u6b64\u901a\u8fc7 Loopback \u5730\u5740\u8bbf\u95ee\uff1a \u5728\u7b2c\u4e00\u4e2a\u5bb9\u5668\u4e2d\u8d77\u4e86\u4e00\u4e2a\u670d\u52a1 http://127.0.0.1 \u3002 \u5728\u7b2c\u4e8c\u4e2a\u5bb9\u5668\u5185\uff0c\u662f\u53ef\u4ee5\u901a\u8fc7 httpGet http://172.0.0.1 \u8bbf\u95ee\u5230\u8be5\u5730\u5740\u7684\u3002 \u8fd9\u79cd\u65b9\u6cd5\u5e38\u7528\u4e8e\u4e0d\u540c\u5bb9\u5668\u7684\u4e92\u76f8\u534f\u4f5c\u3002 \u8d44\u6e90\u9650\u5236 Kubernetes \u901a\u8fc7 Cgroups \u63d0\u4f9b\u5bb9\u5668\u8d44\u6e90\u7ba1\u7406\u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u9650\u5236\u6bcf\u4e2a\u5bb9\u5668\u7684CPU \u548c\u5185\u5b58\u4f7f\u7528\uff0c\u6bd4\u5982\u5bf9\u4e8e\u521a\u624d\u521b\u5efa\u7684 deployment\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u9650\u5236nginx \u5bb9\u5668\u6700\u591a\u53ea\u7528 50% \u7684 CPU \u548c 128MB \u7684\u5185\u5b58\uff1a $ kubectl set resources deployment nginx-app -c=nginx --limits=cpu=500m,memory=128Mi deployment \"nginx\" resource requirements updated \u7b49\u540c\u4e8e\u5728\u6bcf\u4e2a Pod \u4e2d\u8bbe\u7f6e resources limits apiVersion: v1 kind: Pod metadata: labels: app: nginx name: nginx spec: containers: - image: nginx name: nginx resources: limits: cpu: \"500m\" memory: \"128Mi\" \u5065\u5eb7\u68c0\u67e5 Kubernetes \u4f5c\u4e3a\u4e00\u4e2a\u9762\u5411\u5e94\u7528\u7684\u96c6\u7fa4\u7ba1\u7406\u5de5\u5177\uff0c\u9700\u8981\u786e\u4fdd\u5bb9\u5668\u5728\u90e8\u7f72\u540e\u786e\u5b9e\u5904\u5728\u6b63\u5e38\u7684\u8fd0\u884c\u72b6\u6001\u3002 \u542f\u52a8 centos pod: k apply -f 6-yamls/centos-readiness.yaml k get pod centos-578b69b65f-2cpmm -oyaml spec: containers: - command: - tail - -f - /dev/null image: centos imagePullPolicy: Always name: centos readinessProbe: exec: command: - cat - /tmp/healthy failureThreshold: 3 initialDelaySeconds: 5 periodSeconds: 5 successThreshold: 1 timeoutSeconds: 1 \u63a2\u9488\u7c7b\u578b\uff1a LivenessProbe \u63a2\u6d4b\u5e94\u7528\u662f\u5426\u5904\u4e8e\u5065\u5eb7\u72b6\u6001\uff0c\u5982\u679c\u4e0d\u5065\u5eb7\u5219\u5220\u9664\u5e76\u91cd\u65b0\u521b\u5efa\u5bb9\u5668\u3002 ReadinessProbe \u63a2\u6d4b\u5e94\u7528\u662f\u5426\u5c31\u7eea\u5e76\u4e14\u5904\u4e8e\u6b63\u5e38\u670d\u52a1\u72b6\u6001\uff0c\u5982\u679c\u4e0d\u6b63\u5e38\u5219\u4e0d\u4f1a\u63a5\u6536\u6765\u81ea Kubernetes Service \u7684\u6d41\u91cf\u3002 NAME READY STATUS RESTARTS AGE centos-578b69b65f-2cpmm 0/1 Running 0 100s failureThreshold: \u51fa\u591a\u5c11\u6b21\u9519\u8bef STATUS \u6539\u4e3a Faile initialDelaySeconds: \u7b49\u591a\u4e45\uff08\u9ed8\u8ba4\u5355\u4f4d\u79d2\uff09\u5f00\u59cb\u6267\u884c periodSeconds: \u6bcf\u6b21\u51fa\u9519\u95f4\u9694\u65f6\u95f4 successThreshold: timeoutSeconds: \u8d85\u65f6\u65f6\u95f4 StartupProbe \u63a2\u6d4b\u5e94\u7528\u662f\u5426\u542f\u52a8\u5b8c\u6210\uff0c\u5982\u679c\u5728 failureThreshold*periodSeconds \u5468\u671f\u5185\u672a\u5c31\u7eea\uff0c\u5219\u4f1a\u5e94\u7528\u8fdb\u7a0b\u4f1a\u88ab\u91cd\u542f\u3002 \u63a2\u6d3b\u65b9\u5f0f\uff1a Exec TCP socket HTTP \u5065\u5eb7\u68c0\u67e5 spec apiVersion: extensions/v1beta1 kind: Deployment metadata: labels: app: nginx name: nginx-default spec: replicas: 3 selector: matchLabels: app: nginx template: metadata: labels: app: nginx spec: containers: - image: nginx imagePullPolicy: Always name: http resources: {} terminationMessagePath:/dev/termination-log terminationMessagePolicy: File resources: limits: cpu: \"500m\" memory: \"128Mi\" livenessProbe: httpGet: path: / port: 80 initialDelaySeconds: 15 timeoutSeconds: 1 readinessProbe: httpGet: path: /ping port: 80 initialDelaySeconds: 5 timeoutSeconds: 1 ConfigMap ConfigMap \u7528\u6765\u5c06\u975e\u673a\u5bc6\u6027\u7684\u6570\u636e\u4fdd\u5b58\u5230\u952e\u503c\u5bf9\u4e2d\u3002 \u4f7f\u7528\u65f6\uff0c Pods \u53ef\u4ee5\u5c06\u5176\u7528\u4f5c\u73af\u5883\u53d8\u91cf\u3001\u547d\u4ee4\u884c\u53c2\u6570\u6216\u8005\u5b58\u50a8\u5377\u4e2d\u7684\u914d\u7f6e\u6587\u4ef6\u3002 ConfigMap \u5c06\u73af\u5883\u914d\u7f6e\u4fe1\u606f\u548c \u5bb9\u5668\u955c\u50cf\u89e3\u8026\uff0c\u4fbf\u4e8e\u5e94\u7528\u914d\u7f6e\u7684\u4fee\u6539\u3002 \u5bc6\u94a5\u5bf9\u8c61\uff08Secret\uff09 Secret \u662f\u7528\u6765\u4fdd\u5b58\u548c\u4f20\u9012\u5bc6\u7801\u3001\u5bc6\u94a5\u3001\u8ba4\u8bc1\u51ed\u8bc1\u8fd9\u4e9b\u654f\u611f\u4fe1\u606f\u7684\u5bf9\u8c61\u3002 \u4f7f\u7528 Secret \u7684\u597d\u5904\u662f\u53ef\u4ee5\u907f\u514d\u628a\u654f\u611f\u4fe1\u606f\u660e\u6587\u5199\u5728\u914d\u7f6e\u6587\u4ef6\u91cc\u3002 Kubernetes \u96c6\u7fa4\u4e2d\u914d\u7f6e\u548c\u4f7f\u7528\u670d\u52a1\u4e0d\u53ef\u907f\u514d\u7684\u8981\u7528\u5230\u5404\u79cd\u654f\u611f\u4fe1\u606f\u5b9e\u73b0\u767b\u5f55\u3001\u8ba4\u8bc1\u7b49\u529f\u80fd\uff0c\u4f8b\u5982\u8bbf\u95ee AWS \u5b58\u50a8\u7684\u7528\u6237\u540d\u5bc6\u7801\u3002 \u4e3a\u4e86\u907f\u514d\u5c06\u7c7b\u4f3c\u7684\u654f\u611f\u4fe1\u606f\u660e\u6587\u5199\u5728\u6240\u6709\u9700\u8981\u4f7f\u7528\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u4fe1\u606f\u5b58\u5165\u4e00\u4e2a Secret \u5bf9\u8c61\uff0c\u800c\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u901a\u8fc7 Secret \u5bf9\u8c61\u5f15\u7528\u8fd9\u4e9b\u654f\u611f\u4fe1\u606f\u3002 \u8fd9\u79cd\u65b9\u5f0f\u7684\u597d\u5904\u5305\u62ec\uff1a\u610f\u56fe\u660e\u786e\uff0c\u907f\u514d\u91cd\u590d\uff0c\u51cf\u5c11\u66b4\u6f0f\u673a\u4f1a\u3002 \u7528\u6237\uff08User Account\uff09& \u670d\u52a1\u5e10\u6237\uff08Service Account\uff09 \u987e\u540d\u601d\u4e49\uff0c\u7528\u6237\u5e10\u6237\u4e3a\u4eba\u63d0\u4f9b\u8d26\u6237\u6807\u8bc6\uff0c\u800c\u670d\u52a1\u8d26\u6237\u4e3a\u8ba1\u7b97\u673a\u8fdb\u7a0b\u548c Kubernetes \u96c6\u7fa4\u4e2d\u8fd0\u884c\u7684 Pod \u63d0\u4f9b\u8d26\u6237\u6807\u8bc6\u3002 \u7528\u6237\u5e10\u6237\u548c\u670d\u52a1\u5e10\u6237\u7684\u4e00\u4e2a\u533a\u522b\u662f\u4f5c\u7528\u8303\u56f4 \uff1a \u7528\u6237\u5e10\u6237\u5bf9\u5e94\u7684\u662f\u4eba\u7684\u8eab\u4efd\uff0c\u4eba\u7684\u8eab\u4efd\u4e0e\u670d\u52a1\u7684 Namespace \u65e0\u5173\uff0c\u6240\u4ee5\u7528\u6237\u8d26\u6237\u662f\u8de8Namespace \u7684\uff1b \u800c\u670d\u52a1\u5e10\u6237\u5bf9\u5e94\u7684\u662f\u4e00\u4e2a\u8fd0\u884c\u4e2d\u7a0b\u5e8f\u7684\u8eab\u4efd\uff0c\u4e0e\u7279\u5b9a Namespace \u662f\u76f8\u5173\u7684\u3002 Service Service \u662f\u5e94\u7528\u670d\u52a1\u7684\u62bd\u8c61\uff0c\u901a\u8fc7 labels \u4e3a\u5e94\u7528\u63d0\u4f9b\u8d1f\u8f7d\u5747\u8861\u548c\u670d\u52a1\u53d1\u73b0\u3002\u5339 \u914d labels \u7684 Pod IP \u548c\u7aef\u53e3\u5217\u8868\u7ec4\u6210 endpoints\uff0c\u7531 Kube-proxy \u8d1f\u8d23\u5c06\u670d\u52a1 IP \u8d1f\u8f7d\u5747\u8861\u5230\u8fd9\u4e9b endpoints \u4e0a\u3002 \u6bcf\u4e2a Service \u90fd\u4f1a\u81ea\u52a8\u5206\u914d\u4e00\u4e2a cluster IP\uff08\u4ec5\u5728\u96c6\u7fa4\u5185\u90e8\u53ef\u8bbf\u95ee\u7684\u865a\u62df\u5730\u5740\uff09 \u548c DNS \u540d\uff0c\u5176\u4ed6\u5bb9\u5668\u53ef\u4ee5\u901a\u8fc7\u8be5\u5730\u5740\u6216 DNS \u6765\u8bbf\u95ee\u670d\u52a1\uff0c\u800c\u4e0d\u9700\u8981\u4e86\u89e3\u540e\u7aef\u5bb9\u5668\u7684\u8fd0\u884c\u3002 Service Spec apiVersion: v1 kind: Service metadata: name: nginx spec: ports: - port: 8078 # the port that this service should serve on name: http # the container on each pod to connect to, can be a name # (e.g. 'www') or a number (e.g. 80) targetPort: 80 protocol: TCP selector: app: nginx \u526f\u672c\u96c6\uff08Replica Set\uff09 \u56fe\u7247\u6765\u6e90 Pod \u53ea\u662f\u5355\u4e2a\u5e94\u7528\u5b9e\u4f8b\u7684\u62bd\u8c61\uff0c\u8981\u6784\u5efa\u9ad8\u53ef\u7528\u5e94\u7528\uff0c\u901a\u5e38\u9700\u8981\u6784\u5efa\u591a\u4e2a\u540c\u6837\u7684\u526f\u672c\uff0c\u63d0\u4f9b\u540c\u4e00\u4e2a\u670d\u52a1\u3002 Kubernetes \u4e3a\u6b64\u62bd\u8c61\u51fa\u526f\u672c\u96c6 ReplicaSet\uff0c\u5176\u5141\u8bb8\u7528\u6237\u5b9a\u4e49 Pod \u7684\u526f\u672c\u6570\uff0c\u6bcf\u4e00\u4e2a Pod \u90fd\u4f1a\u88ab\u5f53\u4f5c\u4e00\u4e2a\u65e0\u72b6\u6001\u7684\u6210\u5458\u8fdb\u884c\u7ba1\u7406\uff0cKubernetes \u4fdd\u8bc1\u603b\u662f\u6709\u7528\u6237\u671f\u671b\u7684\u6570\u91cf\u7684 Pod \u6b63\u5e38\u8fd0\u884c\u3002 \u5f53\u67d0\u4e2a\u526f\u672c\u5b95\u673a\u4ee5\u540e\uff0c\u63a7\u5236\u5668\u5c06\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u526f\u672c\u3002 \u5f53\u56e0\u4e1a\u52a1\u8d1f\u8f7d\u53d1\u751f\u53d8\u66f4\u800c\u9700\u8981\u8c03\u6574\u6269\u7f29\u5bb9\u65f6\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u8c03\u6574\u526f\u672c\u6570\u91cf\u3002 \u90e8\u7f72\uff08Deployment\uff09 \u56fe\u7247\u6765\u6e90 \u90e8\u7f72\u8868\u793a\u7528\u6237\u5bf9 Kubernetes \u96c6\u7fa4\u7684\u4e00\u6b21\u66f4\u65b0\u64cd\u4f5c\u3002 \u90e8\u7f72\u662f\u4e00\u4e2a\u6bd4 RS \u5e94\u7528\u6a21\u5f0f\u66f4\u5e7f\u7684 API \u5bf9\u8c61\uff0c\u53ef\u4ee5\u662f\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u670d\u52a1\uff0c\u66f4\u65b0\u4e00\u4e2a\u65b0\u7684\u670d\u52a1\uff0c\u4e5f\u53ef\u4ee5\u662f\u6eda\u52a8\u5347\u7ea7\u4e00\u4e2a\u670d\u52a1\u3002 \u6eda\u52a8\u5347\u7ea7\u4e00\u4e2a\u670d\u52a1\uff0c\u5b9e\u9645\u662f\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 RS\uff0c\u7136\u540e\u9010\u6e10\u5c06\u65b0 RS \u4e2d\u526f\u672c\u6570\u589e\u52a0\u5230\u7406\u60f3\u72b6\u6001\uff0c\u5c06\u65e7 RS \u4e2d\u7684\u526f\u672c\u6570\u51cf\u5c0f\u5230 0 \u7684\u590d\u5408\u64cd\u4f5c\u3002 \u8fd9\u6837\u4e00\u4e2a\u590d\u5408\u64cd\u4f5c\u7528\u4e00\u4e2a RS \u662f\u4e0d\u592a\u597d\u63cf\u8ff0\u7684\uff0c\u6240\u4ee5\u7528\u4e00\u4e2a\u66f4\u901a\u7528\u7684 Deployment \u6765\u63cf\u8ff0\u3002 \u4ee5 Kubernetes \u7684\u53d1\u5c55\u65b9\u5411\uff0c\u672a\u6765\u5bf9\u6240\u6709\u957f\u671f\u4f3a\u670d\u578b\u7684\u7684\u4e1a\u52a1\u7684\u7ba1\u7406\uff0c\u90fd\u4f1a\u901a\u8fc7 Deployment \u6765\u7ba1\u7406\u3002 Try it \u901a\u8fc7\u7c7b\u4f3c Docker run \u7684\u547d\u4ee4\u5728 Kubernetes \u8fd0\u884c\u5bb9\u5668 kubectl run --image=nginx:alpine nginx-app --port=80 kubectl get deployment kubectl describe deployment/rs/pod kubectl expose deployment nginx-app --port=80 --target-port=80 kubectl describe svc kubectl describe ep \u6709\u72b6\u6001\u670d\u52a1\u96c6\uff08StatefulSet\uff09 \u56fe\u7247\u6765\u6e90 \u5bf9\u4e8e StatefulSet \u4e2d\u7684 Pod\uff0c\u6bcf\u4e2a Pod \u6302\u8f7d\u81ea\u5df1\u72ec\u7acb\u7684\u5b58\u50a8\uff0c\u5982\u679c\u4e00\u4e2a Pod \u51fa\u73b0\u6545\u969c\uff0c\u4ece\u5176\u4ed6\u8282\u70b9\u542f\u52a8\u4e00\u4e2a\u540c\u6837\u540d\u5b57\u7684Pod\uff0c\u8981\u6302\u8f7d\u4e0a\u539f\u6765 Pod \u7684\u5b58\u50a8\u7ee7\u7eed\u4ee5\u5b83\u7684\u72b6\u6001\u63d0\u4f9b\u670d\u52a1\u3002 \u9002\u5408\u4e8e StatefulSet \u7684\u4e1a\u52a1\u5305\u62ec\u6570\u636e\u5e93\u670d\u52a1 MySQL \u548c PostgreSQL\uff0c\u96c6\u7fa4\u5316\u7ba1\u7406\u670d\u52a1 ZooKeeper\u3001etcd \u7b49\u6709\u72b6\u6001\u670d\u52a1\u3002 \u4f7f\u7528 StatefulSet\uff0cPod \u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7\u6f02\u79fb\u5230\u4e0d\u540c\u8282\u70b9\u63d0\u4f9b\u9ad8\u53ef\u7528\uff0c\u800c\u5b58\u50a8\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5916\u6302\u7684\u5b58\u50a8\u6765\u63d0\u4f9b\u9ad8\u53ef\u9760\u6027\uff0cStatefulSet \u505a\u7684\u53ea\u662f\u5c06\u786e\u5b9a\u7684 Pod \u4e0e\u786e\u5b9a\u7684\u5b58\u50a8\u5173\u8054\u8d77\u6765\u4fdd\u8bc1\u72b6\u6001\u7684\u8fde\u7eed\u6027\u3002 Statefulset \u4e0e Deployment \u7684\u5dee\u5f02 \u8eab\u4efd\u6807\u8bc6 StatefulSet Controller \u4e3a\u6bcf\u4e2a Pod \u7f16\u53f7\uff0c\u5e8f\u53f7\u4ece0\u5f00\u59cb\u3002 \u6570\u636e\u5b58\u50a8 StatefulSet \u5141\u8bb8\u7528\u6237\u5b9a\u4e49 volumeClaimTemplates\uff0cPod \u88ab\u521b\u5efa\u7684\u540c\u65f6\uff0cKubernetes \u4f1a\u4ee5volumeClaimTemplates \u4e2d\u5b9a\u4e49\u7684\u6a21\u677f\u521b\u5efa\u5b58\u50a8\u5377\uff0c\u5e76\u6302\u8f7d\u7ed9 Pod\u3002 StatefulSet \u7684\u5347\u7ea7\u7b56\u7565\u4e0d\u540c onDelete \u6eda\u52a8\u5347\u7ea7 \u5206\u7247\u5347\u7ea7 \u4efb\u52a1\uff08Job\uff09 \u56fe\u7247\u6765\u6e90 Job \u662f Kubernetes \u7528\u6765\u63a7\u5236\u6279\u5904\u7406\u578b\u4efb\u52a1\u7684 API \u5bf9\u8c61\u3002 Job \u7ba1\u7406\u7684 Pod \u6839\u636e\u7528\u6237\u7684\u8bbe\u7f6e\u628a\u4efb\u52a1\u6210\u529f\u5b8c\u6210\u540e\u5c31\u81ea\u52a8\u9000\u51fa\u3002 \u6210\u529f\u5b8c\u6210\u7684\u6807\u5fd7\u6839\u636e\u4e0d\u540c\u7684 spec.completions \u7b56\u7565\u800c\u4e0d\u540c\uff1a \u5355 Pod \u578b\u4efb\u52a1\u6709\u4e00\u4e2a Pod \u6210\u529f\u5c31\u6807\u5fd7\u5b8c\u6210\uff1b \u5b9a\u6570\u6210\u529f\u578b\u4efb\u52a1\u4fdd\u8bc1\u6709 N \u4e2a\u4efb\u52a1\u5168\u90e8\u6210\u529f\uff1b \u5de5\u4f5c\u961f\u5217\u578b\u4efb\u52a1\u6839\u636e\u5e94\u7528\u786e\u8ba4\u7684\u5168\u5c40\u6210\u529f\u800c\u6807\u5fd7\u6210\u529f\u3002 \u540e\u53f0\u652f\u6491\u670d\u52a1\u96c6\uff08DaemonSet\uff09 \u957f\u671f\u4f3a\u670d\u578b\u548c\u6279\u5904\u7406\u578b\u670d\u52a1\u7684\u6838\u5fc3\u5728\u4e1a\u52a1\u5e94\u7528\uff0c\u53ef\u80fd\u6709\u4e9b\u8282\u70b9\u8fd0\u884c\u591a\u4e2a\u540c\u7c7b\u4e1a\u52a1\u7684 Pod\uff0c\u6709\u4e9b\u8282\u70b9\u4e0a\u53c8\u6ca1\u6709\u8fd9\u7c7b Pod \u8fd0\u884c\uff1b \u800c\u540e\u53f0\u652f\u6491\u578b\u670d\u52a1\u7684\u6838\u5fc3\u5173\u6ce8\u70b9\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u7684\u8282\u70b9\uff08\u7269\u7406\u673a\u6216\u865a\u62df\u673a\uff09\uff0c\u8981\u4fdd\u8bc1\u6bcf\u4e2a\u8282\u70b9\u4e0a\u90fd\u6709\u4e00\u4e2a\u6b64\u7c7b Pod \u8fd0\u884c\u3002 \u8282\u70b9\u53ef\u80fd\u662f\u6240\u6709\u96c6\u7fa4\u8282\u70b9\u4e5f\u53ef\u80fd\u662f\u901a\u8fc7 nodeSelector \u9009\u5b9a\u7684\u4e00\u4e9b\u7279\u5b9a\u8282\u70b9\u3002 \u5178\u578b\u7684\u540e\u53f0\u652f\u6491\u578b\u670d\u52a1\u5305\u62ec\u5b58\u50a8\u3001\u65e5\u5fd7\u548c\u76d1\u63a7\u7b49\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u652f\u6491 Kubernetes \u96c6\u7fa4\u8fd0\u884c\u7684\u670d\u52a1\u3002 \u56fe\u7247\u6765\u6e90 \u5b58\u50a8 PV \u548c PVC PersistentVolume\uff08PV\uff09\u662f\u96c6\u7fa4\u4e2d\u7684\u4e00\u5757\u5b58\u50a8\u5377\uff0c\u53ef\u4ee5\u7531\u7ba1\u7406\u5458\u624b\u52a8\u8bbe\u7f6e\uff0c\u6216\u5f53\u7528\u6237\u521b\u5efa PersistentVolumeClaim\uff08PVC\uff09\u65f6\u6839\u636e StorageClass \u52a8\u6001\u8bbe\u7f6e\u3002 PV \u548c PVC \u4e0e Pod \u751f\u547d\u5468\u671f\u65e0\u5173\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53 Pod \u4e2d\u7684\u5bb9\u5668\u91cd\u65b0\u542f\u52a8\u3001Pod \u91cd\u65b0\u8c03\u5ea6\u6216\u8005\u5220\u9664\u65f6\uff0cPV \u548c PVC \u4e0d\u4f1a\u53d7\u5230\u5f71\u54cd\uff0cPod \u5b58\u50a8\u4e8e PV \u91cc\u7684\u6570\u636e\u5f97\u4ee5\u4fdd\u7559\u3002 \u5bf9\u4e8e\u4e0d\u540c\u7684\u4f7f\u7528\u573a\u666f\uff0c\u7528\u6237\u901a\u5e38\u9700\u8981\u4e0d\u540c\u5c5e\u6027\uff08\u4f8b\u5982\u6027\u80fd\u3001\u8bbf\u95ee\u6a21\u5f0f\u7b49\uff09\u7684 PV\u3002 CustomResourceDefinition CRD \u5c31\u50cf\u6570\u636e\u5e93\u7684\u5f00\u653e\u5f0f\u8868\u7ed3\u6784\uff0c\u5141\u8bb8\u7528\u6237\u81ea\u5b9a\u4e49 Schema\u3002 \u6709\u4e86\u8fd9\u79cd\u5f00\u653e\u5f0f\u8bbe\u8ba1\uff0c\u7528\u6237\u53ef\u4ee5\u57fa\u4e8e CRD \u5b9a\u4e49\u4e00\u5207\u9700\u8981\u7684\u6a21\u578b\uff0c\u6ee1\u8db3\u4e0d\u540c\u4e1a\u52a1\u7684\u9700\u6c42\u3002 \u793e\u533a\u9f13\u52b1\u57fa\u4e8e CRD \u7684\u4e1a\u52a1\u62bd\u8c61\uff0c\u4f17\u591a\u4e3b\u6d41\u7684\u6269\u5c55\u5e94\u7528\u90fd\u662f\u57fa\u4e8e CRD \u6784\u5efa\u7684\uff0c\u6bd4\u5982 Istio\u3001Knative\u3002 \u751a\u81f3\u57fa\u4e8e CRD \u63a8\u51fa\u4e86 Operator Mode \u548c Operator SDK\uff0c\u53ef\u4ee5\u4ee5\u6781\u4f4e\u7684\u5f00\u53d1\u6210\u672c\u5b9a\u4e49\u65b0\u5bf9\u8c61\uff0c\u5e76\u6784\u5efa\u65b0\u5bf9\u8c61\u7684\u63a7\u5236\u5668\u3002 \u8bfe\u540e\u7ec3\u4e60 4.2 \u542f\u52a8\u4e00\u4e2a Envoy Deployment\u3002 \u8981\u6c42 Envoy \u7684\u542f\u52a8\u914d\u7f6e\u4ece\u5916\u90e8\u7684\u914d\u7f6e\u6587\u4ef6 Mount \u8fdb Pod\u3002 \u8fdb\u5165 Pod \u67e5\u770b Envoy \u8fdb\u7a0b\u548c\u914d\u7f6e\u3002 \u66f4\u6539\u914d\u7f6e\u7684\u76d1\u542c\u7aef\u53e3\u5e76\u6d4b\u8bd5\u8bbf\u95ee\u5165\u53e3\u7684\u53d8\u5316\u3002 \u901a\u8fc7\u975e\u7ea7\u8054\u5220\u9664\u7684\u65b9\u6cd5\u9010\u4e2a\u5220\u9664\u5bf9\u8c61\u3002","title":"\u6838\u5fc3\u5bf9\u8c61\u6982\u89c8"},{"location":"2/2/5/#_1","text":"","title":"\u6838\u5fc3\u5bf9\u8c61\u6982\u89c8"},{"location":"2/2/5/#node","text":"Node \u662f Pod \u771f\u6b63\u8fd0\u884c\u7684\u4e3b\u673a\uff0c\u53ef\u4ee5\u7269\u7406\u673a\uff0c\u4e5f\u53ef\u4ee5\u662f\u865a\u62df\u673a\u3002 \u4e3a\u4e86\u7ba1\u7406 Pod\uff0c\u6bcf\u4e2a Node \u8282\u70b9\u4e0a\u81f3\u5c11\u8981\u8fd0\u884c container runtime\uff08\u6bd4\u5982 Docker \u6216\u8005 Rkt\uff09\u3001Kubelet \u548c Kube-proxy \u670d\u52a1\u3002","title":"Node"},{"location":"2/2/5/#namespace","text":"Namespace \u662f\u5bf9\u4e00\u7ec4\u8d44\u6e90\u548c\u5bf9\u8c61\u7684\u62bd\u8c61\u96c6\u5408 \uff0c\u6bd4\u5982\u53ef\u4ee5\u7528\u6765\u5c06\u7cfb\u7edf\u5185\u90e8\u7684\u5bf9\u8c61\u5212\u5206\u4e3a\u4e0d\u540c\u7684\u9879\u76ee\u7ec4\u6216\u7528\u6237\u7ec4\u3002 \u5e38\u89c1\u7684 pods, services, replication controllers \u548c deployments \u7b49\u90fd\u662f\u5c5e\u4e8e\u67d0\u4e00\u4e2a Namespace \u7684\uff08\u9ed8\u8ba4\u662f default\uff09\uff0c\u800c Node, persistentVolumes \u7b49\u5219\u4e0d\u5c5e\u4e8e\u4efb\u4f55 Namespace\u3002","title":"Namespace"},{"location":"2/2/5/#pod","text":"Pod \u662f\u4e00\u7ec4\u7d27\u5bc6\u5173\u8054\u7684\u5bb9\u5668\u96c6\u5408\uff0c\u5b83\u4eec\u5171\u4eab PID\u3001IPC\u3001Network \u548c UTS namespace\uff0c\u662f Kubernetes \u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d\u3002 Pod \u7684\u8bbe\u8ba1\u7406\u5ff5\u662f\u652f\u6301\u591a\u4e2a\u5bb9\u5668\u5728\u4e00\u4e2a Pod \u4e2d\u5171\u4eab\u7f51\u7edc\u548c\u6587\u4ef6\u7cfb\u7edf\uff0c\u53ef\u4ee5\u901a\u8fc7\u8fdb\u7a0b\u95f4\u901a\u4fe1\u548c\u6587\u4ef6\u5171\u4eab\u8fd9\u79cd\u7b80\u5355\u9ad8\u6548\u7684\u65b9\u5f0f\u7ec4\u5408\u5b8c\u6210\u670d\u52a1\u3002 \u540c\u4e00\u4e2a Pod \u4e2d\u7684\u4e0d\u540c\u5bb9\u5668\u53ef\u5171\u4eab\u8d44\u6e90\uff1a \u5171\u4eab\u7f51\u7edc Namespace\uff1b \u53ef\u901a\u8fc7\u6302\u8f7d\u5b58\u50a8\u5377\u5171\u4eab\u5b58\u50a8\uff1b \u5171\u4eab Security Context\u3002 apiVersion: v1 kind: Pod metadata: name: hello spec: containers: - image: nginx:1.15 name: nginx","title":"\u4ec0\u4e48\u662f Pod"},{"location":"2/2/5/#pod_1","text":"","title":"\u5982\u4f55\u901a\u8fc7 Pod \u5bf9\u8c61\u5b9a\u4e49\u652f\u6491\u5e94\u7528\u8fd0\u884c"},{"location":"2/2/5/#_2","text":"","title":"\u914d\u7f6e\u4fe1\u606f\u6765\u6e90"},{"location":"2/2/5/#_3","text":"","title":"\u73af\u5883\u53d8\u91cf"},{"location":"2/2/5/#_4","text":"\u901a\u8fc7\u5b58\u50a8\u5377\u53ef\u4ee5\u5c06\u5916\u6302\u5b58\u50a8\u6302\u8f7d\u5230 Pod \u5185\u90e8\u4f7f\u7528\u3002 \u5b58\u50a8\u5377\u5b9a\u4e49\u5305\u62ec\u4e24\u4e2a\u90e8\u5206: Volume \u548c VolumeMounts\u3002 Volume\uff1a\u5b9a\u4e49 Pod \u53ef\u4ee5\u4f7f\u7528\u7684\u5b58\u50a8\u5377\u6765\u6e90\uff1b VolumeMounts\uff1a\u5b9a\u4e49\u5b58\u50a8\u5377\u5982\u4f55 Mount \u5230\u5bb9\u5668\u5185\u90e8\u3002 apiVersion: v1 kind: Pod metadata: name: hello-volume spec: containers: - image: nginx:1.15 name: nginx volumeMounts: - name: data mountPath: /data volumes: - name: data emptyDir: {}","title":"\u5b58\u50a8\u5377"},{"location":"2/2/5/#pod_2","text":"Pod\u7684\u591a\u4e2a\u5bb9\u5668\u662f\u5171\u4eab\u7f51\u7edc Namespace \u7684\uff0c\u8fd9\u610f\u5473\u7740\uff1a \u540c\u4e00\u4e2a Pod \u4e2d\u7684\u4e0d\u540c\u5bb9\u5668\u53ef\u4ee5\u5f7c\u6b64\u901a\u8fc7 Loopback \u5730\u5740\u8bbf\u95ee\uff1a \u5728\u7b2c\u4e00\u4e2a\u5bb9\u5668\u4e2d\u8d77\u4e86\u4e00\u4e2a\u670d\u52a1 http://127.0.0.1 \u3002 \u5728\u7b2c\u4e8c\u4e2a\u5bb9\u5668\u5185\uff0c\u662f\u53ef\u4ee5\u901a\u8fc7 httpGet http://172.0.0.1 \u8bbf\u95ee\u5230\u8be5\u5730\u5740\u7684\u3002 \u8fd9\u79cd\u65b9\u6cd5\u5e38\u7528\u4e8e\u4e0d\u540c\u5bb9\u5668\u7684\u4e92\u76f8\u534f\u4f5c\u3002","title":"Pod \u7f51\u7edc"},{"location":"2/2/5/#_5","text":"Kubernetes \u901a\u8fc7 Cgroups \u63d0\u4f9b\u5bb9\u5668\u8d44\u6e90\u7ba1\u7406\u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u9650\u5236\u6bcf\u4e2a\u5bb9\u5668\u7684CPU \u548c\u5185\u5b58\u4f7f\u7528\uff0c\u6bd4\u5982\u5bf9\u4e8e\u521a\u624d\u521b\u5efa\u7684 deployment\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u9650\u5236nginx \u5bb9\u5668\u6700\u591a\u53ea\u7528 50% \u7684 CPU \u548c 128MB \u7684\u5185\u5b58\uff1a $ kubectl set resources deployment nginx-app -c=nginx --limits=cpu=500m,memory=128Mi deployment \"nginx\" resource requirements updated","title":"\u8d44\u6e90\u9650\u5236"},{"location":"2/2/5/#pod-resources-limits","text":"apiVersion: v1 kind: Pod metadata: labels: app: nginx name: nginx spec: containers: - image: nginx name: nginx resources: limits: cpu: \"500m\" memory: \"128Mi\"","title":"\u7b49\u540c\u4e8e\u5728\u6bcf\u4e2a Pod \u4e2d\u8bbe\u7f6e resources limits"},{"location":"2/2/5/#_6","text":"Kubernetes \u4f5c\u4e3a\u4e00\u4e2a\u9762\u5411\u5e94\u7528\u7684\u96c6\u7fa4\u7ba1\u7406\u5de5\u5177\uff0c\u9700\u8981\u786e\u4fdd\u5bb9\u5668\u5728\u90e8\u7f72\u540e\u786e\u5b9e\u5904\u5728\u6b63\u5e38\u7684\u8fd0\u884c\u72b6\u6001\u3002 \u542f\u52a8 centos pod: k apply -f 6-yamls/centos-readiness.yaml k get pod centos-578b69b65f-2cpmm -oyaml spec: containers: - command: - tail - -f - /dev/null image: centos imagePullPolicy: Always name: centos readinessProbe: exec: command: - cat - /tmp/healthy failureThreshold: 3 initialDelaySeconds: 5 periodSeconds: 5 successThreshold: 1 timeoutSeconds: 1 \u63a2\u9488\u7c7b\u578b\uff1a LivenessProbe \u63a2\u6d4b\u5e94\u7528\u662f\u5426\u5904\u4e8e\u5065\u5eb7\u72b6\u6001\uff0c\u5982\u679c\u4e0d\u5065\u5eb7\u5219\u5220\u9664\u5e76\u91cd\u65b0\u521b\u5efa\u5bb9\u5668\u3002 ReadinessProbe \u63a2\u6d4b\u5e94\u7528\u662f\u5426\u5c31\u7eea\u5e76\u4e14\u5904\u4e8e\u6b63\u5e38\u670d\u52a1\u72b6\u6001\uff0c\u5982\u679c\u4e0d\u6b63\u5e38\u5219\u4e0d\u4f1a\u63a5\u6536\u6765\u81ea Kubernetes Service \u7684\u6d41\u91cf\u3002 NAME READY STATUS RESTARTS AGE centos-578b69b65f-2cpmm 0/1 Running 0 100s failureThreshold: \u51fa\u591a\u5c11\u6b21\u9519\u8bef STATUS \u6539\u4e3a Faile initialDelaySeconds: \u7b49\u591a\u4e45\uff08\u9ed8\u8ba4\u5355\u4f4d\u79d2\uff09\u5f00\u59cb\u6267\u884c periodSeconds: \u6bcf\u6b21\u51fa\u9519\u95f4\u9694\u65f6\u95f4 successThreshold: timeoutSeconds: \u8d85\u65f6\u65f6\u95f4 StartupProbe \u63a2\u6d4b\u5e94\u7528\u662f\u5426\u542f\u52a8\u5b8c\u6210\uff0c\u5982\u679c\u5728 failureThreshold*periodSeconds \u5468\u671f\u5185\u672a\u5c31\u7eea\uff0c\u5219\u4f1a\u5e94\u7528\u8fdb\u7a0b\u4f1a\u88ab\u91cd\u542f\u3002 \u63a2\u6d3b\u65b9\u5f0f\uff1a Exec TCP socket HTTP","title":"\u5065\u5eb7\u68c0\u67e5"},{"location":"2/2/5/#spec","text":"apiVersion: extensions/v1beta1 kind: Deployment metadata: labels: app: nginx name: nginx-default spec: replicas: 3 selector: matchLabels: app: nginx template: metadata: labels: app: nginx spec: containers: - image: nginx imagePullPolicy: Always name: http resources: {} terminationMessagePath:/dev/termination-log terminationMessagePolicy: File resources: limits: cpu: \"500m\" memory: \"128Mi\" livenessProbe: httpGet: path: / port: 80 initialDelaySeconds: 15 timeoutSeconds: 1 readinessProbe: httpGet: path: /ping port: 80 initialDelaySeconds: 5 timeoutSeconds: 1","title":"\u5065\u5eb7\u68c0\u67e5 spec"},{"location":"2/2/5/#configmap","text":"ConfigMap \u7528\u6765\u5c06\u975e\u673a\u5bc6\u6027\u7684\u6570\u636e\u4fdd\u5b58\u5230\u952e\u503c\u5bf9\u4e2d\u3002 \u4f7f\u7528\u65f6\uff0c Pods \u53ef\u4ee5\u5c06\u5176\u7528\u4f5c\u73af\u5883\u53d8\u91cf\u3001\u547d\u4ee4\u884c\u53c2\u6570\u6216\u8005\u5b58\u50a8\u5377\u4e2d\u7684\u914d\u7f6e\u6587\u4ef6\u3002 ConfigMap \u5c06\u73af\u5883\u914d\u7f6e\u4fe1\u606f\u548c \u5bb9\u5668\u955c\u50cf\u89e3\u8026\uff0c\u4fbf\u4e8e\u5e94\u7528\u914d\u7f6e\u7684\u4fee\u6539\u3002","title":"ConfigMap"},{"location":"2/2/5/#secret","text":"Secret \u662f\u7528\u6765\u4fdd\u5b58\u548c\u4f20\u9012\u5bc6\u7801\u3001\u5bc6\u94a5\u3001\u8ba4\u8bc1\u51ed\u8bc1\u8fd9\u4e9b\u654f\u611f\u4fe1\u606f\u7684\u5bf9\u8c61\u3002 \u4f7f\u7528 Secret \u7684\u597d\u5904\u662f\u53ef\u4ee5\u907f\u514d\u628a\u654f\u611f\u4fe1\u606f\u660e\u6587\u5199\u5728\u914d\u7f6e\u6587\u4ef6\u91cc\u3002 Kubernetes \u96c6\u7fa4\u4e2d\u914d\u7f6e\u548c\u4f7f\u7528\u670d\u52a1\u4e0d\u53ef\u907f\u514d\u7684\u8981\u7528\u5230\u5404\u79cd\u654f\u611f\u4fe1\u606f\u5b9e\u73b0\u767b\u5f55\u3001\u8ba4\u8bc1\u7b49\u529f\u80fd\uff0c\u4f8b\u5982\u8bbf\u95ee AWS \u5b58\u50a8\u7684\u7528\u6237\u540d\u5bc6\u7801\u3002 \u4e3a\u4e86\u907f\u514d\u5c06\u7c7b\u4f3c\u7684\u654f\u611f\u4fe1\u606f\u660e\u6587\u5199\u5728\u6240\u6709\u9700\u8981\u4f7f\u7528\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u4fe1\u606f\u5b58\u5165\u4e00\u4e2a Secret \u5bf9\u8c61\uff0c\u800c\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u901a\u8fc7 Secret \u5bf9\u8c61\u5f15\u7528\u8fd9\u4e9b\u654f\u611f\u4fe1\u606f\u3002 \u8fd9\u79cd\u65b9\u5f0f\u7684\u597d\u5904\u5305\u62ec\uff1a\u610f\u56fe\u660e\u786e\uff0c\u907f\u514d\u91cd\u590d\uff0c\u51cf\u5c11\u66b4\u6f0f\u673a\u4f1a\u3002","title":"\u5bc6\u94a5\u5bf9\u8c61\uff08Secret\uff09"},{"location":"2/2/5/#user-account-service-account","text":"\u987e\u540d\u601d\u4e49\uff0c\u7528\u6237\u5e10\u6237\u4e3a\u4eba\u63d0\u4f9b\u8d26\u6237\u6807\u8bc6\uff0c\u800c\u670d\u52a1\u8d26\u6237\u4e3a\u8ba1\u7b97\u673a\u8fdb\u7a0b\u548c Kubernetes \u96c6\u7fa4\u4e2d\u8fd0\u884c\u7684 Pod \u63d0\u4f9b\u8d26\u6237\u6807\u8bc6\u3002 \u7528\u6237\u5e10\u6237\u548c\u670d\u52a1\u5e10\u6237\u7684\u4e00\u4e2a\u533a\u522b\u662f\u4f5c\u7528\u8303\u56f4 \uff1a \u7528\u6237\u5e10\u6237\u5bf9\u5e94\u7684\u662f\u4eba\u7684\u8eab\u4efd\uff0c\u4eba\u7684\u8eab\u4efd\u4e0e\u670d\u52a1\u7684 Namespace \u65e0\u5173\uff0c\u6240\u4ee5\u7528\u6237\u8d26\u6237\u662f\u8de8Namespace \u7684\uff1b \u800c\u670d\u52a1\u5e10\u6237\u5bf9\u5e94\u7684\u662f\u4e00\u4e2a\u8fd0\u884c\u4e2d\u7a0b\u5e8f\u7684\u8eab\u4efd\uff0c\u4e0e\u7279\u5b9a Namespace \u662f\u76f8\u5173\u7684\u3002","title":"\u7528\u6237\uff08User Account\uff09&amp; \u670d\u52a1\u5e10\u6237\uff08Service Account\uff09"},{"location":"2/2/5/#service","text":"Service \u662f\u5e94\u7528\u670d\u52a1\u7684\u62bd\u8c61\uff0c\u901a\u8fc7 labels \u4e3a\u5e94\u7528\u63d0\u4f9b\u8d1f\u8f7d\u5747\u8861\u548c\u670d\u52a1\u53d1\u73b0\u3002\u5339 \u914d labels \u7684 Pod IP \u548c\u7aef\u53e3\u5217\u8868\u7ec4\u6210 endpoints\uff0c\u7531 Kube-proxy \u8d1f\u8d23\u5c06\u670d\u52a1 IP \u8d1f\u8f7d\u5747\u8861\u5230\u8fd9\u4e9b endpoints \u4e0a\u3002 \u6bcf\u4e2a Service \u90fd\u4f1a\u81ea\u52a8\u5206\u914d\u4e00\u4e2a cluster IP\uff08\u4ec5\u5728\u96c6\u7fa4\u5185\u90e8\u53ef\u8bbf\u95ee\u7684\u865a\u62df\u5730\u5740\uff09 \u548c DNS \u540d\uff0c\u5176\u4ed6\u5bb9\u5668\u53ef\u4ee5\u901a\u8fc7\u8be5\u5730\u5740\u6216 DNS \u6765\u8bbf\u95ee\u670d\u52a1\uff0c\u800c\u4e0d\u9700\u8981\u4e86\u89e3\u540e\u7aef\u5bb9\u5668\u7684\u8fd0\u884c\u3002","title":"Service"},{"location":"2/2/5/#service-spec","text":"apiVersion: v1 kind: Service metadata: name: nginx spec: ports: - port: 8078 # the port that this service should serve on name: http # the container on each pod to connect to, can be a name # (e.g. 'www') or a number (e.g. 80) targetPort: 80 protocol: TCP selector: app: nginx","title":"Service Spec"},{"location":"2/2/5/#replica-set","text":"\u56fe\u7247\u6765\u6e90 Pod \u53ea\u662f\u5355\u4e2a\u5e94\u7528\u5b9e\u4f8b\u7684\u62bd\u8c61\uff0c\u8981\u6784\u5efa\u9ad8\u53ef\u7528\u5e94\u7528\uff0c\u901a\u5e38\u9700\u8981\u6784\u5efa\u591a\u4e2a\u540c\u6837\u7684\u526f\u672c\uff0c\u63d0\u4f9b\u540c\u4e00\u4e2a\u670d\u52a1\u3002 Kubernetes \u4e3a\u6b64\u62bd\u8c61\u51fa\u526f\u672c\u96c6 ReplicaSet\uff0c\u5176\u5141\u8bb8\u7528\u6237\u5b9a\u4e49 Pod \u7684\u526f\u672c\u6570\uff0c\u6bcf\u4e00\u4e2a Pod \u90fd\u4f1a\u88ab\u5f53\u4f5c\u4e00\u4e2a\u65e0\u72b6\u6001\u7684\u6210\u5458\u8fdb\u884c\u7ba1\u7406\uff0cKubernetes \u4fdd\u8bc1\u603b\u662f\u6709\u7528\u6237\u671f\u671b\u7684\u6570\u91cf\u7684 Pod \u6b63\u5e38\u8fd0\u884c\u3002 \u5f53\u67d0\u4e2a\u526f\u672c\u5b95\u673a\u4ee5\u540e\uff0c\u63a7\u5236\u5668\u5c06\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u526f\u672c\u3002 \u5f53\u56e0\u4e1a\u52a1\u8d1f\u8f7d\u53d1\u751f\u53d8\u66f4\u800c\u9700\u8981\u8c03\u6574\u6269\u7f29\u5bb9\u65f6\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u8c03\u6574\u526f\u672c\u6570\u91cf\u3002","title":"\u526f\u672c\u96c6\uff08Replica Set\uff09"},{"location":"2/2/5/#deployment","text":"\u56fe\u7247\u6765\u6e90 \u90e8\u7f72\u8868\u793a\u7528\u6237\u5bf9 Kubernetes \u96c6\u7fa4\u7684\u4e00\u6b21\u66f4\u65b0\u64cd\u4f5c\u3002 \u90e8\u7f72\u662f\u4e00\u4e2a\u6bd4 RS \u5e94\u7528\u6a21\u5f0f\u66f4\u5e7f\u7684 API \u5bf9\u8c61\uff0c\u53ef\u4ee5\u662f\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u670d\u52a1\uff0c\u66f4\u65b0\u4e00\u4e2a\u65b0\u7684\u670d\u52a1\uff0c\u4e5f\u53ef\u4ee5\u662f\u6eda\u52a8\u5347\u7ea7\u4e00\u4e2a\u670d\u52a1\u3002 \u6eda\u52a8\u5347\u7ea7\u4e00\u4e2a\u670d\u52a1\uff0c\u5b9e\u9645\u662f\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 RS\uff0c\u7136\u540e\u9010\u6e10\u5c06\u65b0 RS \u4e2d\u526f\u672c\u6570\u589e\u52a0\u5230\u7406\u60f3\u72b6\u6001\uff0c\u5c06\u65e7 RS \u4e2d\u7684\u526f\u672c\u6570\u51cf\u5c0f\u5230 0 \u7684\u590d\u5408\u64cd\u4f5c\u3002 \u8fd9\u6837\u4e00\u4e2a\u590d\u5408\u64cd\u4f5c\u7528\u4e00\u4e2a RS \u662f\u4e0d\u592a\u597d\u63cf\u8ff0\u7684\uff0c\u6240\u4ee5\u7528\u4e00\u4e2a\u66f4\u901a\u7528\u7684 Deployment \u6765\u63cf\u8ff0\u3002 \u4ee5 Kubernetes \u7684\u53d1\u5c55\u65b9\u5411\uff0c\u672a\u6765\u5bf9\u6240\u6709\u957f\u671f\u4f3a\u670d\u578b\u7684\u7684\u4e1a\u52a1\u7684\u7ba1\u7406\uff0c\u90fd\u4f1a\u901a\u8fc7 Deployment \u6765\u7ba1\u7406\u3002","title":"\u90e8\u7f72\uff08Deployment\uff09"},{"location":"2/2/5/#try-it","text":"\u901a\u8fc7\u7c7b\u4f3c Docker run \u7684\u547d\u4ee4\u5728 Kubernetes \u8fd0\u884c\u5bb9\u5668 kubectl run --image=nginx:alpine nginx-app --port=80 kubectl get deployment kubectl describe deployment/rs/pod kubectl expose deployment nginx-app --port=80 --target-port=80 kubectl describe svc kubectl describe ep","title":"Try it"},{"location":"2/2/5/#statefulset","text":"\u56fe\u7247\u6765\u6e90 \u5bf9\u4e8e StatefulSet \u4e2d\u7684 Pod\uff0c\u6bcf\u4e2a Pod \u6302\u8f7d\u81ea\u5df1\u72ec\u7acb\u7684\u5b58\u50a8\uff0c\u5982\u679c\u4e00\u4e2a Pod \u51fa\u73b0\u6545\u969c\uff0c\u4ece\u5176\u4ed6\u8282\u70b9\u542f\u52a8\u4e00\u4e2a\u540c\u6837\u540d\u5b57\u7684Pod\uff0c\u8981\u6302\u8f7d\u4e0a\u539f\u6765 Pod \u7684\u5b58\u50a8\u7ee7\u7eed\u4ee5\u5b83\u7684\u72b6\u6001\u63d0\u4f9b\u670d\u52a1\u3002 \u9002\u5408\u4e8e StatefulSet \u7684\u4e1a\u52a1\u5305\u62ec\u6570\u636e\u5e93\u670d\u52a1 MySQL \u548c PostgreSQL\uff0c\u96c6\u7fa4\u5316\u7ba1\u7406\u670d\u52a1 ZooKeeper\u3001etcd \u7b49\u6709\u72b6\u6001\u670d\u52a1\u3002 \u4f7f\u7528 StatefulSet\uff0cPod \u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7\u6f02\u79fb\u5230\u4e0d\u540c\u8282\u70b9\u63d0\u4f9b\u9ad8\u53ef\u7528\uff0c\u800c\u5b58\u50a8\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5916\u6302\u7684\u5b58\u50a8\u6765\u63d0\u4f9b\u9ad8\u53ef\u9760\u6027\uff0cStatefulSet \u505a\u7684\u53ea\u662f\u5c06\u786e\u5b9a\u7684 Pod \u4e0e\u786e\u5b9a\u7684\u5b58\u50a8\u5173\u8054\u8d77\u6765\u4fdd\u8bc1\u72b6\u6001\u7684\u8fde\u7eed\u6027\u3002","title":"\u6709\u72b6\u6001\u670d\u52a1\u96c6\uff08StatefulSet\uff09"},{"location":"2/2/5/#statefulset-deployment","text":"\u8eab\u4efd\u6807\u8bc6 StatefulSet Controller \u4e3a\u6bcf\u4e2a Pod \u7f16\u53f7\uff0c\u5e8f\u53f7\u4ece0\u5f00\u59cb\u3002 \u6570\u636e\u5b58\u50a8 StatefulSet \u5141\u8bb8\u7528\u6237\u5b9a\u4e49 volumeClaimTemplates\uff0cPod \u88ab\u521b\u5efa\u7684\u540c\u65f6\uff0cKubernetes \u4f1a\u4ee5volumeClaimTemplates \u4e2d\u5b9a\u4e49\u7684\u6a21\u677f\u521b\u5efa\u5b58\u50a8\u5377\uff0c\u5e76\u6302\u8f7d\u7ed9 Pod\u3002 StatefulSet \u7684\u5347\u7ea7\u7b56\u7565\u4e0d\u540c onDelete \u6eda\u52a8\u5347\u7ea7 \u5206\u7247\u5347\u7ea7","title":"Statefulset \u4e0e Deployment \u7684\u5dee\u5f02"},{"location":"2/2/5/#job","text":"\u56fe\u7247\u6765\u6e90 Job \u662f Kubernetes \u7528\u6765\u63a7\u5236\u6279\u5904\u7406\u578b\u4efb\u52a1\u7684 API \u5bf9\u8c61\u3002 Job \u7ba1\u7406\u7684 Pod \u6839\u636e\u7528\u6237\u7684\u8bbe\u7f6e\u628a\u4efb\u52a1\u6210\u529f\u5b8c\u6210\u540e\u5c31\u81ea\u52a8\u9000\u51fa\u3002 \u6210\u529f\u5b8c\u6210\u7684\u6807\u5fd7\u6839\u636e\u4e0d\u540c\u7684 spec.completions \u7b56\u7565\u800c\u4e0d\u540c\uff1a \u5355 Pod \u578b\u4efb\u52a1\u6709\u4e00\u4e2a Pod \u6210\u529f\u5c31\u6807\u5fd7\u5b8c\u6210\uff1b \u5b9a\u6570\u6210\u529f\u578b\u4efb\u52a1\u4fdd\u8bc1\u6709 N \u4e2a\u4efb\u52a1\u5168\u90e8\u6210\u529f\uff1b \u5de5\u4f5c\u961f\u5217\u578b\u4efb\u52a1\u6839\u636e\u5e94\u7528\u786e\u8ba4\u7684\u5168\u5c40\u6210\u529f\u800c\u6807\u5fd7\u6210\u529f\u3002","title":"\u4efb\u52a1\uff08Job\uff09"},{"location":"2/2/5/#daemonset","text":"\u957f\u671f\u4f3a\u670d\u578b\u548c\u6279\u5904\u7406\u578b\u670d\u52a1\u7684\u6838\u5fc3\u5728\u4e1a\u52a1\u5e94\u7528\uff0c\u53ef\u80fd\u6709\u4e9b\u8282\u70b9\u8fd0\u884c\u591a\u4e2a\u540c\u7c7b\u4e1a\u52a1\u7684 Pod\uff0c\u6709\u4e9b\u8282\u70b9\u4e0a\u53c8\u6ca1\u6709\u8fd9\u7c7b Pod \u8fd0\u884c\uff1b \u800c\u540e\u53f0\u652f\u6491\u578b\u670d\u52a1\u7684\u6838\u5fc3\u5173\u6ce8\u70b9\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u7684\u8282\u70b9\uff08\u7269\u7406\u673a\u6216\u865a\u62df\u673a\uff09\uff0c\u8981\u4fdd\u8bc1\u6bcf\u4e2a\u8282\u70b9\u4e0a\u90fd\u6709\u4e00\u4e2a\u6b64\u7c7b Pod \u8fd0\u884c\u3002 \u8282\u70b9\u53ef\u80fd\u662f\u6240\u6709\u96c6\u7fa4\u8282\u70b9\u4e5f\u53ef\u80fd\u662f\u901a\u8fc7 nodeSelector \u9009\u5b9a\u7684\u4e00\u4e9b\u7279\u5b9a\u8282\u70b9\u3002 \u5178\u578b\u7684\u540e\u53f0\u652f\u6491\u578b\u670d\u52a1\u5305\u62ec\u5b58\u50a8\u3001\u65e5\u5fd7\u548c\u76d1\u63a7\u7b49\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u652f\u6491 Kubernetes \u96c6\u7fa4\u8fd0\u884c\u7684\u670d\u52a1\u3002 \u56fe\u7247\u6765\u6e90","title":"\u540e\u53f0\u652f\u6491\u670d\u52a1\u96c6\uff08DaemonSet\uff09"},{"location":"2/2/5/#pv-pvc","text":"PersistentVolume\uff08PV\uff09\u662f\u96c6\u7fa4\u4e2d\u7684\u4e00\u5757\u5b58\u50a8\u5377\uff0c\u53ef\u4ee5\u7531\u7ba1\u7406\u5458\u624b\u52a8\u8bbe\u7f6e\uff0c\u6216\u5f53\u7528\u6237\u521b\u5efa PersistentVolumeClaim\uff08PVC\uff09\u65f6\u6839\u636e StorageClass \u52a8\u6001\u8bbe\u7f6e\u3002 PV \u548c PVC \u4e0e Pod \u751f\u547d\u5468\u671f\u65e0\u5173\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53 Pod \u4e2d\u7684\u5bb9\u5668\u91cd\u65b0\u542f\u52a8\u3001Pod \u91cd\u65b0\u8c03\u5ea6\u6216\u8005\u5220\u9664\u65f6\uff0cPV \u548c PVC \u4e0d\u4f1a\u53d7\u5230\u5f71\u54cd\uff0cPod \u5b58\u50a8\u4e8e PV \u91cc\u7684\u6570\u636e\u5f97\u4ee5\u4fdd\u7559\u3002 \u5bf9\u4e8e\u4e0d\u540c\u7684\u4f7f\u7528\u573a\u666f\uff0c\u7528\u6237\u901a\u5e38\u9700\u8981\u4e0d\u540c\u5c5e\u6027\uff08\u4f8b\u5982\u6027\u80fd\u3001\u8bbf\u95ee\u6a21\u5f0f\u7b49\uff09\u7684 PV\u3002","title":"\u5b58\u50a8 PV \u548c PVC"},{"location":"2/2/5/#customresourcedefinition","text":"CRD \u5c31\u50cf\u6570\u636e\u5e93\u7684\u5f00\u653e\u5f0f\u8868\u7ed3\u6784\uff0c\u5141\u8bb8\u7528\u6237\u81ea\u5b9a\u4e49 Schema\u3002 \u6709\u4e86\u8fd9\u79cd\u5f00\u653e\u5f0f\u8bbe\u8ba1\uff0c\u7528\u6237\u53ef\u4ee5\u57fa\u4e8e CRD \u5b9a\u4e49\u4e00\u5207\u9700\u8981\u7684\u6a21\u578b\uff0c\u6ee1\u8db3\u4e0d\u540c\u4e1a\u52a1\u7684\u9700\u6c42\u3002 \u793e\u533a\u9f13\u52b1\u57fa\u4e8e CRD \u7684\u4e1a\u52a1\u62bd\u8c61\uff0c\u4f17\u591a\u4e3b\u6d41\u7684\u6269\u5c55\u5e94\u7528\u90fd\u662f\u57fa\u4e8e CRD \u6784\u5efa\u7684\uff0c\u6bd4\u5982 Istio\u3001Knative\u3002 \u751a\u81f3\u57fa\u4e8e CRD \u63a8\u51fa\u4e86 Operator Mode \u548c Operator SDK\uff0c\u53ef\u4ee5\u4ee5\u6781\u4f4e\u7684\u5f00\u53d1\u6210\u672c\u5b9a\u4e49\u65b0\u5bf9\u8c61\uff0c\u5e76\u6784\u5efa\u65b0\u5bf9\u8c61\u7684\u63a7\u5236\u5668\u3002","title":"CustomResourceDefinition"},{"location":"2/2/5/#42","text":"\u542f\u52a8\u4e00\u4e2a Envoy Deployment\u3002 \u8981\u6c42 Envoy \u7684\u542f\u52a8\u914d\u7f6e\u4ece\u5916\u90e8\u7684\u914d\u7f6e\u6587\u4ef6 Mount \u8fdb Pod\u3002 \u8fdb\u5165 Pod \u67e5\u770b Envoy \u8fdb\u7a0b\u548c\u914d\u7f6e\u3002 \u66f4\u6539\u914d\u7f6e\u7684\u76d1\u542c\u7aef\u53e3\u5e76\u6d4b\u8bd5\u8bbf\u95ee\u5165\u53e3\u7684\u53d8\u5316\u3002 \u901a\u8fc7\u975e\u7ea7\u8054\u5220\u9664\u7684\u65b9\u6cd5\u9010\u4e2a\u5220\u9664\u5bf9\u8c61\u3002","title":"\u8bfe\u540e\u7ec3\u4e60 4.2"},{"location":"2/2/6/","text":"\u7ec3\u4e60 Deploy a simple pod run nginx as webserver $ kubectl run --image=nginx nginx $ kubectl run --image=nginx nginx --restart='Always' $ kubectl run --image=nginx nginx pod/nginx created show running pod $ kubectl get po --show-labels -owide -w $ kubectl get po --show-labels -owide -w NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES LABELS nginx 1/1 Running 0 51s 10.233.96.20 cjx-0004 <none> <none> run=nginx expose svc $ kubectl expose deploy nginx --selector run=nginx --port=80 --type=NodePort $ kubectl expose pod nginx --selector run=nginx --port=80 --type=NodePort $ kubectl expose pod nginx --selector run=nginx --port=80 --type=NodePort service/nginx exposed check svc detail $ kubectl get svc $ kubectl get svc NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE kubernetes ClusterIP 10.233.0.1 <none> 443/TCP 9d nginx NodePort 10.233.12.196 <none> 80:31827/TCP 10s access service $ curl 192.168.34.2:<nodeport> $ curl 10.233.12.196:80 <!DOCTYPE html> <html> <head> <title>Welcome to nginx!</title> <style> html { color-scheme: light dark; } body { width: 35em; margin: 0 auto; font-family: Tahoma, Verdana, Arial, sans-serif; } </style> </head> <body> <h1>Welcome to nginx!</h1> <p>If you see this page, the nginx web server is successfully installed and working. Further configuration is required.</p> <p>For online documentation and support please refer to <a href=\"http://nginx.org/\">nginx.org</a>.<br/> Commercial support is available at <a href=\"http://nginx.com/\">nginx.com</a>.</p> <p><em>Thank you for using nginx.</em></p> </body> </html> $ curl 192.168.3.150:31827 <!DOCTYPE html> <html> <head> <title>Welcome to nginx!</title> <style> html { color-scheme: light dark; } body { width: 35em; margin: 0 auto; font-family: Tahoma, Verdana, Arial, sans-serif; } </style> </head> <body> <h1>Welcome to nginx!</h1> <p>If you see this page, the nginx web server is successfully installed and working. Further configuration is required.</p> <p>For online documentation and support please refer to <a href=\"http://nginx.org/\">nginx.org</a>.<br/> Commercial support is available at <a href=\"http://nginx.com/\">nginx.com</a>.</p> <p><em>Thank you for using nginx.</em></p> </body> </html> Deploy Envoy with configmap run envoy $ kubectl create configmap envoy-config --from-file=envoy.yaml $ kubectl create -f envoy-deploy.yaml $ kubectl expose deploy envoy --selector run=envoy --port=10000 --type=NodePort $ kubectl create configmap envoy-config --from-file=envoy.yaml configmap/envoy-config created $ kubectl create -f envoy-deploy.yaml deployment.apps/envoy created $ kubectl expose deploy envoy --selector run=envoy --port=10000 --type=NodePort service/envoy exposed access service $ curl <NODE IP Address>:<NodePort> Notices: Node IP Address base on your kubernetes cluster. Example: $ curl 192.168.34.2:<nodeport> scale up/down/failover $ kubectl scale deploy <deployment-name> --replicas=<n> Understand the configmap configmap cat game.properties #configmap from file kubectl create configmap game-config --from-file=game.properties kubectl create configmap game-env-config --from-env-file=game.properties kubectl get configmap -oyaml game-config $ cat game.properties enemies=aliens bbb #aaa lives=3 enemies.cheat=true enemies.cheat.level=noGoodRotten secret.code.passphrase=UUDDLRLRBABAS secret.code.allowed=true $ kubectl create configmap game-config --from-file=game.properties configmap/game-config created $ kubectl create configmap game-env-config --from-env-file=game.properties configmap/game-env-config created $ kubectl get configmap -oyaml game-config apiVersion: v1 data: game.properties: | enemies=aliens bbb #aaa lives=3 enemies.cheat=true enemies.cheat.level=noGoodRotten secret.code.passphrase=UUDDLRLRBABAS secret.code.allowed=true kind: ConfigMap metadata: creationTimestamp: \"2022-10-23T12:40:07Z\" name: game-config namespace: default resourceVersion: \"86841\" uid: 1be51ef9-092c-4439-81b6-bb897558cbc7 configmap from literal kubectl create configmap special-config --from-literal=special.how=very --from-literal=special.type=charm #downward api pod kubectl create -f downward-api-pod.yaml kubectl get po downward-api-pod kubectl logs -f downward-api-pod $ kubectl create configmap special-config --from-literal=special.how=very --from-literal=special.type=charm configmap/special-config created $ kubectl create -f downward-api-pod.yaml pod/downward-api-pod created $ kubectl get po downward-api-pod NAME READY STATUS RESTARTS AGE downward-api-pod 1/1 Running 0 51s $ kubectl logs -f downward-api-pod /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/ /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh /docker-entrypoint.sh: Configuration complete; ready for start up 2022/10/23 12:41:07 [notice] 1#1: using the \"epoll\" event method 2022/10/23 12:41:07 [notice] 1#1: nginx/1.23.2 2022/10/23 12:41:07 [notice] 1#1: built by gcc 10.2.1 20210110 (Debian 10.2.1-6) 2022/10/23 12:41:07 [notice] 1#1: OS: Linux 5.15.0-48-generic 2022/10/23 12:41:07 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576 2022/10/23 12:41:07 [notice] 1#1: start worker processes 2022/10/23 12:41:07 [notice] 1#1: start worker process 29 2022/10/23 12:41:07 [notice] 1#1: start worker process 30 2022/10/23 12:41:07 [notice] 1#1: start worker process 31 2022/10/23 12:41:07 [notice] 1#1: start worker process 32 2022/10/23 12:41:07 [notice] 1#1: start worker process 33 2022/10/23 12:41:07 [notice] 1#1: start worker process 34 Use Configmap Volume volume kubectl create -f configmap-volume-pod.yaml kubectl get po kubectl logs -f configmap-volume-pod Readiness probe readiness probe kubectl create -f centos-readiness.yaml k get pod NAME READY STATUS RESTARTS AGE centos-578b69b65f-2cpmm 0/1 Running 0 8s \u64cd\u4f5c\u4f7f pod Ready k exec -it centos-578b69b65f-2cpmm bash touch /tmp/healthy k get pod NAME READY STATUS RESTARTS AGE centos-578b69b65f-8867d 1/1 Running 0 32s Get object by columns get object by columns kubectl get svc -o=custom-columns=NAME:.metadata.name,CREATED:'.metadata.annotations' \u53c2\u8003 Envoy \u4e2d\u6587\u4ecb\u7ecd \u4e2d\u6587\u7ffb\u8bd1\u6587\u6863 \u5b98\u65b9\u8d44\u6599 \u82f1\u6587\u6587\u6863 sandboxes (\u65b0\u624b\u5165\u95e8\u5fc5\u987b\u8bd5\u8bd5) \u535a\u5ba2 FuckCloudNative https://fuckcloudnative.io/tags/envoy/page/2/ https://fuckcloudnative.io/tags/envoy/page/1/ Kubernetes Architecting Kubernetes clusters \u2014 choosing a worker node size Architecting Kubernetes clusters \u2014 choosing the best autoscaling strategy Graceful shutdown and zero downtime deployments in Kubernetes Allocatable memory and CPU in Kubernetes Nodes Metadata Label \u8fc7\u6ee4\u67e5\u8be2 k get ns kube-system -oyaml apiVersion: v1 kind: Namespace metadata: creationTimestamp: \"2022-10-13T15:52:43Z\" labels: kubernetes.io/metadata.name: kube-system name: kube-system resourceVersion: \"7\" uid: 81a1489f-8dbd-4e6d-80fb-12ae19866a95 spec: finalizers: - kubernetes status: phase: Active k get ns -lkubernetes.io/metadata.name=kube-system NAME STATUS AGE kube-system Active 29d Finalizer \u9632\u6b62\u5916\u90e8\u8d44\u6e90\u6cc4\u9732 \u521b\u5efapod kubectl run my-nginx --image=nginx:latest --port=80 k get pod NAME READY STATUS RESTARTS AGE downward-api-pod 0/1 Error 0 20d my-nginx 1/1 Running 0 3m13s nginx 1/1 Running 2 (13d ago) 20d redis-5c9986b94b-4ghx7 1/1 Running 4 (13d ago) 28d \u6dfb\u52a0 finalizers k edit pod my-nginx finalizers: - kubernetes \u5220\u9664 pod (pod \u505c\u6b62\uff0c\u4f46\u662f\u6ca1\u6709\u88ab\u5b8c\u5168\u5220\u9664\uff0c\u4e00\u76f4\u5361\u5728 Terminating\uff0c\u4f1a\u6dfb\u52a0\u4e00\u4e2a deletionTimestamp \u5b57\u6bb5\uff0c\u8868\u793a\u5220\u9664\u64cd\u4f5c\u65f6\u95f4\u3002) k delete pod my-nginx k get pod NAME READY STATUS RESTARTS AGE downward-api-pod 0/1 Error 0 20d my-nginx 0/1 Terminating 0 4m23s nginx 1/1 Running 2 (13d ago) 20d redis-5c9986b94b-4ghx7 1/1 Running 4 (13d ago) 28d \u5220\u9664 finalizers(\u53ea\u8981\u503c\u4e3a\u7a7a\u5373\u53ef) k edit pod my-nginx \u5220\u9664\u6210\u529f","title":"\u7ec3\u4e60"},{"location":"2/2/6/#_1","text":"","title":"\u7ec3\u4e60"},{"location":"2/2/6/#deploy-a-simple-pod","text":"","title":"Deploy a simple pod"},{"location":"2/2/6/#run-nginx-as-webserver","text":"$ kubectl run --image=nginx nginx $ kubectl run --image=nginx nginx --restart='Always' $ kubectl run --image=nginx nginx pod/nginx created","title":"run nginx as webserver"},{"location":"2/2/6/#show-running-pod","text":"$ kubectl get po --show-labels -owide -w $ kubectl get po --show-labels -owide -w NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES LABELS nginx 1/1 Running 0 51s 10.233.96.20 cjx-0004 <none> <none> run=nginx","title":"show running pod"},{"location":"2/2/6/#expose-svc","text":"$ kubectl expose deploy nginx --selector run=nginx --port=80 --type=NodePort $ kubectl expose pod nginx --selector run=nginx --port=80 --type=NodePort $ kubectl expose pod nginx --selector run=nginx --port=80 --type=NodePort service/nginx exposed","title":"expose svc"},{"location":"2/2/6/#check-svc-detail","text":"$ kubectl get svc $ kubectl get svc NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE kubernetes ClusterIP 10.233.0.1 <none> 443/TCP 9d nginx NodePort 10.233.12.196 <none> 80:31827/TCP 10s","title":"check svc detail"},{"location":"2/2/6/#access-service","text":"$ curl 192.168.34.2:<nodeport> $ curl 10.233.12.196:80 <!DOCTYPE html> <html> <head> <title>Welcome to nginx!</title> <style> html { color-scheme: light dark; } body { width: 35em; margin: 0 auto; font-family: Tahoma, Verdana, Arial, sans-serif; } </style> </head> <body> <h1>Welcome to nginx!</h1> <p>If you see this page, the nginx web server is successfully installed and working. Further configuration is required.</p> <p>For online documentation and support please refer to <a href=\"http://nginx.org/\">nginx.org</a>.<br/> Commercial support is available at <a href=\"http://nginx.com/\">nginx.com</a>.</p> <p><em>Thank you for using nginx.</em></p> </body> </html> $ curl 192.168.3.150:31827 <!DOCTYPE html> <html> <head> <title>Welcome to nginx!</title> <style> html { color-scheme: light dark; } body { width: 35em; margin: 0 auto; font-family: Tahoma, Verdana, Arial, sans-serif; } </style> </head> <body> <h1>Welcome to nginx!</h1> <p>If you see this page, the nginx web server is successfully installed and working. Further configuration is required.</p> <p>For online documentation and support please refer to <a href=\"http://nginx.org/\">nginx.org</a>.<br/> Commercial support is available at <a href=\"http://nginx.com/\">nginx.com</a>.</p> <p><em>Thank you for using nginx.</em></p> </body> </html>","title":"access service"},{"location":"2/2/6/#deploy-envoy-with-configmap","text":"","title":"Deploy Envoy with configmap"},{"location":"2/2/6/#run-envoy","text":"$ kubectl create configmap envoy-config --from-file=envoy.yaml $ kubectl create -f envoy-deploy.yaml $ kubectl expose deploy envoy --selector run=envoy --port=10000 --type=NodePort $ kubectl create configmap envoy-config --from-file=envoy.yaml configmap/envoy-config created $ kubectl create -f envoy-deploy.yaml deployment.apps/envoy created $ kubectl expose deploy envoy --selector run=envoy --port=10000 --type=NodePort service/envoy exposed","title":"run envoy"},{"location":"2/2/6/#access-service_1","text":"$ curl <NODE IP Address>:<NodePort> Notices: Node IP Address base on your kubernetes cluster. Example: $ curl 192.168.34.2:<nodeport>","title":"access service"},{"location":"2/2/6/#scale-updownfailover","text":"$ kubectl scale deploy <deployment-name> --replicas=<n>","title":"scale up/down/failover"},{"location":"2/2/6/#understand-the-configmap","text":"","title":"Understand the configmap"},{"location":"2/2/6/#configmap","text":"cat game.properties #configmap from file kubectl create configmap game-config --from-file=game.properties kubectl create configmap game-env-config --from-env-file=game.properties kubectl get configmap -oyaml game-config $ cat game.properties enemies=aliens bbb #aaa lives=3 enemies.cheat=true enemies.cheat.level=noGoodRotten secret.code.passphrase=UUDDLRLRBABAS secret.code.allowed=true $ kubectl create configmap game-config --from-file=game.properties configmap/game-config created $ kubectl create configmap game-env-config --from-env-file=game.properties configmap/game-env-config created $ kubectl get configmap -oyaml game-config apiVersion: v1 data: game.properties: | enemies=aliens bbb #aaa lives=3 enemies.cheat=true enemies.cheat.level=noGoodRotten secret.code.passphrase=UUDDLRLRBABAS secret.code.allowed=true kind: ConfigMap metadata: creationTimestamp: \"2022-10-23T12:40:07Z\" name: game-config namespace: default resourceVersion: \"86841\" uid: 1be51ef9-092c-4439-81b6-bb897558cbc7","title":"configmap"},{"location":"2/2/6/#configmap-from-literal","text":"kubectl create configmap special-config --from-literal=special.how=very --from-literal=special.type=charm #downward api pod kubectl create -f downward-api-pod.yaml kubectl get po downward-api-pod kubectl logs -f downward-api-pod $ kubectl create configmap special-config --from-literal=special.how=very --from-literal=special.type=charm configmap/special-config created $ kubectl create -f downward-api-pod.yaml pod/downward-api-pod created $ kubectl get po downward-api-pod NAME READY STATUS RESTARTS AGE downward-api-pod 1/1 Running 0 51s $ kubectl logs -f downward-api-pod /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/ /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh /docker-entrypoint.sh: Configuration complete; ready for start up 2022/10/23 12:41:07 [notice] 1#1: using the \"epoll\" event method 2022/10/23 12:41:07 [notice] 1#1: nginx/1.23.2 2022/10/23 12:41:07 [notice] 1#1: built by gcc 10.2.1 20210110 (Debian 10.2.1-6) 2022/10/23 12:41:07 [notice] 1#1: OS: Linux 5.15.0-48-generic 2022/10/23 12:41:07 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576 2022/10/23 12:41:07 [notice] 1#1: start worker processes 2022/10/23 12:41:07 [notice] 1#1: start worker process 29 2022/10/23 12:41:07 [notice] 1#1: start worker process 30 2022/10/23 12:41:07 [notice] 1#1: start worker process 31 2022/10/23 12:41:07 [notice] 1#1: start worker process 32 2022/10/23 12:41:07 [notice] 1#1: start worker process 33 2022/10/23 12:41:07 [notice] 1#1: start worker process 34","title":"configmap from literal"},{"location":"2/2/6/#use-configmap-volume","text":"","title":"Use Configmap Volume"},{"location":"2/2/6/#volume","text":"kubectl create -f configmap-volume-pod.yaml kubectl get po kubectl logs -f configmap-volume-pod","title":"volume"},{"location":"2/2/6/#readiness-probe","text":"","title":"Readiness probe"},{"location":"2/2/6/#readiness-probe_1","text":"kubectl create -f centos-readiness.yaml k get pod NAME READY STATUS RESTARTS AGE centos-578b69b65f-2cpmm 0/1 Running 0 8s \u64cd\u4f5c\u4f7f pod Ready k exec -it centos-578b69b65f-2cpmm bash touch /tmp/healthy k get pod NAME READY STATUS RESTARTS AGE centos-578b69b65f-8867d 1/1 Running 0 32s","title":"readiness probe"},{"location":"2/2/6/#get-object-by-columns","text":"","title":"Get object by columns"},{"location":"2/2/6/#get-object-by-columns_1","text":"kubectl get svc -o=custom-columns=NAME:.metadata.name,CREATED:'.metadata.annotations'","title":"get object by columns"},{"location":"2/2/6/#_2","text":"","title":"\u53c2\u8003"},{"location":"2/2/6/#envoy","text":"\u4e2d\u6587\u4ecb\u7ecd \u4e2d\u6587\u7ffb\u8bd1\u6587\u6863","title":"Envoy"},{"location":"2/2/6/#_3","text":"\u82f1\u6587\u6587\u6863 sandboxes (\u65b0\u624b\u5165\u95e8\u5fc5\u987b\u8bd5\u8bd5)","title":"\u5b98\u65b9\u8d44\u6599"},{"location":"2/2/6/#_4","text":"FuckCloudNative https://fuckcloudnative.io/tags/envoy/page/2/ https://fuckcloudnative.io/tags/envoy/page/1/","title":"\u535a\u5ba2"},{"location":"2/2/6/#kubernetes","text":"Architecting Kubernetes clusters \u2014 choosing a worker node size Architecting Kubernetes clusters \u2014 choosing the best autoscaling strategy Graceful shutdown and zero downtime deployments in Kubernetes Allocatable memory and CPU in Kubernetes Nodes","title":"Kubernetes"},{"location":"2/2/6/#metadata","text":"","title":"Metadata"},{"location":"2/2/6/#label","text":"\u8fc7\u6ee4\u67e5\u8be2 k get ns kube-system -oyaml apiVersion: v1 kind: Namespace metadata: creationTimestamp: \"2022-10-13T15:52:43Z\" labels: kubernetes.io/metadata.name: kube-system name: kube-system resourceVersion: \"7\" uid: 81a1489f-8dbd-4e6d-80fb-12ae19866a95 spec: finalizers: - kubernetes status: phase: Active k get ns -lkubernetes.io/metadata.name=kube-system NAME STATUS AGE kube-system Active 29d","title":"Label"},{"location":"2/2/6/#finalizer","text":"\u9632\u6b62\u5916\u90e8\u8d44\u6e90\u6cc4\u9732 \u521b\u5efapod kubectl run my-nginx --image=nginx:latest --port=80 k get pod NAME READY STATUS RESTARTS AGE downward-api-pod 0/1 Error 0 20d my-nginx 1/1 Running 0 3m13s nginx 1/1 Running 2 (13d ago) 20d redis-5c9986b94b-4ghx7 1/1 Running 4 (13d ago) 28d \u6dfb\u52a0 finalizers k edit pod my-nginx finalizers: - kubernetes \u5220\u9664 pod (pod \u505c\u6b62\uff0c\u4f46\u662f\u6ca1\u6709\u88ab\u5b8c\u5168\u5220\u9664\uff0c\u4e00\u76f4\u5361\u5728 Terminating\uff0c\u4f1a\u6dfb\u52a0\u4e00\u4e2a deletionTimestamp \u5b57\u6bb5\uff0c\u8868\u793a\u5220\u9664\u64cd\u4f5c\u65f6\u95f4\u3002) k delete pod my-nginx k get pod NAME READY STATUS RESTARTS AGE downward-api-pod 0/1 Error 0 20d my-nginx 0/1 Terminating 0 4m23s nginx 1/1 Running 2 (13d ago) 20d redis-5c9986b94b-4ghx7 1/1 Running 4 (13d ago) 28d \u5220\u9664 finalizers(\u53ea\u8981\u503c\u4e3a\u7a7a\u5373\u53ef) k edit pod my-nginx \u5220\u9664\u6210\u529f","title":"Finalizer"},{"location":"3/1/","text":"etcd etcd \u662f CoreOS \u57fa\u4e8e Raft \u5f00\u53d1\u7684\u5206\u5e03\u5f0f key-value \u5b58\u50a8\uff0c\u53ef\u7528\u4e8e\u670d\u52a1\u53d1\u73b0\u3001\u5171\u4eab\u914d\u7f6e\u4ee5\u53ca\u4e00\u81f4\u6027\u4fdd\u969c\uff08\u5982\u6570\u636e\u5e93\u9009\u4e3b\u3001\u5206\u5e03\u5f0f\u9501\u7b49\uff09\u3002 \u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u5982\u4f55\u7ba1\u7406\u8282\u70b9\u95f4\u7684\u72b6\u6001\u4e00\u76f4\u662f\u4e00\u4e2a\u96be\u9898\uff0cetcd \u50cf\u662f\u4e13\u95e8\u4e3a\u96c6\u7fa4\u73af\u5883\u7684\u670d\u52a1\u53d1\u73b0\u548c\u6ce8\u518c\u800c\u8bbe\u8ba1\uff0c\u5b83\u63d0\u4f9b\u4e86\u6570\u636e TTL \u5931\u6548\u3001\u6570\u636e\u6539\u53d8\u76d1\u89c6\u3001\u591a\u503c\u3001\u76ee\u5f55\u76d1\u542c\u3001\u5206\u5e03\u5f0f\u9501\u539f\u5b50\u64cd\u4f5c\u7b49\u529f\u80fd\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u8ddf\u8e2a\u5e76\u7ba1\u7406\u96c6\u7fa4\u8282\u70b9\u7684\u72b6\u6001\u3002 \u952e\u503c\u5bf9\u5b58\u50a8\uff1a\u5c06\u6570\u636e\u5b58\u50a8\u5728\u5206\u5c42\u7ec4\u7ec7\u7684\u76ee\u5f55\u4e2d\uff0c\u5982\u540c\u5728\u6807\u51c6\u6587\u4ef6\u7cfb\u7edf\u4e2d \u76d1\u6d4b\u53d8\u66f4\uff1a\u76d1\u6d4b\u7279\u5b9a\u7684\u952e\u6216\u76ee\u5f55\u4ee5\u8fdb\u884c\u66f4\u6539\uff0c\u5e76\u5bf9\u503c\u7684\u66f4\u6539\u505a\u51fa\u53cd\u5e94 \u7b80\u5355\uff1acurl \u53ef\u8bbf\u95ee\u7684\u7528\u6237\u7684 API (HTTP+JSON) \u5b89\u5168\uff1a\u53ef\u9009\u7684 SSL \u5ba2\u6237\u7aef\u8bc1\u4e66\u8ba4\u8bc1 \u5feb\u901f\uff1a\u5355\u5b9e\u4f8b\u6bcf\u79d2 1000 \u6b21\u5199\u64cd\u4f5c\uff0c2000+ \u6b21\u8bfb\u64cd\u4f5c \u53ef\u9760\uff1a\u4f7f\u7528 Raft \u7b97\u6cd5\u4fdd\u8bc1\u4e00\u81f4\u6027 \u4e3b\u8981\u529f\u80fd \u57fa\u672c\u7684 key-value \u5b58\u50a8 \u76d1\u542c\u673a\u5236 key \u7684\u8fc7\u671f\u53ca\u7eed\u7ea6\u673a\u5236\uff0c\u7528\u4e8e\u76d1\u63a7\u548c\u670d\u52a1\u53d1\u73b0 \u539f\u5b50 Compare And Swap \u548c Compare And Delete\uff0c\u7528\u4e8e\u5206\u5e03\u5f0f\u9501\u548c leader \u9009\u4e3e \u4f7f\u7528\u573a\u666f \u4e5f\u53ef\u4ee5\u7528\u4e8e\u952e\u503c\u5bf9\u5b58\u50a8\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u8bfb\u53d6\u548c\u5199\u5165 etcd \u4e2d\u7684\u6570\u636e etcd \u6bd4\u8f83\u591a\u7684\u5e94\u7528\u573a\u666f\u662f\u7528\u4e8e\u670d\u52a1\u6ce8\u518c\u4e0e\u53d1\u73b0 \u57fa\u4e8e\u76d1\u542c\u673a\u5236\u7684\u5206\u5e03\u5f0f\u5f02\u6b65\u7cfb\u7edf \u952e\u503c\u5bf9\u5b58\u50a8 etcd \u662f\u4e00\u4e2a \u952e\u503c\u5b58\u50a8 \u7684\u7ec4\u4ef6\uff0c\u5176\u4ed6\u7684\u5e94\u7528\u90fd\u662f\u57fa\u4e8e\u5176\u952e\u503c\u5b58\u50a8\u7684\u529f\u80fd\u5c55\u5f00\u3002 \u91c7\u7528 kv \u578b\u6570\u636e\u5b58\u50a8\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u6bd4\u5173\u7cfb\u578b\u6570\u636e\u5e93\u5feb\u3002 \u652f\u6301\u52a8\u6001\u5b58\u50a8\uff08\u5185\u5b58\uff09\u4ee5\u53ca\u9759\u6001\u5b58\u50a8\uff08\u78c1\u76d8\uff09\u3002 \u5206\u5e03\u5f0f\u5b58\u50a8\uff0c\u53ef\u96c6\u6210\u4e3a\u591a\u8282\u70b9\u96c6\u7fa4\u3002 \u5b58\u50a8\u65b9\u5f0f\uff0c\u91c7\u7528\u7c7b\u4f3c\u76ee\u5f55\u7ed3\u6784\u3002\uff08B+tree\uff09 \u53ea\u6709\u53f6\u5b50\u8282\u70b9\u624d\u80fd\u771f\u6b63\u5b58\u50a8\u6570\u636e\uff0c\u76f8\u5f53\u4e8e\u6587\u4ef6\u3002 \u53f6\u5b50\u8282\u70b9\u7684\u7236\u8282\u70b9\u4e00\u5b9a\u662f\u76ee\u5f55\uff0c\u76ee\u5f55\u4e0d\u80fd\u5b58\u50a8\u6570\u636e\u3002 \u670d\u52a1\u6ce8\u518c\u4e0e\u53d1\u73b0 \u5f3a\u4e00\u81f4\u6027\u3001\u9ad8\u53ef\u7528\u7684\u670d\u52a1\u5b58\u50a8\u76ee\u5f55\u3002 \u57fa\u4e8e Raft \u7b97\u6cd5\u7684 etcd \u5929\u751f\u5c31\u662f\u8fd9\u6837\u4e00\u4e2a\u5f3a\u4e00\u81f4\u6027\u3001\u9ad8\u53ef\u7528\u7684\u670d\u52a1\u5b58\u50a8\u76ee\u5f55\u3002 \u4e00\u79cd\u6ce8\u518c\u670d\u52a1\u548c\u670d\u52a1\u5065\u5eb7\u72b6\u51b5\u7684\u673a\u5236\u3002 \u7528\u6237\u53ef\u4ee5\u5728 etcd \u4e2d\u6ce8\u518c\u670d\u52a1\uff0c\u5e76\u4e14\u5bf9\u6ce8\u518c\u7684\u670d\u52a1\u914d\u7f6e key TTL\uff0c\u5b9a\u65f6\u4fdd\u6301\u670d\u52a1\u7684\u5fc3\u8df3\u4ee5\u8fbe\u5230\u76d1\u63a7\u5065\u5eb7\u72b6\u6001\u7684\u6548\u679c\u3002 \u6d88\u606f\u53d1\u5e03\u4e0e\u8ba2\u9605 \u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u6700\u9002\u7528\u7684\u4e00\u79cd\u7ec4\u4ef6\u95f4\u901a\u4fe1\u65b9\u5f0f\u5c31\u662f\u6d88\u606f\u53d1\u5e03\u4e0e\u8ba2\u9605\u3002 \u5373\u6784\u5efa\u4e00\u4e2a\u914d\u7f6e\u5171\u4eab\u4e2d\u5fc3\uff0c\u6570\u636e\u63d0\u4f9b\u8005\u5728\u8fd9\u4e2a\u914d\u7f6e\u4e2d\u5fc3\u53d1\u5e03\u6d88\u606f\uff0c\u800c\u6d88\u606f\u4f7f\u7528\u8005\u5219\u8ba2\u9605\u4ed6\u4eec\u5173\u5fc3\u7684\u4e3b\u9898\uff0c\u4e00\u65e6\u4e3b\u9898\u6709\u6d88\u606f\u53d1\u5e03\uff0c\u5c31\u4f1a\u5b9e\u65f6\u901a\u77e5\u8ba2\u9605\u8005\u3002 \u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u505a\u5230\u5206\u5e03\u5f0f\u7cfb\u7edf\u914d\u7f6e\u7684\u96c6\u4e2d\u5f0f\u7ba1\u7406\u4e0e\u52a8\u6001\u66f4\u65b0\u3002 \u5e94\u7528\u4e2d\u7528\u5230\u7684\u4e00\u4e9b\u914d\u7f6e\u4fe1\u606f\u653e\u5230 etcd \u4e0a\u8fdb\u884c\u96c6\u4e2d\u7ba1\u7406\u3002 \u5e94\u7528\u5728\u542f\u52a8\u7684\u65f6\u5019\u4e3b\u52a8\u4ece etcd \u83b7\u53d6\u4e00\u6b21\u914d\u7f6e\u4fe1\u606f\uff0c\u540c\u65f6\uff0c\u5728 etcd \u8282\u70b9\u4e0a\u6ce8\u518c\u4e00\u4e2a Watcher \u5e76\u7b49\u5f85\uff0c\u4ee5\u540e\u6bcf\u6b21\u914d\u7f6e\u6709\u66f4\u65b0\u7684\u65f6\u5019\uff0cetcd \u90fd\u4f1a\u5b9e\u65f6\u901a\u77e5\u8ba2\u9605\u8005\uff0c\u4ee5\u6b64\u8fbe\u5230\u83b7\u53d6\u6700\u65b0\u914d\u7f6e\u4fe1\u606f\u7684\u76ee\u7684\u3002 etcd \u7684\u5b89\u88c5 \u4e0b\u8f7d\u5b89\u88c5\u5305\uff0c\u53c2\u8003 https://github.com/etcd-io/etcd/releases \u5b89\u88c5 ETCD_VER=v3.4.17 DOWNLOAD_URL=https://github.com/etcd-io/etcd/releases/download rm -f /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz rm -rf /tmp/etcd-download-test && mkdir -p /tmp/etcd-download-test curl -L ${DOWNLOAD_URL}/${ETCD_VER}/etcd-${ETCD_VER}-linux-amd64.tar.gz -o /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz tar xzvf /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz -C /tmp/etcd-download-test --strip-components=1 \u8fd0\u884c cd /tmp/etcd-download-test/ ./etcd \u6e05\u9664 rm -f /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz rm -rf /tmp/etcd-download-test \u66f4\u591a\u4fe1\u606f\uff1a https://github.com/cncamp/101/blob/master/module5/1.etcd-member-list.MD \u7b2c\u4e09\u65b9\u5e93\u548c\u5ba2\u6237\u7aef\u5de5\u5177 \u76ee\u524d\u6709\u5f88\u591a\u652f\u6301etcd\u7684\u5e93\u548c\u5ba2\u6237\u7aef\u5de5\u5177 \u547d\u4ee4\u884c\u5ba2\u6237\u7aef\u5de5\u5177 etcdctl \u5b89\u88c5: sudo apt install etcd-client(\u9ed8\u8ba4\u5df2\u5b89\u88c5) Go \u5ba2\u6237\u7aef go-etcd Java \u5ba2\u6237\u7aef jetcd Python \u5ba2\u6237\u7aef python-etcd etcd \u7ec3\u4e60 cd /tmp/etcd-download-test/ \u67e5\u770b\u96c6\u7fa4\u6210\u5458\u72b6\u6001 ./etcdctl member list 8e9e05c52164694d, started, default, http://localhost:2380, http://localhost:2379, false ./etcdctl --endpoints=127.0.0.1:2379 member list --write-out=table +------------------+---------+---------+-----------------------+-----------------------+------------+ | ID | STATUS | NAME | PEER ADDRS | CLIENT ADDRS | IS LEARNER | +------------------+---------+---------+-----------------------+-----------------------+------------+ | 8e9e05c52164694d | started | default | http://localhost:2380 | http://localhost:2379 | false | +------------------+---------+---------+-----------------------+-----------------------+------------+ \u57fa\u672c\u7684\u6570\u636e\u8bfb\u5199\u64cd\u4f5c \u5199\u5165\u6570\u636e ./etcdctl --endpoints=localhost:2379 put /version v1 OK \u8bfb\u53d6\u6570\u636e ./etcdctl --endpoints=localhost:2379 get /version /version v1 ./etcdctl --endpoints=localhost:2379 get /version -wjson {\"header\":{\"cluster_id\":14841639068965178418,\"member_id\":10276657743932975437,\"revision\":2,\"raft_term\":3},\"kvs\":[{\"key\":\"L3ZlcnNpb24=\",\"create_revision\":2,\"mod_revision\":2,\"version\":1,\"value\":\"djE=\"}],\"count\":1} key \u548c value \u90fd\u662f base64 \u52a0\u5bc6\u4e86\u7684 echo L3ZlcnNpb24=|base64 -d /version echo djE=|base64 -d v1 \u6309 key \u7684\u524d\u7f00\u67e5\u8be2\u6570\u636e ./etcdctl --endpoints=localhost:2379 put /version/java 1.8 ./etcdctl --endpoints=localhost:2379 put /version/hadoop 2.7.0 ./etcdctl --endpoints=localhost:2379 put /version/spark 3.2 ./etcdctl get --prefix /version /version v2 /version/hadoop 2.7.0 /version/java 1.8 /version/spark 3.2 \u53ea\u663e\u793a\u952e\u503c ./etcdctl get --prefix / --keys-only /version /version/hadoop /version/java /version/spark \u67e5\u770b debug \u4fe1\u606f \u7c7b\u4f3c\u4e8e k8s \u4e2d\u7684 -v=9 ./etcdctl get --prefix / --keys-only --debug ETCDCTL_CACERT= ETCDCTL_CERT= ETCDCTL_COMMAND_TIMEOUT=5s ETCDCTL_DEBUG=true ETCDCTL_DIAL_TIMEOUT=2s ETCDCTL_DISCOVERY_SRV= ETCDCTL_DISCOVERY_SRV_NAME= ETCDCTL_ENDPOINTS=[127.0.0.1:2379] ETCDCTL_HEX=false ETCDCTL_INSECURE_DISCOVERY=true ETCDCTL_INSECURE_SKIP_TLS_VERIFY=false ETCDCTL_INSECURE_TRANSPORT=true ETCDCTL_KEEPALIVE_TIME=2s ETCDCTL_KEEPALIVE_TIMEOUT=6s ETCDCTL_KEY= ETCDCTL_PASSWORD= ETCDCTL_USER= ETCDCTL_WRITE_OUT=simple WARNING: 2022/11/14 21:45:14 Adjusting keepalive ping interval to minimum period of 10s WARNING: 2022/11/14 21:45:14 Adjusting keepalive ping interval to minimum period of 10s INFO: 2022/11/14 21:45:14 parsed scheme: \"endpoint\" INFO: 2022/11/14 21:45:14 ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 <nil> 0 <nil>}] /version /version/hadoop /version/java /version/spark \u76d1\u542c\u6570\u636e ./etcdctl --endpoints=localhost:2379 watch /version ./etcdctl --endpoints=localhost:2379 put /version v2 PUT /version v2 \u76d1\u542c\u524d\u7f00 ./etcdctl --endpoints=localhost:2379 watch --prefix /version \u6838\u5fc3\uff1aTTL & CAS TTL (time to live)\u6307\u7684\u662f\u7ed9\u4e00\u4e2a key \u8bbe\u7f6e\u4e00\u4e2a\u6709\u6548\u671f\uff0c\u5230\u671f\u540e\u8fd9\u4e2a key \u5c31\u4f1a\u88ab\u81ea\u52a8\u5220\u6389\uff0c\u8fd9\u5728\u5f88\u591a\u5206\u5e03\u5f0f\u9501\u7684\u5b9e\u73b0\u4e0a\u90fd\u4f1a\u7528\u5230\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u9501\u7684\u5b9e\u65f6\u6709\u6548\u6027\u3002 Atomic Compare-and-Swap (CAS) \u6307\u7684\u662f\u5728\u5bf9 key \u8fdb\u884c\u8d4b\u503c\u7684\u65f6\u5019\uff0c\u5ba2\u6237\u7aef\u9700\u8981\u63d0\u4f9b\u4e00\u4e9b\u6761 \u4ef6\uff0c\u5f53\u8fd9\u4e9b\u6761\u4ef6\u6ee1\u8db3\u540e\uff0c\u624d\u80fd\u8d4b\u503c\u6210\u529f\u3002\u8fd9\u4e9b\u6761\u4ef6\u5305\u62ec\uff1a prevExist: key \u5f53\u524d\u8d4b\u503c\u524d\u662f\u5426\u5b58\u5728 prevValue: key \u5f53\u524d\u8d4b\u503c\u524d\u7684\u503c prevlndex: key \u5f53\u524d\u8d4b\u503c\u524d\u7684 Index \u8fd9\u6837\u7684\u8bdd\uff0ckey \u7684\u8bbe\u7f6e\u662f\u6709\u524d\u63d0\u7684\uff0c\u9700\u8981\u77e5\u9053\u8fd9\u4e2a key \u5f53\u524d\u7684\u5177\u4f53\u60c5\u51b5\u624d\u53ef\u4ee5\u5bf9\u5176\u8bbe\u7f6e\u3002 \u67e5\u770b k8s \u5728 etcd \u4e2d\u5b58\u50a8\u7684\u6570\u636e \u8fdb\u5165 etcd \u5bb9\u5668 ks get pod|grep etcd ks exec -it etcd-cjx sh \u67e5\u770b\u542f\u52a8\u53c2\u6570 ps -ef|grep etcd root 2431 2372 2 14:23 ? 00:00:08 etcd --advertise-client-urls=https://192.168.1.168:2379 --cert-file=/etc/kubernetes/pki/etcd/server.crt --client-cert-auth=true --data-dir=/var/lib/etcd --experimental-initial-corrupt-check=true --initial-advertise-peer-urls=https://192.168.1.168:2380 --initial-cluster=cjx=https://192.168.1.168:2380 --key-file=/etc/kubernetes/pki/etcd/server.key --listen-client-urls=https://127.0.0.1:2379,https://192.168.1.168:2379 --listen-metrics-urls=http://127.0.0.1:2381 --listen-peer-urls=https://192.168.1.168:2380 --name=cjx --peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt --peer-client-cert-auth=true --peer-key-file=/etc/kubernetes/pki/etcd/peer.key --peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt --snapshot-count=10000 --trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt endpoints: --advertise-client-urls=https://192.168.1.168:2379 cert: --cert-file=/etc/kubernetes/pki/etcd/server.crt key: --key-file=/etc/kubernetes/pki/etcd/server.key cacert: --trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt \u64cd\u4f5c member list etcdctl --endpoints https://127.0.0.1:2379 --cert /etc/kubernetes/pki/etcd/server.crt --key /etc/kubernetes/pki/etcd/server.key --cacert /etc/kubernetes/pki/etcd/ca.crt member list --write-out=table output +------------------+---------+------+----------------------------+----------------------------+------------+ | ID | STATUS | NAME | PEER ADDRS | CLIENT ADDRS | IS LEARNER | +------------------+---------+------+----------------------------+----------------------------+------------+ | 37646e37976003c2 | started | cjx | https://192.168.1.168:2380 | https://192.168.1.168:2379 | false | +------------------+---------+------+----------------------------+----------------------------+------------+ get etcdctl --endpoints https://127.0.0.1:2379 --cert /etc/kubernetes/pki/etcd/server.crt --key /etc/kubernetes/pki/etcd/server.key --cacert /etc/kubernetes/pki/etcd/ca.crt get --prefix / --keys-only output ...... /registry/pods/default/nginx ...... /registry/pods/kube-system/kube-proxy-kwnx7 ...... /registry/services/specs/calico-system/calico-typha /registry/services/specs/default/kubernetes /registry/services/specs/kube-system/kube-dns \u83b7\u53d6\u7ec6\u8282 etcdctl --endpoints https://127.0.0.1:2379 --cert /etc/kubernetes/pki/etcd/server.crt --key /etc/kubernetes/pki/etcd/server.key --cacert /etc/kubernetes/pki/etcd/ca.crt get /registry/pods/default/nginx etcdctl --endpoints https://127.0.0.1:2379 --cert /etc/kubernetes/pki/etcd/server.crt --key /etc/kubernetes/pki/etcd/server.key --cacert /etc/kubernetes/pki/etcd/ca.crt get /registry/pods/kube-system/kube-proxy-kwnx7 \u7ed3\u679c\u4ee5 protobuf \u683c\u5f0f\u5b58\u50a8","title":"etcd"},{"location":"3/1/#etcd","text":"etcd \u662f CoreOS \u57fa\u4e8e Raft \u5f00\u53d1\u7684\u5206\u5e03\u5f0f key-value \u5b58\u50a8\uff0c\u53ef\u7528\u4e8e\u670d\u52a1\u53d1\u73b0\u3001\u5171\u4eab\u914d\u7f6e\u4ee5\u53ca\u4e00\u81f4\u6027\u4fdd\u969c\uff08\u5982\u6570\u636e\u5e93\u9009\u4e3b\u3001\u5206\u5e03\u5f0f\u9501\u7b49\uff09\u3002 \u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u5982\u4f55\u7ba1\u7406\u8282\u70b9\u95f4\u7684\u72b6\u6001\u4e00\u76f4\u662f\u4e00\u4e2a\u96be\u9898\uff0cetcd \u50cf\u662f\u4e13\u95e8\u4e3a\u96c6\u7fa4\u73af\u5883\u7684\u670d\u52a1\u53d1\u73b0\u548c\u6ce8\u518c\u800c\u8bbe\u8ba1\uff0c\u5b83\u63d0\u4f9b\u4e86\u6570\u636e TTL \u5931\u6548\u3001\u6570\u636e\u6539\u53d8\u76d1\u89c6\u3001\u591a\u503c\u3001\u76ee\u5f55\u76d1\u542c\u3001\u5206\u5e03\u5f0f\u9501\u539f\u5b50\u64cd\u4f5c\u7b49\u529f\u80fd\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u8ddf\u8e2a\u5e76\u7ba1\u7406\u96c6\u7fa4\u8282\u70b9\u7684\u72b6\u6001\u3002 \u952e\u503c\u5bf9\u5b58\u50a8\uff1a\u5c06\u6570\u636e\u5b58\u50a8\u5728\u5206\u5c42\u7ec4\u7ec7\u7684\u76ee\u5f55\u4e2d\uff0c\u5982\u540c\u5728\u6807\u51c6\u6587\u4ef6\u7cfb\u7edf\u4e2d \u76d1\u6d4b\u53d8\u66f4\uff1a\u76d1\u6d4b\u7279\u5b9a\u7684\u952e\u6216\u76ee\u5f55\u4ee5\u8fdb\u884c\u66f4\u6539\uff0c\u5e76\u5bf9\u503c\u7684\u66f4\u6539\u505a\u51fa\u53cd\u5e94 \u7b80\u5355\uff1acurl \u53ef\u8bbf\u95ee\u7684\u7528\u6237\u7684 API (HTTP+JSON) \u5b89\u5168\uff1a\u53ef\u9009\u7684 SSL \u5ba2\u6237\u7aef\u8bc1\u4e66\u8ba4\u8bc1 \u5feb\u901f\uff1a\u5355\u5b9e\u4f8b\u6bcf\u79d2 1000 \u6b21\u5199\u64cd\u4f5c\uff0c2000+ \u6b21\u8bfb\u64cd\u4f5c \u53ef\u9760\uff1a\u4f7f\u7528 Raft \u7b97\u6cd5\u4fdd\u8bc1\u4e00\u81f4\u6027","title":"etcd"},{"location":"3/1/#_1","text":"\u57fa\u672c\u7684 key-value \u5b58\u50a8 \u76d1\u542c\u673a\u5236 key \u7684\u8fc7\u671f\u53ca\u7eed\u7ea6\u673a\u5236\uff0c\u7528\u4e8e\u76d1\u63a7\u548c\u670d\u52a1\u53d1\u73b0 \u539f\u5b50 Compare And Swap \u548c Compare And Delete\uff0c\u7528\u4e8e\u5206\u5e03\u5f0f\u9501\u548c leader \u9009\u4e3e","title":"\u4e3b\u8981\u529f\u80fd"},{"location":"3/1/#_2","text":"\u4e5f\u53ef\u4ee5\u7528\u4e8e\u952e\u503c\u5bf9\u5b58\u50a8\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u8bfb\u53d6\u548c\u5199\u5165 etcd \u4e2d\u7684\u6570\u636e etcd \u6bd4\u8f83\u591a\u7684\u5e94\u7528\u573a\u666f\u662f\u7528\u4e8e\u670d\u52a1\u6ce8\u518c\u4e0e\u53d1\u73b0 \u57fa\u4e8e\u76d1\u542c\u673a\u5236\u7684\u5206\u5e03\u5f0f\u5f02\u6b65\u7cfb\u7edf","title":"\u4f7f\u7528\u573a\u666f"},{"location":"3/1/#_3","text":"etcd \u662f\u4e00\u4e2a \u952e\u503c\u5b58\u50a8 \u7684\u7ec4\u4ef6\uff0c\u5176\u4ed6\u7684\u5e94\u7528\u90fd\u662f\u57fa\u4e8e\u5176\u952e\u503c\u5b58\u50a8\u7684\u529f\u80fd\u5c55\u5f00\u3002 \u91c7\u7528 kv \u578b\u6570\u636e\u5b58\u50a8\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u6bd4\u5173\u7cfb\u578b\u6570\u636e\u5e93\u5feb\u3002 \u652f\u6301\u52a8\u6001\u5b58\u50a8\uff08\u5185\u5b58\uff09\u4ee5\u53ca\u9759\u6001\u5b58\u50a8\uff08\u78c1\u76d8\uff09\u3002 \u5206\u5e03\u5f0f\u5b58\u50a8\uff0c\u53ef\u96c6\u6210\u4e3a\u591a\u8282\u70b9\u96c6\u7fa4\u3002 \u5b58\u50a8\u65b9\u5f0f\uff0c\u91c7\u7528\u7c7b\u4f3c\u76ee\u5f55\u7ed3\u6784\u3002\uff08B+tree\uff09 \u53ea\u6709\u53f6\u5b50\u8282\u70b9\u624d\u80fd\u771f\u6b63\u5b58\u50a8\u6570\u636e\uff0c\u76f8\u5f53\u4e8e\u6587\u4ef6\u3002 \u53f6\u5b50\u8282\u70b9\u7684\u7236\u8282\u70b9\u4e00\u5b9a\u662f\u76ee\u5f55\uff0c\u76ee\u5f55\u4e0d\u80fd\u5b58\u50a8\u6570\u636e\u3002","title":"\u952e\u503c\u5bf9\u5b58\u50a8"},{"location":"3/1/#_4","text":"\u5f3a\u4e00\u81f4\u6027\u3001\u9ad8\u53ef\u7528\u7684\u670d\u52a1\u5b58\u50a8\u76ee\u5f55\u3002 \u57fa\u4e8e Raft \u7b97\u6cd5\u7684 etcd \u5929\u751f\u5c31\u662f\u8fd9\u6837\u4e00\u4e2a\u5f3a\u4e00\u81f4\u6027\u3001\u9ad8\u53ef\u7528\u7684\u670d\u52a1\u5b58\u50a8\u76ee\u5f55\u3002 \u4e00\u79cd\u6ce8\u518c\u670d\u52a1\u548c\u670d\u52a1\u5065\u5eb7\u72b6\u51b5\u7684\u673a\u5236\u3002 \u7528\u6237\u53ef\u4ee5\u5728 etcd \u4e2d\u6ce8\u518c\u670d\u52a1\uff0c\u5e76\u4e14\u5bf9\u6ce8\u518c\u7684\u670d\u52a1\u914d\u7f6e key TTL\uff0c\u5b9a\u65f6\u4fdd\u6301\u670d\u52a1\u7684\u5fc3\u8df3\u4ee5\u8fbe\u5230\u76d1\u63a7\u5065\u5eb7\u72b6\u6001\u7684\u6548\u679c\u3002","title":"\u670d\u52a1\u6ce8\u518c\u4e0e\u53d1\u73b0"},{"location":"3/1/#_5","text":"\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u6700\u9002\u7528\u7684\u4e00\u79cd\u7ec4\u4ef6\u95f4\u901a\u4fe1\u65b9\u5f0f\u5c31\u662f\u6d88\u606f\u53d1\u5e03\u4e0e\u8ba2\u9605\u3002 \u5373\u6784\u5efa\u4e00\u4e2a\u914d\u7f6e\u5171\u4eab\u4e2d\u5fc3\uff0c\u6570\u636e\u63d0\u4f9b\u8005\u5728\u8fd9\u4e2a\u914d\u7f6e\u4e2d\u5fc3\u53d1\u5e03\u6d88\u606f\uff0c\u800c\u6d88\u606f\u4f7f\u7528\u8005\u5219\u8ba2\u9605\u4ed6\u4eec\u5173\u5fc3\u7684\u4e3b\u9898\uff0c\u4e00\u65e6\u4e3b\u9898\u6709\u6d88\u606f\u53d1\u5e03\uff0c\u5c31\u4f1a\u5b9e\u65f6\u901a\u77e5\u8ba2\u9605\u8005\u3002 \u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u505a\u5230\u5206\u5e03\u5f0f\u7cfb\u7edf\u914d\u7f6e\u7684\u96c6\u4e2d\u5f0f\u7ba1\u7406\u4e0e\u52a8\u6001\u66f4\u65b0\u3002 \u5e94\u7528\u4e2d\u7528\u5230\u7684\u4e00\u4e9b\u914d\u7f6e\u4fe1\u606f\u653e\u5230 etcd \u4e0a\u8fdb\u884c\u96c6\u4e2d\u7ba1\u7406\u3002 \u5e94\u7528\u5728\u542f\u52a8\u7684\u65f6\u5019\u4e3b\u52a8\u4ece etcd \u83b7\u53d6\u4e00\u6b21\u914d\u7f6e\u4fe1\u606f\uff0c\u540c\u65f6\uff0c\u5728 etcd \u8282\u70b9\u4e0a\u6ce8\u518c\u4e00\u4e2a Watcher \u5e76\u7b49\u5f85\uff0c\u4ee5\u540e\u6bcf\u6b21\u914d\u7f6e\u6709\u66f4\u65b0\u7684\u65f6\u5019\uff0cetcd \u90fd\u4f1a\u5b9e\u65f6\u901a\u77e5\u8ba2\u9605\u8005\uff0c\u4ee5\u6b64\u8fbe\u5230\u83b7\u53d6\u6700\u65b0\u914d\u7f6e\u4fe1\u606f\u7684\u76ee\u7684\u3002","title":"\u6d88\u606f\u53d1\u5e03\u4e0e\u8ba2\u9605"},{"location":"3/1/#etcd_1","text":"\u4e0b\u8f7d\u5b89\u88c5\u5305\uff0c\u53c2\u8003 https://github.com/etcd-io/etcd/releases","title":"etcd \u7684\u5b89\u88c5"},{"location":"3/1/#_6","text":"ETCD_VER=v3.4.17 DOWNLOAD_URL=https://github.com/etcd-io/etcd/releases/download rm -f /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz rm -rf /tmp/etcd-download-test && mkdir -p /tmp/etcd-download-test curl -L ${DOWNLOAD_URL}/${ETCD_VER}/etcd-${ETCD_VER}-linux-amd64.tar.gz -o /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz tar xzvf /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz -C /tmp/etcd-download-test --strip-components=1","title":"\u5b89\u88c5"},{"location":"3/1/#_7","text":"cd /tmp/etcd-download-test/ ./etcd","title":"\u8fd0\u884c"},{"location":"3/1/#_8","text":"rm -f /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz rm -rf /tmp/etcd-download-test \u66f4\u591a\u4fe1\u606f\uff1a https://github.com/cncamp/101/blob/master/module5/1.etcd-member-list.MD","title":"\u6e05\u9664"},{"location":"3/1/#_9","text":"\u76ee\u524d\u6709\u5f88\u591a\u652f\u6301etcd\u7684\u5e93\u548c\u5ba2\u6237\u7aef\u5de5\u5177 \u547d\u4ee4\u884c\u5ba2\u6237\u7aef\u5de5\u5177 etcdctl \u5b89\u88c5: sudo apt install etcd-client(\u9ed8\u8ba4\u5df2\u5b89\u88c5) Go \u5ba2\u6237\u7aef go-etcd Java \u5ba2\u6237\u7aef jetcd Python \u5ba2\u6237\u7aef python-etcd","title":"\u7b2c\u4e09\u65b9\u5e93\u548c\u5ba2\u6237\u7aef\u5de5\u5177"},{"location":"3/1/#etcd_2","text":"cd /tmp/etcd-download-test/ \u67e5\u770b\u96c6\u7fa4\u6210\u5458\u72b6\u6001 ./etcdctl member list 8e9e05c52164694d, started, default, http://localhost:2380, http://localhost:2379, false ./etcdctl --endpoints=127.0.0.1:2379 member list --write-out=table +------------------+---------+---------+-----------------------+-----------------------+------------+ | ID | STATUS | NAME | PEER ADDRS | CLIENT ADDRS | IS LEARNER | +------------------+---------+---------+-----------------------+-----------------------+------------+ | 8e9e05c52164694d | started | default | http://localhost:2380 | http://localhost:2379 | false | +------------------+---------+---------+-----------------------+-----------------------+------------+","title":"etcd \u7ec3\u4e60"},{"location":"3/1/#_10","text":"","title":"\u57fa\u672c\u7684\u6570\u636e\u8bfb\u5199\u64cd\u4f5c"},{"location":"3/1/#_11","text":"./etcdctl --endpoints=localhost:2379 put /version v1 OK","title":"\u5199\u5165\u6570\u636e"},{"location":"3/1/#_12","text":"./etcdctl --endpoints=localhost:2379 get /version /version v1 ./etcdctl --endpoints=localhost:2379 get /version -wjson {\"header\":{\"cluster_id\":14841639068965178418,\"member_id\":10276657743932975437,\"revision\":2,\"raft_term\":3},\"kvs\":[{\"key\":\"L3ZlcnNpb24=\",\"create_revision\":2,\"mod_revision\":2,\"version\":1,\"value\":\"djE=\"}],\"count\":1} key \u548c value \u90fd\u662f base64 \u52a0\u5bc6\u4e86\u7684 echo L3ZlcnNpb24=|base64 -d /version echo djE=|base64 -d v1","title":"\u8bfb\u53d6\u6570\u636e"},{"location":"3/1/#key","text":"./etcdctl --endpoints=localhost:2379 put /version/java 1.8 ./etcdctl --endpoints=localhost:2379 put /version/hadoop 2.7.0 ./etcdctl --endpoints=localhost:2379 put /version/spark 3.2 ./etcdctl get --prefix /version /version v2 /version/hadoop 2.7.0 /version/java 1.8 /version/spark 3.2","title":"\u6309 key \u7684\u524d\u7f00\u67e5\u8be2\u6570\u636e"},{"location":"3/1/#_13","text":"./etcdctl get --prefix / --keys-only /version /version/hadoop /version/java /version/spark","title":"\u53ea\u663e\u793a\u952e\u503c"},{"location":"3/1/#debug","text":"\u7c7b\u4f3c\u4e8e k8s \u4e2d\u7684 -v=9 ./etcdctl get --prefix / --keys-only --debug ETCDCTL_CACERT= ETCDCTL_CERT= ETCDCTL_COMMAND_TIMEOUT=5s ETCDCTL_DEBUG=true ETCDCTL_DIAL_TIMEOUT=2s ETCDCTL_DISCOVERY_SRV= ETCDCTL_DISCOVERY_SRV_NAME= ETCDCTL_ENDPOINTS=[127.0.0.1:2379] ETCDCTL_HEX=false ETCDCTL_INSECURE_DISCOVERY=true ETCDCTL_INSECURE_SKIP_TLS_VERIFY=false ETCDCTL_INSECURE_TRANSPORT=true ETCDCTL_KEEPALIVE_TIME=2s ETCDCTL_KEEPALIVE_TIMEOUT=6s ETCDCTL_KEY= ETCDCTL_PASSWORD= ETCDCTL_USER= ETCDCTL_WRITE_OUT=simple WARNING: 2022/11/14 21:45:14 Adjusting keepalive ping interval to minimum period of 10s WARNING: 2022/11/14 21:45:14 Adjusting keepalive ping interval to minimum period of 10s INFO: 2022/11/14 21:45:14 parsed scheme: \"endpoint\" INFO: 2022/11/14 21:45:14 ccResolverWrapper: sending new addresses to cc: [{127.0.0.1:2379 <nil> 0 <nil>}] /version /version/hadoop /version/java /version/spark","title":"\u67e5\u770b debug \u4fe1\u606f"},{"location":"3/1/#_14","text":"./etcdctl --endpoints=localhost:2379 watch /version ./etcdctl --endpoints=localhost:2379 put /version v2 PUT /version v2 \u76d1\u542c\u524d\u7f00 ./etcdctl --endpoints=localhost:2379 watch --prefix /version","title":"\u76d1\u542c\u6570\u636e"},{"location":"3/1/#ttl-cas","text":"TTL (time to live)\u6307\u7684\u662f\u7ed9\u4e00\u4e2a key \u8bbe\u7f6e\u4e00\u4e2a\u6709\u6548\u671f\uff0c\u5230\u671f\u540e\u8fd9\u4e2a key \u5c31\u4f1a\u88ab\u81ea\u52a8\u5220\u6389\uff0c\u8fd9\u5728\u5f88\u591a\u5206\u5e03\u5f0f\u9501\u7684\u5b9e\u73b0\u4e0a\u90fd\u4f1a\u7528\u5230\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u9501\u7684\u5b9e\u65f6\u6709\u6548\u6027\u3002 Atomic Compare-and-Swap (CAS) \u6307\u7684\u662f\u5728\u5bf9 key \u8fdb\u884c\u8d4b\u503c\u7684\u65f6\u5019\uff0c\u5ba2\u6237\u7aef\u9700\u8981\u63d0\u4f9b\u4e00\u4e9b\u6761 \u4ef6\uff0c\u5f53\u8fd9\u4e9b\u6761\u4ef6\u6ee1\u8db3\u540e\uff0c\u624d\u80fd\u8d4b\u503c\u6210\u529f\u3002\u8fd9\u4e9b\u6761\u4ef6\u5305\u62ec\uff1a prevExist: key \u5f53\u524d\u8d4b\u503c\u524d\u662f\u5426\u5b58\u5728 prevValue: key \u5f53\u524d\u8d4b\u503c\u524d\u7684\u503c prevlndex: key \u5f53\u524d\u8d4b\u503c\u524d\u7684 Index \u8fd9\u6837\u7684\u8bdd\uff0ckey \u7684\u8bbe\u7f6e\u662f\u6709\u524d\u63d0\u7684\uff0c\u9700\u8981\u77e5\u9053\u8fd9\u4e2a key \u5f53\u524d\u7684\u5177\u4f53\u60c5\u51b5\u624d\u53ef\u4ee5\u5bf9\u5176\u8bbe\u7f6e\u3002","title":"\u6838\u5fc3\uff1aTTL &amp; CAS"},{"location":"3/1/#k8s-etcd","text":"","title":"\u67e5\u770b k8s \u5728 etcd \u4e2d\u5b58\u50a8\u7684\u6570\u636e"},{"location":"3/1/#etcd_3","text":"ks get pod|grep etcd ks exec -it etcd-cjx sh","title":"\u8fdb\u5165 etcd \u5bb9\u5668"},{"location":"3/1/#_15","text":"ps -ef|grep etcd root 2431 2372 2 14:23 ? 00:00:08 etcd --advertise-client-urls=https://192.168.1.168:2379 --cert-file=/etc/kubernetes/pki/etcd/server.crt --client-cert-auth=true --data-dir=/var/lib/etcd --experimental-initial-corrupt-check=true --initial-advertise-peer-urls=https://192.168.1.168:2380 --initial-cluster=cjx=https://192.168.1.168:2380 --key-file=/etc/kubernetes/pki/etcd/server.key --listen-client-urls=https://127.0.0.1:2379,https://192.168.1.168:2379 --listen-metrics-urls=http://127.0.0.1:2381 --listen-peer-urls=https://192.168.1.168:2380 --name=cjx --peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt --peer-client-cert-auth=true --peer-key-file=/etc/kubernetes/pki/etcd/peer.key --peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt --snapshot-count=10000 --trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt endpoints: --advertise-client-urls=https://192.168.1.168:2379 cert: --cert-file=/etc/kubernetes/pki/etcd/server.crt key: --key-file=/etc/kubernetes/pki/etcd/server.key cacert: --trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt","title":"\u67e5\u770b\u542f\u52a8\u53c2\u6570"},{"location":"3/1/#_16","text":"","title":"\u64cd\u4f5c"},{"location":"3/1/#member-list","text":"etcdctl --endpoints https://127.0.0.1:2379 --cert /etc/kubernetes/pki/etcd/server.crt --key /etc/kubernetes/pki/etcd/server.key --cacert /etc/kubernetes/pki/etcd/ca.crt member list --write-out=table output +------------------+---------+------+----------------------------+----------------------------+------------+ | ID | STATUS | NAME | PEER ADDRS | CLIENT ADDRS | IS LEARNER | +------------------+---------+------+----------------------------+----------------------------+------------+ | 37646e37976003c2 | started | cjx | https://192.168.1.168:2380 | https://192.168.1.168:2379 | false | +------------------+---------+------+----------------------------+----------------------------+------------+","title":"member list"},{"location":"3/1/#get","text":"etcdctl --endpoints https://127.0.0.1:2379 --cert /etc/kubernetes/pki/etcd/server.crt --key /etc/kubernetes/pki/etcd/server.key --cacert /etc/kubernetes/pki/etcd/ca.crt get --prefix / --keys-only output ...... /registry/pods/default/nginx ...... /registry/pods/kube-system/kube-proxy-kwnx7 ...... /registry/services/specs/calico-system/calico-typha /registry/services/specs/default/kubernetes /registry/services/specs/kube-system/kube-dns","title":"get"},{"location":"3/1/#_17","text":"etcdctl --endpoints https://127.0.0.1:2379 --cert /etc/kubernetes/pki/etcd/server.crt --key /etc/kubernetes/pki/etcd/server.key --cacert /etc/kubernetes/pki/etcd/ca.crt get /registry/pods/default/nginx etcdctl --endpoints https://127.0.0.1:2379 --cert /etc/kubernetes/pki/etcd/server.crt --key /etc/kubernetes/pki/etcd/server.key --cacert /etc/kubernetes/pki/etcd/ca.crt get /registry/pods/kube-system/kube-proxy-kwnx7 \u7ed3\u679c\u4ee5 protobuf \u683c\u5f0f\u5b58\u50a8","title":"\u83b7\u53d6\u7ec6\u8282"},{"location":"3/2/","text":"Raft\u534f\u8bae Raft\u534f\u8bae\u6982\u89c8 Raft \u534f\u8bae\u57fa\u4e8e quorum \u673a\u5236, \u5373\u5927\u591a\u6570\u540c\u610f\u539f\u5219, \u4efb\u4f55\u7684\u53d8\u66f4\u90fd\u9700\u8d85\u8fc7\u534a\u6570\u7684\u6210\u5458\u786e\u8ba4 \u7406\u89e3Raft\u534f\u8bae(\u975e\u5e38\u597d) http://thesecretlivesofdata.com/raft/ learner Raft 4.2.1 \u5f15\u5165\u7684\u65b0\u89d2\u8272 \u5f53\u51fa\u73b0\u4e00\u4e2a etcd \u96c6\u7fa4\u9700\u8981\u589e\u52a0\u8282\u70b9\u65f6, \u65b0\u8282\u70b9\u4e0e Leader \u7684\u6570\u636e\u5dee\u5f02\u8f83\u5927, \u9700\u8981\u8f83\u591a\u6570\u636e\u540c\u6b65\u624d\u80fd\u8ddf\u4e0a leader \u7684\u6700\u65b0\u7684\u6570\u636e. \u6b64\u65f6 Leader \u7684\u7f51\u7edc\u5e26\u5bbd\u5f88\u53ef\u80fd\u88ab\u7528\u5c3d, \u8fdb\u800c\u4f7f\u5f97 leader \u65e0\u6cd5\u6b63\u5e38\u4fdd\u6301\u5fc3\u8df3. \u8fdb\u800c\u5bfc\u81f4 follower \u91cd\u65b0\u53d1\u8d77\u6295\u7968. \u8fdb\u800c\u53ef\u80fd\u5f15\u53d1 etcd \u96c6\u7fa4\u4e0d\u53ef\u7528. Learner \u89d2\u8272\u53ea\u63a5\u6536\u6570\u636e\u800c\u4e0d\u53c2\u4e0e\u6295\u7968, \u56e0\u6b64\u589e\u52a0 learner \u8282\u70b9\u65f6, \u96c6\u7fa4\u7684 quorum \u4e0d\u53d8. etcd\u57fa\u4e8eRaft\u7684\u4e00\u81f4\u6027 \u9009\u4e3e\u65b9\u6cd5 \u521d\u59cb\u542f\u52a8\u65f6, \u8282\u70b9\u5904\u4e8e follower \u72b6\u6001\u5e76\u88ab\u8bbe\u5b9a\u4e00\u4e2a election timeout, \u5982\u679c\u5728\u8fd9\u4e00\u65f6\u95f4\u5468\u671f\u5185\u6ca1\u6709\u6536\u5230\u6765\u81ea leader \u7684 heartbeat, \u8282\u70b9\u5c06\u53d1\u8d77\u9009\u4e3e: \u5c06\u81ea\u5df1\u5207\u6362\u4e3a candidate \u4e4b\u540e, \u5411\u96c6\u7fa4\u4e2d\u5176\u5b83 follower \u8282\u70b9\u53d1\u9001\u8bf7\u6c42, \u8be2\u95ee\u5176\u662f\u5426\u9009\u4e3e\u81ea\u5df1\u6210\u4e3a leader. \u5f53\u6536\u5230\u6765\u81ea\u96c6\u7fa4\u4e2d\u8fc7\u534a\u6570\u8282\u70b9\u7684\u63a5\u53d7\u6295\u7968\u540e, \u8282\u70b9\u5373\u6210\u4e3a leader, \u5f00\u59cb\u63a5\u6536\u4fdd\u5b58 client \u7684\u6570\u636e\u5e76\u5411\u5176\u5b83\u7684 follower \u8282\u70b9\u540c\u6b65\u65e5\u5fd7. \u5982\u679c\u6ca1\u6709\u8fbe\u6210\u4e00\u81f4, \u5219 candidate \u968f\u673a\u9009\u62e9\u4e00\u4e2a\u7b49\u5f85\u95f4\u9694(150ms ~ 300ms) \u518d\u6b21\u53d1\u8d77\u6295\u7968, \u5f97\u5230\u96c6\u7fa4\u4e2d\u534a\u6570\u4ee5\u4e0a follower \u63a5\u53d7\u7684 candidate \u5c06\u6210\u4e3a leader leader \u8282\u70b9\u4f9d\u9760\u5b9a\u65f6\u5411 follower \u53d1\u9001 heartbeat \u6765\u4fdd\u6301\u5176\u5730\u4f4d. \u4efb\u4f55\u65f6\u5019\u5982\u679c\u5176\u5b83 follower \u5728 election timeout \u671f\u95f4\u90fd\u6ca1\u6709\u6536\u5230\u6765\u81ea leader \u7684 heartbeat, \u540c\u6837\u4f1a\u5c06\u81ea\u5df1\u7684\u72b6\u6001\u5207\u6362\u4e3a candidate \u5e76\u53d1\u8d77\u9009\u4e3e. \u6bcf\u6210\u529f\u9009\u4e3e\u4e00\u6b21, \u65b0 leader \u7684\u4efb\u671f(Term)\u90fd\u4f1a\u6bd4\u4e4b\u524d leader \u7684\u4efb\u671f\u59271. \u65e5\u5fd7\u590d\u5236 \u5f53\u63a5 Leader \u6536\u5230\u5ba2\u6237\u7aef\u7684\u65e5\u5fd7(\u4e8b\u52a1\u8bf7\u6c42)\u540e\u5148\u628a\u8be5\u65e5\u5fd7\u8ffd\u52a0\u5230\u672c\u5730\u7684 Log \u4e2d, \u7136\u540e\u901a\u8fc7 heartbeat \u8be5Entry\u540c\u6b65\u7ed9\u5176\u4ed6 Follower, Follower \u63a5\u6536\u5230\u65e5\u5fd7\u540e\u8bb0\u5f55\u65e5\u5fd7\u7136\u540e\u5411 Leader \u53d1\u9001 ACK, \u5f53 Leader \u6536\u5230\u5927\u591a\u6570(n/2+1) Follower \u7684 ACK \u4fe1\u606f\u540e\u5c06\u8be5\u65e5\u5fd7\u8bbe\u7f6e\u4e3a\u5df2\u63d0\u4ea4\u5e76\u8ffd\u52a0\u5230\u672c\u5730\u78c1\u76d8\u4e2d, \u901a\u77e5\u5ba2\u6237\u7aef\u5e76\u5728\u4e0b\u4e2a heartbeat \u4e2d Leader \u5c06\u901a\u77e5\u6240\u6709\u7684 Follower \u5c06\u8be5\u65e5\u5fd7\u5b58\u50a8\u5728\u81ea\u5df1\u7684\u672c\u5730\u78c1\u76d8\u4e2d. \u5b89\u5168\u6027 \u5b89\u5168\u6027\u662f\u7528\u4e8e\u4fdd\u8bc1\u6bcf\u4e2a\u8282\u70b9\u90fd\u6267\u884c\u76f8\u540c\u5e8f\u5217\u7684\u5b89\u5168\u673a\u5236, \u5982\u5f53\u67d0\u4e2a Follower \u5728\u5f53\u524d Leader commit Log \u65f6\u53d8\u5f97\u4e0d\u53ef\u7528\u4e86, \u7a0d\u540e\u53ef\u80fd\u8be5 Follower \u53c8\u4f1a\u88ab\u9009\u4e3e\u4e3a Leader, \u8fd9\u65f6\u65b0 Leader \u53ef\u80fd\u4f1a\u7528\u65b0\u7684 Log \u8986\u76d6\u5148\u524d\u5df2 committed \u7684 Log, \u8fd9\u5c31\u662f\u5bfc\u81f4\u8282\u70b9\u6267\u884c\u4e0d\u540c\u5e8f\u5217\uff1bSafety \u5c31\u662f\u7528\u4e8e\u4fdd\u8bc1\u9009\u4e3e\u51fa\u6765\u7684 Leader \u4e00\u5b9a\u5305\u542b\u5148\u524d committed Log \u7684\u673a\u5236\uff1b \u9009\u4e3e\u5b89\u5168\u6027(Election Safety): \u6bcf\u4e2a\u4efb\u671f(Term)\u53ea\u80fd\u9009\u4e3e\u51fa\u4e00\u4e2a Leader Leader \u5b8c\u6574\u6027(Leader Completeness): \u6307 Leader \u65e5\u5fd7\u7684\u5b8c\u6574\u6027, \u5f53 Log \u5728\u4efb\u671f Term1 \u88ab Commit \u540e, \u90a3\u4e48\u4ee5\u540e\u4efb\u671f Term2\u3001Term3... \u7b49\u7684 Leader \u5fc5\u987b\u5305\u542b\u8be5 Log; Raft \u5728\u9009\u4e3e\u9636\u6bb5\u865f\u4f7f\u7528 Term \u7684\u5224\u65ad\u7528\u4e8e\u4fdd\u8bc1\u5b8c\u6574\u6027: \u5f53\u8bf7\u6c42\u6295\u7968\u7684\u8be5 Candidate \u7684 Term \u8f83\u5927\u6216 Term \u76f8\u540c Index \u66f4\u5927\u5219\u6295\u7968, \u5426\u5219\u62d2\u7edd\u8be5\u8bf7\u6c42. \u5931\u6548\u5904\u7406 Leader \u5931\u6548: \u5176\u4ed6\u6ca1\u6709\u6536\u5230 heartbeat \u7684\u8282\u70b9\u4f1a\u53d1\u8d77\u65b0\u7684\u9009\u4e3e, \u800c\u5f53 Leader \u590d\u540e\u7531\u4e8e\u6b65\u8fdb\u6570\u5c0f\u4f1a\u81ea\u52a8\u6210\u4e3a follower (\u65e5\u5fd7\u4e5f\u4f1a\u88ab\u65b0 leader \u7684\u65e5\u5fd7\u8986\u76d6) follower \u8282\u70b9\u4e0d\u53ef\u7528: follower \u8282\u70b9\u4e0d\u53ef\u7528\u7684\u60c5\u51b5\u76f8\u5bf9\u5bb9\u6613\u89e3\u51b3. \u56e0\u4e3a\u96c6\u7fa4\u4e2d\u7684\u65e5\u5fd7\u5185\u5bb9\u59cb\u7ec8\u662f\u4ece leader \u8282\u70b9\u540c\u6b65\u7684, \u53ea\u8981\u8fd9\u4e00\u8282\u70b9\u518d\u6b21\u52a0\u5165\u96c6\u7fa4\u65f6\u91cd\u65b0\u4ece leader \u8282\u70b9\u5904\u590d\u5236\u65e5\u5fd7\u5373\u53ef. \u591a\u4e2a candidate: \u51b2\u7a81\u540e candidate \u5c06\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u7b49\u5f85\u95f4\u9694(150ms - 300ms)\u518d\u6b21\u53d1\u8d77\u6295\u7968, \u5f97\u5230\u96c6\u7fa4\u4e2d\u534a\u6570\u4ee5\u4e0a follower \u63a5\u53d7\u7684 candidate \u5c06\u6210\u4e3a leader wal\u65e5\u5fd7(write ahead log) wal \u65e5\u5fd7\u662f\u4e8c\u8fdb\u5236\u7684, \u89e3\u6790\u51fa\u6765\u540e\u662f\u4ee5\u4e0a\u6570\u636e\u7ed3\u6784 LogEntry. \u5176\u4e2d\u7b2c\u4e00\u4e2a\u5b57\u6bb5 type, \u2014\u79cd\u662f 0 \u8868\u793a Normal, 1 \u8868\u793a ConfChange ConfChange \u8868\u793a Etcd \u672c\u8eab\u7684\u914d\u7f6e\u53d8\u66f4\u540c\u6b65, \u6bd4\u5982\u6709\u65b0\u7684\u8282\u70b9\u52a0\u5165\u7b49). \u7b2c\u4e8c\u4e2a\u5b57\u6bb5\u662f term, \u6bcf\u4e2a term \u4ee3\u8868\u4e00\u4e2a\u4e3b\u8282\u70b9\u7684\u4efb\u671f, \u6bcf\u6b21\u4e3b\u8282\u70b9\u53d8\u66f4 term \u5c31\u4f1a\u53d8\u5316. \u7b2c\u4e09\u4e2a\u5b57\u6bb5\u662f index, \u8fd9\u4e2a\u5e8f\u53f7\u662f\u4e25\u683c\u6709\u5e8f\u9012\u589e\u7684, \u4ee3\u8868\u53d8\u66f4\u5e8f\u53f7. \u7b2c\u56db\u4e2a\u5b57\u6bb5\u662f\u4e8c\u8fdb\u5236\u7684 data, \u5c06 raft request \u5bf9\u8c61\u7684 pb \u7ed3\u6784\u6574\u4e2a\u4fdd\u5b58\u4e0b. etcd \u6e90\u7801\u4e0b\u6709\u4e2a tools/etcd-dump-logs, \u53ef\u4ee5\u5c06 wal \u65e5\u5fd7 dump \u6210\u6587\u672c\u67e5\u770b, \u53ef\u4ee5\u534f\u52a9\u5206\u6790 Raft \u534f\u8bae. Raft \u534f\u8bae\u672c\u8eab\u4e0d\u5173\u5fc3\u5e94\u7528\u6570\u636e, \u4e5f\u5c31\u662f data \u4e2d\u7684\u90e8\u5206, \u4e00\u81f4\u6027\u90fd\u901a\u8fc7\u540c\u6b65 wal \u65e5\u5fd7\u6765\u5b9e\u73b0, \u6bcf\u4e2a\u8282\u70b9\u5c06\u4ece\u4e3b\u8282\u70b9\u6536\u5230\u7684 data apply \u5230\u672c\u5730\u7684\u5b58\u50a8, Raft \u53ea\u5173\u5fc3\u65e5\u5fd7\u7684\u540c\u6b65\u72b6\u6001, \u5982\u679c\u672c\u5730\u5b58\u50a8\u5b9e\u73b0\u7684\u6709 bug, \u6bd4\u5982\u6ca1\u6709\u6b63\u786e\u5357\u5c06 data apply \u5230\u672c\u5730, \u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6570\u636e\u4e0d\u4e00\u81f4. etcd v3\u5b58\u50a8, Watch\u4ee5\u53ca\u8fc7\u671f\u673a\u5236 \u5b58\u50a8\u673a\u5236 etcd v3 store \u5206\u4e3a\u4e24\u90e8\u5206, \u4e00\u90e8\u5206\u662f\u5185\u5b58\u4e2d\u7684\u7d22\u5f15, kvindex, \u662f\u57fa\u4e8e Google \u5f00\u6e90\u7684\u4e00\u4e2a Golang \u7684 btree \u5b9e\u73b0\u7684, \u53e6\u5916\u4e00\u90e8\u5206\u662f\u540e\u7aef\u5b58\u50a8. \u6309\u7167\u5b83\u7684\u8bbe\u8ba1, backend \u53ef\u4ee5\u5bf9\u63a5\u591a\u79cd\u5b58\u50a8, \u5f53\u524d\u4f7f\u7528\u7684 boltdb. boltdb \u662f\u4e00\u4e2a\u5355\u673a\u7684\u652f\u6301\u4e8b\u52a1\u7684 kv \u5b58\u50a8, etcd \u7684\u4e8b\u52a1\u662f\u57fa\u4e8e boltdb \u7684\u4e8b\u52a1\u5b9e\u73b0\u7684. etcd \u5728 boltdb \u4e2d\u5b58\u50a8\u7684 key \u662f reversion, value \u662f etcd \u81ea\u5df1\u7684 key-value \u7ec4\u5408, \u4e5f\u5c31\u662f\u8bf4 etcd \u4f1a\u5728 boltdb \u4e2d\u628a\u6bcf\u4e2a\u7248\u672c\u90fd\u4fdd\u5b58\u4e0b, \u4ece\u800c\u5b9e\u73b0\u4e86\u591a\u7248\u672c\u673a\u5236. reversion \u4e3b\u8981\u7531\u4e24\u90e8\u5206\u7ec4\u6210, \u7b2c\u4e00\u90e8\u5206 main rev, \u6bcf\u6b21\u4e8b\u52a1\u8fdb\u884c\u52a0\u4e00, \u7b2c\u4e8c\u90e8\u5206 sub rev, \u540c\u4e00\u4e2a\u4e8b\u52a1\u4e2d\u7684\u6bcf\u6b21\u64cd\u4f5c\u52a0\u4e00. etcd \u63d0\u4f9b\u4e86\u547d\u4ee4\u548c\u8bbe\u7f6e\u9009\u9879\u6765\u63a7\u5236 compact, \u540c\u65f6\u652f\u6301 put \u64cd\u4f5c\u7684\u53c2\u6570\u6765\u7cbe\u786e\u63a7\u5236\u67d0\u4e2a key \u7684\u5386\u53f2\u7248\u672c\u6570. \u5185\u5b58 kvindex \u4fdd\u5b58\u7684\u5c31\u662f key \u548c reversion \u4e4b\u524d\u7684\u6620\u5c04\u5173\u7cfb, \u7528\u6765\u52a0\u901f\u67e5\u8be2. etcd \u7684\u6570\u636e\u4e00\u81f4\u6027 Watch \u673a\u5236 etcd v3 \u7684 watch \u673a\u5236\u652f\u6301 watch \u67d0\u4e2a\u56fa\u5b9a\u7684 key, \u4e5f\u652f\u6301 watch \u4e00\u4e2a\u8303\u56f4(\u53ef\u4ee5\u7528\u4e8e\u6a21\u62df\u76ee\u5f55\u7684 \u7ed3\u6784\u7684 watch), \u6240\u4ee5 watchGroup \u5305\u542b\u4e24\u79cd watcher, \u2014\u79cd\u662f key watchers, \u6570\u636e\u7ed3\u6784\u662f\u6bcf\u4e2a key \u5bf9\u5e94\u4e00\u7ec4 watcher, \u53e6\u5916\u4e00\u79cd\u662f range watchers, \u6570\u636e\u7ed3\u6784\u662f\u4e00\u4e2a IntervalTree, \u65b9\u4fbf\u901a\u8fc7\u533a\u95f4\u67e5\u627e\u5230\u5bf9\u5e94\u7684 watcher. \u540c\u65f6, \u6bcf\u4e2a WatchableStore \u5305\u542b\u4e24\u79cd watcherGroup, \u2014\u79cd\u662f synced, \u2014\u79cd\u662f unsynced, \u524d\u8005\u8868\u793a\u8be5 group \u7684 watcher \u6570\u636e\u90fd\u5df2\u7ecf\u540c\u6b65\u5b8c\u6bd5, \u5728\u7b49\u5f85\u65b0\u7684\u53d8\u66f4, \u540e\u8005\u8868\u793a\u8be5 group \u7684 watcher \u6570\u636e\u540c\u6b65\u843d\u540e\u4e8e\u5f53\u524d\u6700\u65b0\u53d8\u66f4, \u8fd8\u5728\u8ffd\u8d76. \u5f53 etcd \u6536\u5230\u5ba2\u6237\u7aef\u7684 watch \u8bf7\u6c42, \u5982\u679c\u8bf7\u6c42\u643a\u5e26\u4e86 revision \u53c2\u6570, \u5219\u6bd4\u8f83\u8bf7\u6c42\u7684 revision \u548c store \u5f53\u524d\u7684 revision, \u5982\u679c\u5927\u4e8e\u5f53\u524d revision, \u5219\u653e\u5165 synced \u7ec4\u4e2d, \u5426\u5219\u653e\u5165 unsynced\u7ec4. \u540c\u65f6 etcd \u4f1a\u542f\u52a8\u4e00\u4e2a\u540e\u53f0\u7684 goroutine \u6301\u7eed\u540c\u6b65 unsynced \u7684 watcher, \u7136\u540e\u5c06\u5176\u8fc1\u79fb\u5230 synced \u7ec4. \u4e5f\u5c31\u662f\u8fd9\u79cd\u673a\u5236\u4e0b, etcd v3 \u652f\u6301\u4ece\u4efb\u610f\u7248\u672c\u5f00 Swatch, \u6ca1\u6709 v2 \u7684 1000 \u6761\u5386\u53f2 event \u8868\u9650\u5236\u7684\u95ee\u9898(\u5f53\u7136\u8fd9\u662f\u6307\u6ca1\u6709 compact \u7684\u60c5\u51b5\u4e0b) etcd \u7ec3\u4e60 on kubernetes \u67e5\u770b\u96c6\u7fa4\u6210\u5458\u72b6\u6001 etcdctl member list --write-out=table etcdctl --endpoints https://127.0.0.1:2379 --cert /etc/kubernetes/pki/etcd/server.crt --key /etc/kubernetes/pki/etcd/server.key --cacert /etc/kubernet<-key /etc/kubernetes/pki/etcd/server.key --cacert /etc/kubernetes/pki/etcd/ca.crt member list --write-out=table +------------------+---------+------+----------------------------+----------------------------+------------+ | ID | STATUS | NAME | PEER ADDRS | CLIENT ADDRS | IS LEARNER | +------------------+---------+------+----------------------------+----------------------------+------------+ | 37646e37976003c2 | started | cjx | https://192.168.1.168:2380 | https://192.168.1.168:2379 | false | +------------------+---------+------+----------------------------+----------------------------+------------+ on docker \u542f\u52a8\u65b0 etcd \u96c6\u7fa4 docker run --name etcd -d registry.aliyuncs.com/google_containers/etcd:3.5.0-0 /usr/local/bin/etcd \u8fdb\u5165 etcd \u5bb9\u5668 docker exec -it etcd sh \u5b58\u5165\u6570\u636e etcdctl put x 0 \u8bfb\u53d6\u6570\u636e etcdctl get x -w=json etcdctl get x -wjson {\"header\":{\"cluster_id\":14841639068965178418,\"member_id\":10276657743932975437,\"revision\":2,\"raft_term\":2},\"kvs\":[{\"key\":\"eA==\",\"create_revision\":2,\"mod_revision\":2,\"version\":1,\"value\":\"MA==\"}],\"count\":1} \u4fee\u6539\u503c etcdctl put x 1 \u67e5\u8be2\u6700\u65b0\u503c etcdctl get x etcdctl get x --rev=0 \u67e5\u8be2\u5386\u53f2\u7248\u672c\u503c etcdctl get x --rev=2 \u4fee\u6539\u503c etcdctl put x 2 \u67e5\u8be2\u6700\u65b0\u503c etcdctl get x --rev=0 etcdctl get x --rev=0 -wjson \u67e5\u8be2\u5386\u53f2\u7248\u672c\u503c etcdctl get x --rev=2 etcdctl get x --rev=3 -wjson --rev = revision, \u83b7\u53d6\u6307\u5b9a\u5177\u4f53\u7248\u672c\u7684\u503c revision: \u5168\u5c40\u7248\u672c create_revision: \u521b\u5efa\u6570\u636e\u65f6\u5bf9\u5e94\u7684\u5168\u5c40\u7248\u672c mod_revision: \u5f53\u524d\u6570\u636e\u5bf9\u5e94\u7684\u5168\u5c40\u7248\u672c version: \u6570\u636e\u81ea\u5df1\u7684\u7248\u672c etcd\u6210\u5458\u91cd\u8981\u53c2\u6570 \u6210\u5458\u76f8\u5173\u53c2\u6570 --name 'default1 Human-readable name for this member. --data-dir '${name}.etcd' Path to the data directory. --listen-peer-urls 'http://localhost:2380' List of URLs to listen on for peer traffic. --listen-client-urls 'http://localhost:2379' List of URLs to listen on for client traffic. etcd\u96c6\u7fa4\u91cd\u8981\u53c2\u6570 \u96c6\u7fa4\u76f8\u5173\u53c2\u6570 --initial-advertise-peer-urls 'http://localhost:2380' List of this member's peer URLs to advertise to the rest of the cluster. --initial-cluster 'default=http://localhost:2380' Initial cluster configuration for bootstrapping. --initial-cluster-state 'new' Initial cluster state('new' or 'existing1). --initial-cluster-token 'etcd-cluster' Initial cluster token for the etcd cluster during bootstrap. --advertise-client-urls 'http://localhost:2379' List of this member's client URLs to advertise to the public. etcd\u5b89\u5168\u76f8\u5173\u53c2\u6570 --cert-file \" Path to the client server TLS cert file. --key-file \" Path to the client server TLS key file, --client-crl-file \" Path to the client certificate revocation List file, --trusted-ca-file \" Path to the client server TLS trusted CA cert file, --peer-cert-file \" Path to the peer server TLS cert file. --peer-key-file \" Path to the peer server TLS key file, --peer-trusted-ca-file \" Path to the peer server TLS trusted CA file. \u707e\u5907 \u521b\u5efa Snapshot etcdctl \u2014endpoints https://127.0.0.1:3379 \u2014cert /tmp/etcd-certs/certs/127.0.0.1 .pem - -key /tmp/etcd-certs/certs/127.0.0.1 -key.pem --cacert /tmp/etcd-certs/certs/ca.pem snapshot save snapshot.db \u6062\u590d\u6570\u636e etcdctl snapshot restore snapshot.db \\ --name infra2 \\ --data-dir=/tmp/etcd/infra2 \\ --initial-cluster infra0=http://127.0.0.1:3380,infra1=http://127.0.0.1:4380,infra2=http://127.0.0.1:5380 \\ --initial-cluster-token etcd-cluster-1 \\ --initial-advertise-peer-urls http://127.0.0.1:5380 \u5bb9\u91cf\u7ba1\u7406 \u5355\u4e2a\u5bf9\u8c61\u4e0d\u5efa\u8bae\u8d85\u8fc7 1.5M \u9ed8\u8ba4\u5bb9\u91cf 2G \u4e0d\u5efa\u8bae\u8d85\u8fc7 8G Alarm & Disarm Alarm \u8bbe\u7f6e etcd \u5b58\u50a8\u5927\u5c0f $ etcd --quota-backend-bytes=$((16*1024*1024)) \u5199\u7206\u78c1\u76d8 $ while [1]; do dd if=/dev/urandom bs=1024 count=1024 | ETCDCTL_API=3 etcdctl put key || break; done \u67e5\u770b endpoint \u72b6\u6001 $ ETCDCTL_API=3 etcdctl --write-out=table endpoint status \u67e5\u770b alarm $ ETCDCTL_API=3 etcdctl alarm list \u6e05\u7406\u788e\u7247 $ ETCDCTL_API=3 etcdctl defrag \u6e05\u7406 alarm $ ETCDCTL_API=3 etcdctl alarm disarm \u788e\u7247\u6574\u7406 #keep one hour of history $ etcd --auto-compaction-retention=1 #compact up to revision 3 $ etcdctl compact 3 $ etcdctl defrag Finished defragmenting etcd member[127.0.0.1:2379] \u8bfe\u540e\u7ec3\u4e605.1 \u6309\u7167\u8bfe\u4e0a\u8bb2\u89e3\u7684\u65b9\u6cd5\u5728\u672c\u5730\u6784\u5efa\u4e00\u4e2a\u5355\u8282\u70b9\u7684\u57fa\u4e8e HTTPS \u7684 etcd \u96c6\u7fa4 \u5199\u4e00\u6761\u6570\u636e \u67e5\u770b\u6570\u636e\u7ec6\u8282 \u5220\u9664\u6570\u636e","title":"Raft\u534f\u8bae"},{"location":"3/2/#raft","text":"","title":"Raft\u534f\u8bae"},{"location":"3/2/#raft_1","text":"Raft \u534f\u8bae\u57fa\u4e8e quorum \u673a\u5236, \u5373\u5927\u591a\u6570\u540c\u610f\u539f\u5219, \u4efb\u4f55\u7684\u53d8\u66f4\u90fd\u9700\u8d85\u8fc7\u534a\u6570\u7684\u6210\u5458\u786e\u8ba4","title":"Raft\u534f\u8bae\u6982\u89c8"},{"location":"3/2/#raft_2","text":"http://thesecretlivesofdata.com/raft/","title":"\u7406\u89e3Raft\u534f\u8bae(\u975e\u5e38\u597d)"},{"location":"3/2/#learner","text":"Raft 4.2.1 \u5f15\u5165\u7684\u65b0\u89d2\u8272 \u5f53\u51fa\u73b0\u4e00\u4e2a etcd \u96c6\u7fa4\u9700\u8981\u589e\u52a0\u8282\u70b9\u65f6, \u65b0\u8282\u70b9\u4e0e Leader \u7684\u6570\u636e\u5dee\u5f02\u8f83\u5927, \u9700\u8981\u8f83\u591a\u6570\u636e\u540c\u6b65\u624d\u80fd\u8ddf\u4e0a leader \u7684\u6700\u65b0\u7684\u6570\u636e. \u6b64\u65f6 Leader \u7684\u7f51\u7edc\u5e26\u5bbd\u5f88\u53ef\u80fd\u88ab\u7528\u5c3d, \u8fdb\u800c\u4f7f\u5f97 leader \u65e0\u6cd5\u6b63\u5e38\u4fdd\u6301\u5fc3\u8df3. \u8fdb\u800c\u5bfc\u81f4 follower \u91cd\u65b0\u53d1\u8d77\u6295\u7968. \u8fdb\u800c\u53ef\u80fd\u5f15\u53d1 etcd \u96c6\u7fa4\u4e0d\u53ef\u7528. Learner \u89d2\u8272\u53ea\u63a5\u6536\u6570\u636e\u800c\u4e0d\u53c2\u4e0e\u6295\u7968, \u56e0\u6b64\u589e\u52a0 learner \u8282\u70b9\u65f6, \u96c6\u7fa4\u7684 quorum \u4e0d\u53d8.","title":"learner"},{"location":"3/2/#etcdraft","text":"\u9009\u4e3e\u65b9\u6cd5 \u521d\u59cb\u542f\u52a8\u65f6, \u8282\u70b9\u5904\u4e8e follower \u72b6\u6001\u5e76\u88ab\u8bbe\u5b9a\u4e00\u4e2a election timeout, \u5982\u679c\u5728\u8fd9\u4e00\u65f6\u95f4\u5468\u671f\u5185\u6ca1\u6709\u6536\u5230\u6765\u81ea leader \u7684 heartbeat, \u8282\u70b9\u5c06\u53d1\u8d77\u9009\u4e3e: \u5c06\u81ea\u5df1\u5207\u6362\u4e3a candidate \u4e4b\u540e, \u5411\u96c6\u7fa4\u4e2d\u5176\u5b83 follower \u8282\u70b9\u53d1\u9001\u8bf7\u6c42, \u8be2\u95ee\u5176\u662f\u5426\u9009\u4e3e\u81ea\u5df1\u6210\u4e3a leader. \u5f53\u6536\u5230\u6765\u81ea\u96c6\u7fa4\u4e2d\u8fc7\u534a\u6570\u8282\u70b9\u7684\u63a5\u53d7\u6295\u7968\u540e, \u8282\u70b9\u5373\u6210\u4e3a leader, \u5f00\u59cb\u63a5\u6536\u4fdd\u5b58 client \u7684\u6570\u636e\u5e76\u5411\u5176\u5b83\u7684 follower \u8282\u70b9\u540c\u6b65\u65e5\u5fd7. \u5982\u679c\u6ca1\u6709\u8fbe\u6210\u4e00\u81f4, \u5219 candidate \u968f\u673a\u9009\u62e9\u4e00\u4e2a\u7b49\u5f85\u95f4\u9694(150ms ~ 300ms) \u518d\u6b21\u53d1\u8d77\u6295\u7968, \u5f97\u5230\u96c6\u7fa4\u4e2d\u534a\u6570\u4ee5\u4e0a follower \u63a5\u53d7\u7684 candidate \u5c06\u6210\u4e3a leader leader \u8282\u70b9\u4f9d\u9760\u5b9a\u65f6\u5411 follower \u53d1\u9001 heartbeat \u6765\u4fdd\u6301\u5176\u5730\u4f4d. \u4efb\u4f55\u65f6\u5019\u5982\u679c\u5176\u5b83 follower \u5728 election timeout \u671f\u95f4\u90fd\u6ca1\u6709\u6536\u5230\u6765\u81ea leader \u7684 heartbeat, \u540c\u6837\u4f1a\u5c06\u81ea\u5df1\u7684\u72b6\u6001\u5207\u6362\u4e3a candidate \u5e76\u53d1\u8d77\u9009\u4e3e. \u6bcf\u6210\u529f\u9009\u4e3e\u4e00\u6b21, \u65b0 leader \u7684\u4efb\u671f(Term)\u90fd\u4f1a\u6bd4\u4e4b\u524d leader \u7684\u4efb\u671f\u59271.","title":"etcd\u57fa\u4e8eRaft\u7684\u4e00\u81f4\u6027"},{"location":"3/2/#_1","text":"\u5f53\u63a5 Leader \u6536\u5230\u5ba2\u6237\u7aef\u7684\u65e5\u5fd7(\u4e8b\u52a1\u8bf7\u6c42)\u540e\u5148\u628a\u8be5\u65e5\u5fd7\u8ffd\u52a0\u5230\u672c\u5730\u7684 Log \u4e2d, \u7136\u540e\u901a\u8fc7 heartbeat \u8be5Entry\u540c\u6b65\u7ed9\u5176\u4ed6 Follower, Follower \u63a5\u6536\u5230\u65e5\u5fd7\u540e\u8bb0\u5f55\u65e5\u5fd7\u7136\u540e\u5411 Leader \u53d1\u9001 ACK, \u5f53 Leader \u6536\u5230\u5927\u591a\u6570(n/2+1) Follower \u7684 ACK \u4fe1\u606f\u540e\u5c06\u8be5\u65e5\u5fd7\u8bbe\u7f6e\u4e3a\u5df2\u63d0\u4ea4\u5e76\u8ffd\u52a0\u5230\u672c\u5730\u78c1\u76d8\u4e2d, \u901a\u77e5\u5ba2\u6237\u7aef\u5e76\u5728\u4e0b\u4e2a heartbeat \u4e2d Leader \u5c06\u901a\u77e5\u6240\u6709\u7684 Follower \u5c06\u8be5\u65e5\u5fd7\u5b58\u50a8\u5728\u81ea\u5df1\u7684\u672c\u5730\u78c1\u76d8\u4e2d.","title":"\u65e5\u5fd7\u590d\u5236"},{"location":"3/2/#_2","text":"\u5b89\u5168\u6027\u662f\u7528\u4e8e\u4fdd\u8bc1\u6bcf\u4e2a\u8282\u70b9\u90fd\u6267\u884c\u76f8\u540c\u5e8f\u5217\u7684\u5b89\u5168\u673a\u5236, \u5982\u5f53\u67d0\u4e2a Follower \u5728\u5f53\u524d Leader commit Log \u65f6\u53d8\u5f97\u4e0d\u53ef\u7528\u4e86, \u7a0d\u540e\u53ef\u80fd\u8be5 Follower \u53c8\u4f1a\u88ab\u9009\u4e3e\u4e3a Leader, \u8fd9\u65f6\u65b0 Leader \u53ef\u80fd\u4f1a\u7528\u65b0\u7684 Log \u8986\u76d6\u5148\u524d\u5df2 committed \u7684 Log, \u8fd9\u5c31\u662f\u5bfc\u81f4\u8282\u70b9\u6267\u884c\u4e0d\u540c\u5e8f\u5217\uff1bSafety \u5c31\u662f\u7528\u4e8e\u4fdd\u8bc1\u9009\u4e3e\u51fa\u6765\u7684 Leader \u4e00\u5b9a\u5305\u542b\u5148\u524d committed Log \u7684\u673a\u5236\uff1b \u9009\u4e3e\u5b89\u5168\u6027(Election Safety): \u6bcf\u4e2a\u4efb\u671f(Term)\u53ea\u80fd\u9009\u4e3e\u51fa\u4e00\u4e2a Leader Leader \u5b8c\u6574\u6027(Leader Completeness): \u6307 Leader \u65e5\u5fd7\u7684\u5b8c\u6574\u6027, \u5f53 Log \u5728\u4efb\u671f Term1 \u88ab Commit \u540e, \u90a3\u4e48\u4ee5\u540e\u4efb\u671f Term2\u3001Term3... \u7b49\u7684 Leader \u5fc5\u987b\u5305\u542b\u8be5 Log; Raft \u5728\u9009\u4e3e\u9636\u6bb5\u865f\u4f7f\u7528 Term \u7684\u5224\u65ad\u7528\u4e8e\u4fdd\u8bc1\u5b8c\u6574\u6027: \u5f53\u8bf7\u6c42\u6295\u7968\u7684\u8be5 Candidate \u7684 Term \u8f83\u5927\u6216 Term \u76f8\u540c Index \u66f4\u5927\u5219\u6295\u7968, \u5426\u5219\u62d2\u7edd\u8be5\u8bf7\u6c42.","title":"\u5b89\u5168\u6027"},{"location":"3/2/#_3","text":"Leader \u5931\u6548: \u5176\u4ed6\u6ca1\u6709\u6536\u5230 heartbeat \u7684\u8282\u70b9\u4f1a\u53d1\u8d77\u65b0\u7684\u9009\u4e3e, \u800c\u5f53 Leader \u590d\u540e\u7531\u4e8e\u6b65\u8fdb\u6570\u5c0f\u4f1a\u81ea\u52a8\u6210\u4e3a follower (\u65e5\u5fd7\u4e5f\u4f1a\u88ab\u65b0 leader \u7684\u65e5\u5fd7\u8986\u76d6) follower \u8282\u70b9\u4e0d\u53ef\u7528: follower \u8282\u70b9\u4e0d\u53ef\u7528\u7684\u60c5\u51b5\u76f8\u5bf9\u5bb9\u6613\u89e3\u51b3. \u56e0\u4e3a\u96c6\u7fa4\u4e2d\u7684\u65e5\u5fd7\u5185\u5bb9\u59cb\u7ec8\u662f\u4ece leader \u8282\u70b9\u540c\u6b65\u7684, \u53ea\u8981\u8fd9\u4e00\u8282\u70b9\u518d\u6b21\u52a0\u5165\u96c6\u7fa4\u65f6\u91cd\u65b0\u4ece leader \u8282\u70b9\u5904\u590d\u5236\u65e5\u5fd7\u5373\u53ef. \u591a\u4e2a candidate: \u51b2\u7a81\u540e candidate \u5c06\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u7b49\u5f85\u95f4\u9694(150ms - 300ms)\u518d\u6b21\u53d1\u8d77\u6295\u7968, \u5f97\u5230\u96c6\u7fa4\u4e2d\u534a\u6570\u4ee5\u4e0a follower \u63a5\u53d7\u7684 candidate \u5c06\u6210\u4e3a leader","title":"\u5931\u6548\u5904\u7406"},{"location":"3/2/#walwrite-ahead-log","text":"wal \u65e5\u5fd7\u662f\u4e8c\u8fdb\u5236\u7684, \u89e3\u6790\u51fa\u6765\u540e\u662f\u4ee5\u4e0a\u6570\u636e\u7ed3\u6784 LogEntry. \u5176\u4e2d\u7b2c\u4e00\u4e2a\u5b57\u6bb5 type, \u2014\u79cd\u662f 0 \u8868\u793a Normal, 1 \u8868\u793a ConfChange ConfChange \u8868\u793a Etcd \u672c\u8eab\u7684\u914d\u7f6e\u53d8\u66f4\u540c\u6b65, \u6bd4\u5982\u6709\u65b0\u7684\u8282\u70b9\u52a0\u5165\u7b49). \u7b2c\u4e8c\u4e2a\u5b57\u6bb5\u662f term, \u6bcf\u4e2a term \u4ee3\u8868\u4e00\u4e2a\u4e3b\u8282\u70b9\u7684\u4efb\u671f, \u6bcf\u6b21\u4e3b\u8282\u70b9\u53d8\u66f4 term \u5c31\u4f1a\u53d8\u5316. \u7b2c\u4e09\u4e2a\u5b57\u6bb5\u662f index, \u8fd9\u4e2a\u5e8f\u53f7\u662f\u4e25\u683c\u6709\u5e8f\u9012\u589e\u7684, \u4ee3\u8868\u53d8\u66f4\u5e8f\u53f7. \u7b2c\u56db\u4e2a\u5b57\u6bb5\u662f\u4e8c\u8fdb\u5236\u7684 data, \u5c06 raft request \u5bf9\u8c61\u7684 pb \u7ed3\u6784\u6574\u4e2a\u4fdd\u5b58\u4e0b. etcd \u6e90\u7801\u4e0b\u6709\u4e2a tools/etcd-dump-logs, \u53ef\u4ee5\u5c06 wal \u65e5\u5fd7 dump \u6210\u6587\u672c\u67e5\u770b, \u53ef\u4ee5\u534f\u52a9\u5206\u6790 Raft \u534f\u8bae. Raft \u534f\u8bae\u672c\u8eab\u4e0d\u5173\u5fc3\u5e94\u7528\u6570\u636e, \u4e5f\u5c31\u662f data \u4e2d\u7684\u90e8\u5206, \u4e00\u81f4\u6027\u90fd\u901a\u8fc7\u540c\u6b65 wal \u65e5\u5fd7\u6765\u5b9e\u73b0, \u6bcf\u4e2a\u8282\u70b9\u5c06\u4ece\u4e3b\u8282\u70b9\u6536\u5230\u7684 data apply \u5230\u672c\u5730\u7684\u5b58\u50a8, Raft \u53ea\u5173\u5fc3\u65e5\u5fd7\u7684\u540c\u6b65\u72b6\u6001, \u5982\u679c\u672c\u5730\u5b58\u50a8\u5b9e\u73b0\u7684\u6709 bug, \u6bd4\u5982\u6ca1\u6709\u6b63\u786e\u5357\u5c06 data apply \u5230\u672c\u5730, \u4e5f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6570\u636e\u4e0d\u4e00\u81f4.","title":"wal\u65e5\u5fd7(write ahead log)"},{"location":"3/2/#etcd-v3-watch","text":"","title":"etcd v3\u5b58\u50a8, Watch\u4ee5\u53ca\u8fc7\u671f\u673a\u5236"},{"location":"3/2/#_4","text":"etcd v3 store \u5206\u4e3a\u4e24\u90e8\u5206, \u4e00\u90e8\u5206\u662f\u5185\u5b58\u4e2d\u7684\u7d22\u5f15, kvindex, \u662f\u57fa\u4e8e Google \u5f00\u6e90\u7684\u4e00\u4e2a Golang \u7684 btree \u5b9e\u73b0\u7684, \u53e6\u5916\u4e00\u90e8\u5206\u662f\u540e\u7aef\u5b58\u50a8. \u6309\u7167\u5b83\u7684\u8bbe\u8ba1, backend \u53ef\u4ee5\u5bf9\u63a5\u591a\u79cd\u5b58\u50a8, \u5f53\u524d\u4f7f\u7528\u7684 boltdb. boltdb \u662f\u4e00\u4e2a\u5355\u673a\u7684\u652f\u6301\u4e8b\u52a1\u7684 kv \u5b58\u50a8, etcd \u7684\u4e8b\u52a1\u662f\u57fa\u4e8e boltdb \u7684\u4e8b\u52a1\u5b9e\u73b0\u7684. etcd \u5728 boltdb \u4e2d\u5b58\u50a8\u7684 key \u662f reversion, value \u662f etcd \u81ea\u5df1\u7684 key-value \u7ec4\u5408, \u4e5f\u5c31\u662f\u8bf4 etcd \u4f1a\u5728 boltdb \u4e2d\u628a\u6bcf\u4e2a\u7248\u672c\u90fd\u4fdd\u5b58\u4e0b, \u4ece\u800c\u5b9e\u73b0\u4e86\u591a\u7248\u672c\u673a\u5236. reversion \u4e3b\u8981\u7531\u4e24\u90e8\u5206\u7ec4\u6210, \u7b2c\u4e00\u90e8\u5206 main rev, \u6bcf\u6b21\u4e8b\u52a1\u8fdb\u884c\u52a0\u4e00, \u7b2c\u4e8c\u90e8\u5206 sub rev, \u540c\u4e00\u4e2a\u4e8b\u52a1\u4e2d\u7684\u6bcf\u6b21\u64cd\u4f5c\u52a0\u4e00. etcd \u63d0\u4f9b\u4e86\u547d\u4ee4\u548c\u8bbe\u7f6e\u9009\u9879\u6765\u63a7\u5236 compact, \u540c\u65f6\u652f\u6301 put \u64cd\u4f5c\u7684\u53c2\u6570\u6765\u7cbe\u786e\u63a7\u5236\u67d0\u4e2a key \u7684\u5386\u53f2\u7248\u672c\u6570. \u5185\u5b58 kvindex \u4fdd\u5b58\u7684\u5c31\u662f key \u548c reversion \u4e4b\u524d\u7684\u6620\u5c04\u5173\u7cfb, \u7528\u6765\u52a0\u901f\u67e5\u8be2.","title":"\u5b58\u50a8\u673a\u5236"},{"location":"3/2/#etcd","text":"","title":"etcd \u7684\u6570\u636e\u4e00\u81f4\u6027"},{"location":"3/2/#watch","text":"etcd v3 \u7684 watch \u673a\u5236\u652f\u6301 watch \u67d0\u4e2a\u56fa\u5b9a\u7684 key, \u4e5f\u652f\u6301 watch \u4e00\u4e2a\u8303\u56f4(\u53ef\u4ee5\u7528\u4e8e\u6a21\u62df\u76ee\u5f55\u7684 \u7ed3\u6784\u7684 watch), \u6240\u4ee5 watchGroup \u5305\u542b\u4e24\u79cd watcher, \u2014\u79cd\u662f key watchers, \u6570\u636e\u7ed3\u6784\u662f\u6bcf\u4e2a key \u5bf9\u5e94\u4e00\u7ec4 watcher, \u53e6\u5916\u4e00\u79cd\u662f range watchers, \u6570\u636e\u7ed3\u6784\u662f\u4e00\u4e2a IntervalTree, \u65b9\u4fbf\u901a\u8fc7\u533a\u95f4\u67e5\u627e\u5230\u5bf9\u5e94\u7684 watcher. \u540c\u65f6, \u6bcf\u4e2a WatchableStore \u5305\u542b\u4e24\u79cd watcherGroup, \u2014\u79cd\u662f synced, \u2014\u79cd\u662f unsynced, \u524d\u8005\u8868\u793a\u8be5 group \u7684 watcher \u6570\u636e\u90fd\u5df2\u7ecf\u540c\u6b65\u5b8c\u6bd5, \u5728\u7b49\u5f85\u65b0\u7684\u53d8\u66f4, \u540e\u8005\u8868\u793a\u8be5 group \u7684 watcher \u6570\u636e\u540c\u6b65\u843d\u540e\u4e8e\u5f53\u524d\u6700\u65b0\u53d8\u66f4, \u8fd8\u5728\u8ffd\u8d76. \u5f53 etcd \u6536\u5230\u5ba2\u6237\u7aef\u7684 watch \u8bf7\u6c42, \u5982\u679c\u8bf7\u6c42\u643a\u5e26\u4e86 revision \u53c2\u6570, \u5219\u6bd4\u8f83\u8bf7\u6c42\u7684 revision \u548c store \u5f53\u524d\u7684 revision, \u5982\u679c\u5927\u4e8e\u5f53\u524d revision, \u5219\u653e\u5165 synced \u7ec4\u4e2d, \u5426\u5219\u653e\u5165 unsynced\u7ec4. \u540c\u65f6 etcd \u4f1a\u542f\u52a8\u4e00\u4e2a\u540e\u53f0\u7684 goroutine \u6301\u7eed\u540c\u6b65 unsynced \u7684 watcher, \u7136\u540e\u5c06\u5176\u8fc1\u79fb\u5230 synced \u7ec4. \u4e5f\u5c31\u662f\u8fd9\u79cd\u673a\u5236\u4e0b, etcd v3 \u652f\u6301\u4ece\u4efb\u610f\u7248\u672c\u5f00 Swatch, \u6ca1\u6709 v2 \u7684 1000 \u6761\u5386\u53f2 event \u8868\u9650\u5236\u7684\u95ee\u9898(\u5f53\u7136\u8fd9\u662f\u6307\u6ca1\u6709 compact \u7684\u60c5\u51b5\u4e0b)","title":"Watch \u673a\u5236"},{"location":"3/2/#etcd_1","text":"","title":"etcd \u7ec3\u4e60"},{"location":"3/2/#on-kubernetes","text":"\u67e5\u770b\u96c6\u7fa4\u6210\u5458\u72b6\u6001 etcdctl member list --write-out=table etcdctl --endpoints https://127.0.0.1:2379 --cert /etc/kubernetes/pki/etcd/server.crt --key /etc/kubernetes/pki/etcd/server.key --cacert /etc/kubernet<-key /etc/kubernetes/pki/etcd/server.key --cacert /etc/kubernetes/pki/etcd/ca.crt member list --write-out=table +------------------+---------+------+----------------------------+----------------------------+------------+ | ID | STATUS | NAME | PEER ADDRS | CLIENT ADDRS | IS LEARNER | +------------------+---------+------+----------------------------+----------------------------+------------+ | 37646e37976003c2 | started | cjx | https://192.168.1.168:2380 | https://192.168.1.168:2379 | false | +------------------+---------+------+----------------------------+----------------------------+------------+","title":"on kubernetes"},{"location":"3/2/#on-docker","text":"\u542f\u52a8\u65b0 etcd \u96c6\u7fa4 docker run --name etcd -d registry.aliyuncs.com/google_containers/etcd:3.5.0-0 /usr/local/bin/etcd \u8fdb\u5165 etcd \u5bb9\u5668 docker exec -it etcd sh \u5b58\u5165\u6570\u636e etcdctl put x 0 \u8bfb\u53d6\u6570\u636e etcdctl get x -w=json etcdctl get x -wjson {\"header\":{\"cluster_id\":14841639068965178418,\"member_id\":10276657743932975437,\"revision\":2,\"raft_term\":2},\"kvs\":[{\"key\":\"eA==\",\"create_revision\":2,\"mod_revision\":2,\"version\":1,\"value\":\"MA==\"}],\"count\":1} \u4fee\u6539\u503c etcdctl put x 1 \u67e5\u8be2\u6700\u65b0\u503c etcdctl get x etcdctl get x --rev=0 \u67e5\u8be2\u5386\u53f2\u7248\u672c\u503c etcdctl get x --rev=2 \u4fee\u6539\u503c etcdctl put x 2 \u67e5\u8be2\u6700\u65b0\u503c etcdctl get x --rev=0 etcdctl get x --rev=0 -wjson \u67e5\u8be2\u5386\u53f2\u7248\u672c\u503c etcdctl get x --rev=2 etcdctl get x --rev=3 -wjson --rev = revision, \u83b7\u53d6\u6307\u5b9a\u5177\u4f53\u7248\u672c\u7684\u503c revision: \u5168\u5c40\u7248\u672c create_revision: \u521b\u5efa\u6570\u636e\u65f6\u5bf9\u5e94\u7684\u5168\u5c40\u7248\u672c mod_revision: \u5f53\u524d\u6570\u636e\u5bf9\u5e94\u7684\u5168\u5c40\u7248\u672c version: \u6570\u636e\u81ea\u5df1\u7684\u7248\u672c","title":"on docker"},{"location":"3/2/#etcd_2","text":"\u6210\u5458\u76f8\u5173\u53c2\u6570 --name 'default1 Human-readable name for this member. --data-dir '${name}.etcd' Path to the data directory. --listen-peer-urls 'http://localhost:2380' List of URLs to listen on for peer traffic. --listen-client-urls 'http://localhost:2379' List of URLs to listen on for client traffic.","title":"etcd\u6210\u5458\u91cd\u8981\u53c2\u6570"},{"location":"3/2/#etcd_3","text":"\u96c6\u7fa4\u76f8\u5173\u53c2\u6570 --initial-advertise-peer-urls 'http://localhost:2380' List of this member's peer URLs to advertise to the rest of the cluster. --initial-cluster 'default=http://localhost:2380' Initial cluster configuration for bootstrapping. --initial-cluster-state 'new' Initial cluster state('new' or 'existing1). --initial-cluster-token 'etcd-cluster' Initial cluster token for the etcd cluster during bootstrap. --advertise-client-urls 'http://localhost:2379' List of this member's client URLs to advertise to the public.","title":"etcd\u96c6\u7fa4\u91cd\u8981\u53c2\u6570"},{"location":"3/2/#etcd_4","text":"--cert-file \" Path to the client server TLS cert file. --key-file \" Path to the client server TLS key file, --client-crl-file \" Path to the client certificate revocation List file, --trusted-ca-file \" Path to the client server TLS trusted CA cert file, --peer-cert-file \" Path to the peer server TLS cert file. --peer-key-file \" Path to the peer server TLS key file, --peer-trusted-ca-file \" Path to the peer server TLS trusted CA file.","title":"etcd\u5b89\u5168\u76f8\u5173\u53c2\u6570"},{"location":"3/2/#_5","text":"\u521b\u5efa Snapshot etcdctl \u2014endpoints https://127.0.0.1:3379 \u2014cert /tmp/etcd-certs/certs/127.0.0.1 .pem - -key /tmp/etcd-certs/certs/127.0.0.1 -key.pem --cacert /tmp/etcd-certs/certs/ca.pem snapshot save snapshot.db \u6062\u590d\u6570\u636e etcdctl snapshot restore snapshot.db \\ --name infra2 \\ --data-dir=/tmp/etcd/infra2 \\ --initial-cluster infra0=http://127.0.0.1:3380,infra1=http://127.0.0.1:4380,infra2=http://127.0.0.1:5380 \\ --initial-cluster-token etcd-cluster-1 \\ --initial-advertise-peer-urls http://127.0.0.1:5380","title":"\u707e\u5907"},{"location":"3/2/#_6","text":"\u5355\u4e2a\u5bf9\u8c61\u4e0d\u5efa\u8bae\u8d85\u8fc7 1.5M \u9ed8\u8ba4\u5bb9\u91cf 2G \u4e0d\u5efa\u8bae\u8d85\u8fc7 8G","title":"\u5bb9\u91cf\u7ba1\u7406"},{"location":"3/2/#alarm-disarm-alarm","text":"\u8bbe\u7f6e etcd \u5b58\u50a8\u5927\u5c0f $ etcd --quota-backend-bytes=$((16*1024*1024)) \u5199\u7206\u78c1\u76d8 $ while [1]; do dd if=/dev/urandom bs=1024 count=1024 | ETCDCTL_API=3 etcdctl put key || break; done \u67e5\u770b endpoint \u72b6\u6001 $ ETCDCTL_API=3 etcdctl --write-out=table endpoint status \u67e5\u770b alarm $ ETCDCTL_API=3 etcdctl alarm list \u6e05\u7406\u788e\u7247 $ ETCDCTL_API=3 etcdctl defrag \u6e05\u7406 alarm $ ETCDCTL_API=3 etcdctl alarm disarm","title":"Alarm &amp; Disarm Alarm"},{"location":"3/2/#_7","text":"#keep one hour of history $ etcd --auto-compaction-retention=1 #compact up to revision 3 $ etcdctl compact 3 $ etcdctl defrag Finished defragmenting etcd member[127.0.0.1:2379]","title":"\u788e\u7247\u6574\u7406"},{"location":"3/2/#51","text":"\u6309\u7167\u8bfe\u4e0a\u8bb2\u89e3\u7684\u65b9\u6cd5\u5728\u672c\u5730\u6784\u5efa\u4e00\u4e2a\u5355\u8282\u70b9\u7684\u57fa\u4e8e HTTPS \u7684 etcd \u96c6\u7fa4 \u5199\u4e00\u6761\u6570\u636e \u67e5\u770b\u6570\u636e\u7ec6\u8282 \u5220\u9664\u6570\u636e","title":"\u8bfe\u540e\u7ec3\u4e605.1"},{"location":"3/3/","text":"\u9ad8\u53ef\u7528\u96c6\u7fa4\u7ba1\u7406 \u5c0f\u7ec3\u4e60 \u9ad8\u53ef\u7528 etcd \u96c6\u7fa4\u642d\u5efa \u9ad8\u53ef\u7528etcd\u89e3\u51b3\u65b9\u6848 etcd-operator: coreos \u5f00\u6e90\u7684, \u57fa\u4e8e kubernetes CRD \u5b8c\u6210 etcd \u96c6\u7fa4\u914d\u7f6e. Archived https//github.com/coreos/etcd-operator Etcd statefulset Helm chart: Bitnami(powered by vmware) https://bitnami.com/stack/etcd/helm https://github.com/bitnami/charts/blob/master/bitnami/etcd Etcd Operator https://github.com/coreos/etcd-operator.git \u57fa\u4e8e Bitnami \u5b89\u88c5 etcd \u5b89\u88c5 helm https://github.com/helm/helm/releases \u901a\u8fc7 helm \u5b89\u88c5 etcd helm repo add bitnami https://charts.bitnami.com/bitnami helm install my-release bitnami/etcd \u901a\u8fc7\u5ba2\u6237\u7aef\u4e0eserve\u4ea4\u4e92 kubectl run my-release-etcd-client --restart=,Never, --image docker.io/bitnami/etcd:3.5.0-debian-10-r94 --env ROOT_PASSWORD=$(kubectl get secret --namespace default my-release-etcd -o jsonpath=H(-data.etcd-root-password}H | base64 --decode) --env ETCDCTL_ENDPOINTS=\"my-release- etcd.default.svc.cluster.local:2379H --namespace default --command -- sleep infinity Kubernetes \u5982\u4f55\u4f7f\u7528 etcd etcd \u662f kubernetes \u7684\u540e\u7aef\u5b58\u50a8 \u5bf9\u4e8e\u6bcf\u4e00\u4e2a kubernetes Object, \u90fd\u6709\u5bf9\u5e94\u7684 storage.go \u8d1f\u8d23\u5bf9\u8c61\u7684\u5b58\u50a8\u64cd\u4f5c pkg/registry/core/pod/storage/storage.go API server\u542f\u52a8\u811a\u672c\u4e2d\u6307\u5b9aetcd servers\u96c6\u7fa4 spec: containers: - command: - kube-apiserver - --advertise-address=192.168.34.2 - --enable-bootstrap-token-auth=true - --etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt - --etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt - --etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key - --etcd-servers=https://127.0.0.1:2379 \u65e9\u671f API server \u5bf9 etcd \u505a\u7b80\u5355\u7684 Ping check, \u73b0\u5728\u5df2\u7ecf\u6539\u4e3a\u771f\u5b9e\u7684 etcd api call Kubernets \u5bf9\u8c61\u5728 etcd \u4e2d\u7684\u5b58\u50a8\u8def\u5f84 ks exec -it etcd-cadmin sh ETCDCTL_API=3 alias ectl='etcdctl \u2014endpoints https://127.0.0.1:2379 \\ --cacert /etc/kubernetes/pki/etcd/ca.crt \\ --cert /etc/kubernetes/pki/etcd/server.crt \\ --key /etc/kubernetes/pki/etcd/server.key' ectl get --prefix --keys-only / /registry/namespaces/calico-apiserver /registry/networkpolicies/calico-apiserver/allow-apiserver /registry/operator.tigera.io/tigerastatuses/apiserver /registry/pops/calico-apiserver/calico-apiserver-77dffffcdf-g2tcx /registry/pops/default/toolbox-68f79dd5f8-4664n etcd \u5728\u96c6\u7fa4\u4e2d\u6240\u5904\u7684\u4f4d\u7f6e Kubernetes \u5982\u4f55\u4f7f\u7528 etcd etcd \u662f kubernetes \u7684\u540e\u7aef\u5b58\u50a8 \u5bf9\u4e8e\u6bcf\u4e00\u4e2a kubernetes Object, \u90fd\u6709\u5bf9\u5e94\u7684 storage.go \u8d1f\u8d23\u5bf9\u8c61\u7684\u5b58\u50a8\u64cd\u4f5c pkg/registry/core/pod/storage/storage.go API server\u542f\u52a8\u811a\u672c\u4e2d\u6307\u5b9a etcd servers \u96c6\u7fa4 /usr/local/bin/kube-apiserver --etcd_servers=https://localhost:4001 --etcd- cafile=/etc/ssl/kubernetes/ca.crt--storage-backend=etcd3 --etcd-servers- overrides=/events#https://localhost:4002 etcd \u5806\u53e0\u5f0f etcd \u96c6\u7fa4\u7684\u9ad8\u53ef\u7528\u62d3\u6251 \u8fd9\u79cd\u62d3\u6251\u5c06\u76f8\u540c\u8282\u70b9\u4e0a\u7684\u63a7\u5236\u5e73\u9762\u548c etcd \u6210\u5458\u8026\u5408\u5728\u4e00\u8d77. \u4f18\u70b9\u5728\u4e8e\u5efa\u7acb\u8d77\u6765\u975e\u5e38\u5bb9\u6613, \u5e76\u4e14\u5bf9\u526f\u672c\u7684\u7ba1\u7406\u4e5f\u66f4\u5bb9\u6613. \u4f46\u662f, \u5806\u53e0\u5f0f\u5b58\u5728\u8026\u5408\u5931\u8d25\u7684\u98ce\u9669. \u5982\u679c\u4e00\u4e2a\u8282\u70b9\u53d1\u751f\u6545\u969c, \u5219 etcd \u6210\u5458\u548c\u63a7\u5236\u5e73\u9762\u5b9e\u4f8b\u90fd\u4f1a\u4e22\u5931, \u5e76\u4e14\u96c6\u7fa4\u5197\u4f59\u4e5f\u4f1a\u53d7\u5230\u635f\u5bb3. \u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0\u66f4\u591a\u63a7\u5236\u5e73\u9762\u8282\u70b9\u6765\u51cf\u8f7b\u8fd9\u79cd\u98ce\u9669. \u56e0\u6b64\u4e3a\u5b9e\u73b0\u96c6\u7fa4\u9ad8\u53ef\u7528\u5e94\u8be5\u81f3\u5c11\u8fd0\u884c\u4e09\u4e2a\u5806\u53e0\u7684 Master \u8282\u70b9. \u5916\u90e8 etcd \u96c6\u7fa4\u7684\u9ad8\u53ef\u7528\u62d3\u6251 \u8be5\u62d3\u6251\u5c06\u63a7\u5236\u5e73\u9762\u548c etcd \u6210\u5458\u89e3\u8026. \u5982\u679c\u4e22\u5931\u4e00\u4e2a Master \u8282\u70b9, \u5bf9 etcd \u6210\u5458\u7684\u5f71\u54cd\u8f83\u5c0f, \u5e76\u4e14\u4e0d\u4f1a\u50cf\u5806\u53e0\u5f0f\u62d3\u6251\u90a3\u6837\u5bf9\u96c6\u7fa4\u5197\u4f59\u4ea7\u751f\u592a\u5927\u5f71\u54cd. \u4f46\u662f, \u6b64\u62d3\u6251\u6240\u9700\u7684\u4e3b\u673a\u6570\u91cf\u662f\u5806\u53e0\u5f0f\u62d3\u6251\u7684\u4e24\u500d. \u5177\u6709\u6b64\u62d3\u6251\u7684\u7fa4\u96c6\u81f3\u5c11\u9700\u8981\u4e09\u4e2a\u4e3b\u673a\u7528\u4e8e\u63a7\u5236\u5e73\u9762\u8282\u70b9, \u4e09\u4e2a\u4e3b\u673a\u7528\u4e8e etcd \u96c6\u7fa4. \u5b9e\u8df5 - etcd \u96c6\u7fa4\u9ad8\u53ef\u7528 \u591a\u5c11\u4e2a peer \u6700\u9002\u5408\uff1f 1\u4e2a\uff1f3\u4e2a\uff1f5\u4e2a\uff1f \u4fdd\u8bc1\u9ad8\u53ef\u7528\u662f\u9996\u8981\u76ee\u6807 \u6240\u6709\u5199\u64cd\u4f5c\u90fd\u8981\u7ecf\u8fc7 leader peer \u591a\u4e86\u662f\u5426\u80fd\u63d0\u5347\u96c6\u7fa4\u5e76\u8bfb\u64cd\u4f5c\u7684\u5e76\u53d1\u80fd\u529b\uff1f apiserver \u7684\u914d\u7f6e\u53ea\u8fde\u672c\u5730\u7684 etcd peer apiserver \u7684\u914d\u7f6e\u6307\u5b9a\u6240\u6709 etcd peers, \u4f46\u53ea\u6709\u5f53\u524d\u8fde\u63a5\u7684 etcd member \u5f02\u5e38, apiserver\u624d\u4f1a\u6362\u76ee\u6807 \u9700\u8981\u52a8\u6001 flex up \u5417\uff1f \u4fdd\u8bc1 apiserver \u548c etcd \u4e4b\u95f4\u7684\u9ad8\u6548\u6027\u901a\u8baf apiserver \u548c etcd \u90e8\u7f72\u5728\u540c\u4e00\u8282\u70b9 apiserver \u548c etcd \u4e4b\u95f4\u7684\u901a\u8baf\u57fa\u4e8e gRPC \u9488\u5bf9\u6bcf\u4e00\u4e2a object, apiserver \u548c etcd \u4e4b\u95f4\u7684 Connection -> stream \u5171\u4eab http2 \u7684\u7279\u6027 Stream quota \u5e26\u6765\u7684\u95ee\u9898\uff1f\u5bf9\u4e8e\u5927\u89c4\u6a21\u96c6\u7fa4, \u4f1a\u9020\u6210\u94fe\u8def\u963b\u585e 10000\u4e2apod, \u2014\u6b21 list \u64cd\u4f5c\u9700\u8981\u8fd4\u56de\u7684\u6570\u636e\u53ef\u80fd\u8d85\u8fc7 100M k get pod --all-namespaces|wc -L 8520 k get pod -oyaml --all-namespaces>pops Is -l pops -rw-r--r-- 1 root root 75339736 Apr 5 03:13 pops \u5b9e\u8df5 - etcd \u5b58\u50a8\u89c4\u5212 \u672c\u5730VS\u8fdc\u7a0b\uff1f Remote Storage \u4f18\u52bf\u662f\u5047\u8bbe\u6c38\u8fdc\u53ef\u7528, \u73b0\u5b9e\u771f\u662f\u5982\u6b64\u5417? \u52a3\u52bf\u662f IO \u6548\u7387, \u53ef\u80fd\u5e26\u6765\u7684\u95ee\u9898\uff1f \u6700\u4f73\u5b9e\u8df5: Local SSD \u5229\u7528 local volume \u5206\u914d\u7a7a\u95f4 \u591a\u5c11\u7a7a\u95f4\uff1f \u4e0e\u96c6\u7fa4\u89c4\u6a21\u76f8\u5173, \u601d\u8003: \u4e3a\u4ec0\u4e48\u6bcf\u4e2a member \u7684 DB size \u4e0d\u4e00\u81f4? etcd \u5b89\u5168\u6027 peer \u548c peer \u4e4b\u95f4\u7684\u901a\u8baf\u52a0\u5bc6 \u662f\u5426\u6709\u9700\u6c42 TLS \u7684\u989d\u5916\u5f00\u9500 \u8fd0\u8425\u590d\u6742\u5ea6\u589e\u52a0 \u6570\u636e\u52a0\u5bc6 \u662f\u5426\u6709\u9700\u6c42? Kubernetes \u63d0\u4f9b\u4e86\u9488\u5bf9 secret \u7684\u52a0\u5bc6 https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/ \u4e8b\u4ef6\u5206\u79bb \u5bf9\u4e8e\u5927\u89c4\u6a21\u96c6\u7fa4, \u5927\u91cf\u7684\u4e8b\u4ef6\u4f1a\u5bf9 etcd \u9020\u6210\u538b\u529b API server \u542f\u52a8\u811a\u672c\u4e2d\u6307\u5b9a etcd server \u96c6\u7fa4 /usr/local/bin/kube-apiserver \u2014etcd_servers=https://localhost:4001 \u2014etcd- cafile=/etc/ssl/kubernetes/ca.crt\u2014storage-backend=etcd3 \u2014etcd-servers- overrides=/events#https://localhost:4002 \u5982\u4f55\u76d1\u63a7? \u51cf\u5c11\u7f51\u7edc\u5ef6\u8fdf \u51cf\u5c11\u7f51\u7edc\u5ef6\u8fdf \u6570\u636e\u4e2d\u5fc3\u5185\u7684RTT\u5927\u6982\u662f\u6570\u6beb\u79d2, \u56fd\u5185\u7684\u5178\u578b RTT \u7ea6\u4e3a 50ms, \u4e24\u5927\u6d32\u4e4b\u95f4\u7684 RTT \u53ef\u80fd\u6162\u81f3 400ms. \u56e0\u6b64\u5efa\u8bae etcd \u96c6\u7fa4\u5c3d\u91cf\u540c\u5730\u57df\u90e8\u7f72. \u5f53\u5ba2\u6237\u7aef\u5230 Leader \u7684\u5e76\u53d1\u8fde\u63a5\u6570\u91cf\u8fc7\u591a, \u53ef\u80fd\u4f1a\u5bfc\u81f4\u5176\u4ed6 Follower \u8282\u70b9\u53d1\u5f80 Leader \u7684\u8bf7\u6c42\u56e0 \u4e3a\u7f51\u7edc\u62e5\u585e\u800c\u88ab\u5ef6\u8fdf\u5904\u7406. \u5728 Follower \u8282\u70b9\u4e0a, \u53ef\u80fd\u4f1a\u770b\u5230\u8fd9\u6837\u7684\u9519\u8bef: dropped MsgProp to 247ae21ff9436b2d since streamMsg's sending buffer is full \u53ef\u4ee5\u5728\u8282\u70b9\u4e0a\u901a\u8fc7\u6d41\u91cf\u63a7\u5236\u5de5\u5177 (Traffic Control) \u63d0\u9ad8 etcd \u6210\u5458\u4e4b\u95f4\u53d1\u9001\u6570\u636e\u7684\u4f18\u5148\u7ea7\u6765\u907f\u514d. \u51cf\u5c11\u78c1\u76d8 I/O \u5ef6\u8fdf \u5bf9\u4e8e\u78c1\u76d8\u5ef6\u8fdf, \u5178\u578b\u7684\u65cb\u8f6c\u78c1\u76d8\u5199\u5ef6\u8fdf\u7ea6\u4e3a 10 \u6beb\u79d2. \u5bf9\u4e8e SSD (Solid State Drives, \u56fa\u6001\u786c\u76d8) , \u5ef6\u8fdf\u901a\u5e38\u4f4e\u4e8e1\u6beb\u79d2. HDD (Hard Disk Drive, \u786c\u76d8\u9a71\u52a8\u5668) \u6216\u8005\u7f51\u76d8\u5728\u5927\u91cf\u6570\u636e\u8bfb\u5199\u64cd\u4f5c\u7684\u60c5\u51b5\u4e0b\u5ef6\u65f6\u4f1a\u4e0d\u7a33\u5b9a. \u56e0\u6b64\u5f3a\u70c8\u5efa\u8bae\u4f7f\u7528 SSD. \u540c\u65f6\u4e3a\u4e86\u964d\u4f4e\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u7684 I/O \u64cd\u4f5c\u5bf9 etcd \u7684\u5e72\u6270, \u5efa\u8bae\u5c06 etcd \u7684\u6570\u636e\u5b58\u653e\u5728\u5355\u72ec\u7684\u78c1\u76d8\u5185. \u4e5f\u53ef\u4ee5\u5c06\u4e0d\u540c\u7c7b\u578b\u7684\u5bf9\u8c61\u5b58\u50a8\u5728\u4e0d\u540c\u7684\u82e5\u5e72\u4e2a etcd \u96c6\u7fa4\u4e2d, \u6bd4\u5982\u5c06\u9891\u7e41\u53d8\u66f4\u7684 event \u5bf9\u8c61\u4ece\u4e3b etcd \u96c6\u7fa4\u4e2d\u5206\u79bb\u51fa\u6765, \u4ee5\u4fdd\u8bc1\u4e3b\u96c6\u7fa4\u7684\u9ad8\u6027\u80fd. \u5728 APIServer \u5904\u8fd9\u662f\u53ef\u4ee5\u901a\u8fc7\u53c2\u6570\u914d\u7f6e\u7684. \u8fd9\u4e9b etcd \u96c6 \u7fa4\u6700\u597d\u4e5f\u5206\u522b\u80fd\u6709\u4e00\u5757\u5355\u72ec\u7684\u5b58\u50a8\u78c1\u76d8. \u5982\u679c\u4e0d\u53ef\u907f\u514d\u5730, etcd \u548c\u5176\u4ed6\u7684\u4e1a\u52a1\u5171\u4eab\u5b58\u50a8\u78c1\u76d8, \u90a3\u4e48\u5c31\u9700\u8981\u901a\u8fc7\u4e0b\u9762 ionice \u547d\u4ee4\u5bf9 etcd \u670d\u52a1 \u8bbe\u7f6e\u66f4\u9ad8\u7684\u78c1\u76d8 I/O \u4f18\u5148\u7ea7, \u5c3d\u53ef\u80fd\u907f\u514d\u5176\u4ed6\u8fdb\u7a0b\u7684\u5f71\u54cd. $ ionice -c2 -n0 -p 'pgrep etcd' \u4fdd\u6301\u5408\u7406\u7684\u65e5\u5fd7\u6587\u4ef6\u5927\u5c0f etcd\u4ee5\u65e5\u5fd7\u7684\u5f62\u5f0f\u4fdd\u5b58\u6570\u636e, \u65e0\u8bba\u662f\u6570\u636e\u521b\u5efa\u8fd8\u662f\u4fee\u6539, \u5b83\u90fd\u5c06\u64cd\u4f5c\u8ffd\u52a0\u5230\u65e5\u5fd7\u6587\u4ef6, \u56e0\u6b64\u65e5\u5fd7 \u6587\u4ef6\u5927\u5c0f\u4f1a\u968f\u7740\u6570\u636e\u4fee\u6539\u6b21\u6570\u800c\u7ebf\u6027\u589e\u957f. \u5f53Kubernetes\u96c6\u7fa4\u89c4\u6a21\u8f83\u5927\u65f6, \u5176\u5bf9etcd\u96c6\u7fa4\u4e2d\u7684\u6570\u636e\u66f4\u6539\u4e5f\u4f1a\u5f88\u9891\u7e41, \u96c6\u7fa4\u65e5\u8bb0\u6587\u4ef6\u4f1a\u8fc5\u901f\u589e\u957f. \u4e3a\u4e86\u6709\u6548\u964d\u4f4e\u65e5\u5fd7\u6587\u4ef6\u5927\u5c0f, etcd\u4f1a\u4ee5\u56fa\u5b9a\u5468\u671f\u521b\u5efa\u5feb\u7167\u4fdd\u5b58\u7cfb\u7edf\u7684\u5f53\u524d\u72b6\u6001, \u5e76\u79fb\u9664\u65e7\u65e5\u5fd7\u6587\u4ef6. \u53e6\u5916\u5f53\u4fee\u6539\u6b21\u6570\u7d2f\u79ef\u5230\u4e00\u5b9a\u7684\u6570\u91cf (\u9ed8\u8ba4\u662f10000,\u901a\u8fc7\u53c2\u6570\"--snapshot-count\"\u6307\u5b9a) , etcd\u4e5f\u4f1a\u521b\u5efa\u5feb\u7167\u6587\u4ef6. \u5982\u679cetcd\u7684\u5185\u5b58\u4f7f\u7528\u548c\u78c1\u76d8\u4f7f\u7528\u8fc7\u9ad8, \u53ef\u4ee5\u5148\u5206\u6790\u662f\u5426\u6570\u636e\u5199\u5165\u9891\u5ea6\u8fc7\u5927\u5bfc\u81f4\u5feb\u7167\u9891\u5ea6\u8fc7\u9ad8, \u786e \u8ba4\u540e\u53ef\u901a\u8fc7\u8c03\u4f4e\u5feb\u7167\u89e6\u53d1\u7684\u9608\u503c\u6765\u964d\u4f4e\u5176\u5bf9\u5185\u5b58\u548c\u78c1\u76d8\u7684\u4f7f\u7528. \u8bbe\u7f6e\u5408\u7406\u7684\u5b58\u50a8\u914d\u989d \u5b58\u50a8\u7a7a\u95f4\u7684\u914d\u989d\u7528\u4e8e\u63a7\u5236 etcd \u6570\u636e\u7a7a\u95f4\u7684\u5927\u5c0f. \u5408\u7406\u7684\u5b58\u50a8\u914d\u989d\u53ef\u4fdd\u8bc1\u96c6\u7fa4\u64cd\u4f5c\u7684\u53ef\u9760\u6027. \u5982\u679c\u6ca1\u6709\u5b58\u50a8\u914d\u989d, \u4e5f\u5c31\u662f etcd \u53ef\u4ee5\u5229\u7528\u6574\u4e2a\u78c1\u76d8\u7a7a\u95f4, etcd \u7684\u6027\u80fd\u4f1a\u56e0\u4e3a\u5b58\u50a8\u7a7a\u95f4\u7684\u6301\u7eed\u589e\u957f\u800c\u4e25\u91cd\u4e0b\u964d, \u751a\u81f3\u6709\u8017\u5b8c\u96c6\u7fa4\u78c1\u76d8\u7a7a\u95f4\u5bfc\u81f4\u4e0d\u53ef\u9884\u6d4b\u96c6\u7fa4\u884c\u4e3a\u7684\u98ce\u9669. \u5982\u679c\u8bbe\u7f6e\u7684\u5b58\u50a8\u914d\u989d\u592a\u5c0f, \u4e00\u65e6\u5176\u4e2d\u4e00\u4e2a\u8282\u70b9\u7684\u540e\u53f0\u6570\u636e\u5e93\u7684\u5b58\u50a8\u7a7a\u95f4\u8d85\u51fa\u4e86\u5b58\u50a8\u914d\u989d, etcd \u5c31\u4f1a\u89e6\u53d1\u96c6\u7fa4\u8303\u56f4\u7684\u544a\u8b66, \u5e76\u5c06\u96c6\u7fa4\u7f6e\u4e8e\u53ea\u63a5\u53d7\u8bfb\u548c\u5220\u9664\u8bf7\u6c42\u7684\u7ef4\u62a4\u6a21\u5f0f. \u53ea\u6709\u5728\u91ca\u653e\u8db3\u591f\u7684\u7a7a\u95f4\u3001\u6d88\u9664\u540e\u7aef\u6570\u636e\u5e93\u7684\u788e\u7247\u548c\u6e05 \u9664\u5b58\u50a8\u914d\u989d\u544a\u8b66\u4e4b\u540e, \u96c6\u7fa4\u624d\u80fd\u6062\u590d\u6b63\u5e38\u64cd\u4f5c. \u81ea\u52a8\u538b\u7f29\u5386\u53f2\u7248\u672c etcd\u4f1a\u4e3a\u6bcf\u4e2a\u952e\u90fd\u4fdd\u5b58\u4e86\u5386\u53f2\u7248\u672c. \u4e3a\u4e86\u907f\u514d\u51fa\u73b0\u6027\u80fd\u95ee\u9898\u6216\u5b58\u50a8\u7a7a\u95f4\u6d88\u8017\u5b8c\u5bfc\u81f4\u5199\u4e0d\u8fdb\u53bb\u7684\u95ee \u9898, \u8fd9\u4e9b\u5386\u53f2\u7248\u672c\u9700\u8981\u8fdb\u884c\u5468\u671f\u6027\u5730\u538b\u7f29. \u538b\u7f29\u5386\u53f2\u7248\u672c\u5c31\u662f\u4e22\u5f03\u8be5\u952e\u7ed9\u5b9a\u7248\u672c\u4e4b\u524d\u7684\u6240\u6709\u4fe1\u606f, \u8282\u7701\u51fa\u6765\u7684\u7a7a\u95f4\u53ef\u4ee5\u7528\u4e8e\u540e\u7eed\u7684\u5199\u64cd\u4f5c. etcd\u652f\u6301\u81ea\u52a8\u538b\u7f29\u5386\u53f2\u7248\u672c. \u5728\u542f\u52a8\u53c2\u6570\u4e2d\u6307\u5b9a\u53c2\u6570\"--auto-compaction\", \u5176\u503c\u4ee5\u5c0f\u65f6\u4e3a\u5355\u4f4d. \u4e5f\u5c31\u662fetcd\u4f1a\u81ea\u52a8\u538b\u7f29\u8be5\u503c\u8bbe\u7f6e\u7684\u65f6\u95f4\u7a97\u53e3\u4e4b\u524d\u7684 \u5386\u53f2\u7248\u672c. \u5b9a\u671f\u6d88\u9664\u788e\u7247\u5316 \u538b\u7f29\u5386\u53f2\u7248\u672c, \u76f8\u5f53\u4e8e\u79bb\u6563\u5730\u62b9\u53bbetcd\u5b58\u50a8\u7a7a\u95f4\u67d0\u4e9b\u6570\u636e, etcd\u5b58\u50a8\u7a7a\u95f4\u4e2d\u5c06\u4f1a\u51fa\u73b0\u788e\u7247. \u8fd9\u4e9b\u788e\u7247\u65e0\u6cd5\u88ab\u540e\u53f0\u5b58\u50a8\u4f7f\u7528, \u5374\u4ecd\u5360\u636e\u8282\u70b9\u7684\u5b58\u50a8\u7a7a\u95f4. \u56e0\u6b64\u5b9a\u671f\u6d88\u9664\u5b58\u50a8\u788e\u7247, \u5c06\u91ca\u653e\u788e\u7247\u5316\u7684\u5b58\u50a8\u7a7a\u95f4, \u91cd\u65b0\u8c03\u6574\u6574\u4e2a\u5b58\u50a8\u7a7a\u95f4. \u5907\u4efd\u65b9\u6848 etcd \u5907\u4efd: \u5907\u4efd\u5b8c\u6574\u7684\u96c6\u7fa4\u4fe1\u606f, \u707e\u96be\u6062\u590d etcdctl snapshot save \u57fa\u4e8e\u4e8b\u4ef6\u91cd\u653e \u5907\u4efd Kubernetes event \u9891\u5ea6\uff1f \u65f6\u95f4\u95f4\u9694\u592a\u957f: \u80fd\u5426\u63a5\u53d7user data lost? \u5982\u679c\u6709\u5916\u90e8\u8d44\u6e90\u914d\u7f6e, \u5982\u8d1f\u8f7d\u5747\u8861\u7b49, \u80fd\u5426\u63a5\u53d7\u6570\u636e\u4e22\u5931\u5bfc\u81f4\u7684 leak? \u65f6\u95f4\u95f4\u9694\u592a\u77ed: \u5bf9 etcd \u7684\u5f71\u54cd \u505a snapshot \u7684\u65f6\u5019, etcd \u4f1a\u9501\u4f4f\u5f53\u524d\u6570\u636e \u5e76\u53d1\u7684\u5199\u64cd\u4f5c\u9700\u8981\u5f00\u8f9f\u65b0\u7684\u7a7a\u95f4\u8fdb\u884c\u589e\u91cf\u5199, \u5bfc\u81f4\u78c1\u76d8\u7a7a\u95f4\u589e\u957f \u5982\u4f55\u4fdd\u8bc1\u5907\u4efd\u7684\u65f6\u6548\u6027, \u540c\u65f6\u9632\u6b62\u78c1\u76d8\u7206\u6389\uff1f Auto defrag? \u4f18\u5316\u8fd0\u884c\u53c2\u6570 \u5f53\u7f51\u7edc\u5ef6\u8fdf\u548c\u78c1\u76d8\u5ef6\u8fdf\u56fa\u5b9a\u7684\u60c5\u51b5\u4e0b, \u53ef\u4ee5\u4f18\u5316 etcd \u8fd0\u884c\u53c2\u6570\u6765\u63d0\u5347\u96c6\u7fa4\u7684\u5de5\u4f5c\u6548\u7387. etcd \u57fa\u4e8e Raft \u534f\u8bae\u8fdb\u884c Leader \u9009\u4e3e, \u5f53 Leader \u9009\u5b9a\u4ee5\u540e\u624d\u80fd\u5f00\u59cb\u6570\u636e\u8bfb\u5199\u64cd\u4f5c, \u56e0\u6b64\u9891\u7e41\u7684 Leader \u9009\u4e3e\u4f1a\u5bfc\u81f4\u6570\u636e\u8bfb\u5199\u6027\u80fd\u663e\u8457\u964d\u4f4e. \u53ef\u4ee5\u901a\u8fc7\u8c03\u6574\u5fc3\u8df3\u5468\u671f(Heatbeat Interval) \u548c\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4 (Election Timeout), \u6765\u964d\u4f4e Leader \u9009\u4e3e\u7684\u53ef\u80fd\u6027. \u5fc3\u8df3\u5468\u671f\u662f\u63a7\u5236 Leader \u4ee5\u4f55\u79cd\u9891\u5ea6\u5411 Follower \u53d1\u8d77\u5fc3\u8df3\u901a\u77e5. \u5fc3\u8df3\u901a\u77e5\u9664\u8868\u660e Leader \u6d3b\u8dc3\u72b6\u6001\u4e4b\u5916, \u8fd8\u5e26\u6709\u5f85\u5199\u5165\u6570\u636e\u4fe1\u606f, Follower \u4f9d\u636e\u5fc3\u8df3\u4fe1\u606f\u8fdb\u884c\u6570\u636e\u5199\u5165, \u9ed8\u8ba4\u5fc3\u8df3\u5468\u671f\u662f100ms. \u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u5b9a\u4e49\u4e86\u5f53 Follower \u591a\u4e45\u6ca1\u6709\u6536\u5230 Leader \u5fc3\u8df3, \u5219\u91cd\u65b0\u53d1\u8d77\u9009\u4e3e, \u8be5\u53c2\u6570\u7684\u9ed8\u8ba4\u8bbe\u7f6e\u662f 1000ms. \u5982\u679c etcd \u96c6\u7fa4\u7684\u4e0d\u540c\u5b9e\u4f8b\u90e8\u7f72\u5728\u5ef6\u8fdf\u8f83\u4f4e\u7684\u76f8\u540c\u6570\u636e\u4e2d\u5fc3, \u901a\u5e38\u4f7f\u7528\u9ed8\u8ba4\u914d\u7f6e\u5373\u53ef. \u5982\u679c\u4e0d\u540c\u5b9e\u4f8b\u90e8\u7f72\u5728\u591a\u6570\u636e\u4e2d\u5fc3\u6216\u8005\u7f51\u7edc\u5ef6\u8fdf\u8f83\u9ad8\u7684\u96c6\u7fa4\u73af\u5883, \u5219\u9700\u8981\u5bf9\u5fc3\u8df3\u5468\u671f\u548c\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u8fdb\u884c\u8c03\u6574. \u5efa\u8bae\u5fc3\u8df3\u5468\u671f\u53c2\u6570\u63a8\u8350\u8bbe\u7f6e\u4e3a\u63a5\u8fd1 etcd \u591a\u4e2a\u6210\u5458\u4e4b\u95f4\u5e73\u5747\u6570\u636e\u5f80\u8fd4\u5468\u671f\u7684\u6700\u5927\u503c, \u4e00\u822c\u662f\u5e73\u5747 RTT \u7684 0.55-1.5 \u500d. \u5982\u679c\u5fc3\u8df3\u5468\u671f\u8bbe\u7f6e\u5f97\u8fc7\u4f4e, etcd \u4f1a\u53d1\u9001\u5f88\u591a\u4e0d\u5fc5\u8981\u7684\u5fc3\u8df3\u4fe1\u606f, \u4ece\u800c\u589e\u52a0 CPU \u548c\u7f51\u7edc\u7684\u8d1f\u62c5. \u5982\u679c\u8bbe\u7f6e \u5f97\u8fc7\u9ad8, \u5219\u4f1a\u5bfc\u81f4\u9009\u4e3e\u9891\u7e41\u8d85\u65f6. \u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u4e5f\u9700\u8981\u6839\u636e etcd \u6210\u5458\u4e4b\u95f4\u7684\u5e73\u5747 RTT \u65f6\u95f4\u6765\u8bbe\u7f6e. \u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u6700\u5c11\u8bbe\u7f6e\u4e3a etcd \u6210\u5458\u4e4b\u95f4 RTT \u65f6\u95f4\u7684 10 \u500d, \u4ee5\u4fbf\u5bf9\u7f51\u7edc\u6ce2\u52a8. \u5fc3\u8df3\u95f4\u9694\u548c\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u7684\u503c\u5fc5\u987b\u5bf9\u540c\u4e00\u4e2a etcd \u96c6\u7fa4\u7684\u6240\u6709\u8282\u70b9\u90fd\u751f\u6548, \u5982\u679c\u5404\u4e2a\u8282\u70b9\u914d\u7f6e\u4e0d\u540c, \u5c31\u4f1a\u5bfc\u81f4\u96c6\u7fa4\u6210\u5458\u4e4b\u95f4\u534f\u5546\u7ed3\u679c\u4e0d\u53ef\u9884\u77e5\u800c\u4e0d\u7a33\u5b9a. etcd \u5907\u4efd\u5b58\u50a8 etcd \u7684\u9ed8\u8ba4\u5de5\u4f5c\u76ee\u5f55\u4e0b\u4f1a\u751f\u6210\u4e24\u4e2a\u5b50\u76ee\u5f55: waf \u548c snap. wal \u662f\u7528\u4e8e\u5b58\u653e\u9884\u5199\u5f0f\u65e5\u5fd7, \u5176\u6700\u5927\u7684\u4f5c\u7528\u662f\u8bb0\u5f55\u6574\u4e2a\u6570\u636e\u53d8\u5316\u7684\u5168\u90e8\u5386\u7a0b. \u6240\u6709\u6570\u636e\u7684\u4fee\u6539\u5728\u63d0\u4ea4\u524d, \u90fd\u8981\u5148\u5199\u5165 wal \u4e2d. snap \u662f\u7528\u4e8e\u5b58\u653e\u5feb\u7167\u6570\u636e. \u4e3a\u9632\u6b62 wal \u6587\u4ef6\u8fc7\u591a, etcd \u4f1a\u5b9a\u671f (\u5f53 wal \u4e2d\u6570\u636e\u8d85\u8fc7 10000 \u6761\u8bb0\u5f55 \u65f6, \u7531\u53c2\u6570\"snapshot-count\"\u8bbe\u7f6e) \u521b\u5efa\u5feb\u7167. \u5f53\u5feb\u7167\u751f\u6210\u540e, wal \u4e2d\u6570\u636e\u5c31\u53ef\u4ee5\u88ab\u5220\u9664\u4e86. \u5982\u679c\u6570\u636e\u906d\u5230\u7834\u574f\u6216\u9519\u8bef\u4fee\u6539\u9700\u8981\u56de\u6eda\u5230\u4e4b\u524d\u67d0\u4e2a\u72b6\u6001\u65f6, \u65b9\u6cd5\u5c31\u6709\u4e24\u4e2a: \u4e00\u662f\u4ece\u5feb\u7167\u4e2d\u6062\u590d\u6570\u636e\u4e3b\u4f53, \u4f46\u662f\u672a\u88ab\u62cd\u5165\u5feb\u7167\u7684\u6570\u636e\u4f1a\u4e22\u5931; \u800c\u662f\u6267\u884c\u6240\u6709 WAL \u4e2d\u8bb0\u5f55\u7684\u4fee\u6539\u64cd\u4f5c, \u4ece\u6700\u539f\u59cb\u7684\u6570\u636e\u6062\u590d\u5230\u6570\u636e\u635f\u574f\u4e4b\u524d\u7684\u72b6\u6001, \u4f46\u6062\u590d\u7684\u65f6\u95f4\u8f83\u957f. \u5907\u4efd\u65b9\u6848\u5b9e\u8df5 \u5b98\u65b9\u63a8\u8350 etcd \u96c6\u7fa4\u7684\u5907\u4efd\u65b9\u5f0f\u662f\u5b9a\u671f\u521b\u5efa\u5feb\u7167. \u6839\u636e\u96c6\u7fa4\u5bf9 etcd \u5907\u4efd\u7c92\u5ea6\u7684\u8981\u6c42, \u53ef\u9002\u5f53\u8c03\u8282\u5907\u4efd\u7684\u5468\u671f. \u5728\u751f\u4ea7\u73af\u5883\u4e2d\u5b9e\u6d4b, \u62cd\u6444\u5feb\u7167\u901a\u5e38\u4f1a\u5f71\u54cd\u96c6\u7fa4\u5f53\u65f6 \u7684\u6027\u80fd,\u56e0\u6b64\u4e0d\u5efa\u8bae\u9891\u7e41\u521b\u5efa\u5feb\u7167. \u4f46\u662f\u5907\u4efd\u5468\u671f\u592a\u957f, \u5c31\u53ef\u80fd\u5bfc\u81f4\u5927\u91cf\u6570\u636e\u7684\u4e22\u5931. \u8fd9\u91cc\u53ef\u4ee5\u4f7f\u7528\u589e\u91cf\u5907\u4efd\u7684\u65b9\u5f0f.","title":"\u9ad8\u53ef\u7528\u96c6\u7fa4\u7ba1\u7406"},{"location":"3/3/#_1","text":"","title":"\u9ad8\u53ef\u7528\u96c6\u7fa4\u7ba1\u7406"},{"location":"3/3/#_2","text":"\u9ad8\u53ef\u7528 etcd \u96c6\u7fa4\u642d\u5efa","title":"\u5c0f\u7ec3\u4e60"},{"location":"3/3/#etcd","text":"etcd-operator: coreos \u5f00\u6e90\u7684, \u57fa\u4e8e kubernetes CRD \u5b8c\u6210 etcd \u96c6\u7fa4\u914d\u7f6e. Archived https//github.com/coreos/etcd-operator Etcd statefulset Helm chart: Bitnami(powered by vmware) https://bitnami.com/stack/etcd/helm https://github.com/bitnami/charts/blob/master/bitnami/etcd","title":"\u9ad8\u53ef\u7528etcd\u89e3\u51b3\u65b9\u6848"},{"location":"3/3/#etcd-operator","text":"https://github.com/coreos/etcd-operator.git","title":"Etcd Operator"},{"location":"3/3/#bitnami-etcd","text":"\u5b89\u88c5 helm https://github.com/helm/helm/releases \u901a\u8fc7 helm \u5b89\u88c5 etcd helm repo add bitnami https://charts.bitnami.com/bitnami helm install my-release bitnami/etcd \u901a\u8fc7\u5ba2\u6237\u7aef\u4e0eserve\u4ea4\u4e92 kubectl run my-release-etcd-client --restart=,Never, --image docker.io/bitnami/etcd:3.5.0-debian-10-r94 --env ROOT_PASSWORD=$(kubectl get secret --namespace default my-release-etcd -o jsonpath=H(-data.etcd-root-password}H | base64 --decode) --env ETCDCTL_ENDPOINTS=\"my-release- etcd.default.svc.cluster.local:2379H --namespace default --command -- sleep infinity","title":"\u57fa\u4e8e Bitnami \u5b89\u88c5 etcd"},{"location":"3/3/#kubernetes-etcd","text":"etcd \u662f kubernetes \u7684\u540e\u7aef\u5b58\u50a8 \u5bf9\u4e8e\u6bcf\u4e00\u4e2a kubernetes Object, \u90fd\u6709\u5bf9\u5e94\u7684 storage.go \u8d1f\u8d23\u5bf9\u8c61\u7684\u5b58\u50a8\u64cd\u4f5c pkg/registry/core/pod/storage/storage.go API server\u542f\u52a8\u811a\u672c\u4e2d\u6307\u5b9aetcd servers\u96c6\u7fa4 spec: containers: - command: - kube-apiserver - --advertise-address=192.168.34.2 - --enable-bootstrap-token-auth=true - --etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt - --etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt - --etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key - --etcd-servers=https://127.0.0.1:2379 \u65e9\u671f API server \u5bf9 etcd \u505a\u7b80\u5355\u7684 Ping check, \u73b0\u5728\u5df2\u7ecf\u6539\u4e3a\u771f\u5b9e\u7684 etcd api call","title":"Kubernetes \u5982\u4f55\u4f7f\u7528 etcd"},{"location":"3/3/#kubernets-etcd","text":"ks exec -it etcd-cadmin sh ETCDCTL_API=3 alias ectl='etcdctl \u2014endpoints https://127.0.0.1:2379 \\ --cacert /etc/kubernetes/pki/etcd/ca.crt \\ --cert /etc/kubernetes/pki/etcd/server.crt \\ --key /etc/kubernetes/pki/etcd/server.key' ectl get --prefix --keys-only / /registry/namespaces/calico-apiserver /registry/networkpolicies/calico-apiserver/allow-apiserver /registry/operator.tigera.io/tigerastatuses/apiserver /registry/pops/calico-apiserver/calico-apiserver-77dffffcdf-g2tcx /registry/pops/default/toolbox-68f79dd5f8-4664n","title":"Kubernets \u5bf9\u8c61\u5728 etcd \u4e2d\u7684\u5b58\u50a8\u8def\u5f84"},{"location":"3/3/#etcd_1","text":"","title":"etcd \u5728\u96c6\u7fa4\u4e2d\u6240\u5904\u7684\u4f4d\u7f6e"},{"location":"3/3/#kubernetes-etcd_1","text":"etcd \u662f kubernetes \u7684\u540e\u7aef\u5b58\u50a8 \u5bf9\u4e8e\u6bcf\u4e00\u4e2a kubernetes Object, \u90fd\u6709\u5bf9\u5e94\u7684 storage.go \u8d1f\u8d23\u5bf9\u8c61\u7684\u5b58\u50a8\u64cd\u4f5c pkg/registry/core/pod/storage/storage.go API server\u542f\u52a8\u811a\u672c\u4e2d\u6307\u5b9a etcd servers \u96c6\u7fa4 /usr/local/bin/kube-apiserver --etcd_servers=https://localhost:4001 --etcd- cafile=/etc/ssl/kubernetes/ca.crt--storage-backend=etcd3 --etcd-servers- overrides=/events#https://localhost:4002","title":"Kubernetes \u5982\u4f55\u4f7f\u7528 etcd"},{"location":"3/3/#etcd_2","text":"\u5806\u53e0\u5f0f etcd \u96c6\u7fa4\u7684\u9ad8\u53ef\u7528\u62d3\u6251 \u8fd9\u79cd\u62d3\u6251\u5c06\u76f8\u540c\u8282\u70b9\u4e0a\u7684\u63a7\u5236\u5e73\u9762\u548c etcd \u6210\u5458\u8026\u5408\u5728\u4e00\u8d77. \u4f18\u70b9\u5728\u4e8e\u5efa\u7acb\u8d77\u6765\u975e\u5e38\u5bb9\u6613, \u5e76\u4e14\u5bf9\u526f\u672c\u7684\u7ba1\u7406\u4e5f\u66f4\u5bb9\u6613. \u4f46\u662f, \u5806\u53e0\u5f0f\u5b58\u5728\u8026\u5408\u5931\u8d25\u7684\u98ce\u9669. \u5982\u679c\u4e00\u4e2a\u8282\u70b9\u53d1\u751f\u6545\u969c, \u5219 etcd \u6210\u5458\u548c\u63a7\u5236\u5e73\u9762\u5b9e\u4f8b\u90fd\u4f1a\u4e22\u5931, \u5e76\u4e14\u96c6\u7fa4\u5197\u4f59\u4e5f\u4f1a\u53d7\u5230\u635f\u5bb3. \u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0\u66f4\u591a\u63a7\u5236\u5e73\u9762\u8282\u70b9\u6765\u51cf\u8f7b\u8fd9\u79cd\u98ce\u9669. \u56e0\u6b64\u4e3a\u5b9e\u73b0\u96c6\u7fa4\u9ad8\u53ef\u7528\u5e94\u8be5\u81f3\u5c11\u8fd0\u884c\u4e09\u4e2a\u5806\u53e0\u7684 Master \u8282\u70b9. \u5916\u90e8 etcd \u96c6\u7fa4\u7684\u9ad8\u53ef\u7528\u62d3\u6251 \u8be5\u62d3\u6251\u5c06\u63a7\u5236\u5e73\u9762\u548c etcd \u6210\u5458\u89e3\u8026. \u5982\u679c\u4e22\u5931\u4e00\u4e2a Master \u8282\u70b9, \u5bf9 etcd \u6210\u5458\u7684\u5f71\u54cd\u8f83\u5c0f, \u5e76\u4e14\u4e0d\u4f1a\u50cf\u5806\u53e0\u5f0f\u62d3\u6251\u90a3\u6837\u5bf9\u96c6\u7fa4\u5197\u4f59\u4ea7\u751f\u592a\u5927\u5f71\u54cd. \u4f46\u662f, \u6b64\u62d3\u6251\u6240\u9700\u7684\u4e3b\u673a\u6570\u91cf\u662f\u5806\u53e0\u5f0f\u62d3\u6251\u7684\u4e24\u500d. \u5177\u6709\u6b64\u62d3\u6251\u7684\u7fa4\u96c6\u81f3\u5c11\u9700\u8981\u4e09\u4e2a\u4e3b\u673a\u7528\u4e8e\u63a7\u5236\u5e73\u9762\u8282\u70b9, \u4e09\u4e2a\u4e3b\u673a\u7528\u4e8e etcd \u96c6\u7fa4.","title":"etcd"},{"location":"3/3/#-etcd","text":"","title":"\u5b9e\u8df5 - etcd \u96c6\u7fa4\u9ad8\u53ef\u7528"},{"location":"3/3/#peer","text":"1\u4e2a\uff1f3\u4e2a\uff1f5\u4e2a\uff1f \u4fdd\u8bc1\u9ad8\u53ef\u7528\u662f\u9996\u8981\u76ee\u6807 \u6240\u6709\u5199\u64cd\u4f5c\u90fd\u8981\u7ecf\u8fc7 leader peer \u591a\u4e86\u662f\u5426\u80fd\u63d0\u5347\u96c6\u7fa4\u5e76\u8bfb\u64cd\u4f5c\u7684\u5e76\u53d1\u80fd\u529b\uff1f apiserver \u7684\u914d\u7f6e\u53ea\u8fde\u672c\u5730\u7684 etcd peer apiserver \u7684\u914d\u7f6e\u6307\u5b9a\u6240\u6709 etcd peers, \u4f46\u53ea\u6709\u5f53\u524d\u8fde\u63a5\u7684 etcd member \u5f02\u5e38, apiserver\u624d\u4f1a\u6362\u76ee\u6807 \u9700\u8981\u52a8\u6001 flex up \u5417\uff1f","title":"\u591a\u5c11\u4e2a peer \u6700\u9002\u5408\uff1f"},{"location":"3/3/#apiserver-etcd","text":"apiserver \u548c etcd \u90e8\u7f72\u5728\u540c\u4e00\u8282\u70b9 apiserver \u548c etcd \u4e4b\u95f4\u7684\u901a\u8baf\u57fa\u4e8e gRPC \u9488\u5bf9\u6bcf\u4e00\u4e2a object, apiserver \u548c etcd \u4e4b\u95f4\u7684 Connection -> stream \u5171\u4eab http2 \u7684\u7279\u6027 Stream quota \u5e26\u6765\u7684\u95ee\u9898\uff1f\u5bf9\u4e8e\u5927\u89c4\u6a21\u96c6\u7fa4, \u4f1a\u9020\u6210\u94fe\u8def\u963b\u585e 10000\u4e2apod, \u2014\u6b21 list \u64cd\u4f5c\u9700\u8981\u8fd4\u56de\u7684\u6570\u636e\u53ef\u80fd\u8d85\u8fc7 100M k get pod --all-namespaces|wc -L 8520 k get pod -oyaml --all-namespaces>pops Is -l pops -rw-r--r-- 1 root root 75339736 Apr 5 03:13 pops","title":"\u4fdd\u8bc1 apiserver \u548c etcd \u4e4b\u95f4\u7684\u9ad8\u6548\u6027\u901a\u8baf"},{"location":"3/3/#-etcd_1","text":"\u672c\u5730VS\u8fdc\u7a0b\uff1f Remote Storage \u4f18\u52bf\u662f\u5047\u8bbe\u6c38\u8fdc\u53ef\u7528, \u73b0\u5b9e\u771f\u662f\u5982\u6b64\u5417? \u52a3\u52bf\u662f IO \u6548\u7387, \u53ef\u80fd\u5e26\u6765\u7684\u95ee\u9898\uff1f \u6700\u4f73\u5b9e\u8df5: Local SSD \u5229\u7528 local volume \u5206\u914d\u7a7a\u95f4 \u591a\u5c11\u7a7a\u95f4\uff1f \u4e0e\u96c6\u7fa4\u89c4\u6a21\u76f8\u5173, \u601d\u8003: \u4e3a\u4ec0\u4e48\u6bcf\u4e2a member \u7684 DB size \u4e0d\u4e00\u81f4?","title":"\u5b9e\u8df5 - etcd \u5b58\u50a8\u89c4\u5212"},{"location":"3/3/#etcd_3","text":"\u5b89\u5168\u6027 peer \u548c peer \u4e4b\u95f4\u7684\u901a\u8baf\u52a0\u5bc6 \u662f\u5426\u6709\u9700\u6c42 TLS \u7684\u989d\u5916\u5f00\u9500 \u8fd0\u8425\u590d\u6742\u5ea6\u589e\u52a0 \u6570\u636e\u52a0\u5bc6 \u662f\u5426\u6709\u9700\u6c42? Kubernetes \u63d0\u4f9b\u4e86\u9488\u5bf9 secret \u7684\u52a0\u5bc6 https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/ \u4e8b\u4ef6\u5206\u79bb \u5bf9\u4e8e\u5927\u89c4\u6a21\u96c6\u7fa4, \u5927\u91cf\u7684\u4e8b\u4ef6\u4f1a\u5bf9 etcd \u9020\u6210\u538b\u529b API server \u542f\u52a8\u811a\u672c\u4e2d\u6307\u5b9a etcd server \u96c6\u7fa4 /usr/local/bin/kube-apiserver \u2014etcd_servers=https://localhost:4001 \u2014etcd- cafile=/etc/ssl/kubernetes/ca.crt\u2014storage-backend=etcd3 \u2014etcd-servers- overrides=/events#https://localhost:4002 \u5982\u4f55\u76d1\u63a7?","title":"etcd"},{"location":"3/3/#_3","text":"\u51cf\u5c11\u7f51\u7edc\u5ef6\u8fdf \u6570\u636e\u4e2d\u5fc3\u5185\u7684RTT\u5927\u6982\u662f\u6570\u6beb\u79d2, \u56fd\u5185\u7684\u5178\u578b RTT \u7ea6\u4e3a 50ms, \u4e24\u5927\u6d32\u4e4b\u95f4\u7684 RTT \u53ef\u80fd\u6162\u81f3 400ms. \u56e0\u6b64\u5efa\u8bae etcd \u96c6\u7fa4\u5c3d\u91cf\u540c\u5730\u57df\u90e8\u7f72. \u5f53\u5ba2\u6237\u7aef\u5230 Leader \u7684\u5e76\u53d1\u8fde\u63a5\u6570\u91cf\u8fc7\u591a, \u53ef\u80fd\u4f1a\u5bfc\u81f4\u5176\u4ed6 Follower \u8282\u70b9\u53d1\u5f80 Leader \u7684\u8bf7\u6c42\u56e0 \u4e3a\u7f51\u7edc\u62e5\u585e\u800c\u88ab\u5ef6\u8fdf\u5904\u7406. \u5728 Follower \u8282\u70b9\u4e0a, \u53ef\u80fd\u4f1a\u770b\u5230\u8fd9\u6837\u7684\u9519\u8bef: dropped MsgProp to 247ae21ff9436b2d since streamMsg's sending buffer is full \u53ef\u4ee5\u5728\u8282\u70b9\u4e0a\u901a\u8fc7\u6d41\u91cf\u63a7\u5236\u5de5\u5177 (Traffic Control) \u63d0\u9ad8 etcd \u6210\u5458\u4e4b\u95f4\u53d1\u9001\u6570\u636e\u7684\u4f18\u5148\u7ea7\u6765\u907f\u514d.","title":"\u51cf\u5c11\u7f51\u7edc\u5ef6\u8fdf"},{"location":"3/3/#io","text":"\u5bf9\u4e8e\u78c1\u76d8\u5ef6\u8fdf, \u5178\u578b\u7684\u65cb\u8f6c\u78c1\u76d8\u5199\u5ef6\u8fdf\u7ea6\u4e3a 10 \u6beb\u79d2. \u5bf9\u4e8e SSD (Solid State Drives, \u56fa\u6001\u786c\u76d8) , \u5ef6\u8fdf\u901a\u5e38\u4f4e\u4e8e1\u6beb\u79d2. HDD (Hard Disk Drive, \u786c\u76d8\u9a71\u52a8\u5668) \u6216\u8005\u7f51\u76d8\u5728\u5927\u91cf\u6570\u636e\u8bfb\u5199\u64cd\u4f5c\u7684\u60c5\u51b5\u4e0b\u5ef6\u65f6\u4f1a\u4e0d\u7a33\u5b9a. \u56e0\u6b64\u5f3a\u70c8\u5efa\u8bae\u4f7f\u7528 SSD. \u540c\u65f6\u4e3a\u4e86\u964d\u4f4e\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u7684 I/O \u64cd\u4f5c\u5bf9 etcd \u7684\u5e72\u6270, \u5efa\u8bae\u5c06 etcd \u7684\u6570\u636e\u5b58\u653e\u5728\u5355\u72ec\u7684\u78c1\u76d8\u5185. \u4e5f\u53ef\u4ee5\u5c06\u4e0d\u540c\u7c7b\u578b\u7684\u5bf9\u8c61\u5b58\u50a8\u5728\u4e0d\u540c\u7684\u82e5\u5e72\u4e2a etcd \u96c6\u7fa4\u4e2d, \u6bd4\u5982\u5c06\u9891\u7e41\u53d8\u66f4\u7684 event \u5bf9\u8c61\u4ece\u4e3b etcd \u96c6\u7fa4\u4e2d\u5206\u79bb\u51fa\u6765, \u4ee5\u4fdd\u8bc1\u4e3b\u96c6\u7fa4\u7684\u9ad8\u6027\u80fd. \u5728 APIServer \u5904\u8fd9\u662f\u53ef\u4ee5\u901a\u8fc7\u53c2\u6570\u914d\u7f6e\u7684. \u8fd9\u4e9b etcd \u96c6 \u7fa4\u6700\u597d\u4e5f\u5206\u522b\u80fd\u6709\u4e00\u5757\u5355\u72ec\u7684\u5b58\u50a8\u78c1\u76d8. \u5982\u679c\u4e0d\u53ef\u907f\u514d\u5730, etcd \u548c\u5176\u4ed6\u7684\u4e1a\u52a1\u5171\u4eab\u5b58\u50a8\u78c1\u76d8, \u90a3\u4e48\u5c31\u9700\u8981\u901a\u8fc7\u4e0b\u9762 ionice \u547d\u4ee4\u5bf9 etcd \u670d\u52a1 \u8bbe\u7f6e\u66f4\u9ad8\u7684\u78c1\u76d8 I/O \u4f18\u5148\u7ea7, \u5c3d\u53ef\u80fd\u907f\u514d\u5176\u4ed6\u8fdb\u7a0b\u7684\u5f71\u54cd. $ ionice -c2 -n0 -p 'pgrep etcd'","title":"\u51cf\u5c11\u78c1\u76d8 I/O \u5ef6\u8fdf"},{"location":"3/3/#_4","text":"etcd\u4ee5\u65e5\u5fd7\u7684\u5f62\u5f0f\u4fdd\u5b58\u6570\u636e, \u65e0\u8bba\u662f\u6570\u636e\u521b\u5efa\u8fd8\u662f\u4fee\u6539, \u5b83\u90fd\u5c06\u64cd\u4f5c\u8ffd\u52a0\u5230\u65e5\u5fd7\u6587\u4ef6, \u56e0\u6b64\u65e5\u5fd7 \u6587\u4ef6\u5927\u5c0f\u4f1a\u968f\u7740\u6570\u636e\u4fee\u6539\u6b21\u6570\u800c\u7ebf\u6027\u589e\u957f. \u5f53Kubernetes\u96c6\u7fa4\u89c4\u6a21\u8f83\u5927\u65f6, \u5176\u5bf9etcd\u96c6\u7fa4\u4e2d\u7684\u6570\u636e\u66f4\u6539\u4e5f\u4f1a\u5f88\u9891\u7e41, \u96c6\u7fa4\u65e5\u8bb0\u6587\u4ef6\u4f1a\u8fc5\u901f\u589e\u957f. \u4e3a\u4e86\u6709\u6548\u964d\u4f4e\u65e5\u5fd7\u6587\u4ef6\u5927\u5c0f, etcd\u4f1a\u4ee5\u56fa\u5b9a\u5468\u671f\u521b\u5efa\u5feb\u7167\u4fdd\u5b58\u7cfb\u7edf\u7684\u5f53\u524d\u72b6\u6001, \u5e76\u79fb\u9664\u65e7\u65e5\u5fd7\u6587\u4ef6. \u53e6\u5916\u5f53\u4fee\u6539\u6b21\u6570\u7d2f\u79ef\u5230\u4e00\u5b9a\u7684\u6570\u91cf (\u9ed8\u8ba4\u662f10000,\u901a\u8fc7\u53c2\u6570\"--snapshot-count\"\u6307\u5b9a) , etcd\u4e5f\u4f1a\u521b\u5efa\u5feb\u7167\u6587\u4ef6. \u5982\u679cetcd\u7684\u5185\u5b58\u4f7f\u7528\u548c\u78c1\u76d8\u4f7f\u7528\u8fc7\u9ad8, \u53ef\u4ee5\u5148\u5206\u6790\u662f\u5426\u6570\u636e\u5199\u5165\u9891\u5ea6\u8fc7\u5927\u5bfc\u81f4\u5feb\u7167\u9891\u5ea6\u8fc7\u9ad8, \u786e \u8ba4\u540e\u53ef\u901a\u8fc7\u8c03\u4f4e\u5feb\u7167\u89e6\u53d1\u7684\u9608\u503c\u6765\u964d\u4f4e\u5176\u5bf9\u5185\u5b58\u548c\u78c1\u76d8\u7684\u4f7f\u7528.","title":"\u4fdd\u6301\u5408\u7406\u7684\u65e5\u5fd7\u6587\u4ef6\u5927\u5c0f"},{"location":"3/3/#_5","text":"\u5b58\u50a8\u7a7a\u95f4\u7684\u914d\u989d\u7528\u4e8e\u63a7\u5236 etcd \u6570\u636e\u7a7a\u95f4\u7684\u5927\u5c0f. \u5408\u7406\u7684\u5b58\u50a8\u914d\u989d\u53ef\u4fdd\u8bc1\u96c6\u7fa4\u64cd\u4f5c\u7684\u53ef\u9760\u6027. \u5982\u679c\u6ca1\u6709\u5b58\u50a8\u914d\u989d, \u4e5f\u5c31\u662f etcd \u53ef\u4ee5\u5229\u7528\u6574\u4e2a\u78c1\u76d8\u7a7a\u95f4, etcd \u7684\u6027\u80fd\u4f1a\u56e0\u4e3a\u5b58\u50a8\u7a7a\u95f4\u7684\u6301\u7eed\u589e\u957f\u800c\u4e25\u91cd\u4e0b\u964d, \u751a\u81f3\u6709\u8017\u5b8c\u96c6\u7fa4\u78c1\u76d8\u7a7a\u95f4\u5bfc\u81f4\u4e0d\u53ef\u9884\u6d4b\u96c6\u7fa4\u884c\u4e3a\u7684\u98ce\u9669. \u5982\u679c\u8bbe\u7f6e\u7684\u5b58\u50a8\u914d\u989d\u592a\u5c0f, \u4e00\u65e6\u5176\u4e2d\u4e00\u4e2a\u8282\u70b9\u7684\u540e\u53f0\u6570\u636e\u5e93\u7684\u5b58\u50a8\u7a7a\u95f4\u8d85\u51fa\u4e86\u5b58\u50a8\u914d\u989d, etcd \u5c31\u4f1a\u89e6\u53d1\u96c6\u7fa4\u8303\u56f4\u7684\u544a\u8b66, \u5e76\u5c06\u96c6\u7fa4\u7f6e\u4e8e\u53ea\u63a5\u53d7\u8bfb\u548c\u5220\u9664\u8bf7\u6c42\u7684\u7ef4\u62a4\u6a21\u5f0f. \u53ea\u6709\u5728\u91ca\u653e\u8db3\u591f\u7684\u7a7a\u95f4\u3001\u6d88\u9664\u540e\u7aef\u6570\u636e\u5e93\u7684\u788e\u7247\u548c\u6e05 \u9664\u5b58\u50a8\u914d\u989d\u544a\u8b66\u4e4b\u540e, \u96c6\u7fa4\u624d\u80fd\u6062\u590d\u6b63\u5e38\u64cd\u4f5c.","title":"\u8bbe\u7f6e\u5408\u7406\u7684\u5b58\u50a8\u914d\u989d"},{"location":"3/3/#_6","text":"etcd\u4f1a\u4e3a\u6bcf\u4e2a\u952e\u90fd\u4fdd\u5b58\u4e86\u5386\u53f2\u7248\u672c. \u4e3a\u4e86\u907f\u514d\u51fa\u73b0\u6027\u80fd\u95ee\u9898\u6216\u5b58\u50a8\u7a7a\u95f4\u6d88\u8017\u5b8c\u5bfc\u81f4\u5199\u4e0d\u8fdb\u53bb\u7684\u95ee \u9898, \u8fd9\u4e9b\u5386\u53f2\u7248\u672c\u9700\u8981\u8fdb\u884c\u5468\u671f\u6027\u5730\u538b\u7f29. \u538b\u7f29\u5386\u53f2\u7248\u672c\u5c31\u662f\u4e22\u5f03\u8be5\u952e\u7ed9\u5b9a\u7248\u672c\u4e4b\u524d\u7684\u6240\u6709\u4fe1\u606f, \u8282\u7701\u51fa\u6765\u7684\u7a7a\u95f4\u53ef\u4ee5\u7528\u4e8e\u540e\u7eed\u7684\u5199\u64cd\u4f5c. etcd\u652f\u6301\u81ea\u52a8\u538b\u7f29\u5386\u53f2\u7248\u672c. \u5728\u542f\u52a8\u53c2\u6570\u4e2d\u6307\u5b9a\u53c2\u6570\"--auto-compaction\", \u5176\u503c\u4ee5\u5c0f\u65f6\u4e3a\u5355\u4f4d. \u4e5f\u5c31\u662fetcd\u4f1a\u81ea\u52a8\u538b\u7f29\u8be5\u503c\u8bbe\u7f6e\u7684\u65f6\u95f4\u7a97\u53e3\u4e4b\u524d\u7684 \u5386\u53f2\u7248\u672c.","title":"\u81ea\u52a8\u538b\u7f29\u5386\u53f2\u7248\u672c"},{"location":"3/3/#_7","text":"\u538b\u7f29\u5386\u53f2\u7248\u672c, \u76f8\u5f53\u4e8e\u79bb\u6563\u5730\u62b9\u53bbetcd\u5b58\u50a8\u7a7a\u95f4\u67d0\u4e9b\u6570\u636e, etcd\u5b58\u50a8\u7a7a\u95f4\u4e2d\u5c06\u4f1a\u51fa\u73b0\u788e\u7247. \u8fd9\u4e9b\u788e\u7247\u65e0\u6cd5\u88ab\u540e\u53f0\u5b58\u50a8\u4f7f\u7528, \u5374\u4ecd\u5360\u636e\u8282\u70b9\u7684\u5b58\u50a8\u7a7a\u95f4. \u56e0\u6b64\u5b9a\u671f\u6d88\u9664\u5b58\u50a8\u788e\u7247, \u5c06\u91ca\u653e\u788e\u7247\u5316\u7684\u5b58\u50a8\u7a7a\u95f4, \u91cd\u65b0\u8c03\u6574\u6574\u4e2a\u5b58\u50a8\u7a7a\u95f4. \u5907\u4efd\u65b9\u6848 etcd \u5907\u4efd: \u5907\u4efd\u5b8c\u6574\u7684\u96c6\u7fa4\u4fe1\u606f, \u707e\u96be\u6062\u590d etcdctl snapshot save \u57fa\u4e8e\u4e8b\u4ef6\u91cd\u653e \u5907\u4efd Kubernetes event \u9891\u5ea6\uff1f \u65f6\u95f4\u95f4\u9694\u592a\u957f: \u80fd\u5426\u63a5\u53d7user data lost? \u5982\u679c\u6709\u5916\u90e8\u8d44\u6e90\u914d\u7f6e, \u5982\u8d1f\u8f7d\u5747\u8861\u7b49, \u80fd\u5426\u63a5\u53d7\u6570\u636e\u4e22\u5931\u5bfc\u81f4\u7684 leak? \u65f6\u95f4\u95f4\u9694\u592a\u77ed: \u5bf9 etcd \u7684\u5f71\u54cd \u505a snapshot \u7684\u65f6\u5019, etcd \u4f1a\u9501\u4f4f\u5f53\u524d\u6570\u636e \u5e76\u53d1\u7684\u5199\u64cd\u4f5c\u9700\u8981\u5f00\u8f9f\u65b0\u7684\u7a7a\u95f4\u8fdb\u884c\u589e\u91cf\u5199, \u5bfc\u81f4\u78c1\u76d8\u7a7a\u95f4\u589e\u957f \u5982\u4f55\u4fdd\u8bc1\u5907\u4efd\u7684\u65f6\u6548\u6027, \u540c\u65f6\u9632\u6b62\u78c1\u76d8\u7206\u6389\uff1f Auto defrag?","title":"\u5b9a\u671f\u6d88\u9664\u788e\u7247\u5316"},{"location":"3/3/#_8","text":"\u5f53\u7f51\u7edc\u5ef6\u8fdf\u548c\u78c1\u76d8\u5ef6\u8fdf\u56fa\u5b9a\u7684\u60c5\u51b5\u4e0b, \u53ef\u4ee5\u4f18\u5316 etcd \u8fd0\u884c\u53c2\u6570\u6765\u63d0\u5347\u96c6\u7fa4\u7684\u5de5\u4f5c\u6548\u7387. etcd \u57fa\u4e8e Raft \u534f\u8bae\u8fdb\u884c Leader \u9009\u4e3e, \u5f53 Leader \u9009\u5b9a\u4ee5\u540e\u624d\u80fd\u5f00\u59cb\u6570\u636e\u8bfb\u5199\u64cd\u4f5c, \u56e0\u6b64\u9891\u7e41\u7684 Leader \u9009\u4e3e\u4f1a\u5bfc\u81f4\u6570\u636e\u8bfb\u5199\u6027\u80fd\u663e\u8457\u964d\u4f4e. \u53ef\u4ee5\u901a\u8fc7\u8c03\u6574\u5fc3\u8df3\u5468\u671f(Heatbeat Interval) \u548c\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4 (Election Timeout), \u6765\u964d\u4f4e Leader \u9009\u4e3e\u7684\u53ef\u80fd\u6027. \u5fc3\u8df3\u5468\u671f\u662f\u63a7\u5236 Leader \u4ee5\u4f55\u79cd\u9891\u5ea6\u5411 Follower \u53d1\u8d77\u5fc3\u8df3\u901a\u77e5. \u5fc3\u8df3\u901a\u77e5\u9664\u8868\u660e Leader \u6d3b\u8dc3\u72b6\u6001\u4e4b\u5916, \u8fd8\u5e26\u6709\u5f85\u5199\u5165\u6570\u636e\u4fe1\u606f, Follower \u4f9d\u636e\u5fc3\u8df3\u4fe1\u606f\u8fdb\u884c\u6570\u636e\u5199\u5165, \u9ed8\u8ba4\u5fc3\u8df3\u5468\u671f\u662f100ms. \u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u5b9a\u4e49\u4e86\u5f53 Follower \u591a\u4e45\u6ca1\u6709\u6536\u5230 Leader \u5fc3\u8df3, \u5219\u91cd\u65b0\u53d1\u8d77\u9009\u4e3e, \u8be5\u53c2\u6570\u7684\u9ed8\u8ba4\u8bbe\u7f6e\u662f 1000ms. \u5982\u679c etcd \u96c6\u7fa4\u7684\u4e0d\u540c\u5b9e\u4f8b\u90e8\u7f72\u5728\u5ef6\u8fdf\u8f83\u4f4e\u7684\u76f8\u540c\u6570\u636e\u4e2d\u5fc3, \u901a\u5e38\u4f7f\u7528\u9ed8\u8ba4\u914d\u7f6e\u5373\u53ef. \u5982\u679c\u4e0d\u540c\u5b9e\u4f8b\u90e8\u7f72\u5728\u591a\u6570\u636e\u4e2d\u5fc3\u6216\u8005\u7f51\u7edc\u5ef6\u8fdf\u8f83\u9ad8\u7684\u96c6\u7fa4\u73af\u5883, \u5219\u9700\u8981\u5bf9\u5fc3\u8df3\u5468\u671f\u548c\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u8fdb\u884c\u8c03\u6574. \u5efa\u8bae\u5fc3\u8df3\u5468\u671f\u53c2\u6570\u63a8\u8350\u8bbe\u7f6e\u4e3a\u63a5\u8fd1 etcd \u591a\u4e2a\u6210\u5458\u4e4b\u95f4\u5e73\u5747\u6570\u636e\u5f80\u8fd4\u5468\u671f\u7684\u6700\u5927\u503c, \u4e00\u822c\u662f\u5e73\u5747 RTT \u7684 0.55-1.5 \u500d. \u5982\u679c\u5fc3\u8df3\u5468\u671f\u8bbe\u7f6e\u5f97\u8fc7\u4f4e, etcd \u4f1a\u53d1\u9001\u5f88\u591a\u4e0d\u5fc5\u8981\u7684\u5fc3\u8df3\u4fe1\u606f, \u4ece\u800c\u589e\u52a0 CPU \u548c\u7f51\u7edc\u7684\u8d1f\u62c5. \u5982\u679c\u8bbe\u7f6e \u5f97\u8fc7\u9ad8, \u5219\u4f1a\u5bfc\u81f4\u9009\u4e3e\u9891\u7e41\u8d85\u65f6. \u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u4e5f\u9700\u8981\u6839\u636e etcd \u6210\u5458\u4e4b\u95f4\u7684\u5e73\u5747 RTT \u65f6\u95f4\u6765\u8bbe\u7f6e. \u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u6700\u5c11\u8bbe\u7f6e\u4e3a etcd \u6210\u5458\u4e4b\u95f4 RTT \u65f6\u95f4\u7684 10 \u500d, \u4ee5\u4fbf\u5bf9\u7f51\u7edc\u6ce2\u52a8. \u5fc3\u8df3\u95f4\u9694\u548c\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u7684\u503c\u5fc5\u987b\u5bf9\u540c\u4e00\u4e2a etcd \u96c6\u7fa4\u7684\u6240\u6709\u8282\u70b9\u90fd\u751f\u6548, \u5982\u679c\u5404\u4e2a\u8282\u70b9\u914d\u7f6e\u4e0d\u540c, \u5c31\u4f1a\u5bfc\u81f4\u96c6\u7fa4\u6210\u5458\u4e4b\u95f4\u534f\u5546\u7ed3\u679c\u4e0d\u53ef\u9884\u77e5\u800c\u4e0d\u7a33\u5b9a.","title":"\u4f18\u5316\u8fd0\u884c\u53c2\u6570"},{"location":"3/3/#etcd_4","text":"etcd \u7684\u9ed8\u8ba4\u5de5\u4f5c\u76ee\u5f55\u4e0b\u4f1a\u751f\u6210\u4e24\u4e2a\u5b50\u76ee\u5f55: waf \u548c snap. wal \u662f\u7528\u4e8e\u5b58\u653e\u9884\u5199\u5f0f\u65e5\u5fd7, \u5176\u6700\u5927\u7684\u4f5c\u7528\u662f\u8bb0\u5f55\u6574\u4e2a\u6570\u636e\u53d8\u5316\u7684\u5168\u90e8\u5386\u7a0b. \u6240\u6709\u6570\u636e\u7684\u4fee\u6539\u5728\u63d0\u4ea4\u524d, \u90fd\u8981\u5148\u5199\u5165 wal \u4e2d. snap \u662f\u7528\u4e8e\u5b58\u653e\u5feb\u7167\u6570\u636e. \u4e3a\u9632\u6b62 wal \u6587\u4ef6\u8fc7\u591a, etcd \u4f1a\u5b9a\u671f (\u5f53 wal \u4e2d\u6570\u636e\u8d85\u8fc7 10000 \u6761\u8bb0\u5f55 \u65f6, \u7531\u53c2\u6570\"snapshot-count\"\u8bbe\u7f6e) \u521b\u5efa\u5feb\u7167. \u5f53\u5feb\u7167\u751f\u6210\u540e, wal \u4e2d\u6570\u636e\u5c31\u53ef\u4ee5\u88ab\u5220\u9664\u4e86. \u5982\u679c\u6570\u636e\u906d\u5230\u7834\u574f\u6216\u9519\u8bef\u4fee\u6539\u9700\u8981\u56de\u6eda\u5230\u4e4b\u524d\u67d0\u4e2a\u72b6\u6001\u65f6, \u65b9\u6cd5\u5c31\u6709\u4e24\u4e2a: \u4e00\u662f\u4ece\u5feb\u7167\u4e2d\u6062\u590d\u6570\u636e\u4e3b\u4f53, \u4f46\u662f\u672a\u88ab\u62cd\u5165\u5feb\u7167\u7684\u6570\u636e\u4f1a\u4e22\u5931; \u800c\u662f\u6267\u884c\u6240\u6709 WAL \u4e2d\u8bb0\u5f55\u7684\u4fee\u6539\u64cd\u4f5c, \u4ece\u6700\u539f\u59cb\u7684\u6570\u636e\u6062\u590d\u5230\u6570\u636e\u635f\u574f\u4e4b\u524d\u7684\u72b6\u6001, \u4f46\u6062\u590d\u7684\u65f6\u95f4\u8f83\u957f.","title":"etcd \u5907\u4efd\u5b58\u50a8"},{"location":"3/3/#_9","text":"\u5b98\u65b9\u63a8\u8350 etcd \u96c6\u7fa4\u7684\u5907\u4efd\u65b9\u5f0f\u662f\u5b9a\u671f\u521b\u5efa\u5feb\u7167. \u6839\u636e\u96c6\u7fa4\u5bf9 etcd \u5907\u4efd\u7c92\u5ea6\u7684\u8981\u6c42, \u53ef\u9002\u5f53\u8c03\u8282\u5907\u4efd\u7684\u5468\u671f. \u5728\u751f\u4ea7\u73af\u5883\u4e2d\u5b9e\u6d4b, \u62cd\u6444\u5feb\u7167\u901a\u5e38\u4f1a\u5f71\u54cd\u96c6\u7fa4\u5f53\u65f6 \u7684\u6027\u80fd,\u56e0\u6b64\u4e0d\u5efa\u8bae\u9891\u7e41\u521b\u5efa\u5feb\u7167. \u4f46\u662f\u5907\u4efd\u5468\u671f\u592a\u957f, \u5c31\u53ef\u80fd\u5bfc\u81f4\u5927\u91cf\u6570\u636e\u7684\u4e22\u5931. \u8fd9\u91cc\u53ef\u4ee5\u4f7f\u7528\u589e\u91cf\u5907\u4efd\u7684\u65b9\u5f0f.","title":"\u5907\u4efd\u65b9\u6848\u5b9e\u8df5"},{"location":"3/4/","text":"etcd \u5e38\u89c1\u95ee\u9898 \u589e\u5f3a\u7248 backup \u65b9\u6848 etcd \u6570\u636e\u52a0\u5bc6 https://kubernetesjo/docs/tasks/administer-cluster/encrypt-data/ apiVersion: API Server.config.k8s.io/v1 kind: Encryptionconfiguration resources: - resources: - secrets providers: - identity: {} - aesgcm: keys: - name: key1 secret: c2VjcmV0IGlzIHNlY3VyZQ== - name: key2 secret: dGhpcyBpcyBwYXNzd29yZA== - aescbc: keys: - name: key1 secret: c2VjcmV0IGlzIHNlY3VyZQ== - secretbox: keys: - name: key1 secret: YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoxMjM0NTY= - kms: name: myKmsPlugin endpoint: unix:///tmp/socketfile.sock cachesize: 100 Kubernetes \u4e2d\u6570\u636e\u5206\u79bb \u5bf9\u4e8e\u5927\u89c4\u6a21\u96c6\u7fa4/\u5927\u91cf\u7684\u4e8b\u4ef6\u4f1a\u5bf9etcd\u9020\u6210\u538b\u529b API server\u542f\u52a8\u811a\u672c\u4e2d\u6307\u5b9aetcd servers\u96c6\u7fa4 /usr/local/bin/kube-apiserver --etcd-servers=https://localhost:4001 --etcd- cafile=/etc/ssl/kubernetes/ca.crt--storage-backend=etcd3 --etcd-servers- overrides=/events#https://localhost:4002 \u67e5\u8be2 APIServer \u8fd4\u56de\u67d0namespace\u4e2d\u7684\u6240\u6709Pod GET /api/vl /namespaces/test/pods 200 OK Content-Type: application/json ( \"kind\": \"PodList\", \"apiVersion\": \"vl\", \"metadata\": (\"resourceversion\":\"!0245\"}, \"items\": [...] } \u4ece 12345 \u7248\u672c\u5f00\u59cb\uff0c\u76d1\u542c\u6240\u6709\u5bf9\u8c61\u53d8\u5316 GET /api/vl /namespaces/test/pods?watch=1&resourceVersion=10245 200 OK Transfer-Encoding: chunked Content-Type: application/json { \"type\": \"ADDED\", \"object\": {\"kind\": \"Pod\", \"apiVersion\": \"vl\", \"metadata\": (\"resourceversion\": \"10596\",...} ) ( \"type\": \"MODIFIED\", \"object\": {\"kind\": \"Pod\", \"apiVersion\": \"vl\", \"metadata\": {\"resourceVersion\": \"11020\",...),...) } \u5206\u9875\u67e5\u8be2 GET /api/v1/pods?limit=500 --- 200 OK Content-Type: application/json { \"kind\": \"PodList, \"apiVersion\": \"vl\", \"metadata\": { \"resourceVersion\":\"10245\", \"continue\": \"HENCODED_CONTINUE_TOKEN\", }, \"items\": [...] // returns pods 1-500 } GET /api/v1/pods?limit=500&contnue=ENCODED_CONTINUE_TOKEN --- 200 OK Content-Type: application/json { \"kind\": \"PodList\", \"apiVersion\": \"v1\", \"metadata\": { \"resourceVersionn\":\"10245\", \"continue\": \"ENCODED_CONTINUE_TOKEN_2, }, \"items\": [...] // returns pods 501-1000 } Resourceversion \u5355\u4e2a\u5bf9\u8c61\u7684 resourceversion \u5bf9\u8c61\u7684\u6700\u540e\u4fee\u6539 resourceversion List \u5bf9\u8c61\u7684 resourceversion \u751f\u6210 list response \u65f6\u7684 resourceversion List \u884c\u4e3a List \u5bf9\u8c61\u65f6,\u5982\u679c\u4e0d\u52a0 resourceversion\uff0c\u610f\u5473\u7740\u9700\u8981 Most Recent \u6570\u636e\uff0c\u8bf7\u6c42\u4f1a\u51fb\u7a7f APIServer \u7f13\u5b58\uff0c\u76f4\u63a5\u53d1\u9001\u81f3 etcd APIServer \u901a\u8fc7 Label \u8fc7\u6ee4\u5bf9\u8c61\u67e5\u8be2\u65f6\uff0c\u8fc7\u6ee4\u52a8\u4f5c\u662f\u5728 APIServer \u7aef\uff0cAPIServer \u9700\u8981\u5411 etcd \u53d1\u8d77\u5168\u91cf\u67e5\u8be2\u8bf7\u6c42 \u906d\u9047\u5230\u7684\u9677\u9631 \u9891\u7e41\u7684 leader election etcd \u5206\u88c2 etcd \u4e0d\u54cd\u5e94 \u4e0e apiserver \u4e4b\u95f4\u7684\u94fe\u8def\u963b\u585e \u78c1\u76d8\u66b4\u6da8 \u5c11\u6570 etcd \u6210\u5458 Down Master \u8282\u70b9\u51fa\u73b0\u7f51\u7edc\u5206\u533a Case:\u7f51\u7edc\u5206\u533a\u51fa\u73b0 Group#1\uff1amaster-1\uff0cmaster-2 Group#2\uff1amaster-3\uff0cmaster-4\uff0cmaster-5 \u8bfe\u540e\u7ec3\u4e60 5.2 \u5728 Kubernetes \u96c6\u7fa4\u4e2d\u521b\u5efa\u4e00\u4e2a\u9ad8\u53ef\u7528\u7684 etcd \u96c6\u7fa4 \u53c2\u8003\u8d44\u6599 B\u6811\u548cB+\u6811: https://segmentfault.com/a/1190000020416577 Etcd\u6d41\u7a0b\u5206\u6790: https://www.jianshu.com/p/2614fdb5d1c3","title":"etcd\u5e38\u89c1\u95ee\u9898"},{"location":"3/4/#etcd","text":"","title":"etcd \u5e38\u89c1\u95ee\u9898"},{"location":"3/4/#backup","text":"","title":"\u589e\u5f3a\u7248 backup \u65b9\u6848"},{"location":"3/4/#etcd_1","text":"https://kubernetesjo/docs/tasks/administer-cluster/encrypt-data/ apiVersion: API Server.config.k8s.io/v1 kind: Encryptionconfiguration resources: - resources: - secrets providers: - identity: {} - aesgcm: keys: - name: key1 secret: c2VjcmV0IGlzIHNlY3VyZQ== - name: key2 secret: dGhpcyBpcyBwYXNzd29yZA== - aescbc: keys: - name: key1 secret: c2VjcmV0IGlzIHNlY3VyZQ== - secretbox: keys: - name: key1 secret: YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoxMjM0NTY= - kms: name: myKmsPlugin endpoint: unix:///tmp/socketfile.sock cachesize: 100","title":"etcd \u6570\u636e\u52a0\u5bc6"},{"location":"3/4/#kubernetes","text":"\u5bf9\u4e8e\u5927\u89c4\u6a21\u96c6\u7fa4/\u5927\u91cf\u7684\u4e8b\u4ef6\u4f1a\u5bf9etcd\u9020\u6210\u538b\u529b API server\u542f\u52a8\u811a\u672c\u4e2d\u6307\u5b9aetcd servers\u96c6\u7fa4 /usr/local/bin/kube-apiserver --etcd-servers=https://localhost:4001 --etcd- cafile=/etc/ssl/kubernetes/ca.crt--storage-backend=etcd3 --etcd-servers- overrides=/events#https://localhost:4002","title":"Kubernetes \u4e2d\u6570\u636e\u5206\u79bb"},{"location":"3/4/#apiserver","text":"\u8fd4\u56de\u67d0namespace\u4e2d\u7684\u6240\u6709Pod GET /api/vl /namespaces/test/pods 200 OK Content-Type: application/json ( \"kind\": \"PodList\", \"apiVersion\": \"vl\", \"metadata\": (\"resourceversion\":\"!0245\"}, \"items\": [...] }","title":"\u67e5\u8be2 APIServer"},{"location":"3/4/#12345","text":"GET /api/vl /namespaces/test/pods?watch=1&resourceVersion=10245 200 OK Transfer-Encoding: chunked Content-Type: application/json { \"type\": \"ADDED\", \"object\": {\"kind\": \"Pod\", \"apiVersion\": \"vl\", \"metadata\": (\"resourceversion\": \"10596\",...} ) ( \"type\": \"MODIFIED\", \"object\": {\"kind\": \"Pod\", \"apiVersion\": \"vl\", \"metadata\": {\"resourceVersion\": \"11020\",...),...) }","title":"\u4ece 12345 \u7248\u672c\u5f00\u59cb\uff0c\u76d1\u542c\u6240\u6709\u5bf9\u8c61\u53d8\u5316"},{"location":"3/4/#_1","text":"GET /api/v1/pods?limit=500 --- 200 OK Content-Type: application/json { \"kind\": \"PodList, \"apiVersion\": \"vl\", \"metadata\": { \"resourceVersion\":\"10245\", \"continue\": \"HENCODED_CONTINUE_TOKEN\", }, \"items\": [...] // returns pods 1-500 } GET /api/v1/pods?limit=500&contnue=ENCODED_CONTINUE_TOKEN --- 200 OK Content-Type: application/json { \"kind\": \"PodList\", \"apiVersion\": \"v1\", \"metadata\": { \"resourceVersionn\":\"10245\", \"continue\": \"ENCODED_CONTINUE_TOKEN_2, }, \"items\": [...] // returns pods 501-1000 }","title":"\u5206\u9875\u67e5\u8be2"},{"location":"3/4/#resourceversion","text":"\u5355\u4e2a\u5bf9\u8c61\u7684 resourceversion \u5bf9\u8c61\u7684\u6700\u540e\u4fee\u6539 resourceversion List \u5bf9\u8c61\u7684 resourceversion \u751f\u6210 list response \u65f6\u7684 resourceversion List \u884c\u4e3a List \u5bf9\u8c61\u65f6,\u5982\u679c\u4e0d\u52a0 resourceversion\uff0c\u610f\u5473\u7740\u9700\u8981 Most Recent \u6570\u636e\uff0c\u8bf7\u6c42\u4f1a\u51fb\u7a7f APIServer \u7f13\u5b58\uff0c\u76f4\u63a5\u53d1\u9001\u81f3 etcd APIServer \u901a\u8fc7 Label \u8fc7\u6ee4\u5bf9\u8c61\u67e5\u8be2\u65f6\uff0c\u8fc7\u6ee4\u52a8\u4f5c\u662f\u5728 APIServer \u7aef\uff0cAPIServer \u9700\u8981\u5411 etcd \u53d1\u8d77\u5168\u91cf\u67e5\u8be2\u8bf7\u6c42","title":"Resourceversion"},{"location":"3/4/#_2","text":"\u9891\u7e41\u7684 leader election etcd \u5206\u88c2 etcd \u4e0d\u54cd\u5e94 \u4e0e apiserver \u4e4b\u95f4\u7684\u94fe\u8def\u963b\u585e \u78c1\u76d8\u66b4\u6da8","title":"\u906d\u9047\u5230\u7684\u9677\u9631"},{"location":"3/4/#etcd-down","text":"","title":"\u5c11\u6570 etcd \u6210\u5458 Down"},{"location":"3/4/#master","text":"Case:\u7f51\u7edc\u5206\u533a\u51fa\u73b0 Group#1\uff1amaster-1\uff0cmaster-2 Group#2\uff1amaster-3\uff0cmaster-4\uff0cmaster-5","title":"Master \u8282\u70b9\u51fa\u73b0\u7f51\u7edc\u5206\u533a"},{"location":"3/4/#52","text":"\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u521b\u5efa\u4e00\u4e2a\u9ad8\u53ef\u7528\u7684 etcd \u96c6\u7fa4","title":"\u8bfe\u540e\u7ec3\u4e60 5.2"},{"location":"3/4/#_3","text":"B\u6811\u548cB+\u6811: https://segmentfault.com/a/1190000020416577 Etcd\u6d41\u7a0b\u5206\u6790: https://www.jianshu.com/p/2614fdb5d1c3","title":"\u53c2\u8003\u8d44\u6599"},{"location":"3/test/test/","text":"etcd test 1.etcd-member-list Download and install ETCD_VER=v3.4.17 DOWNLOAD_URL=https://github.com/etcd-io/etcd/releases/download rm -f /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz rm -rf /tmp/etcd-download-test && mkdir -p /tmp/etcd-download-test curl -L ${DOWNLOAD_URL}/${ETCD_VER}/etcd-${ETCD_VER}-linux-amd64.tar.gz -o /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz tar xzvf /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz -C /tmp/etcd-download-test --strip-components=1 rm -f /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz rm -rf /tmp/etcd-download-test Start etcd locally \u4e3a\u907f\u514d\u8ddf\u672c\u5730\u7684 hostNetwork \u7684 etcd \u5bb9\u5668\u51b2\u7a81\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539 etcd \u7684\u76d1\u542c\u7aef\u53e3 initial-cluster \uff1a\u521d\u59cb\u5316\u96c6\u7fa4\uff0c\u9700\u8981\u5217\u6240\u6709 member \u5730\u5740 What is the difference between listen- -urls, advertise-client-urls or initial-advertise-peer-urls? listen-client-urls and listen-peer-urls specify the local addresses etcd server binds to for accepting incoming connections. To listen on a port for all interfaces, specify 0.0.0.0 as the listen IP address. advertise-client-urls and initial-advertise-peer-urls specify the addresses etcd clients or other etcd members should use to contact the etcd server. The advertise addresses must be reachable from the remote machines. Do not advertise addresses like localhost or 0.0.0.0 for a production setup since these addresses are unreachable from remote machines. etcd --listen-client-urls 'http://localhost:12379' \\ --advertise-client-urls 'http://localhost:12379' \\ --listen-peer-urls 'http://localhost:12380' \\ --initial-advertise-peer-urls 'http://localhost:12380' \\ --initial-cluster 'default=http://localhost:12380' Member list etcdctl member list --write-out=table --endpoints=localhost:12379 etcdctl --endpoints=localhost:12379 put /key1 val1 etcdctl --endpoints=localhost:12379 put /key2 val2 etcdctl --endpoints=localhost:12379 get --prefix / etcdctl --endpoints=localhost:12379 get --prefix / --keys-only etcdctl --endpoints=localhost:12379 watch --prefix / etcdctl --endpoints=localhost:12379 put /key val1 etcdctl --endpoints=localhost:12379 put /key val2 etcdctl --endpoints=localhost:12379 put /key val3 etcdctl --endpoints=localhost:12379 put /key val4 etcdctl --endpoints=localhost:12379 get /key -wjson etcdctl --endpoints=localhost:12379 watch --prefix / --rev 0 etcdctl --endpoints=localhost:12379 watch --prefix / --rev 1 etcdctl --endpoints=localhost:12379 watch --prefix / --rev 2 2.put-data \u542f\u52a8\u65b0 etcd \u96c6\u7fa4 docker run -d registry.aliyuncs.com/google_containers/etcd:3.5.0-0 /usr/local/bin/etcd \u8fdb\u5165 etcd \u5bb9\u5668 docker ps|grep etcd docker exec \u2013it <containerid> sh \u5b58\u5165\u6570\u636e etcdctl put x 0 \u8bfb\u53d6\u6570\u636e etcdctl get x -w=json {\"header\":{\"cluster_id\":14841639068965178418,\"member_id\":10276657743932975437,\"revision\":2,\"raft_term\":2},\"kvs\":[{\"key\":\"eA==\",\"create_revision\":2,\"mod_revision\":2,\"version\":1,\"value\":\"MA==\"}],\"count\":1} \u4fee\u6539\u503c etcdctl put x 1 \u67e5\u8be2\u6700\u65b0\u503c etcdctl get x x 1 \u67e5\u8be2\u5386\u53f2\u7248\u672c\u503c etcdctl get x --rev=2 x 0 2.2.lease \u8bbe\u7f6e Key \u7684\u751f\u5b58\u5468\u671f: grant etcdctl --endpoints=localhost:12379 lease grant 30 etcdctl --endpoints=localhost:12379 lease list etcdctl --endpoints=localhost:12379 --lease 1cf77c6926d4620e put /a b etcdctl --endpoints=localhost:12379 get --prefix / etcdctl --endpoints=localhost:12379 lease keep-alive 1cf77c6926d4620e 3.dr \u521b\u5efa Snapshot etcdctl --endpoints https://127.0.0.1:3379 --cert /tmp/etcd-certs/certs/127.0.0.1.pem --key /tmp/etcd-certs/certs/127.0.0.1-key.pem --cacert /tmp/etcd-certs/certs/ca.pem snapshot save snapshot.db \u6062\u590d\u6570\u636e etcdctl snapshot restore snapshot.db \\ --name infra2 \\ --data-dir=/tmp/etcd/infra2 \\ --initial-cluster infra0=http://127.0.0.1:3380,infra1=http://127.0.0.1:4380,infra2=http://127.0.0.1:5380 \\ --initial-cluster-token etcd-cluster-1 \\ --initial-advertise-peer-urls http://127.0.0.1:5380 4.alarm \u8bbe\u7f6e etcd \u5b58\u50a8\u5927\u5c0f etcd --quota-backend-bytes=$((16*1024*1024)) \u5199\u7206\u78c1\u76d8 while [ 1 ]; do dd if=/dev/urandom bs=1024 count=1024 | ETCDCTL_API=3 etcdctl put key || break; done \u67e5\u770b endpoint \u72b6\u6001 ETCDCTL_API=3 etcdctl --write-out=table endpoint status \u67e5\u770b alarm ETCDCTL_API=3 etcdctl alarm list \u6e05\u7406\u788e\u7247 ETCDCTL_API=3 etcdctl defrag \u6e05\u7406 alarm ETCDCTL_API=3 etcdctl alarm disarm 5.defrag Keep one hour of history etcd --auto-compaction-retention=1 Compact up to revision 3 etcdctl compact 3 etcdctl defrag Finished defragmenting etcd member[127.0.0.1:2379] 6.statefulset-etcd Install helm https://github.com/helm/helm/releases Download bitnami etcd helm repo add bitnami https://charts.bitnami.com/bitnami helm pull bitnami/etcd tar -xvf etcd-6.8.4.tgz vi etcd/values.yaml And set persistence to false: persistence: ## @param persistence.enabled If true, use a Persistent Volume Claim. If false, use emptyDir. ## enabled: false Install etcd by helm chart helm install my-release ./etcd Start etcd client kubectl run my-release-etcd-client --restart='Never' --image docker.io/bitnami/etcd:3.5.0-debian-10-r94 --env ROOT_PASSWORD=$(kubectl get secret --namespace default my-release-etcd -o jsonpath=\"{.data.etcd-root-password}\" | base64 --decode) --env ETCDCTL_ENDPOINTS=\"my-release-etcd.default.svc.cluster.local:2379\" --namespace default --command -- sleep infinity kubectl exec --namespace default -it my-release-etcd-client -- bash etcdctl --user root:$ROOT_PASSWORD put /message Hello etcdctl --user root:$ROOT_PASSWORD get /message etcd-binary-setup \u521b\u5efa\u5de5\u4f5c\u76ee\u5f55 mkdir -p /data/k8s-work cd /data/k8s-work \u4e0b\u8f7d cfssl \u5de5\u5177 wget https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 wget https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64 wget https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64 chmod +x cfssl* mv cfssl_linux-amd64 /usr/local/bin/cfssl mv cfssljson_linux-amd64 /usr/local/bin/cfssljson mv cfssl-certinfo_linux-amd64 /usr/local/bin/cfssl-certinfo \u751f\u6210 ca \u914d\u7f6e\u6587\u4ef6 cat > ca-csr.json <<\"EOF\" { \"CN\": \"kubernetes\", \"key\": { \"algo\": \"rsa\", \"size\": 2048 }, \"names\": [ { \"C\": \"CN\", \"ST\": \"Shanghai\", \"L\": \"Shanghai\", \"O\": \"cncamp\", \"OU\": \"cncamp\" } ], \"ca\": { \"expiry\": \"87600h\" } } EOF \u751f\u6210 ca \u8bc1\u4e66\u6587\u4ef6 cfssl gencert -initca ca-csr.json | cfssljson -bare ca \u914d\u7f6e ca \u8bc1\u4e66\u7b56\u7565 cat > ca-config.json <<\"EOF\" { \"signing\": { \"default\": { \"expiry\": \"87600h\" }, \"profiles\": { \"kubernetes\": { \"usages\": [ \"signing\", \"key encipherment\", \"server auth\", \"client auth\" ], \"expiry\": \"87600h\" } } } } EOF \u914d\u7f6e etcd \u8bf7\u6c42 csr \u6587\u4ef6 cat > etcd-csr.json <<\"EOF\" { \"CN\": \"etcd\", \"hosts\": [ \"127.0.0.1\", \"192.168.34.2\" ], \"key\": { \"algo\": \"rsa\", \"size\": 2048 }, \"names\": [{ \"C\": \"CN\", \"ST\": \"Shanghai\", \"L\": \"Shanghai\", \"O\": \"cncamp\", \"OU\": \"cncamp\" }] } EOF \u751f\u6210\u8bc1\u4e66 cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes etcd-csr.json | cfssljson -bare etcd wget https://github.com/etcd-io/etcd/releases/download/v3.5.0/etcd-v3.5.0-linux-amd64.tar.gz tar -xvf etcd-v3.5.0-linux-amd64.tar.gz cp -p etcd-v3.5.0-linux-amd64/etcd* /usr/local/bin/ \u751f\u6210 etcd \u914d\u7f6e\u6587\u4ef6 cat > etcd.conf <<\"EOF\" #[Member] ETCD_NAME=\"etcd1\" ETCD_DATA_DIR=\"/var/lib/etcd/default.etcd\" ETCD_LISTEN_PEER_URLS=\"https://192.168.34.2:2380\" ETCD_LISTEN_CLIENT_URLS=\"https://192.168.34.2:2379,http://127.0.0.1:2379\" #[Clustering] ETCD_INITIAL_ADVERTISE_PEER_URLS=\"https://192.168.34.2:2380\" ETCD_ADVERTISE_CLIENT_URLS=\"https://192.168.34.2:2379\" ETCD_INITIAL_CLUSTER=\"etcd1=https://192.168.34.2:2380\" ETCD_INITIAL_CLUSTER_TOKEN=\"etcd-cluster\" ETCD_INITIAL_CLUSTER_STATE=\"new\" EOF Reference https://www.jianshu.com/p/b02c428950df etcd-k8s alias ks=kubectl -n kube-system ks get po etcd-cadmin -oyaml spec: containers: - command: - etcd - --advertise-client-urls=https://192.168.34.2:2379 - --cert-file=/etc/kubernetes/pki/etcd/server.crt - --client-cert-auth=true - --data-dir=/var/lib/etcd - --initial-advertise-peer-urls=https://192.168.34.2:2380 - --initial-cluster=cadmin=https://192.168.34.2:2380 - --key-file=/etc/kubernetes/pki/etcd/server.key - --listen-client-urls=https://127.0.0.1:2379,https://192.168.34.2:2379 - --listen-metrics-urls=http://127.0.0.1:2381 - --listen-peer-urls=https://192.168.34.2:2380 - --name=cadmin - --peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt - --peer-client-cert-auth=true - --peer-key-file=/etc/kubernetes/pki/etcd/peer.key - --peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt - --snapshot-count=10000 - --trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt ks exec -it etcd-cadmin sh ETCDCTL_API=3 alias ectl='etcdctl --endpoints https://127.0.0.1:2379 \\ --cacert /etc/kubernetes/pki/etcd/ca.crt \\ --cert /etc/kubernetes/pki/etcd/server.crt \\ --key /etc/kubernetes/pki/etcd/server.key' ectl member list ectl get --prefix --keys-only / ectl get /registry/services/specs/kube-system/kube-dns -w=json {\"header\":{\"cluster_id\":10396955284310292238,\"member_id\":2496364209257137704,\"revision\":596482,\"raft_term\":8},\"kvs\":[{\"key\":\"L3JlZ2lzdHJ5L3NlcnZpY2VzL3NwZWNzL2t1YmUtc3lzdGVtL2t1YmUtZG5z\",\"create_revision\":251,\"mod_revision\":251,\"version\":1,\"value\":\"azhzAAoNCgJ2MRIHU2VydmljZRLfCAqbBwoIa3ViZS1kbnMSABoLa3ViZS1zeXN0ZW0iACokZTc0MmExMWYtMzY4NC00ZThkLWJhOGEtZWZiY2E2YTM0YzMwMgA4AEIICL+hx4oGEABaEwoHazhzLWFwcBIIa3ViZS1kbnNaJQoda3ViZXJuZXRlcy5pby9jbHVzdGVyLXNlcnZpY2USBHRydWVaHQoSa3ViZXJuZXRlcy5pby9uYW1lEgdDb3JlRE5TYhoKEnByb21ldGhldXMuaW8vcG9ydBIEOTE1M2IcChRwcm9tZXRoZXVzLmlvL3NjcmFwZRIEdHJ1ZXoAigGxBQoHa3ViZWFkbRIGVXBkYXRlGgJ2MSIICL+hx4oGEAAyCEZpZWxkc1YxOoMFCoAFeyJmOm1ldGFkYXRhIjp7ImY6YW5ub3RhdGlvbnMiOnsiLiI6e30sImY6cHJvbWV0aGV1cy5pby9wb3J0Ijp7fSwiZjpwcm9tZXRoZXVzLmlvL3NjcmFwZSI6e319LCJmOmxhYmVscyI6eyIuIjp7fSwiZjprOHMtYXBwIjp7fSwiZjprdWJlcm5ldGVzLmlvL2NsdXN0ZXItc2VydmljZSI6e30sImY6a3ViZXJuZXRlcy5pby9uYW1lIjp7fX19LCJmOnNwZWMiOnsiZjpjbHVzdGVySVAiOnt9LCJmOmludGVybmFsVHJhZmZpY1BvbGljeSI6e30sImY6cG9ydHMiOnsiLiI6e30sIms6e1wicG9ydFwiOjUzLFwicHJvdG9jb2xcIjpcIlRDUFwifSI6eyIuIjp7fSwiZjpuYW1lIjp7fSwiZjpwb3J0Ijp7fSwiZjpwcm90b2NvbCI6e30sImY6dGFyZ2V0UG9ydCI6e319LCJrOntcInBvcnRcIjo1MyxcInByb3RvY29sXCI6XCJVRFBcIn0iOnsiLiI6e30sImY6bmFtZSI6e30sImY6cG9ydCI6e30sImY6cHJvdG9jb2wiOnt9LCJmOnRhcmdldFBvcnQiOnt9fSwiazp7XCJwb3J0XCI6OTE1MyxcInByb3RvY29sXCI6XCJUQ1BcIn0iOnsiLiI6e30sImY6bmFtZSI6e30sImY6cG9ydCI6e30sImY6cHJvdG9jb2wiOnt9LCJmOnRhcmdldFBvcnQiOnt9fX0sImY6c2VsZWN0b3IiOnt9LCJmOnNlc3Npb25BZmZpbml0eSI6e30sImY6dHlwZSI6e319fUIAEroBChYKA2RucxIDVURQGDUiBggAEDUaACgAChoKB2Rucy10Y3ASA1RDUBg1IgYIABA1GgAoAAocCgdtZXRyaWNzEgNUQ1AYwUciBwgAEMFHGgAoABITCgdrOHMtYXBwEghrdWJlLWRucxoKMTAuOTYuMC4xMCIJQ2x1c3RlcklQOgROb25lQgBSAFoAYABoAIoBC1NpbmdsZVN0YWNrkgEKMTAuOTYuMC4xMJoBBElQdjSyAQdDbHVzdGVyGgIKABoAIgA=\"}],\"count\":1} # \u614e\u7528 etcl delete \u8d44\u6599 Kubernetes control plane component: etcd References etcd v3.5 docs How etcd works with and without Kubernetes","title":"test"},{"location":"3/test/test/#etcd-test","text":"","title":"etcd test"},{"location":"3/test/test/#1etcd-member-list","text":"","title":"1.etcd-member-list"},{"location":"3/test/test/#download-and-install","text":"ETCD_VER=v3.4.17 DOWNLOAD_URL=https://github.com/etcd-io/etcd/releases/download rm -f /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz rm -rf /tmp/etcd-download-test && mkdir -p /tmp/etcd-download-test curl -L ${DOWNLOAD_URL}/${ETCD_VER}/etcd-${ETCD_VER}-linux-amd64.tar.gz -o /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz tar xzvf /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz -C /tmp/etcd-download-test --strip-components=1 rm -f /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz rm -rf /tmp/etcd-download-test","title":"Download and install"},{"location":"3/test/test/#start-etcd-locally","text":"\u4e3a\u907f\u514d\u8ddf\u672c\u5730\u7684 hostNetwork \u7684 etcd \u5bb9\u5668\u51b2\u7a81\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539 etcd \u7684\u76d1\u542c\u7aef\u53e3 initial-cluster \uff1a\u521d\u59cb\u5316\u96c6\u7fa4\uff0c\u9700\u8981\u5217\u6240\u6709 member \u5730\u5740 What is the difference between listen- -urls, advertise-client-urls or initial-advertise-peer-urls? listen-client-urls and listen-peer-urls specify the local addresses etcd server binds to for accepting incoming connections. To listen on a port for all interfaces, specify 0.0.0.0 as the listen IP address. advertise-client-urls and initial-advertise-peer-urls specify the addresses etcd clients or other etcd members should use to contact the etcd server. The advertise addresses must be reachable from the remote machines. Do not advertise addresses like localhost or 0.0.0.0 for a production setup since these addresses are unreachable from remote machines. etcd --listen-client-urls 'http://localhost:12379' \\ --advertise-client-urls 'http://localhost:12379' \\ --listen-peer-urls 'http://localhost:12380' \\ --initial-advertise-peer-urls 'http://localhost:12380' \\ --initial-cluster 'default=http://localhost:12380'","title":"Start etcd locally"},{"location":"3/test/test/#member-list","text":"etcdctl member list --write-out=table --endpoints=localhost:12379 etcdctl --endpoints=localhost:12379 put /key1 val1 etcdctl --endpoints=localhost:12379 put /key2 val2 etcdctl --endpoints=localhost:12379 get --prefix / etcdctl --endpoints=localhost:12379 get --prefix / --keys-only etcdctl --endpoints=localhost:12379 watch --prefix / etcdctl --endpoints=localhost:12379 put /key val1 etcdctl --endpoints=localhost:12379 put /key val2 etcdctl --endpoints=localhost:12379 put /key val3 etcdctl --endpoints=localhost:12379 put /key val4 etcdctl --endpoints=localhost:12379 get /key -wjson etcdctl --endpoints=localhost:12379 watch --prefix / --rev 0 etcdctl --endpoints=localhost:12379 watch --prefix / --rev 1 etcdctl --endpoints=localhost:12379 watch --prefix / --rev 2","title":"Member list"},{"location":"3/test/test/#2put-data","text":"","title":"2.put-data"},{"location":"3/test/test/#etcd","text":"docker run -d registry.aliyuncs.com/google_containers/etcd:3.5.0-0 /usr/local/bin/etcd","title":"\u542f\u52a8\u65b0 etcd \u96c6\u7fa4"},{"location":"3/test/test/#etcd_1","text":"docker ps|grep etcd docker exec \u2013it <containerid> sh","title":"\u8fdb\u5165 etcd \u5bb9\u5668"},{"location":"3/test/test/#_1","text":"etcdctl put x 0","title":"\u5b58\u5165\u6570\u636e"},{"location":"3/test/test/#_2","text":"etcdctl get x -w=json {\"header\":{\"cluster_id\":14841639068965178418,\"member_id\":10276657743932975437,\"revision\":2,\"raft_term\":2},\"kvs\":[{\"key\":\"eA==\",\"create_revision\":2,\"mod_revision\":2,\"version\":1,\"value\":\"MA==\"}],\"count\":1}","title":"\u8bfb\u53d6\u6570\u636e"},{"location":"3/test/test/#_3","text":"etcdctl put x 1","title":"\u4fee\u6539\u503c"},{"location":"3/test/test/#_4","text":"etcdctl get x x 1","title":"\u67e5\u8be2\u6700\u65b0\u503c"},{"location":"3/test/test/#_5","text":"etcdctl get x --rev=2 x 0","title":"\u67e5\u8be2\u5386\u53f2\u7248\u672c\u503c"},{"location":"3/test/test/#22lease","text":"\u8bbe\u7f6e Key \u7684\u751f\u5b58\u5468\u671f: grant etcdctl --endpoints=localhost:12379 lease grant 30 etcdctl --endpoints=localhost:12379 lease list etcdctl --endpoints=localhost:12379 --lease 1cf77c6926d4620e put /a b etcdctl --endpoints=localhost:12379 get --prefix / etcdctl --endpoints=localhost:12379 lease keep-alive 1cf77c6926d4620e","title":"2.2.lease"},{"location":"3/test/test/#3dr","text":"","title":"3.dr"},{"location":"3/test/test/#snapshot","text":"etcdctl --endpoints https://127.0.0.1:3379 --cert /tmp/etcd-certs/certs/127.0.0.1.pem --key /tmp/etcd-certs/certs/127.0.0.1-key.pem --cacert /tmp/etcd-certs/certs/ca.pem snapshot save snapshot.db","title":"\u521b\u5efa Snapshot"},{"location":"3/test/test/#_6","text":"etcdctl snapshot restore snapshot.db \\ --name infra2 \\ --data-dir=/tmp/etcd/infra2 \\ --initial-cluster infra0=http://127.0.0.1:3380,infra1=http://127.0.0.1:4380,infra2=http://127.0.0.1:5380 \\ --initial-cluster-token etcd-cluster-1 \\ --initial-advertise-peer-urls http://127.0.0.1:5380","title":"\u6062\u590d\u6570\u636e"},{"location":"3/test/test/#4alarm","text":"","title":"4.alarm"},{"location":"3/test/test/#etcd_2","text":"etcd --quota-backend-bytes=$((16*1024*1024))","title":"\u8bbe\u7f6e etcd \u5b58\u50a8\u5927\u5c0f"},{"location":"3/test/test/#_7","text":"while [ 1 ]; do dd if=/dev/urandom bs=1024 count=1024 | ETCDCTL_API=3 etcdctl put key || break; done","title":"\u5199\u7206\u78c1\u76d8"},{"location":"3/test/test/#endpoint","text":"ETCDCTL_API=3 etcdctl --write-out=table endpoint status","title":"\u67e5\u770b endpoint \u72b6\u6001"},{"location":"3/test/test/#alarm","text":"ETCDCTL_API=3 etcdctl alarm list","title":"\u67e5\u770b alarm"},{"location":"3/test/test/#_8","text":"ETCDCTL_API=3 etcdctl defrag","title":"\u6e05\u7406\u788e\u7247"},{"location":"3/test/test/#alarm_1","text":"ETCDCTL_API=3 etcdctl alarm disarm","title":"\u6e05\u7406 alarm"},{"location":"3/test/test/#5defrag","text":"","title":"5.defrag"},{"location":"3/test/test/#keep-one-hour-of-history","text":"etcd --auto-compaction-retention=1","title":"Keep one hour of history"},{"location":"3/test/test/#compact-up-to-revision-3","text":"etcdctl compact 3 etcdctl defrag Finished defragmenting etcd member[127.0.0.1:2379]","title":"Compact up to revision 3"},{"location":"3/test/test/#6statefulset-etcd","text":"","title":"6.statefulset-etcd"},{"location":"3/test/test/#install-helm","text":"https://github.com/helm/helm/releases","title":"Install helm"},{"location":"3/test/test/#download-bitnami-etcd","text":"helm repo add bitnami https://charts.bitnami.com/bitnami helm pull bitnami/etcd tar -xvf etcd-6.8.4.tgz vi etcd/values.yaml And set persistence to false: persistence: ## @param persistence.enabled If true, use a Persistent Volume Claim. If false, use emptyDir. ## enabled: false","title":"Download bitnami etcd"},{"location":"3/test/test/#install-etcd-by-helm-chart","text":"helm install my-release ./etcd","title":"Install etcd by helm chart"},{"location":"3/test/test/#start-etcd-client","text":"kubectl run my-release-etcd-client --restart='Never' --image docker.io/bitnami/etcd:3.5.0-debian-10-r94 --env ROOT_PASSWORD=$(kubectl get secret --namespace default my-release-etcd -o jsonpath=\"{.data.etcd-root-password}\" | base64 --decode) --env ETCDCTL_ENDPOINTS=\"my-release-etcd.default.svc.cluster.local:2379\" --namespace default --command -- sleep infinity kubectl exec --namespace default -it my-release-etcd-client -- bash etcdctl --user root:$ROOT_PASSWORD put /message Hello etcdctl --user root:$ROOT_PASSWORD get /message","title":"Start etcd client"},{"location":"3/test/test/#etcd-binary-setup","text":"","title":"etcd-binary-setup"},{"location":"3/test/test/#_9","text":"mkdir -p /data/k8s-work cd /data/k8s-work","title":"\u521b\u5efa\u5de5\u4f5c\u76ee\u5f55"},{"location":"3/test/test/#cfssl","text":"wget https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 wget https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64 wget https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64 chmod +x cfssl* mv cfssl_linux-amd64 /usr/local/bin/cfssl mv cfssljson_linux-amd64 /usr/local/bin/cfssljson mv cfssl-certinfo_linux-amd64 /usr/local/bin/cfssl-certinfo","title":"\u4e0b\u8f7d cfssl \u5de5\u5177"},{"location":"3/test/test/#ca","text":"cat > ca-csr.json <<\"EOF\" { \"CN\": \"kubernetes\", \"key\": { \"algo\": \"rsa\", \"size\": 2048 }, \"names\": [ { \"C\": \"CN\", \"ST\": \"Shanghai\", \"L\": \"Shanghai\", \"O\": \"cncamp\", \"OU\": \"cncamp\" } ], \"ca\": { \"expiry\": \"87600h\" } } EOF","title":"\u751f\u6210 ca \u914d\u7f6e\u6587\u4ef6"},{"location":"3/test/test/#ca_1","text":"cfssl gencert -initca ca-csr.json | cfssljson -bare ca","title":"\u751f\u6210 ca \u8bc1\u4e66\u6587\u4ef6"},{"location":"3/test/test/#ca_2","text":"cat > ca-config.json <<\"EOF\" { \"signing\": { \"default\": { \"expiry\": \"87600h\" }, \"profiles\": { \"kubernetes\": { \"usages\": [ \"signing\", \"key encipherment\", \"server auth\", \"client auth\" ], \"expiry\": \"87600h\" } } } } EOF","title":"\u914d\u7f6e ca \u8bc1\u4e66\u7b56\u7565"},{"location":"3/test/test/#etcd-csr","text":"cat > etcd-csr.json <<\"EOF\" { \"CN\": \"etcd\", \"hosts\": [ \"127.0.0.1\", \"192.168.34.2\" ], \"key\": { \"algo\": \"rsa\", \"size\": 2048 }, \"names\": [{ \"C\": \"CN\", \"ST\": \"Shanghai\", \"L\": \"Shanghai\", \"O\": \"cncamp\", \"OU\": \"cncamp\" }] } EOF","title":"\u914d\u7f6e etcd \u8bf7\u6c42 csr \u6587\u4ef6"},{"location":"3/test/test/#_10","text":"cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes etcd-csr.json | cfssljson -bare etcd wget https://github.com/etcd-io/etcd/releases/download/v3.5.0/etcd-v3.5.0-linux-amd64.tar.gz tar -xvf etcd-v3.5.0-linux-amd64.tar.gz cp -p etcd-v3.5.0-linux-amd64/etcd* /usr/local/bin/","title":"\u751f\u6210\u8bc1\u4e66"},{"location":"3/test/test/#etcd_3","text":"cat > etcd.conf <<\"EOF\" #[Member] ETCD_NAME=\"etcd1\" ETCD_DATA_DIR=\"/var/lib/etcd/default.etcd\" ETCD_LISTEN_PEER_URLS=\"https://192.168.34.2:2380\" ETCD_LISTEN_CLIENT_URLS=\"https://192.168.34.2:2379,http://127.0.0.1:2379\" #[Clustering] ETCD_INITIAL_ADVERTISE_PEER_URLS=\"https://192.168.34.2:2380\" ETCD_ADVERTISE_CLIENT_URLS=\"https://192.168.34.2:2379\" ETCD_INITIAL_CLUSTER=\"etcd1=https://192.168.34.2:2380\" ETCD_INITIAL_CLUSTER_TOKEN=\"etcd-cluster\" ETCD_INITIAL_CLUSTER_STATE=\"new\" EOF","title":"\u751f\u6210 etcd \u914d\u7f6e\u6587\u4ef6"},{"location":"3/test/test/#reference","text":"https://www.jianshu.com/p/b02c428950df","title":"Reference"},{"location":"3/test/test/#etcd-k8s","text":"alias ks=kubectl -n kube-system ks get po etcd-cadmin -oyaml spec: containers: - command: - etcd - --advertise-client-urls=https://192.168.34.2:2379 - --cert-file=/etc/kubernetes/pki/etcd/server.crt - --client-cert-auth=true - --data-dir=/var/lib/etcd - --initial-advertise-peer-urls=https://192.168.34.2:2380 - --initial-cluster=cadmin=https://192.168.34.2:2380 - --key-file=/etc/kubernetes/pki/etcd/server.key - --listen-client-urls=https://127.0.0.1:2379,https://192.168.34.2:2379 - --listen-metrics-urls=http://127.0.0.1:2381 - --listen-peer-urls=https://192.168.34.2:2380 - --name=cadmin - --peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt - --peer-client-cert-auth=true - --peer-key-file=/etc/kubernetes/pki/etcd/peer.key - --peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt - --snapshot-count=10000 - --trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt ks exec -it etcd-cadmin sh ETCDCTL_API=3 alias ectl='etcdctl --endpoints https://127.0.0.1:2379 \\ --cacert /etc/kubernetes/pki/etcd/ca.crt \\ --cert /etc/kubernetes/pki/etcd/server.crt \\ --key /etc/kubernetes/pki/etcd/server.key' ectl member list ectl get --prefix --keys-only / ectl get /registry/services/specs/kube-system/kube-dns -w=json {\"header\":{\"cluster_id\":10396955284310292238,\"member_id\":2496364209257137704,\"revision\":596482,\"raft_term\":8},\"kvs\":[{\"key\":\"L3JlZ2lzdHJ5L3NlcnZpY2VzL3NwZWNzL2t1YmUtc3lzdGVtL2t1YmUtZG5z\",\"create_revision\":251,\"mod_revision\":251,\"version\":1,\"value\":\"azhzAAoNCgJ2MRIHU2VydmljZRLfCAqbBwoIa3ViZS1kbnMSABoLa3ViZS1zeXN0ZW0iACokZTc0MmExMWYtMzY4NC00ZThkLWJhOGEtZWZiY2E2YTM0YzMwMgA4AEIICL+hx4oGEABaEwoHazhzLWFwcBIIa3ViZS1kbnNaJQoda3ViZXJuZXRlcy5pby9jbHVzdGVyLXNlcnZpY2USBHRydWVaHQoSa3ViZXJuZXRlcy5pby9uYW1lEgdDb3JlRE5TYhoKEnByb21ldGhldXMuaW8vcG9ydBIEOTE1M2IcChRwcm9tZXRoZXVzLmlvL3NjcmFwZRIEdHJ1ZXoAigGxBQoHa3ViZWFkbRIGVXBkYXRlGgJ2MSIICL+hx4oGEAAyCEZpZWxkc1YxOoMFCoAFeyJmOm1ldGFkYXRhIjp7ImY6YW5ub3RhdGlvbnMiOnsiLiI6e30sImY6cHJvbWV0aGV1cy5pby9wb3J0Ijp7fSwiZjpwcm9tZXRoZXVzLmlvL3NjcmFwZSI6e319LCJmOmxhYmVscyI6eyIuIjp7fSwiZjprOHMtYXBwIjp7fSwiZjprdWJlcm5ldGVzLmlvL2NsdXN0ZXItc2VydmljZSI6e30sImY6a3ViZXJuZXRlcy5pby9uYW1lIjp7fX19LCJmOnNwZWMiOnsiZjpjbHVzdGVySVAiOnt9LCJmOmludGVybmFsVHJhZmZpY1BvbGljeSI6e30sImY6cG9ydHMiOnsiLiI6e30sIms6e1wicG9ydFwiOjUzLFwicHJvdG9jb2xcIjpcIlRDUFwifSI6eyIuIjp7fSwiZjpuYW1lIjp7fSwiZjpwb3J0Ijp7fSwiZjpwcm90b2NvbCI6e30sImY6dGFyZ2V0UG9ydCI6e319LCJrOntcInBvcnRcIjo1MyxcInByb3RvY29sXCI6XCJVRFBcIn0iOnsiLiI6e30sImY6bmFtZSI6e30sImY6cG9ydCI6e30sImY6cHJvdG9jb2wiOnt9LCJmOnRhcmdldFBvcnQiOnt9fSwiazp7XCJwb3J0XCI6OTE1MyxcInByb3RvY29sXCI6XCJUQ1BcIn0iOnsiLiI6e30sImY6bmFtZSI6e30sImY6cG9ydCI6e30sImY6cHJvdG9jb2wiOnt9LCJmOnRhcmdldFBvcnQiOnt9fX0sImY6c2VsZWN0b3IiOnt9LCJmOnNlc3Npb25BZmZpbml0eSI6e30sImY6dHlwZSI6e319fUIAEroBChYKA2RucxIDVURQGDUiBggAEDUaACgAChoKB2Rucy10Y3ASA1RDUBg1IgYIABA1GgAoAAocCgdtZXRyaWNzEgNUQ1AYwUciBwgAEMFHGgAoABITCgdrOHMtYXBwEghrdWJlLWRucxoKMTAuOTYuMC4xMCIJQ2x1c3RlcklQOgROb25lQgBSAFoAYABoAIoBC1NpbmdsZVN0YWNrkgEKMTAuOTYuMC4xMJoBBElQdjSyAQdDbHVzdGVyGgIKABoAIgA=\"}],\"count\":1} # \u614e\u7528 etcl delete","title":"etcd-k8s"},{"location":"3/test/test/#_11","text":"","title":"\u8d44\u6599"},{"location":"3/test/test/#kubernetes-control-plane-component-etcd","text":"","title":"Kubernetes control plane component: etcd"},{"location":"3/test/test/#references","text":"etcd v3.5 docs How etcd works with and without Kubernetes","title":"References"},{"location":"3/test/etcd-ha-demo/install-ha-etcd/","text":"install-ha-etcd Update your golang to 1.15+ Install cfssl apt install golang-cfssl Generate tls certs mkdir /root/go/src/github.com/etcd-io cd /root/go/src/github.com/etcd-io git clone https://github.com/etcd-io/etcd.git cd etcd/hack/tls-setup Edit req-csr.json and keep 127.0.0.1 and localhost only for single cluster setup. vi config/req-csr.json Generate certs export infra0=127.0.0.1 export infra1=127.0.0.1 export infra2=127.0.0.1 make mkdir /tmp/etcd-certs mv certs /tmp/etcd-certs Start etcd cluster member1 ./start-all.sh Member list etcdctl --endpoints https://127.0.0.1:3379 --cert /tmp/etcd-certs/certs/127.0.0.1.pem --key /tmp/etcd-certs/certs/127.0.0.1-key.pem --cacert /tmp/etcd-certs/certs/ca.pem member list Backup ./backup.sh Delete data rm -rf /tmp/etcd Kill process kill process of infra0 infra1 infra2 Restore ./restore.sh","title":"etcd-ha-demo"},{"location":"3/test/etcd-ha-demo/install-ha-etcd/#install-ha-etcd","text":"","title":"install-ha-etcd"},{"location":"3/test/etcd-ha-demo/install-ha-etcd/#update-your-golang-to-115","text":"","title":"Update your golang to 1.15+"},{"location":"3/test/etcd-ha-demo/install-ha-etcd/#install-cfssl","text":"apt install golang-cfssl","title":"Install cfssl"},{"location":"3/test/etcd-ha-demo/install-ha-etcd/#generate-tls-certs","text":"mkdir /root/go/src/github.com/etcd-io cd /root/go/src/github.com/etcd-io git clone https://github.com/etcd-io/etcd.git cd etcd/hack/tls-setup","title":"Generate tls certs"},{"location":"3/test/etcd-ha-demo/install-ha-etcd/#edit-req-csrjson-and-keep-127001-and-localhost-only-for-single-cluster-setup","text":"vi config/req-csr.json","title":"Edit req-csr.json and keep 127.0.0.1 and localhost only for single cluster setup."},{"location":"3/test/etcd-ha-demo/install-ha-etcd/#generate-certs","text":"export infra0=127.0.0.1 export infra1=127.0.0.1 export infra2=127.0.0.1 make mkdir /tmp/etcd-certs mv certs /tmp/etcd-certs","title":"Generate certs"},{"location":"3/test/etcd-ha-demo/install-ha-etcd/#start-etcd-cluster-member1","text":"./start-all.sh","title":"Start etcd cluster member1"},{"location":"3/test/etcd-ha-demo/install-ha-etcd/#member-list","text":"etcdctl --endpoints https://127.0.0.1:3379 --cert /tmp/etcd-certs/certs/127.0.0.1.pem --key /tmp/etcd-certs/certs/127.0.0.1-key.pem --cacert /tmp/etcd-certs/certs/ca.pem member list","title":"Member list"},{"location":"3/test/etcd-ha-demo/install-ha-etcd/#backup","text":"./backup.sh","title":"Backup"},{"location":"3/test/etcd-ha-demo/install-ha-etcd/#delete-data","text":"rm -rf /tmp/etcd","title":"Delete data"},{"location":"3/test/etcd-ha-demo/install-ha-etcd/#kill-process","text":"kill process of infra0 infra1 infra2","title":"Kill process"},{"location":"3/test/etcd-ha-demo/install-ha-etcd/#restore","text":"./restore.sh","title":"Restore"},{"location":"4.kube-api-server/0.overview/","text":"overview API Server kube-apiserver \u662f Kubernetes \u6700\u91cd\u8981\u7684\u6838\u5fc3\u7ec4\u4ef6\u4e4b\u4e00, \u4e3b\u8981\u63d0\u4f9b\u4ee5\u4e0b\u7684\u529f\u80fd \u63d0\u4f9b\u96c6\u7fa4\u7ba1\u7406\u7684 REST API \u63a5\u53e3, \u5305\u62ec\u8ba4\u8bc1\u6388\u6743\u3001\u6570\u636e\u6821\u9a8c\u4ee5\u53ca\u96c6\u7fa4\u72b6\u6001\u53d8\u66f4\u7b49 \u63d0\u4f9b\u5176\u4ed6\u6a21\u5757\u4e4b\u95f4\u7684\u6570\u636e\u4ea4\u4e92\u548c\u901a\u4fe1\u7684\u67a2\u7ebd(\u5176\u4ed6\u6a21\u5757\u901a\u8fc7 API Server \u67e5\u8be2\u6216\u4fee\u6539\u6570\u636e, \u53ea\u6709 API Server \u624d\u76f4\u63a5\u64cd\u4f5c etcd) \u8bbf\u95ee\u63a7\u5236\u6982\u89c8 Kubernetes API \u7684\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u4f1a\u7ecf\u8fc7\u591a\u9636\u6bb5\u7684\u8bbf\u95ee\u63a7\u5236\u4e4b\u540e\u624d\u4f1a\u88ab\u63a5\u53d7, \u8fd9\u5305\u62ec \u8ba4\u8bc1 \u3001 \u6388\u6743 \u4ee5\u53ca \u51c6\u5165\u63a7\u5236 (Admission Control)\u7b49. API HTTP handler: \u5904\u7406\u4e0d\u540c\u5bf9\u8c61\u7684\u8bf7\u6c42 Authentication Authorization: \u8ba4\u8bc1\u53ca\u9274\u6743 Mutating admission: Webhook: \u53ef\u4ee5\u81ea\u5b9a\u4e49\u7279\u5b9a\u5bf9\u8c61\u7684\u5c5e\u6027\u503c\u4fee\u6539\u89c4\u5219 Object Schema Validation: \u6821\u9a8c\u5bf9\u8c61\u662f\u5426\u6709\u6548\uff08\u53ef\u4ee5\u9632\u6b62\u4e0a\u4e00\u6b65\u4fee\u6539\u540e\u7684\u5bf9\u8c61\u6709\u8bef\uff09 Validationg admission: \u81ea\u5b9a\u4e49\u5bf9\u8c61\u7684\u6821\u9a8c\u903b\u8f91 Webhook: \u4e0d\u53ef\u4fee\u6539\u5bf9\u8c61\u5c5e\u6027\u503c\u3002\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7279\u5b9a\u5bf9\u8c61\u7684\u6821\u9a8c\u903b\u8f91\u3002 Persisted to etcd: \u4fdd\u5b58\u5230 etcd \u8bbf\u95ee\u63a7\u5236\u7ec6\u8282 panic recovery: \u6050\u614c\u6062\u590d request-timeout: \u8d85\u65f6\u68c0\u67e5 authentication: \u8ba4\u8bc1 audit: \u8bb0\u5f55\u5ba1\u8ba1\u65e5\u5fd7\uff08\u8c01\u5728\u4ec0\u4e48\u65f6\u5019\u4fee\u6539\u7684\u4ec0\u4e48\u5bf9\u8c61\uff0c\u53ef\u4ee5\u7528\u6765\u7529\u9505\uff09\u3002 impoersonation: \u5192\u5145\u5176\u5b83\u7528\u6237\u8bbf\u95ee max-in-flight: \u9650\u6d41 authorization: \u9274\u6743 kube-aggregator & CRDs: \u5c06\u975e\u9ed8\u8ba4\u5bf9\u8c61\u8bf7\u6c42\u8f6c\u53d1\u5230\u5bf9\u5e94\u7684 aggregate apiservers mux: resource handler: decoding: \u89e3\u7801 request conversion & defaulting: admission: \u51c6\u5165 REST logic: \u6821\u9a8c storage conversion & defaulting: \u5b58\u50a8\u5230 etcd result conversion:","title":"overview"},{"location":"4.kube-api-server/0.overview/#overview","text":"","title":"overview"},{"location":"4.kube-api-server/0.overview/#api-server","text":"kube-apiserver \u662f Kubernetes \u6700\u91cd\u8981\u7684\u6838\u5fc3\u7ec4\u4ef6\u4e4b\u4e00, \u4e3b\u8981\u63d0\u4f9b\u4ee5\u4e0b\u7684\u529f\u80fd \u63d0\u4f9b\u96c6\u7fa4\u7ba1\u7406\u7684 REST API \u63a5\u53e3, \u5305\u62ec\u8ba4\u8bc1\u6388\u6743\u3001\u6570\u636e\u6821\u9a8c\u4ee5\u53ca\u96c6\u7fa4\u72b6\u6001\u53d8\u66f4\u7b49 \u63d0\u4f9b\u5176\u4ed6\u6a21\u5757\u4e4b\u95f4\u7684\u6570\u636e\u4ea4\u4e92\u548c\u901a\u4fe1\u7684\u67a2\u7ebd(\u5176\u4ed6\u6a21\u5757\u901a\u8fc7 API Server \u67e5\u8be2\u6216\u4fee\u6539\u6570\u636e, \u53ea\u6709 API Server \u624d\u76f4\u63a5\u64cd\u4f5c etcd)","title":"API Server"},{"location":"4.kube-api-server/0.overview/#_1","text":"Kubernetes API \u7684\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u4f1a\u7ecf\u8fc7\u591a\u9636\u6bb5\u7684\u8bbf\u95ee\u63a7\u5236\u4e4b\u540e\u624d\u4f1a\u88ab\u63a5\u53d7, \u8fd9\u5305\u62ec \u8ba4\u8bc1 \u3001 \u6388\u6743 \u4ee5\u53ca \u51c6\u5165\u63a7\u5236 (Admission Control)\u7b49. API HTTP handler: \u5904\u7406\u4e0d\u540c\u5bf9\u8c61\u7684\u8bf7\u6c42 Authentication Authorization: \u8ba4\u8bc1\u53ca\u9274\u6743 Mutating admission: Webhook: \u53ef\u4ee5\u81ea\u5b9a\u4e49\u7279\u5b9a\u5bf9\u8c61\u7684\u5c5e\u6027\u503c\u4fee\u6539\u89c4\u5219 Object Schema Validation: \u6821\u9a8c\u5bf9\u8c61\u662f\u5426\u6709\u6548\uff08\u53ef\u4ee5\u9632\u6b62\u4e0a\u4e00\u6b65\u4fee\u6539\u540e\u7684\u5bf9\u8c61\u6709\u8bef\uff09 Validationg admission: \u81ea\u5b9a\u4e49\u5bf9\u8c61\u7684\u6821\u9a8c\u903b\u8f91 Webhook: \u4e0d\u53ef\u4fee\u6539\u5bf9\u8c61\u5c5e\u6027\u503c\u3002\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7279\u5b9a\u5bf9\u8c61\u7684\u6821\u9a8c\u903b\u8f91\u3002 Persisted to etcd: \u4fdd\u5b58\u5230 etcd","title":"\u8bbf\u95ee\u63a7\u5236\u6982\u89c8"},{"location":"4.kube-api-server/0.overview/#_2","text":"panic recovery: \u6050\u614c\u6062\u590d request-timeout: \u8d85\u65f6\u68c0\u67e5 authentication: \u8ba4\u8bc1 audit: \u8bb0\u5f55\u5ba1\u8ba1\u65e5\u5fd7\uff08\u8c01\u5728\u4ec0\u4e48\u65f6\u5019\u4fee\u6539\u7684\u4ec0\u4e48\u5bf9\u8c61\uff0c\u53ef\u4ee5\u7528\u6765\u7529\u9505\uff09\u3002 impoersonation: \u5192\u5145\u5176\u5b83\u7528\u6237\u8bbf\u95ee max-in-flight: \u9650\u6d41 authorization: \u9274\u6743 kube-aggregator & CRDs: \u5c06\u975e\u9ed8\u8ba4\u5bf9\u8c61\u8bf7\u6c42\u8f6c\u53d1\u5230\u5bf9\u5e94\u7684 aggregate apiservers mux: resource handler: decoding: \u89e3\u7801 request conversion & defaulting: admission: \u51c6\u5165 REST logic: \u6821\u9a8c storage conversion & defaulting: \u5b58\u50a8\u5230 etcd result conversion:","title":"\u8bbf\u95ee\u63a7\u5236\u7ec6\u8282"},{"location":"4.kube-api-server/1.%E8%AE%A4%E8%AF%81/","text":"\u8ba4\u8bc1 \u5f00\u542f TLS \u65f6, \u6240\u6709\u7684\u8bf7\u6c42\u90fd\u9700\u8981\u9996\u5148\u8ba4\u8bc1. Kubernetes \u652f\u6301\u591a\u79cd\u8ba4\u8bc1\u673a\u5236, \u5e76\u652f\u6301\u540c\u65f6\u5f00\u542f\u591a\u4e2a\u8ba4\u8bc1\u63d2\u4ef6(\u53ea\u8981\u6709\u4e00\u4e2a\u8ba4\u8bc1\u901a\u8fc7\u5373\u53ef). \u5982\u679c\u8ba4\u8bc1\u6210\u529f, \u5219\u7528\u6237\u7684 username \u4f1a\u4f20\u5165\u6388\u6743\u6a21\u5757\u505a\u8fdb\u4e00\u6b65\u6388\u6743\u9a8c\u8bc1; \u800c\u5bf9\u4e8e\u8ba4\u8bc1\u5931\u8d25\u7684\u8bf7\u6c42\u5219\u8fd4\u56de HTTP 401. \u8ba4\u8bc1\u63d2\u4ef6 X509 \u8bc1\u4e66(\u9ed8\u8ba4) \u4f7f\u7528 X509 \u5ba2\u6237\u7aef\u8bc1\u4e66\u53ea\u9700\u8981 API Server \u542f\u52a8\u65f6\u914d\u7f6e --client-ca-file=SOMEFILE. \u5728\u8bc1\u4e66\u8ba4\u8bc1\u65f6, \u5176 CN \u57df\u7528\u4f5c\u7528\u6237\u540d, \u800c\u7ec4\u7ec7\u673a\u6784\u57df\u5219\u7528\u4f5c group \u540d. \u9759\u6001 Token \u6587\u4ef6(\u6700\u7b80\u5355) \u4f7f\u7528\u9759\u6001 Token \u6587\u4ef6\u8ba4\u8bc1\u53ea\u9700\u8981 API Server \u542f\u52a8\u65f6\u914d\u7f6e --token-auth-file=SOMEFILE. \u8be5\u6587\u4ef6\u4e3a csv \u683c\u5f0f, \u6bcf\u884c\u81f3\u5c11\u5305\u62ec\u4e09\u5217 token, username, user id. token, user, uid, \"group1, group2, group3\" \u5f15\u5bfc Token \u4e3a\u4e86\u652f\u6301\u5e73\u6ed1\u5730\u542f\u52a8\u5f15\u5bfc\u65b0\u7684\u96c6\u7fa4, Kubernetes \u5305\u542b\u4e86\u4e00\u79cd\u52a8\u6001\u7ba1\u7406\u7684\u6301\u6709\u8005\u4ee4\u724c\u7c7b\u578b, \u79f0\u4f5c\u542f\u52a8\u5f15\u5bfc\u4ee4\u724c(Bootstrap Token). \u8fd9\u4e9b\u4ee4\u724c\u4ee5 Secret \u7684\u5f62\u5f0f\u4fdd\u5b58\u5728 kube-system \u540d\u5b57\u7a7a\u95f4\u4e2d, \u53ef\u4ee5\u88ab\u52a8\u6001\u7ba1\u7406\u548c\u521b\u5efa. \u63a7\u5236\u5668\u7ba1\u7406\u5668\u5305\u542b\u7684 TokenCleaner \u63a7\u5236\u5668\u80fd\u591f\u5728\u542f\u52a8\u5f15\u5bfc\u4ee4\u724c\u8fc7\u671f\u65f6\u5c06\u5176\u5220\u9664. \u5728\u4f7f\u7528 kubeadm \u90e8\u7f72 Kubernetes \u65f6, \u53ef\u901a\u8fc7 kubeadmtoken list \u547d\u4ee4\u67e5\u8be2. \u9759\u6001\u5bc6\u7801\u6587\u4ef6(\u7c7b\u4f3c \"\u9759\u6001 Token \u6587\u4ef6\") \u9700\u8981 API Server \u542f\u52a8\u65f6\u914d\u7f6e --basic-auth-file=SOMEFILE, \u6587\u4ef6\u683c\u5f0f\u4e3a csv , \u6bcf\u884c\u81f3\u5c11\u4e09\u5217 password, user, uid, \u540e\u9762\u662f\u53ef\u9009\u7684 group \u540d. password, user, uid, \"group1, group2, group3\" ServiceAccount(\u7cfb\u7edf\u8d26\u6237, Kubernetes \u81ea\u5e26\u7684) ServiceAccount \u662f Kubernetes \u81ea\u52a8\u751f\u6210\u7684, \u5e76\u4f1a\u81ea\u52a8\u6302\u8f7d\u5230\u5bb9\u5668\u7684 /run/secrets/kubernetes.io/serviceaccount \u76ee\u5f55\u4e2d. /run/secrets/kubernetes.io/serviceaccount/{ca.crt,namespace,token} OpenID OAuth 2.0 \u7684\u8ba4\u8bc1\u673a\u5236 Webhook \u4ee4\u724c\u8eab\u4efd\u8ba4\u8bc1(\u96c6\u6210\u73b0\u6709\u7684\u8ba4\u8bc1\u5e73\u53f0\uff0c\u5e94\u7528\u573a\u666f\u6bd4\u8f83\u5e7f) --authentication-token-webhook-config-file \u6307\u5411\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6, \u5176\u4e2d\u63cf\u8ff0\u5982\u4f55\u8bbf\u95ee\u8fdc\u7a0b\u7684 Webhook \u670d\u52a1. --authentication-token-webhook-cache-ttl \u7528\u6765\u8bbe\u5b9a\u8eab\u4efd\u8ba4\u8bc1\u51b3\u5b9a\u7684\u7f13\u5b58\u65f6\u95f4. \u9ed8\u8ba4\u65f6\u957f\u4e3a 2 \u5206\u949f. \u533f\u540d\u8bf7\u6c42(\u4e0d\u5efa\u8bae\u7528) \u5982\u679c\u4f7f\u7528 AlwaysAllow \u4ee5\u5916\u7684\u8ba4\u8bc1\u6a21\u5f0f, \u5219\u533f\u540d\u8bf7\u6c42\u9ed8\u8ba4\u5f00\u542f, \u4f46\u53ef\u7528 --anonymous-auth=false \u7981\u6b62\u533f\u540d\u8bf7\u6c42. X509 \u8bc1\u4e66 /etc/kubernetes/admin.conf apiVersion: v1 clusters: - cluster: certificate-authority-data: (CA-data) server: https://192.168.1.218:6443 (\u670d\u52a1\u5668\u5730\u5740) name: kubernetes (\u96c6\u7fa4\u540d\u79f0) contexts: (\u96c6\u7fa4\u4e0a\u4e0b\u6587) - context: cluster: kubernetes (\u8fde\u63a5\u54ea\u4e2a\u96c6\u7fa4) user: kubernetes-admin (\u7528\u54ea\u4e2a\u7528\u6237\u8fde\u63a5\u8fd9\u4e2a\u96c6\u7fa4) name: kubernetes-admin@kubernetes current-context: kubernetes-admin@kubernetes kind: Config preferences: {} users: (\u7528\u6237\u4fe1\u606f) - name: kubernetes-admin (\u7528\u6237\u540d) user: client-certificate-data: (\u7528\u6237\u7684 cert-data) client-key-data: (\u7528\u6237\u7684 key-data) \u57fa\u4e8e webhook \u7684\u8ba4\u8bc1\u670d\u52a1\u96c6\u6210 https://github.com/kubeguard/guard \u6784\u5efa\u7b26\u5408 Kubernetes \u89c4\u8303\u7684\u8ba4\u8bc1\u670d\u52a1 \u9700\u8981\u4f9d\u7167 Kubernetes \u89c4\u8303, \u6784\u5efa\u8ba4\u8bc1\u670d\u52a1, \u7528\u6765\u8ba4\u8bc1 tokenreview request \u6784\u5efa\u8ba4\u8bc1\u670d\u52a1 \u8ba4\u8bc1\u670d\u52a1\u9700\u8981\u6ee1\u8db3\u5982\u4e0bKubernetes\u7684\u89c4\u8303 URL: https://authn.example.com/authenticate (webhook \u670d\u52a1\u5730\u5740) Method: POST Input: { \"apiVersion\": \"authentication.k8s.io/v1beta1\", \"kind\": \"TokenReview\", \"spec\": { \"token\": \"(BEARERTOKEN)\" } } Output: { \"apiVersion\": \"authentication.k8s.io/v1beta1\", \"kind\": \"TokenReview\", \"status\": { \"authenticated\": true, \"user\": { \"username\": \"janedoe@example.com \", \"uid\": \"42\", \"groups\": [ \"developers\", \"qa\" ] } } } \u5f00\u53d1\u8ba4\u8bc1\u670d\u52a1 \u89e3\u7801\u8ba4\u8bc1\u8bf7\u6c42 decoder := json.NewDecoder(r.Body) var tr authentication.TokenReview err := decoder.Decode(&tr) if err != nil { log.Println(\"[Error]\", err.Error()) w.WriteHeader(http.StatusBadRequest) json.NewEncoder(w).Encode( map[string]interface{}{ \"apiVersion\": \"authentication.k8s.io/v1beta1\", \"kind\": \"TokenReview\", \"status\": authentication.TokenReviewStatus{ Authenticated: false, }, } ) return } \u8f6c\u53d1\u8ba4\u8bc1\u8bf7\u6c42\u81f3\u8ba4\u8bc1\u670d\u52a1\u5668 // Check User ts := oauth2.StaticTokenSource(&oauth2.Token{AccessToken: tr.Spec.Token},) tc := oauth2.NewClient(oauth2.NoContext, ts) client := github.NewClient(tc) user, _, err := client.Users.Get(context.Background(), \"\") if err != nil { log.Println(\"[Error]\", err.Error()) w.WriteHeader(http.StatusUnauthorized) json.NewEncoder(w).Encode( map[string]interface{}{ \"apiVersion\": \"authentication.k8s.io/v1beta1\", \"kind\": \"TokenReview\", \"status\": authentication.TokenReviewStatus{ Authenticated: false, }, } ) return } \u8ba4\u8bc1\u7ed3\u679c\u8fd4\u56de\u7ed9APIServer w.WriteHeader(http.StatusOK) trs := authentication.TokenReviewStatus{ Authenticated: true, User: authentication.UserInfo{ Username: *user.Login, UID: *user.Login, }, } json.NewEncoder(w).Encode(map[string]interface{}{ \"apiVersion\": \"authentication.k8s.io/v1beta1\", \"kind\": \"TokenReview\", \"status\": trs, }) \u914d\u7f6e\u8ba4\u8bc1\u670d\u52a1 { \"kind\": \"Config\", \"apiVersion\": \"v1\", \"preferences\": {}, \"clusters\": [ { \"name\": \"github-authn\", \"cluster\": { \"server\": \"http://localhost:3000/authenticate\" } } ], \"users\": [ { \"name\": \"authn-apiserver\", \"user\": { \"token\": \"secret\" } } ], \"contexts\": [ { \"name\": \"webhook\", \"context\": { \"cluster\": \"github-authn\", \"user\": \"authn-apiserver\" } } ], \"current-context\": \"webhook\" } \u914d\u7f6eapiserver \u53ef\u4ee5\u662f\u4efb\u4f55\u8ba4\u8bc1\u7cfb\u7edf \u4f46\u5728\u7528\u6237\u8ba4\u8bc1\u5b8c\u6210\u540e, \u751f\u6210\u4ee3\u8868\u7528\u6237\u8eab\u4efd\u7684 token \u8be5 token \u901a\u5e38\u662f\u6709\u5931\u6548\u65f6\u95f4\u7684 \u7528\u6237\u83b7\u53d6\u8be5 token \u4ee5\u540e\u4ee5\u540e, \u5c06 token \u914d\u7f6e\u8fdb kubeconfig \u4fee\u6539 apiserver \u8bbe\u7f6e, \u5f00\u542f\u8ba4\u8bc1\u670d\u52a1, apiserver \u4fdd\u8bc1\u5c06\u6240\u6709\u6536\u5230\u7684\u8bf7\u6c42\u4e2d\u7684 token \u4fe1\u606f, \u53d1\u7ed9\u8ba4\u8bc1\u670d\u52a1\u8fdb\u884c\u9a8c\u8bc1 --authentication-token-webhook-config-file, \u8be5\u6587\u4ef6\u63cf\u8ff0\u5982\u4f55\u8bbf\u95ee\u8ba4\u8bc1\u670d\u52a1 --authentication-token-webhook-cache-ttl, \u9ed8\u8ba4 2 \u5206\u949f \u914d\u7f6e\u6587\u4ef6\u9700\u8981 mount \u8fdb Pod \u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u670d\u52a1\u5668\u5730\u5740\u9700\u8981\u6307\u5411 authService { \"kind\": \"Config\", \"apiVersion\": \"v1\", \"preferences\": {}, \"clusters\": [ { \"name\": \"github-authn\", \"cluster\": { \"server\": \"http://localhost:3000/authenticate\" } } ], \"users\": [ { \"name\": \"authn-apiserver\", \"user\": { \"token\": \"secret\" } } ], \"contexts\": [ { \"name\": \"webhook\", \"context\": { \"cluster\": \"github-authn\", \"user\": \"authn-apiserver\" } } ], \"current-context\": \"webhook\" } \u751f\u4ea7\u7cfb\u7edf\u4e2d\u9047\u5230\u7684\u9677\u9631 \u57fa\u4e8e Keystone \u7684\u8ba4\u8bc1\u63d2\u4ef6\u5bfc\u81f4 Keystone \u6545\u969c\u4e14\u65e0\u6cd5\u6062\u590d Keystone \u662f\u4f01\u4e1a\u5173\u952e\u670d\u52a1 Kubernetes \u4ee5 Keystone \u4f5c\u4e3a\u8ba4\u8bc1\u63d2\u4ef6 Keystone \u5728\u51fa\u73b0\u6545\u969c\u540e\u4f1a\u629b\u51fa 401 \u9519\u8bef Kubernetes \u53d1\u73b0 401 \u9519\u8bef\u540e\u4f1a\u5c1d\u8bd5\u91cd\u65b0\u8ba4\u8bc1 \u5927\u591a\u6570 controller \u90fd\u6709\u6307\u6570\u7ea7 back off, \u91cd\u8bd5\u95f4\u9694\u8d8a\u6765\u8d8a\u6162 \u4f46 gophercloud \u9488\u5bf9\u8fc7\u671f token \u4f1a\u4e00\u76f4 retry \u5927\u91cf\u7684 request \u79ef\u538b\u5728 Keystone \u5bfc\u81f4\u670d\u52a1\u65e0\u6cd5\u6062\u590d Kubernetes \u6210\u4e3a\u538b\u6b7b\u4f01\u4e1a\u8ba4\u8bc1\u670d\u52a1\u7684\u6700\u540e\u4e00\u6839\u7a3b\u8349 \u89e3\u51b3\u65b9\u6848\uff1f Circuit break Rate limit \u4e00\u822c\u7528\u6cd5 \u4e3b\u8981\u9632\u6b62 api-server \u542f\u52a8\u65f6\uff0cwebhook \u6ca1\u6709\u542f\u52a8\u6210\u529f\u3002 \u8fd0\u884c\u6210 api-server \u7684\u4e00\u4e2a sidecar \u5199\u5728 /etc/kubernetes/manifests/webhook.yaml","title":"\u8ba4\u8bc1"},{"location":"4.kube-api-server/1.%E8%AE%A4%E8%AF%81/#_1","text":"\u5f00\u542f TLS \u65f6, \u6240\u6709\u7684\u8bf7\u6c42\u90fd\u9700\u8981\u9996\u5148\u8ba4\u8bc1. Kubernetes \u652f\u6301\u591a\u79cd\u8ba4\u8bc1\u673a\u5236, \u5e76\u652f\u6301\u540c\u65f6\u5f00\u542f\u591a\u4e2a\u8ba4\u8bc1\u63d2\u4ef6(\u53ea\u8981\u6709\u4e00\u4e2a\u8ba4\u8bc1\u901a\u8fc7\u5373\u53ef). \u5982\u679c\u8ba4\u8bc1\u6210\u529f, \u5219\u7528\u6237\u7684 username \u4f1a\u4f20\u5165\u6388\u6743\u6a21\u5757\u505a\u8fdb\u4e00\u6b65\u6388\u6743\u9a8c\u8bc1; \u800c\u5bf9\u4e8e\u8ba4\u8bc1\u5931\u8d25\u7684\u8bf7\u6c42\u5219\u8fd4\u56de HTTP 401.","title":"\u8ba4\u8bc1"},{"location":"4.kube-api-server/1.%E8%AE%A4%E8%AF%81/#_2","text":"X509 \u8bc1\u4e66(\u9ed8\u8ba4) \u4f7f\u7528 X509 \u5ba2\u6237\u7aef\u8bc1\u4e66\u53ea\u9700\u8981 API Server \u542f\u52a8\u65f6\u914d\u7f6e --client-ca-file=SOMEFILE. \u5728\u8bc1\u4e66\u8ba4\u8bc1\u65f6, \u5176 CN \u57df\u7528\u4f5c\u7528\u6237\u540d, \u800c\u7ec4\u7ec7\u673a\u6784\u57df\u5219\u7528\u4f5c group \u540d. \u9759\u6001 Token \u6587\u4ef6(\u6700\u7b80\u5355) \u4f7f\u7528\u9759\u6001 Token \u6587\u4ef6\u8ba4\u8bc1\u53ea\u9700\u8981 API Server \u542f\u52a8\u65f6\u914d\u7f6e --token-auth-file=SOMEFILE. \u8be5\u6587\u4ef6\u4e3a csv \u683c\u5f0f, \u6bcf\u884c\u81f3\u5c11\u5305\u62ec\u4e09\u5217 token, username, user id. token, user, uid, \"group1, group2, group3\" \u5f15\u5bfc Token \u4e3a\u4e86\u652f\u6301\u5e73\u6ed1\u5730\u542f\u52a8\u5f15\u5bfc\u65b0\u7684\u96c6\u7fa4, Kubernetes \u5305\u542b\u4e86\u4e00\u79cd\u52a8\u6001\u7ba1\u7406\u7684\u6301\u6709\u8005\u4ee4\u724c\u7c7b\u578b, \u79f0\u4f5c\u542f\u52a8\u5f15\u5bfc\u4ee4\u724c(Bootstrap Token). \u8fd9\u4e9b\u4ee4\u724c\u4ee5 Secret \u7684\u5f62\u5f0f\u4fdd\u5b58\u5728 kube-system \u540d\u5b57\u7a7a\u95f4\u4e2d, \u53ef\u4ee5\u88ab\u52a8\u6001\u7ba1\u7406\u548c\u521b\u5efa. \u63a7\u5236\u5668\u7ba1\u7406\u5668\u5305\u542b\u7684 TokenCleaner \u63a7\u5236\u5668\u80fd\u591f\u5728\u542f\u52a8\u5f15\u5bfc\u4ee4\u724c\u8fc7\u671f\u65f6\u5c06\u5176\u5220\u9664. \u5728\u4f7f\u7528 kubeadm \u90e8\u7f72 Kubernetes \u65f6, \u53ef\u901a\u8fc7 kubeadmtoken list \u547d\u4ee4\u67e5\u8be2. \u9759\u6001\u5bc6\u7801\u6587\u4ef6(\u7c7b\u4f3c \"\u9759\u6001 Token \u6587\u4ef6\") \u9700\u8981 API Server \u542f\u52a8\u65f6\u914d\u7f6e --basic-auth-file=SOMEFILE, \u6587\u4ef6\u683c\u5f0f\u4e3a csv , \u6bcf\u884c\u81f3\u5c11\u4e09\u5217 password, user, uid, \u540e\u9762\u662f\u53ef\u9009\u7684 group \u540d. password, user, uid, \"group1, group2, group3\" ServiceAccount(\u7cfb\u7edf\u8d26\u6237, Kubernetes \u81ea\u5e26\u7684) ServiceAccount \u662f Kubernetes \u81ea\u52a8\u751f\u6210\u7684, \u5e76\u4f1a\u81ea\u52a8\u6302\u8f7d\u5230\u5bb9\u5668\u7684 /run/secrets/kubernetes.io/serviceaccount \u76ee\u5f55\u4e2d. /run/secrets/kubernetes.io/serviceaccount/{ca.crt,namespace,token} OpenID OAuth 2.0 \u7684\u8ba4\u8bc1\u673a\u5236 Webhook \u4ee4\u724c\u8eab\u4efd\u8ba4\u8bc1(\u96c6\u6210\u73b0\u6709\u7684\u8ba4\u8bc1\u5e73\u53f0\uff0c\u5e94\u7528\u573a\u666f\u6bd4\u8f83\u5e7f) --authentication-token-webhook-config-file \u6307\u5411\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6, \u5176\u4e2d\u63cf\u8ff0\u5982\u4f55\u8bbf\u95ee\u8fdc\u7a0b\u7684 Webhook \u670d\u52a1. --authentication-token-webhook-cache-ttl \u7528\u6765\u8bbe\u5b9a\u8eab\u4efd\u8ba4\u8bc1\u51b3\u5b9a\u7684\u7f13\u5b58\u65f6\u95f4. \u9ed8\u8ba4\u65f6\u957f\u4e3a 2 \u5206\u949f. \u533f\u540d\u8bf7\u6c42(\u4e0d\u5efa\u8bae\u7528) \u5982\u679c\u4f7f\u7528 AlwaysAllow \u4ee5\u5916\u7684\u8ba4\u8bc1\u6a21\u5f0f, \u5219\u533f\u540d\u8bf7\u6c42\u9ed8\u8ba4\u5f00\u542f, \u4f46\u53ef\u7528 --anonymous-auth=false \u7981\u6b62\u533f\u540d\u8bf7\u6c42.","title":"\u8ba4\u8bc1\u63d2\u4ef6"},{"location":"4.kube-api-server/1.%E8%AE%A4%E8%AF%81/#x509","text":"/etc/kubernetes/admin.conf apiVersion: v1 clusters: - cluster: certificate-authority-data: (CA-data) server: https://192.168.1.218:6443 (\u670d\u52a1\u5668\u5730\u5740) name: kubernetes (\u96c6\u7fa4\u540d\u79f0) contexts: (\u96c6\u7fa4\u4e0a\u4e0b\u6587) - context: cluster: kubernetes (\u8fde\u63a5\u54ea\u4e2a\u96c6\u7fa4) user: kubernetes-admin (\u7528\u54ea\u4e2a\u7528\u6237\u8fde\u63a5\u8fd9\u4e2a\u96c6\u7fa4) name: kubernetes-admin@kubernetes current-context: kubernetes-admin@kubernetes kind: Config preferences: {} users: (\u7528\u6237\u4fe1\u606f) - name: kubernetes-admin (\u7528\u6237\u540d) user: client-certificate-data: (\u7528\u6237\u7684 cert-data) client-key-data: (\u7528\u6237\u7684 key-data)","title":"X509 \u8bc1\u4e66"},{"location":"4.kube-api-server/1.%E8%AE%A4%E8%AF%81/#webhook","text":"https://github.com/kubeguard/guard","title":"\u57fa\u4e8e webhook \u7684\u8ba4\u8bc1\u670d\u52a1\u96c6\u6210"},{"location":"4.kube-api-server/1.%E8%AE%A4%E8%AF%81/#kubernetes","text":"\u9700\u8981\u4f9d\u7167 Kubernetes \u89c4\u8303, \u6784\u5efa\u8ba4\u8bc1\u670d\u52a1, \u7528\u6765\u8ba4\u8bc1 tokenreview request \u6784\u5efa\u8ba4\u8bc1\u670d\u52a1 \u8ba4\u8bc1\u670d\u52a1\u9700\u8981\u6ee1\u8db3\u5982\u4e0bKubernetes\u7684\u89c4\u8303 URL: https://authn.example.com/authenticate (webhook \u670d\u52a1\u5730\u5740) Method: POST Input: { \"apiVersion\": \"authentication.k8s.io/v1beta1\", \"kind\": \"TokenReview\", \"spec\": { \"token\": \"(BEARERTOKEN)\" } } Output: { \"apiVersion\": \"authentication.k8s.io/v1beta1\", \"kind\": \"TokenReview\", \"status\": { \"authenticated\": true, \"user\": { \"username\": \"janedoe@example.com \", \"uid\": \"42\", \"groups\": [ \"developers\", \"qa\" ] } } }","title":"\u6784\u5efa\u7b26\u5408 Kubernetes \u89c4\u8303\u7684\u8ba4\u8bc1\u670d\u52a1"},{"location":"4.kube-api-server/1.%E8%AE%A4%E8%AF%81/#_3","text":"\u89e3\u7801\u8ba4\u8bc1\u8bf7\u6c42 decoder := json.NewDecoder(r.Body) var tr authentication.TokenReview err := decoder.Decode(&tr) if err != nil { log.Println(\"[Error]\", err.Error()) w.WriteHeader(http.StatusBadRequest) json.NewEncoder(w).Encode( map[string]interface{}{ \"apiVersion\": \"authentication.k8s.io/v1beta1\", \"kind\": \"TokenReview\", \"status\": authentication.TokenReviewStatus{ Authenticated: false, }, } ) return } \u8f6c\u53d1\u8ba4\u8bc1\u8bf7\u6c42\u81f3\u8ba4\u8bc1\u670d\u52a1\u5668 // Check User ts := oauth2.StaticTokenSource(&oauth2.Token{AccessToken: tr.Spec.Token},) tc := oauth2.NewClient(oauth2.NoContext, ts) client := github.NewClient(tc) user, _, err := client.Users.Get(context.Background(), \"\") if err != nil { log.Println(\"[Error]\", err.Error()) w.WriteHeader(http.StatusUnauthorized) json.NewEncoder(w).Encode( map[string]interface{}{ \"apiVersion\": \"authentication.k8s.io/v1beta1\", \"kind\": \"TokenReview\", \"status\": authentication.TokenReviewStatus{ Authenticated: false, }, } ) return } \u8ba4\u8bc1\u7ed3\u679c\u8fd4\u56de\u7ed9APIServer w.WriteHeader(http.StatusOK) trs := authentication.TokenReviewStatus{ Authenticated: true, User: authentication.UserInfo{ Username: *user.Login, UID: *user.Login, }, } json.NewEncoder(w).Encode(map[string]interface{}{ \"apiVersion\": \"authentication.k8s.io/v1beta1\", \"kind\": \"TokenReview\", \"status\": trs, })","title":"\u5f00\u53d1\u8ba4\u8bc1\u670d\u52a1"},{"location":"4.kube-api-server/1.%E8%AE%A4%E8%AF%81/#_4","text":"{ \"kind\": \"Config\", \"apiVersion\": \"v1\", \"preferences\": {}, \"clusters\": [ { \"name\": \"github-authn\", \"cluster\": { \"server\": \"http://localhost:3000/authenticate\" } } ], \"users\": [ { \"name\": \"authn-apiserver\", \"user\": { \"token\": \"secret\" } } ], \"contexts\": [ { \"name\": \"webhook\", \"context\": { \"cluster\": \"github-authn\", \"user\": \"authn-apiserver\" } } ], \"current-context\": \"webhook\" }","title":"\u914d\u7f6e\u8ba4\u8bc1\u670d\u52a1"},{"location":"4.kube-api-server/1.%E8%AE%A4%E8%AF%81/#apiserver","text":"\u53ef\u4ee5\u662f\u4efb\u4f55\u8ba4\u8bc1\u7cfb\u7edf \u4f46\u5728\u7528\u6237\u8ba4\u8bc1\u5b8c\u6210\u540e, \u751f\u6210\u4ee3\u8868\u7528\u6237\u8eab\u4efd\u7684 token \u8be5 token \u901a\u5e38\u662f\u6709\u5931\u6548\u65f6\u95f4\u7684 \u7528\u6237\u83b7\u53d6\u8be5 token \u4ee5\u540e\u4ee5\u540e, \u5c06 token \u914d\u7f6e\u8fdb kubeconfig \u4fee\u6539 apiserver \u8bbe\u7f6e, \u5f00\u542f\u8ba4\u8bc1\u670d\u52a1, apiserver \u4fdd\u8bc1\u5c06\u6240\u6709\u6536\u5230\u7684\u8bf7\u6c42\u4e2d\u7684 token \u4fe1\u606f, \u53d1\u7ed9\u8ba4\u8bc1\u670d\u52a1\u8fdb\u884c\u9a8c\u8bc1 --authentication-token-webhook-config-file, \u8be5\u6587\u4ef6\u63cf\u8ff0\u5982\u4f55\u8bbf\u95ee\u8ba4\u8bc1\u670d\u52a1 --authentication-token-webhook-cache-ttl, \u9ed8\u8ba4 2 \u5206\u949f \u914d\u7f6e\u6587\u4ef6\u9700\u8981 mount \u8fdb Pod \u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u670d\u52a1\u5668\u5730\u5740\u9700\u8981\u6307\u5411 authService { \"kind\": \"Config\", \"apiVersion\": \"v1\", \"preferences\": {}, \"clusters\": [ { \"name\": \"github-authn\", \"cluster\": { \"server\": \"http://localhost:3000/authenticate\" } } ], \"users\": [ { \"name\": \"authn-apiserver\", \"user\": { \"token\": \"secret\" } } ], \"contexts\": [ { \"name\": \"webhook\", \"context\": { \"cluster\": \"github-authn\", \"user\": \"authn-apiserver\" } } ], \"current-context\": \"webhook\" }","title":"\u914d\u7f6eapiserver"},{"location":"4.kube-api-server/1.%E8%AE%A4%E8%AF%81/#_5","text":"\u57fa\u4e8e Keystone \u7684\u8ba4\u8bc1\u63d2\u4ef6\u5bfc\u81f4 Keystone \u6545\u969c\u4e14\u65e0\u6cd5\u6062\u590d Keystone \u662f\u4f01\u4e1a\u5173\u952e\u670d\u52a1 Kubernetes \u4ee5 Keystone \u4f5c\u4e3a\u8ba4\u8bc1\u63d2\u4ef6 Keystone \u5728\u51fa\u73b0\u6545\u969c\u540e\u4f1a\u629b\u51fa 401 \u9519\u8bef Kubernetes \u53d1\u73b0 401 \u9519\u8bef\u540e\u4f1a\u5c1d\u8bd5\u91cd\u65b0\u8ba4\u8bc1 \u5927\u591a\u6570 controller \u90fd\u6709\u6307\u6570\u7ea7 back off, \u91cd\u8bd5\u95f4\u9694\u8d8a\u6765\u8d8a\u6162 \u4f46 gophercloud \u9488\u5bf9\u8fc7\u671f token \u4f1a\u4e00\u76f4 retry \u5927\u91cf\u7684 request \u79ef\u538b\u5728 Keystone \u5bfc\u81f4\u670d\u52a1\u65e0\u6cd5\u6062\u590d Kubernetes \u6210\u4e3a\u538b\u6b7b\u4f01\u4e1a\u8ba4\u8bc1\u670d\u52a1\u7684\u6700\u540e\u4e00\u6839\u7a3b\u8349 \u89e3\u51b3\u65b9\u6848\uff1f Circuit break Rate limit","title":"\u751f\u4ea7\u7cfb\u7edf\u4e2d\u9047\u5230\u7684\u9677\u9631"},{"location":"4.kube-api-server/1.%E8%AE%A4%E8%AF%81/#_6","text":"\u4e3b\u8981\u9632\u6b62 api-server \u542f\u52a8\u65f6\uff0cwebhook \u6ca1\u6709\u542f\u52a8\u6210\u529f\u3002 \u8fd0\u884c\u6210 api-server \u7684\u4e00\u4e2a sidecar \u5199\u5728 /etc/kubernetes/manifests/webhook.yaml","title":"\u4e00\u822c\u7528\u6cd5"},{"location":"4.kube-api-server/2.%E9%89%B4%E6%9D%83/","text":"\u6388\u6743 \u6388\u6743\u4e3b\u8981\u662f\u7528\u4e8e\u5bf9\u96c6\u7fa4\u8d44\u6e90\u7684\u8bbf\u95ee\u63a7\u5236, \u901a\u8fc7\u68c0\u67e5\u8bf7\u6c42\u5305\u542b\u7684\u76f8\u5173\u5c5e\u6027\u503c, \u4e0e\u76f8\u5bf9\u5e94\u7684\u8bbf\u95ee\u7b56\u7565\u76f8\u6bd4\u8f83, API\u8bf7\u6c42\u5fc5\u987b\u6ee1\u8db3\u67d0\u4e9b\u7b56\u7565\u624d\u80fd\u88ab\u5904\u7406. \u8ddf\u8ba4\u8bc1\u7c7b\u4f3c, Kubernetes \u4e5f\u652f\u6301\u591a\u79cd\u6388\u6743\u673a\u5236, \u5e76\u652f\u6301\u540c\u65f6\u5f00\u542f\u591a\u4e2a\u6388\u6743\u63d2\u4ef6(\u53ea\u8981\u6709\u4e00\u4e2a\u9a8c\u8bc1\u901a\u8fc7\u5373\u53ef). \u5982\u679c\u6388\u6743\u6210\u529f, \u5219\u7528\u6237\u7684\u8bf7\u6c42\u4f1a\u53d1\u9001\u5230\u51c6\u5165\u63a7\u5236\u6a21\u5757\u505a\u8fdb\u4e00\u6b65\u7684\u8bf7\u6c42\u9a8c\u8bc1; \u5bf9\u4e8e\u6388\u6743\u5931\u8d25\u7684\u8bf7\u6c42\u5219\u8fd4\u56de HTTP 403. Kubernetes \u6388\u6743\u4ec5\u5904\u7406\u4ee5\u4e0b\u7684\u8bf7\u6c42\u5c5e\u6027: user, group, extra API\u3001\u8bf7\u6c42\u65b9\u6cd5(\u5982get \u3001post \u3001update \u3001patch \u548c delete)\u548c\u8bf7\u6c42\u8def\u5f84(\u5982/api) \u8bf7\u6c42\u8d44\u6e90\u548c\u5b50\u8d44\u6e90 Namespace API Group \u76ee\u524d, Kubernetes \u652f\u6301\u4ee5\u4e0b\u6388\u6743\u63d2\u4ef6: ABAC(\u7c7b\u4f3c\u4e8e\u9759\u6001\u5bc6\u7801) RBAC(\u57fa\u4e8e\u89d2\u8272\u7684\uff0c\u80fd\u6ee1\u8db3\u7edd\u5927\u90e8\u5206\u573a\u666f) Webhook Node RBAC vs ABAC ABAC (Attribute Based Access Control) \u672c\u6765\u662f\u4e0d\u9519\u7684\u6982\u5ff5, \u4f46\u662f\u5728 Kubernetes \u4e2d\u7684\u5b9e\u73b0\u6bd4\u8f83\u96be\u4e8e\u7ba1\u7406\u548c\u7406\u89e3, \u800c\u4e14\u9700\u8981\u5bf9 Master \u6240\u5728\u8282\u70b9\u7684 SSH \u548c\u6587\u4ef6\u7cfb\u7edf\u6743\u9650, \u8981\u4f7f\u5f97\u5bf9\u6388\u6743\u7684\u53d8\u66f4\u6210\u529f\u751f\u6548, \u8fd8\u9700\u8981\u91cd\u65b0\u542f\u52a8 API Server. \u800c RBAC \u7684\u6388\u6743\u7b56\u7565\u53ef\u4ee5\u5229\u7528 kubectl \u6216\u8005 Kubernetes API \u76f4\u63a5\u8fdb\u884c\u914d\u7f6e. RBAC \u53ef\u4ee5\u6388\u6743\u7ed9\u7528\u6237, \u8ba9\u7528\u6237\u6709\u6743\u8fdb\u884c\u6388\u6743\u7ba1\u7406, \u8fd9\u6837\u5c31\u53ef\u4ee5\u65e0\u9700\u63a5\u89e6\u8282\u70b9, \u76f4\u63a5\u8fdb\u884c\u6388\u6743\u7ba1\u7406. RBAC \u5728 Kubernetes \u4e2d\u88ab\u6620\u5c04\u4e3a API \u8d44\u6e90\u548c\u64cd\u4f5c. RBAC\u8001\u56fe RBAC\u65b0\u89e3 Role\u4e0eClusterRole Role (\u89d2\u8272)\u662f\u4e00\u7cfb\u5217\u6743\u9650\u7684\u96c6\u5408, \u4f8b\u5982\u4e00\u4e2a\u89d2\u8272\u53ef\u4ee5\u5305\u542b\u8bfb\u53d6 Pod \u7684\u6743\u9650\u548c\u5217\u51fa Pod \u7684\u6743\u9650. Role \u53ea\u80fd\u7528\u6765\u7ed9\u67d0\u4e2a\u7279\u5b9a namespace \u4e2d\u7684\u8d44\u6e90\u4f5c\u9274\u6743, \u5bf9\u591a namespace \u548c\u96c6\u7fa4\u7ea7\u7684\u8d44\u6e90\u6216\u8005\u662f\u975e\u8d44\u6e90\u7c7b\u7684API (\u5982 /healthz) \u4f7f\u7528 ClusterRole. # Role\u793a\u4f8b kind: Role apiVersion: rbac.authorization.k8s.io/v1 metadata: namespace: default name: pod-reader rules: - apiGroups: [\"\"] # \"\" indicates the core API group resources: [\"pods\"] verbs: [\"get\", \"watch\", \"list\"] # ClusterRole\u793a\u4f8b kind: ClusterRole apiVersion: rbac.authorization.k8s.io/v1 metadata: # \"namespace\" omitted since ClusterRoles are not namespaced name: secret-reader rules: - apiGroups: [\"\"] resources: [\"secrets\"] verbs: [\"get\", \"watch\", \"list\"] binding # RoleBinding\u793a\u4f8b(\u5f15\u7528ClusterRole) # This role binding allows \"dave\" to read secrets in the \"development\" namespace. kind: RoleBinding apiVersion: rbac.authorization.k8s.io/v1 metadata: name: read-secrets namespace: development # This only grants permissions within the \"development\" namespace. subjects: - kind: User name: dave apiGroup: rbac.authorization.k8s.io roleRef: kind: ClusterRole name: secret-reader apiGroup: rbac.authorization.k8s.io \u8d26\u6237\\\u7ec4\u7684\u7ba1\u7406 \u89d2\u8272\u7ed1\u5b9a(Role Binding) \u662f\u5c06\u89d2\u8272\u4e2d\u5b9a\u4e49\u7684\u6743\u9650\u8d4b\u4e88\u4e00\u4e2a\u6216\u8005\u4e00\u7ec4\u7528\u6237. \u5b83\u5305\u542b\u82e5\u5e72 \u4e3b\u4f53 (\u7528\u6237\u3001\u7ec4\u6216\u670d\u52a1\u8d26\u6237)\u7684\u5217\u8868\u548c\u5bf9\u8fd9\u4e9b\u4e3b\u4f53\u6240\u83b7\u5f97\u7684\u89d2\u8272\u7684\u5f15\u7528. \u7ec4\u7684\u6982\u5ff5: \u5f53\u4e0e\u5916\u90e8\u8ba4\u8bc1\u7cfb\u7edf\u5bf9\u63a5\u65f6, \u7528\u6237\u4fe1\u606f (UserInfo) \u53ef\u5305\u542b Group \u4fe1\u606f, \u6388\u6743\u53ef\u9488\u5bf9\u7528\u6237\u7fa4\u7ec4 \u5f53\u5bf9 ServiceAccount \u6388\u6743\u65f6, Group \u4ee3\u8868\u67d0\u4e2a Namespace \u4e0b\u7684\u6240\u6709 ServiceAccount \u9488\u5bf9\u7fa4\u79df\u6388\u6743 apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRoleBinding metadata: name: read-secrets-global subjects: - kind: Group name: manager # 'name' \u662f\u533a\u5206\u5927\u5c0f\u5199\u7684 apiGroup: rbac.authorization.k8s.io roleRef: kind: ClusterRole name: secret-reader apiGroup: rbac.authorization.k8s.io apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRoleBinding metadata: name: read-secrets-global subjects: - kind: Group name: system:serviceaccounts:qa apiGroup: rbac.authorization.k8s.io roleRef: kind: ClusterRole name: secret-reader apiGroup: rbac.authorization.k8s.io \u89c4\u5212\u7cfb\u7edf\u89d2\u8272 User \u7ba1\u7406\u5458 \u6240\u6709\u8d44\u6e90\u7684\u6240\u6709\u6743\u9650\uff1f\uff1f \u666e\u901a\u7528\u6237 \u662f\u5426\u6709\u8be5\u7528\u6237\u521b\u5efa\u7684namespace\u4e0b\u7684\u6240\u6709object\u7684\u64cd\u4f5c\u6743\u9650\uff1f \u5bf9\u5176\u4ed6\u7528\u6237\u7684namespace\u8d44\u6e90\u662f\u5426\u53ef\u8bfb, \u662f\u5426\u53ef\u5199\uff1f SystemAccount SystemAccount \u662f\u5f00\u53d1\u8005(kubernetes developer \u6216\u8005 domain developer)\u521b\u5efa\u5e94\u7528\u540e, \u5e94\u7528\u4e8e apiserver \u901a\u8baf\u9700\u8981\u7684\u8eab\u4efd \u7528\u6237\u53ef\u4ee5\u521b\u5efa\u81ea\u5b9a\u7684 ServiceAccount, kubernetes \u4e5f\u4e3a\u6bcf\u4e2a namespace \u521b\u5efa default ServiceAccount Default ServiceAccount \u901a\u5e38\u9700\u8981\u7ed9\u5b9a\u6743\u9650\u4ee5\u540e\u624d\u80fd\u5bf9 apiserver \u505a\u5199\u64cd\u4f5c \u5b9e\u73b0\u65b9\u6848 \u5728 cluster \u521b\u5efa\u65f6, \u521b\u5efa\u81ea\u5b9a\u4e49\u7684 role, \u6bd4\u5982 namespace-creator Namespace-creator role \u5b9a\u4e49\u7528\u6237\u53ef\u64cd\u4f5c\u7684\u5bf9\u8c61\u548c\u5bf9\u5e94\u7684\u8bfb\u5199\u64cd\u4f5c. \u521b\u5efa\u81ea\u5b9a\u4e49\u7684 namespace admission controller \u5f53 namespace \u521b\u5efa\u8bf7\u6c42\u88ab\u5904\u7406\u65f6, \u83b7\u53d6\u5f53\u524d\u7528\u6237\u4fe1\u606f\u5e76 annotate \u5230 namespace \u521b\u5efa RBAC controller Watch namespace \u7684\u521b\u5efa\u4e8b\u4ef6 \u83b7\u53d6\u5f53\u524d namespace \u7684\u521b\u5efa\u8005\u4fe1\u606f \u5728\u5f53\u524d namespace \u521b\u5efa rolebinding \u5bf9\u8c61, \u5e76\u5c06 namespace-creator \u89d2\u8272\u548c\u7528\u6237\u7ed1\u5b9a \u4e0e\u6743\u9650\u76f8\u5173\u7684\u5176\u4ed6\u6700\u4f73\u5b9e\u8df5 ClusterRole \u662f\u975e namespace \u7ed1\u5b9a\u7684, \u9488\u5bf9\u6574\u4e2a\u96c6\u7fa4\u751f\u6548\u3002\u4e0d\u5efa\u8bae\u7ed9\u666e\u901a\u7528\u6237\u7ed1\u5b9a\u3002 \u901a\u5e38\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u7ba1\u7406\u5458\u89d2\u8272, \u5e76\u4e14\u7ed1\u5b9a\u7ed9\u5f00\u53d1\u8fd0\u8425\u56e2\u961f\u6210\u5458 ThirdPartyResource \u548c CustomResourceDefinition \u662f\u5168\u5c40\u8d44\u6e90, \u666e\u901a\u7528\u6237\u521b\u5efa ThirdPartyResource/CustomResourceDefinition \u4ee5\u540e, \u9700\u8981\u7ba1\u7406\u5458\u6388\u4e88\u76f8\u5e94\u6743\u9650\u540e\u624d\u80fd\u771f\u6b63\u64cd\u4f5c\u8be5\u5bf9\u8c61 \u9488\u5bf9\u6240\u6709\u7684\u89d2\u8272\u7ba1\u7406, \u5efa\u8bae\u521b\u5efa spec, \u7528\u6e90\u4ee3\u7801\u9a71\u52a8 \u867d\u7136\u53ef\u4ee5\u901a\u8fc7 edit \u64cd\u4f5c\u6765\u4fee\u6539\u6743\u9650, \u4f46\u540e\u671f\u4f1a\u5bfc\u81f4\u6743\u9650\u7ba1\u7406\u6df7\u4e71, \u53ef\u80fd\u4f1a\u6709\u5f88\u591a\u4e34\u65f6\u521b\u5efa\u51fa\u6765\u7684 \u89d2\u8272\u548c\u89d2\u8272\u7ed1\u5b9a\u5bf9\u8c61, \u91cd\u590d\u7ed1\u5b9a\u67d0\u4e00\u4e2a\u8d44\u6e90\u6743\u9650 \u6743\u9650\u662f\u53ef\u4ee5\u4f20\u9012\u7684, \u7528\u6237 A \u53ef\u4ee5\u5c06\u5176\u5bf9\u67d0\u5bf9\u8c61\u7684\u67d0\u64cd\u4f5c, \u62bd\u53d6\u6210\u4e00\u4e2a\u6743\u9650, \u5e76\u8d4b\u7ed9\u7528\u6237B \u9632\u6b62\u6d77\u91cf\u7684\u89d2\u8272\u548c\u89d2\u8272\u7ed1\u5b9a\u5bf9\u8c61, \u56e0\u4e3a\u5927\u91cf\u7684\u5bf9\u8c61\u4f1a\u5bfc\u81f4\u9274\u6743\u6548\u7387\u4f4e, \u540c\u65f6\u7ed9 apiserver \u589e\u52a0\u8d1f\u62c5 ServiceAccount \u4e5f\u9700\u8981\u6388\u6743\u7684, \u5426\u5219\u4f60\u7684 component \u53ef\u80fd\u65e0\u6cd5\u64cd\u4f5c\u67d0\u5bf9\u8c61 Tips: SSH \u5230 master \u8282\u70b9\u901a\u8fc7 insecure port \u8bbf\u95ee apiserver \u53ef\u7ed5\u8fc7\u9274\u6743, \u5f53\u9700\u8981\u505a\u7ba1\u7406\u64cd\u4f5c\u53c8\u6ca1\u6709\u6743\u9650\u65f6\u53ef\u4ee5\u4f7f\u7528(\u4e0d\u63a8\u8350) \u8fd0\u8425\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u7684\u9677\u9631 \u6848\u4f8b1: \u7814\u53d1\u4eba\u5458\u4e3a\u63d0\u9ad8\u7cfb\u7edf\u6548\u7387, \u5c06 update \u65b9\u6cd5\u4fee\u6539\u4e3a patch \u7814\u53d1\u4eba\u5458\u672c\u5730\u975e\u5b89\u5168\u6d4b\u8bd5\u73af\u5883\u6d4b\u8bd5\u901a\u8fc7 \u4e0a\u751f\u4ea7, \u53d1\u73b0\u4e0d work \u539f\u56e0: \u5fd8\u8bb0\u66f4\u65b0 rolebinding, \u5bf9\u5e94\u7684 serviceaccount \u6ca1\u6709 patch \u6743\u9650 \u6848\u4f8b2: \u7814\u53d1\u4eba\u5458\u521b\u5efa CRD, \u5e76\u9488\u5bf9\u8be5 CRD \u7f16\u7a0b \u4e0a\u751f\u4ea7\u540e\u4e0d\u5de5\u4f5c \u539f\u56e0, \u8be5 CRD \u672a\u6388\u6743, \u5bf9\u5e94\u7684\u7ec4\u4ef6 get \u4e0d\u5230\u5bf9\u5e94\u7684 CRD \u8d44\u6e90","title":"\u9274\u6743"},{"location":"4.kube-api-server/2.%E9%89%B4%E6%9D%83/#_1","text":"\u6388\u6743\u4e3b\u8981\u662f\u7528\u4e8e\u5bf9\u96c6\u7fa4\u8d44\u6e90\u7684\u8bbf\u95ee\u63a7\u5236, \u901a\u8fc7\u68c0\u67e5\u8bf7\u6c42\u5305\u542b\u7684\u76f8\u5173\u5c5e\u6027\u503c, \u4e0e\u76f8\u5bf9\u5e94\u7684\u8bbf\u95ee\u7b56\u7565\u76f8\u6bd4\u8f83, API\u8bf7\u6c42\u5fc5\u987b\u6ee1\u8db3\u67d0\u4e9b\u7b56\u7565\u624d\u80fd\u88ab\u5904\u7406. \u8ddf\u8ba4\u8bc1\u7c7b\u4f3c, Kubernetes \u4e5f\u652f\u6301\u591a\u79cd\u6388\u6743\u673a\u5236, \u5e76\u652f\u6301\u540c\u65f6\u5f00\u542f\u591a\u4e2a\u6388\u6743\u63d2\u4ef6(\u53ea\u8981\u6709\u4e00\u4e2a\u9a8c\u8bc1\u901a\u8fc7\u5373\u53ef). \u5982\u679c\u6388\u6743\u6210\u529f, \u5219\u7528\u6237\u7684\u8bf7\u6c42\u4f1a\u53d1\u9001\u5230\u51c6\u5165\u63a7\u5236\u6a21\u5757\u505a\u8fdb\u4e00\u6b65\u7684\u8bf7\u6c42\u9a8c\u8bc1; \u5bf9\u4e8e\u6388\u6743\u5931\u8d25\u7684\u8bf7\u6c42\u5219\u8fd4\u56de HTTP 403. Kubernetes \u6388\u6743\u4ec5\u5904\u7406\u4ee5\u4e0b\u7684\u8bf7\u6c42\u5c5e\u6027: user, group, extra API\u3001\u8bf7\u6c42\u65b9\u6cd5(\u5982get \u3001post \u3001update \u3001patch \u548c delete)\u548c\u8bf7\u6c42\u8def\u5f84(\u5982/api) \u8bf7\u6c42\u8d44\u6e90\u548c\u5b50\u8d44\u6e90 Namespace API Group \u76ee\u524d, Kubernetes \u652f\u6301\u4ee5\u4e0b\u6388\u6743\u63d2\u4ef6: ABAC(\u7c7b\u4f3c\u4e8e\u9759\u6001\u5bc6\u7801) RBAC(\u57fa\u4e8e\u89d2\u8272\u7684\uff0c\u80fd\u6ee1\u8db3\u7edd\u5927\u90e8\u5206\u573a\u666f) Webhook Node","title":"\u6388\u6743"},{"location":"4.kube-api-server/2.%E9%89%B4%E6%9D%83/#rbac-vs-abac","text":"ABAC (Attribute Based Access Control) \u672c\u6765\u662f\u4e0d\u9519\u7684\u6982\u5ff5, \u4f46\u662f\u5728 Kubernetes \u4e2d\u7684\u5b9e\u73b0\u6bd4\u8f83\u96be\u4e8e\u7ba1\u7406\u548c\u7406\u89e3, \u800c\u4e14\u9700\u8981\u5bf9 Master \u6240\u5728\u8282\u70b9\u7684 SSH \u548c\u6587\u4ef6\u7cfb\u7edf\u6743\u9650, \u8981\u4f7f\u5f97\u5bf9\u6388\u6743\u7684\u53d8\u66f4\u6210\u529f\u751f\u6548, \u8fd8\u9700\u8981\u91cd\u65b0\u542f\u52a8 API Server. \u800c RBAC \u7684\u6388\u6743\u7b56\u7565\u53ef\u4ee5\u5229\u7528 kubectl \u6216\u8005 Kubernetes API \u76f4\u63a5\u8fdb\u884c\u914d\u7f6e. RBAC \u53ef\u4ee5\u6388\u6743\u7ed9\u7528\u6237, \u8ba9\u7528\u6237\u6709\u6743\u8fdb\u884c\u6388\u6743\u7ba1\u7406, \u8fd9\u6837\u5c31\u53ef\u4ee5\u65e0\u9700\u63a5\u89e6\u8282\u70b9, \u76f4\u63a5\u8fdb\u884c\u6388\u6743\u7ba1\u7406. RBAC \u5728 Kubernetes \u4e2d\u88ab\u6620\u5c04\u4e3a API \u8d44\u6e90\u548c\u64cd\u4f5c.","title":"RBAC vs ABAC"},{"location":"4.kube-api-server/2.%E9%89%B4%E6%9D%83/#rbac","text":"","title":"RBAC\u8001\u56fe"},{"location":"4.kube-api-server/2.%E9%89%B4%E6%9D%83/#rbac_1","text":"","title":"RBAC\u65b0\u89e3"},{"location":"4.kube-api-server/2.%E9%89%B4%E6%9D%83/#roleclusterrole","text":"Role (\u89d2\u8272)\u662f\u4e00\u7cfb\u5217\u6743\u9650\u7684\u96c6\u5408, \u4f8b\u5982\u4e00\u4e2a\u89d2\u8272\u53ef\u4ee5\u5305\u542b\u8bfb\u53d6 Pod \u7684\u6743\u9650\u548c\u5217\u51fa Pod \u7684\u6743\u9650. Role \u53ea\u80fd\u7528\u6765\u7ed9\u67d0\u4e2a\u7279\u5b9a namespace \u4e2d\u7684\u8d44\u6e90\u4f5c\u9274\u6743, \u5bf9\u591a namespace \u548c\u96c6\u7fa4\u7ea7\u7684\u8d44\u6e90\u6216\u8005\u662f\u975e\u8d44\u6e90\u7c7b\u7684API (\u5982 /healthz) \u4f7f\u7528 ClusterRole. # Role\u793a\u4f8b kind: Role apiVersion: rbac.authorization.k8s.io/v1 metadata: namespace: default name: pod-reader rules: - apiGroups: [\"\"] # \"\" indicates the core API group resources: [\"pods\"] verbs: [\"get\", \"watch\", \"list\"] # ClusterRole\u793a\u4f8b kind: ClusterRole apiVersion: rbac.authorization.k8s.io/v1 metadata: # \"namespace\" omitted since ClusterRoles are not namespaced name: secret-reader rules: - apiGroups: [\"\"] resources: [\"secrets\"] verbs: [\"get\", \"watch\", \"list\"]","title":"Role\u4e0eClusterRole"},{"location":"4.kube-api-server/2.%E9%89%B4%E6%9D%83/#binding","text":"# RoleBinding\u793a\u4f8b(\u5f15\u7528ClusterRole) # This role binding allows \"dave\" to read secrets in the \"development\" namespace. kind: RoleBinding apiVersion: rbac.authorization.k8s.io/v1 metadata: name: read-secrets namespace: development # This only grants permissions within the \"development\" namespace. subjects: - kind: User name: dave apiGroup: rbac.authorization.k8s.io roleRef: kind: ClusterRole name: secret-reader apiGroup: rbac.authorization.k8s.io","title":"binding"},{"location":"4.kube-api-server/2.%E9%89%B4%E6%9D%83/#_2","text":"\u89d2\u8272\u7ed1\u5b9a(Role Binding) \u662f\u5c06\u89d2\u8272\u4e2d\u5b9a\u4e49\u7684\u6743\u9650\u8d4b\u4e88\u4e00\u4e2a\u6216\u8005\u4e00\u7ec4\u7528\u6237. \u5b83\u5305\u542b\u82e5\u5e72 \u4e3b\u4f53 (\u7528\u6237\u3001\u7ec4\u6216\u670d\u52a1\u8d26\u6237)\u7684\u5217\u8868\u548c\u5bf9\u8fd9\u4e9b\u4e3b\u4f53\u6240\u83b7\u5f97\u7684\u89d2\u8272\u7684\u5f15\u7528. \u7ec4\u7684\u6982\u5ff5: \u5f53\u4e0e\u5916\u90e8\u8ba4\u8bc1\u7cfb\u7edf\u5bf9\u63a5\u65f6, \u7528\u6237\u4fe1\u606f (UserInfo) \u53ef\u5305\u542b Group \u4fe1\u606f, \u6388\u6743\u53ef\u9488\u5bf9\u7528\u6237\u7fa4\u7ec4 \u5f53\u5bf9 ServiceAccount \u6388\u6743\u65f6, Group \u4ee3\u8868\u67d0\u4e2a Namespace \u4e0b\u7684\u6240\u6709 ServiceAccount","title":"\u8d26\u6237\\\u7ec4\u7684\u7ba1\u7406"},{"location":"4.kube-api-server/2.%E9%89%B4%E6%9D%83/#_3","text":"apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRoleBinding metadata: name: read-secrets-global subjects: - kind: Group name: manager # 'name' \u662f\u533a\u5206\u5927\u5c0f\u5199\u7684 apiGroup: rbac.authorization.k8s.io roleRef: kind: ClusterRole name: secret-reader apiGroup: rbac.authorization.k8s.io apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRoleBinding metadata: name: read-secrets-global subjects: - kind: Group name: system:serviceaccounts:qa apiGroup: rbac.authorization.k8s.io roleRef: kind: ClusterRole name: secret-reader apiGroup: rbac.authorization.k8s.io","title":"\u9488\u5bf9\u7fa4\u79df\u6388\u6743"},{"location":"4.kube-api-server/2.%E9%89%B4%E6%9D%83/#_4","text":"User \u7ba1\u7406\u5458 \u6240\u6709\u8d44\u6e90\u7684\u6240\u6709\u6743\u9650\uff1f\uff1f \u666e\u901a\u7528\u6237 \u662f\u5426\u6709\u8be5\u7528\u6237\u521b\u5efa\u7684namespace\u4e0b\u7684\u6240\u6709object\u7684\u64cd\u4f5c\u6743\u9650\uff1f \u5bf9\u5176\u4ed6\u7528\u6237\u7684namespace\u8d44\u6e90\u662f\u5426\u53ef\u8bfb, \u662f\u5426\u53ef\u5199\uff1f SystemAccount SystemAccount \u662f\u5f00\u53d1\u8005(kubernetes developer \u6216\u8005 domain developer)\u521b\u5efa\u5e94\u7528\u540e, \u5e94\u7528\u4e8e apiserver \u901a\u8baf\u9700\u8981\u7684\u8eab\u4efd \u7528\u6237\u53ef\u4ee5\u521b\u5efa\u81ea\u5b9a\u7684 ServiceAccount, kubernetes \u4e5f\u4e3a\u6bcf\u4e2a namespace \u521b\u5efa default ServiceAccount Default ServiceAccount \u901a\u5e38\u9700\u8981\u7ed9\u5b9a\u6743\u9650\u4ee5\u540e\u624d\u80fd\u5bf9 apiserver \u505a\u5199\u64cd\u4f5c","title":"\u89c4\u5212\u7cfb\u7edf\u89d2\u8272"},{"location":"4.kube-api-server/2.%E9%89%B4%E6%9D%83/#_5","text":"\u5728 cluster \u521b\u5efa\u65f6, \u521b\u5efa\u81ea\u5b9a\u4e49\u7684 role, \u6bd4\u5982 namespace-creator Namespace-creator role \u5b9a\u4e49\u7528\u6237\u53ef\u64cd\u4f5c\u7684\u5bf9\u8c61\u548c\u5bf9\u5e94\u7684\u8bfb\u5199\u64cd\u4f5c. \u521b\u5efa\u81ea\u5b9a\u4e49\u7684 namespace admission controller \u5f53 namespace \u521b\u5efa\u8bf7\u6c42\u88ab\u5904\u7406\u65f6, \u83b7\u53d6\u5f53\u524d\u7528\u6237\u4fe1\u606f\u5e76 annotate \u5230 namespace \u521b\u5efa RBAC controller Watch namespace \u7684\u521b\u5efa\u4e8b\u4ef6 \u83b7\u53d6\u5f53\u524d namespace \u7684\u521b\u5efa\u8005\u4fe1\u606f \u5728\u5f53\u524d namespace \u521b\u5efa rolebinding \u5bf9\u8c61, \u5e76\u5c06 namespace-creator \u89d2\u8272\u548c\u7528\u6237\u7ed1\u5b9a","title":"\u5b9e\u73b0\u65b9\u6848"},{"location":"4.kube-api-server/2.%E9%89%B4%E6%9D%83/#_6","text":"ClusterRole \u662f\u975e namespace \u7ed1\u5b9a\u7684, \u9488\u5bf9\u6574\u4e2a\u96c6\u7fa4\u751f\u6548\u3002\u4e0d\u5efa\u8bae\u7ed9\u666e\u901a\u7528\u6237\u7ed1\u5b9a\u3002 \u901a\u5e38\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u7ba1\u7406\u5458\u89d2\u8272, \u5e76\u4e14\u7ed1\u5b9a\u7ed9\u5f00\u53d1\u8fd0\u8425\u56e2\u961f\u6210\u5458 ThirdPartyResource \u548c CustomResourceDefinition \u662f\u5168\u5c40\u8d44\u6e90, \u666e\u901a\u7528\u6237\u521b\u5efa ThirdPartyResource/CustomResourceDefinition \u4ee5\u540e, \u9700\u8981\u7ba1\u7406\u5458\u6388\u4e88\u76f8\u5e94\u6743\u9650\u540e\u624d\u80fd\u771f\u6b63\u64cd\u4f5c\u8be5\u5bf9\u8c61 \u9488\u5bf9\u6240\u6709\u7684\u89d2\u8272\u7ba1\u7406, \u5efa\u8bae\u521b\u5efa spec, \u7528\u6e90\u4ee3\u7801\u9a71\u52a8 \u867d\u7136\u53ef\u4ee5\u901a\u8fc7 edit \u64cd\u4f5c\u6765\u4fee\u6539\u6743\u9650, \u4f46\u540e\u671f\u4f1a\u5bfc\u81f4\u6743\u9650\u7ba1\u7406\u6df7\u4e71, \u53ef\u80fd\u4f1a\u6709\u5f88\u591a\u4e34\u65f6\u521b\u5efa\u51fa\u6765\u7684 \u89d2\u8272\u548c\u89d2\u8272\u7ed1\u5b9a\u5bf9\u8c61, \u91cd\u590d\u7ed1\u5b9a\u67d0\u4e00\u4e2a\u8d44\u6e90\u6743\u9650 \u6743\u9650\u662f\u53ef\u4ee5\u4f20\u9012\u7684, \u7528\u6237 A \u53ef\u4ee5\u5c06\u5176\u5bf9\u67d0\u5bf9\u8c61\u7684\u67d0\u64cd\u4f5c, \u62bd\u53d6\u6210\u4e00\u4e2a\u6743\u9650, \u5e76\u8d4b\u7ed9\u7528\u6237B \u9632\u6b62\u6d77\u91cf\u7684\u89d2\u8272\u548c\u89d2\u8272\u7ed1\u5b9a\u5bf9\u8c61, \u56e0\u4e3a\u5927\u91cf\u7684\u5bf9\u8c61\u4f1a\u5bfc\u81f4\u9274\u6743\u6548\u7387\u4f4e, \u540c\u65f6\u7ed9 apiserver \u589e\u52a0\u8d1f\u62c5 ServiceAccount \u4e5f\u9700\u8981\u6388\u6743\u7684, \u5426\u5219\u4f60\u7684 component \u53ef\u80fd\u65e0\u6cd5\u64cd\u4f5c\u67d0\u5bf9\u8c61 Tips: SSH \u5230 master \u8282\u70b9\u901a\u8fc7 insecure port \u8bbf\u95ee apiserver \u53ef\u7ed5\u8fc7\u9274\u6743, \u5f53\u9700\u8981\u505a\u7ba1\u7406\u64cd\u4f5c\u53c8\u6ca1\u6709\u6743\u9650\u65f6\u53ef\u4ee5\u4f7f\u7528(\u4e0d\u63a8\u8350)","title":"\u4e0e\u6743\u9650\u76f8\u5173\u7684\u5176\u4ed6\u6700\u4f73\u5b9e\u8df5"},{"location":"4.kube-api-server/2.%E9%89%B4%E6%9D%83/#_7","text":"\u6848\u4f8b1: \u7814\u53d1\u4eba\u5458\u4e3a\u63d0\u9ad8\u7cfb\u7edf\u6548\u7387, \u5c06 update \u65b9\u6cd5\u4fee\u6539\u4e3a patch \u7814\u53d1\u4eba\u5458\u672c\u5730\u975e\u5b89\u5168\u6d4b\u8bd5\u73af\u5883\u6d4b\u8bd5\u901a\u8fc7 \u4e0a\u751f\u4ea7, \u53d1\u73b0\u4e0d work \u539f\u56e0: \u5fd8\u8bb0\u66f4\u65b0 rolebinding, \u5bf9\u5e94\u7684 serviceaccount \u6ca1\u6709 patch \u6743\u9650 \u6848\u4f8b2: \u7814\u53d1\u4eba\u5458\u521b\u5efa CRD, \u5e76\u9488\u5bf9\u8be5 CRD \u7f16\u7a0b \u4e0a\u751f\u4ea7\u540e\u4e0d\u5de5\u4f5c \u539f\u56e0, \u8be5 CRD \u672a\u6388\u6743, \u5bf9\u5e94\u7684\u7ec4\u4ef6 get \u4e0d\u5230\u5bf9\u5e94\u7684 CRD \u8d44\u6e90","title":"\u8fd0\u8425\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u7684\u9677\u9631"},{"location":"4.kube-api-server/3.%E5%87%86%E5%85%A5/","text":"\u51c6\u5165\u63a7\u5236 \u914d\u989d\u7ba1\u7406 \u539f\u56e0\uff1a\u8d44\u6e90\u6709\u9650\uff0c\u5982\u4f55\u9650\u5b9a\u67d0\u4e2a\u7528\u6237\u6709\u591a\u5c11\u8d44\u6e90\uff1f \u65b9\u6848 \u9884\u5b9a\u4e49\u6bcf\u4e2a Namespace \u7684 ResourceQuota\uff0c\u5e76\u628a spec \u4fdd\u5b58\u4e3a configmap \u7528\u6237\u53ef\u4ee5\u521b\u5efa\u591a\u5c11\u4e2a Pod BestEffortPod QoSPod \u7528\u6237\u53ef\u4ee5\u521b\u5efa\u591a\u5c11\u4e2a service \u7528\u6237\u53ef\u4ee5\u521b\u5efa\u591a\u5c11\u4e2a ingress \u7528\u6237\u53ef\u4ee5\u521b\u5efa\u591a\u5c11\u4e2a service VIP \u521b\u5efa ResourceQuota Controller \u76d1\u63a7 namespace \u521b\u5efa\u4e8b\u4ef6\uff0c\u5f53 namespace \u521b\u5efa\u65f6\uff0c\u5728\u8be5 namespace \u521b\u5efa\u5bf9\u5e94\u7684 ResourceQuota \u5bf9\u8c61 apiserver \u4e2d\u5f00\u542f ResourceQuota \u7684 admission plugin \u4e3a\u8d44\u6e90\u589e\u52a0\u81ea\u5b9a\u4e49\u5c5e\u6027 \u4f5c\u4e3a\u591a\u79df\u6237\u96c6\u7fa4\u65b9\u6848\u4e2d\u7684\u4e00\u73af, \u6211\u4eec\u9700\u8981\u5728 namespace \u7684\u51c6\u5165\u63a7\u5236\u4e2d, \u83b7\u53d6\u7528\u6237\u4fe1\u606f, \u5e76\u5c06\u7528\u6237\u4fe1\u606f\u66f4\u65b0\u7684 namespace \u7684 annotation \u53ea\u6709\u5f53 namespace \u4e2d\u6709\u6709\u6548\u7528\u6237\u4fe1\u606f\u65f6, \u6211\u4eec\u624d\u53ef\u4ee5\u5728 namespace \u521b\u5efa\u65f6, \u81ea\u52a8\u7ed1\u5b9a\u7528\u6237\u6743\u9650, namespace \u624d\u53ef\u7528. \u51c6\u5165\u63a7\u5236(Admission Control)\u5728\u6388\u6743\u540e\u5bf9\u8bf7\u6c42\u505a\u8fdb\u4e00\u6b65\u7684\u9a8c\u8bc1\u6216\u6dfb\u52a0\u9ed8\u8ba4\u53c2\u6570. \u4e0d\u540c\u4e8e\u6388\u6743\u548c\u8ba4\u8bc1\u53ea\u5173\u5fc3\u8bf7\u6c42\u7684\u7528\u6237\u548c\u64cd\u4f5c, \u51c6\u5165\u63a7\u5236\u8fd8\u5904\u7406\u8bf7\u6c42\u7684\u5185\u5bb9, \u5e76\u4e14\u4ec5\u5bf9\u521b\u5efa\u3001\u66f4\u65b0\u3001\u5220\u9664\u6216\u8fde\u63a5(\u5982\u4ee3\u7406)\u7b49\u6709\u6548, \u800c\u5bf9\u8bfb\u64cd\u4f5c\u65e0\u6548. \u51c6\u5165\u63a7\u5236\u652f\u6301\u540c\u65f6\u5f00\u542f\u591a\u4e2a\u63d2\u4ef6, \u5b83\u4eec\u4f9d\u6b21\u8c03\u7528, \u53ea\u6709\u5168\u90e8\u63d2\u4ef6\u90fd\u901a\u8fc7\u7684\u8bf7\u6c42\u624d\u53ef\u4ee5\u653e\u8fc7\u8fdb\u5165\u7cfb\u7edf. \u51c6\u5165\u63a7\u5236\u63d2\u4ef6 AlwaysAdmit : \u63a5\u53d7\u6240\u6709\u8bf7\u6c42. AlwaysPullImages : \u603b\u662f\u62c9\u53d6\u6700\u65b0\u955c\u50cf. \u5728\u591a\u79df\u6237\u573a\u666f\u4e0b\u975e\u5e38\u6709\u7528. DenyEscalatingExec : \u7981\u6b62\u7279\u6743\u5bb9\u5668\u7684 exec \u548c attach \u64cd\u4f5c. ImagePolicyWebhook : \u901a\u8fc7 webhook \u51b3\u5b9a image \u7b56\u7565, \u9700\u8981\u540c\u65f6\u914d\u7f6e --admission-control-config-file ServiceAccount: \u81ea\u52a8\u521b\u5efa\u9ed8\u8ba4 ServiceAccount, \u5e76\u786e\u4fdd Pod \u5f15\u7528\u7684 ServiceAccount \u5df2\u7ecf\u5b58\u5728 SecurityContextDeny: \u62d2\u7edd\u5305\u542b\u975e\u6cd5 SecurityContext \u914d\u7f6e\u7684\u5bb9\u5668 ResourceQuota: \u9650\u5236 Pod \u7684\u8bf7\u6c42\u4e0d\u4f1a\u8d85\u8fc7\u914d\u989d, \u9700\u8981\u5728 namespace \u4e2d\u521b\u5efa\u4e00\u4e2a ResourceQuota \u5bf9\u8c61 LimitRanger: \u4e3a Pod \u8bbe\u7f6e\u9ed8\u8ba4\u8d44\u6e90\u8bf7\u6c42\u548c\u9650\u5236, \u9700\u8981\u5728 namespace \u4e2d\u521b\u5efa\u4e00\u4e2a LimitRange \u5bf9\u8c61 InitialResources: \u6839\u636e\u955c\u50cf\u7684\u5386\u53f2\u4f7f\u7528\u8bb0\u5f55, \u4e3a\u5bb9\u5668\u8bbe\u7f6e\u9ed8\u8ba4\u8d44\u6e90\u8bf7\u6c42\u548c\u9650\u5236 NamespaceLifecycle: \u786e\u4fdd\u5904\u4e8e termination \u72b6\u6001\u7684 namespace \u4e0d\u518d\u63a5\u6536\u65b0\u7684\u5bf9\u8c61\u521b\u5efa\u8bf7\u6c42, \u5e76\u62d2\u7edd\u8bf7\u6c42\u4e0d\u5b58\u5728\u7684 namespace DefaultStorageClass: \u4e3a PVC \u8bbe\u7f6e\u9ed8\u8ba4 StorageClass DefaultTolerationSeconds: \u8bbe\u7f6e Pod \u7684\u9ed8\u8ba4 forgiveness toleration \u4e3a 5 \u5206\u949f PodSecurityPolicy: \u4f7f\u7528 Pod Security Policies\u65f6\u5fc5\u987b\u5f00\u542f NodeRestriction: \u9650\u5236 kubelet \u4ec5\u53ef\u8bbf\u95ee node \u3001endpoint \u3001pod \u3001service \u4ee5\u53ca secret\u3001configmap\u3001PV \u548c PVC \u7b49\u76f8\u5173\u7684\u8d44\u6e90 \u51c6\u5165\u63a7\u5236\u63d2\u4ef6\u7684\u5f00\u53d1 \u51c6\u5165\u63a7\u5236\u63d2\u4ef6 \u9664\u9ed8\u8ba4\u7684\u51c6\u5165\u63a7\u5236\u63d2\u4ef6\u4ee5\u5916, Kubernetes \u9884\u7559\u4e86\u51c6\u5165\u63a7\u5236\u63d2\u4ef6\u7684\u6269\u5c55\u70b9, \u7528\u6237\u53ef\u81ea\u5b9a\u4e49\u51c6\u5165\u63a7\u5236 \u63d2\u4ef6\u5b9e\u73b0\u81ea\u5b9a\u4e49\u51c6\u5165\u529f\u80fd MutatingWebhookConfiguration: \u53d8\u5f62\u63d2\u4ef6, \u652f\u6301\u5bf9\u51c6\u5165\u5bf9\u8c61\u7684\u4fee\u6539 ValidatingWebhookConfiguration: \u6821\u9a8c\u63d2\u4ef6, \u53ea\u80fd\u5bf9\u51c6\u5165\u5bf9\u8c61\u5408\u6cd5\u6027\u8fdb\u884c\u6821\u9a8c, \u4e0d\u80fd\u4fee\u6539 \u51c6\u5165\u63a7\u5236 \u4e3a\u8d44\u6e90\u589e\u52a0\u81ea\u5b9a\u4e49\u5c5e\u6027 \u4f5c\u4e3a\u591a\u79df\u6237\u96c6\u7fa4\u65b9\u6848\u4e2d\u7684\u4e00\u73af, \u6211\u4eec\u9700\u8981\u5728 namespace \u7684\u51c6\u5165\u63a7\u5236\u4e2d, \u83b7\u53d6\u7528\u6237\u4fe1\u606f, \u5e76\u5c06\u7528\u6237\u4fe1\u606f\u66f4\u65b0\u5230 namespace \u7684 annotation \u53ea\u6709\u5f53 namespace \u4e2d\u6709\u6709\u6548\u7528\u6237\u4fe1\u606f\u65f6, \u6211\u4eec\u624d\u53ef\u4ee5\u5728 namespace \u521b\u5efa\u65f6, \u81ea\u52a8\u7ed1\u5b9a\u7528\u6237\u6743\u9650, namespace \u624d\u53ef\u7528. # {{if eq .k8snode_validating \"enabled\"}} apiVersion: admissionregistration.k8s.io/v1beta1 kind: MutatingWebhookConfiguration metadata : name: ns-mutating .webhook .k8s .io webhooks : - clientConfig : caBundle : {{ .serverca_base64}} url:https://admission.local.tess.io/apis/admission.k8s.io/v1alpha1/ns-mutating failurePolicy : Fail name: ns-mutating.webhook.k8s.io namespaceSelector: {} rules: - apiGroups: - \"\" apiVersions : - '*' operations: - CREATE resources : - nodes sideEffects : Unknown # {{end}} \u914d\u989d\u7ba1\u7406 \u539f\u56e0: \u8d44\u6e90\u6709\u9650, \u5982\u4f55\u9650\u5b9a\u67d0\u4e2a\u7528\u6237\u6709\u591a\u5c11\u8d44\u6e90\uff1f \u65b9\u6848: \u9884\u5b9a\u4e49\u6bcf\u4e2a Namespace \u7684 ResourceQuota, \u5e76\u628a spec \u4fdd\u5b58\u4e3a configmap \u7528\u6237\u53ef\u4ee5\u521b\u5efa\u591a\u5c11\u4e2a Pod BestEffortPod QoSPod \u7528\u6237\u53ef\u4ee5\u521b\u5efa\u591a\u5c11\u4e2a service \u7528\u6237\u53ef\u4ee5\u521b\u5efa\u591a\u5c11\u4e2a ingress \u7528\u6237\u53ef\u4ee5\u521b\u5efa\u591a\u5c11\u4e2a service VIP \u521b\u5efa ResourceQuota Controller \u76d1\u63a7 namespace \u521b\u5efa\u4e8b\u4ef6, \u5f53 namespace \u521b\u5efa\u65f6, \u5728\u8be5 namespace \u521b\u5efa\u5bf9\u5e94\u7684 ResourceQuota \u5bf9\u8c61 apiserver \u4e2d\u5f00\u542f ResourceQuota \u7684 admission plugin","title":"\u51c6\u5165"},{"location":"4.kube-api-server/3.%E5%87%86%E5%85%A5/#_1","text":"\u914d\u989d\u7ba1\u7406 \u539f\u56e0\uff1a\u8d44\u6e90\u6709\u9650\uff0c\u5982\u4f55\u9650\u5b9a\u67d0\u4e2a\u7528\u6237\u6709\u591a\u5c11\u8d44\u6e90\uff1f \u65b9\u6848 \u9884\u5b9a\u4e49\u6bcf\u4e2a Namespace \u7684 ResourceQuota\uff0c\u5e76\u628a spec \u4fdd\u5b58\u4e3a configmap \u7528\u6237\u53ef\u4ee5\u521b\u5efa\u591a\u5c11\u4e2a Pod BestEffortPod QoSPod \u7528\u6237\u53ef\u4ee5\u521b\u5efa\u591a\u5c11\u4e2a service \u7528\u6237\u53ef\u4ee5\u521b\u5efa\u591a\u5c11\u4e2a ingress \u7528\u6237\u53ef\u4ee5\u521b\u5efa\u591a\u5c11\u4e2a service VIP \u521b\u5efa ResourceQuota Controller \u76d1\u63a7 namespace \u521b\u5efa\u4e8b\u4ef6\uff0c\u5f53 namespace \u521b\u5efa\u65f6\uff0c\u5728\u8be5 namespace \u521b\u5efa\u5bf9\u5e94\u7684 ResourceQuota \u5bf9\u8c61 apiserver \u4e2d\u5f00\u542f ResourceQuota \u7684 admission plugin \u4e3a\u8d44\u6e90\u589e\u52a0\u81ea\u5b9a\u4e49\u5c5e\u6027 \u4f5c\u4e3a\u591a\u79df\u6237\u96c6\u7fa4\u65b9\u6848\u4e2d\u7684\u4e00\u73af, \u6211\u4eec\u9700\u8981\u5728 namespace \u7684\u51c6\u5165\u63a7\u5236\u4e2d, \u83b7\u53d6\u7528\u6237\u4fe1\u606f, \u5e76\u5c06\u7528\u6237\u4fe1\u606f\u66f4\u65b0\u7684 namespace \u7684 annotation \u53ea\u6709\u5f53 namespace \u4e2d\u6709\u6709\u6548\u7528\u6237\u4fe1\u606f\u65f6, \u6211\u4eec\u624d\u53ef\u4ee5\u5728 namespace \u521b\u5efa\u65f6, \u81ea\u52a8\u7ed1\u5b9a\u7528\u6237\u6743\u9650, namespace \u624d\u53ef\u7528. \u51c6\u5165\u63a7\u5236(Admission Control)\u5728\u6388\u6743\u540e\u5bf9\u8bf7\u6c42\u505a\u8fdb\u4e00\u6b65\u7684\u9a8c\u8bc1\u6216\u6dfb\u52a0\u9ed8\u8ba4\u53c2\u6570. \u4e0d\u540c\u4e8e\u6388\u6743\u548c\u8ba4\u8bc1\u53ea\u5173\u5fc3\u8bf7\u6c42\u7684\u7528\u6237\u548c\u64cd\u4f5c, \u51c6\u5165\u63a7\u5236\u8fd8\u5904\u7406\u8bf7\u6c42\u7684\u5185\u5bb9, \u5e76\u4e14\u4ec5\u5bf9\u521b\u5efa\u3001\u66f4\u65b0\u3001\u5220\u9664\u6216\u8fde\u63a5(\u5982\u4ee3\u7406)\u7b49\u6709\u6548, \u800c\u5bf9\u8bfb\u64cd\u4f5c\u65e0\u6548. \u51c6\u5165\u63a7\u5236\u652f\u6301\u540c\u65f6\u5f00\u542f\u591a\u4e2a\u63d2\u4ef6, \u5b83\u4eec\u4f9d\u6b21\u8c03\u7528, \u53ea\u6709\u5168\u90e8\u63d2\u4ef6\u90fd\u901a\u8fc7\u7684\u8bf7\u6c42\u624d\u53ef\u4ee5\u653e\u8fc7\u8fdb\u5165\u7cfb\u7edf.","title":"\u51c6\u5165\u63a7\u5236"},{"location":"4.kube-api-server/3.%E5%87%86%E5%85%A5/#_2","text":"AlwaysAdmit : \u63a5\u53d7\u6240\u6709\u8bf7\u6c42. AlwaysPullImages : \u603b\u662f\u62c9\u53d6\u6700\u65b0\u955c\u50cf. \u5728\u591a\u79df\u6237\u573a\u666f\u4e0b\u975e\u5e38\u6709\u7528. DenyEscalatingExec : \u7981\u6b62\u7279\u6743\u5bb9\u5668\u7684 exec \u548c attach \u64cd\u4f5c. ImagePolicyWebhook : \u901a\u8fc7 webhook \u51b3\u5b9a image \u7b56\u7565, \u9700\u8981\u540c\u65f6\u914d\u7f6e --admission-control-config-file ServiceAccount: \u81ea\u52a8\u521b\u5efa\u9ed8\u8ba4 ServiceAccount, \u5e76\u786e\u4fdd Pod \u5f15\u7528\u7684 ServiceAccount \u5df2\u7ecf\u5b58\u5728 SecurityContextDeny: \u62d2\u7edd\u5305\u542b\u975e\u6cd5 SecurityContext \u914d\u7f6e\u7684\u5bb9\u5668 ResourceQuota: \u9650\u5236 Pod \u7684\u8bf7\u6c42\u4e0d\u4f1a\u8d85\u8fc7\u914d\u989d, \u9700\u8981\u5728 namespace \u4e2d\u521b\u5efa\u4e00\u4e2a ResourceQuota \u5bf9\u8c61 LimitRanger: \u4e3a Pod \u8bbe\u7f6e\u9ed8\u8ba4\u8d44\u6e90\u8bf7\u6c42\u548c\u9650\u5236, \u9700\u8981\u5728 namespace \u4e2d\u521b\u5efa\u4e00\u4e2a LimitRange \u5bf9\u8c61 InitialResources: \u6839\u636e\u955c\u50cf\u7684\u5386\u53f2\u4f7f\u7528\u8bb0\u5f55, \u4e3a\u5bb9\u5668\u8bbe\u7f6e\u9ed8\u8ba4\u8d44\u6e90\u8bf7\u6c42\u548c\u9650\u5236 NamespaceLifecycle: \u786e\u4fdd\u5904\u4e8e termination \u72b6\u6001\u7684 namespace \u4e0d\u518d\u63a5\u6536\u65b0\u7684\u5bf9\u8c61\u521b\u5efa\u8bf7\u6c42, \u5e76\u62d2\u7edd\u8bf7\u6c42\u4e0d\u5b58\u5728\u7684 namespace DefaultStorageClass: \u4e3a PVC \u8bbe\u7f6e\u9ed8\u8ba4 StorageClass DefaultTolerationSeconds: \u8bbe\u7f6e Pod \u7684\u9ed8\u8ba4 forgiveness toleration \u4e3a 5 \u5206\u949f PodSecurityPolicy: \u4f7f\u7528 Pod Security Policies\u65f6\u5fc5\u987b\u5f00\u542f NodeRestriction: \u9650\u5236 kubelet \u4ec5\u53ef\u8bbf\u95ee node \u3001endpoint \u3001pod \u3001service \u4ee5\u53ca secret\u3001configmap\u3001PV \u548c PVC \u7b49\u76f8\u5173\u7684\u8d44\u6e90","title":"\u51c6\u5165\u63a7\u5236\u63d2\u4ef6"},{"location":"4.kube-api-server/3.%E5%87%86%E5%85%A5/#_3","text":"","title":"\u51c6\u5165\u63a7\u5236\u63d2\u4ef6\u7684\u5f00\u53d1"},{"location":"4.kube-api-server/3.%E5%87%86%E5%85%A5/#_4","text":"\u9664\u9ed8\u8ba4\u7684\u51c6\u5165\u63a7\u5236\u63d2\u4ef6\u4ee5\u5916, Kubernetes \u9884\u7559\u4e86\u51c6\u5165\u63a7\u5236\u63d2\u4ef6\u7684\u6269\u5c55\u70b9, \u7528\u6237\u53ef\u81ea\u5b9a\u4e49\u51c6\u5165\u63a7\u5236 \u63d2\u4ef6\u5b9e\u73b0\u81ea\u5b9a\u4e49\u51c6\u5165\u529f\u80fd MutatingWebhookConfiguration: \u53d8\u5f62\u63d2\u4ef6, \u652f\u6301\u5bf9\u51c6\u5165\u5bf9\u8c61\u7684\u4fee\u6539 ValidatingWebhookConfiguration: \u6821\u9a8c\u63d2\u4ef6, \u53ea\u80fd\u5bf9\u51c6\u5165\u5bf9\u8c61\u5408\u6cd5\u6027\u8fdb\u884c\u6821\u9a8c, \u4e0d\u80fd\u4fee\u6539","title":"\u51c6\u5165\u63a7\u5236\u63d2\u4ef6"},{"location":"4.kube-api-server/3.%E5%87%86%E5%85%A5/#_5","text":"\u4e3a\u8d44\u6e90\u589e\u52a0\u81ea\u5b9a\u4e49\u5c5e\u6027 \u4f5c\u4e3a\u591a\u79df\u6237\u96c6\u7fa4\u65b9\u6848\u4e2d\u7684\u4e00\u73af, \u6211\u4eec\u9700\u8981\u5728 namespace \u7684\u51c6\u5165\u63a7\u5236\u4e2d, \u83b7\u53d6\u7528\u6237\u4fe1\u606f, \u5e76\u5c06\u7528\u6237\u4fe1\u606f\u66f4\u65b0\u5230 namespace \u7684 annotation \u53ea\u6709\u5f53 namespace \u4e2d\u6709\u6709\u6548\u7528\u6237\u4fe1\u606f\u65f6, \u6211\u4eec\u624d\u53ef\u4ee5\u5728 namespace \u521b\u5efa\u65f6, \u81ea\u52a8\u7ed1\u5b9a\u7528\u6237\u6743\u9650, namespace \u624d\u53ef\u7528. # {{if eq .k8snode_validating \"enabled\"}} apiVersion: admissionregistration.k8s.io/v1beta1 kind: MutatingWebhookConfiguration metadata : name: ns-mutating .webhook .k8s .io webhooks : - clientConfig : caBundle : {{ .serverca_base64}} url:https://admission.local.tess.io/apis/admission.k8s.io/v1alpha1/ns-mutating failurePolicy : Fail name: ns-mutating.webhook.k8s.io namespaceSelector: {} rules: - apiGroups: - \"\" apiVersions : - '*' operations: - CREATE resources : - nodes sideEffects : Unknown # {{end}} \u914d\u989d\u7ba1\u7406 \u539f\u56e0: \u8d44\u6e90\u6709\u9650, \u5982\u4f55\u9650\u5b9a\u67d0\u4e2a\u7528\u6237\u6709\u591a\u5c11\u8d44\u6e90\uff1f \u65b9\u6848: \u9884\u5b9a\u4e49\u6bcf\u4e2a Namespace \u7684 ResourceQuota, \u5e76\u628a spec \u4fdd\u5b58\u4e3a configmap \u7528\u6237\u53ef\u4ee5\u521b\u5efa\u591a\u5c11\u4e2a Pod BestEffortPod QoSPod \u7528\u6237\u53ef\u4ee5\u521b\u5efa\u591a\u5c11\u4e2a service \u7528\u6237\u53ef\u4ee5\u521b\u5efa\u591a\u5c11\u4e2a ingress \u7528\u6237\u53ef\u4ee5\u521b\u5efa\u591a\u5c11\u4e2a service VIP \u521b\u5efa ResourceQuota Controller \u76d1\u63a7 namespace \u521b\u5efa\u4e8b\u4ef6, \u5f53 namespace \u521b\u5efa\u65f6, \u5728\u8be5 namespace \u521b\u5efa\u5bf9\u5e94\u7684 ResourceQuota \u5bf9\u8c61 apiserver \u4e2d\u5f00\u542f ResourceQuota \u7684 admission plugin","title":"\u51c6\u5165\u63a7\u5236"},{"location":"4.kube-api-server/4.%E9%99%90%E6%B5%81/","text":"\u8ba1\u6570\u5668\u56fa\u5b9a\u7a97\u53e3\u7b97\u6cd5 \u539f\u7406\u5c31\u662f\u5bf9\u4e00\u6bb5\u56fa\u5b9a\u65f6\u95f4\u7a97\u53e3\u5185\u7684\u8bf7\u6c42\u8fdb\u884c\u8ba1\u6570, \u5982\u679c\u8bf7\u6c42\u6570\u8d85\u8fc7\u4e86\u9608\u503c, \u5219\u820d\u5f03\u8be5\u8bf7\u6c42; \u5982\u679c\u6ca1\u6709\u8fbe\u5230\u8bbe\u5b9a\u7684\u9608\u503c, \u5219\u63a5\u53d7\u8be5\u8bf7\u6c42, \u4e14\u8ba1\u6570\u52a01. \u5f53\u65f6\u95f4\u7a97\u53e3\u7ed3\u675f\u65f6, \u91cd\u7f6e\u8ba1\u6570\u5668\u4e3a0. \u8ba1\u6570\u5668\u6ed1\u52a8\u7a97\u53e3\u7b97\u6cd5 \u5728\u56fa\u5b9a\u7a97\u53e3\u7684\u57fa\u7840\u4e0a, \u5c06\u4e00\u4e2a\u8ba1\u65f6\u7a97\u53e3\u5206\u6210\u4e86\u82e5\u5e72\u4e2a\u5c0f\u7a97\u53e3, \u7136\u540e\u6bcf\u4e2a\u5c0f\u7a97\u53e3\u7ef4\u62a4\u4e00\u4e2a\u72ec\u7acb\u7684\u8ba1\u6570\u5668. \u5f53\u8bf7\u6c42\u7684\u65f6\u95f4\u5927\u4e8e\u5f53\u524d\u7a97\u53e3\u7684\u6700\u5927\u65f6\u95f4\u65f6, \u5219\u5c06\u8ba1\u65f6\u7a97\u53e3\u5411\u524d\u5e73\u79fb\u4e00\u4e2a\u5c0f\u7a97\u53e3. \u5e73\u79fb\u65f6, \u5c06\u7b2c\u4e00\u4e2a\u5c0f\u7a97\u53e3\u7684\u6570\u636e\u4e22\u5f03, \u7136\u540e\u5c06\u7b2c\u4e8c\u4e2a\u5c0f\u7a97\u53e3\u8bbe\u7f6e\u4e3a\u7b2c\u4e00\u4e2a\u5c0f\u7a97\u53e3, \u540c\u65f6\u5728\u6700\u540e\u9762\u65b0\u589e\u4e00\u4e2a\u5c0f\u7a97\u53e3, \u5c06\u65b0\u7684\u8bf7\u6c42\u653e\u5728\u65b0\u589e\u7684\u5c0f\u7a97\u53e3\u4e2d. \u540c\u65f6\u8981\u4fdd\u8bc1\u6574\u4e2a\u7a97\u53e3\u4e2d\u6240\u6709\u5c0f\u7a97\u53e3\u7684\u8bf7\u6c42\u6570\u76ee\u4e4b\u540e\u4e0d\u80fd\u8d85\u8fc7\u8bbe\u5b9a\u7684\u9608\u503c. \u6f0f\u6597\u7b97\u6cd5 \u6f0f\u6597\u7b97\u6cd5\u7684\u539f\u7406\u4e5f\u5f88\u5bb9\u6613\u7406\u89e3. \u8bf7\u6c42\u6765\u4e86\u4e4b\u540e\u4f1a\u9996\u5148\u8fdb\u5230\u6f0f\u6597\u91cc, \u7136\u540e\u6f0f\u6597\u4ee5\u6052\u5b9a\u7684\u901f\u7387\u5c06\u8bf7\u6c42\u6d41\u51fa\u8fdb\u884c\u5904\u7406, \u4ece\u800c\u8d77\u5230\u5e73\u6ed1\u6d41\u91cf\u7684\u4f5c\u7528. \u5f53\u8bf7\u6c42\u7684\u6d41\u91cf\u8fc7\u5927\u65f6, \u6f0f\u6597\u8fbe\u5230\u6700\u5927\u5bb9\u91cf\u65f6\u4f1a\u6ea2\u51fa, \u6b64\u65f6\u8bf7\u6c42\u88ab\u4e22\u5f03. \u5728\u7cfb\u7edf\u770b\u6765, \u8bf7\u6c42\u6c38\u8fdc\u662f\u4ee5\u5e73\u6ed1\u7684\u4f20\u8f93\u901f\u7387\u8fc7\u6765, \u4ece\u800c\u8d77\u5230\u4e86\u4fdd\u62a4\u7cfb\u7edf\u7684\u4f5c\u7528. \u4ee4\u724c\u6876\u7b97\u6cd5 \u4ee4\u724c\u6876\u7b97\u6cd5\u662f\u5bf9\u6f0f\u6597\u7b97\u6cd5\u7684\u4e00\u79cd\u6539\u8fdb, \u9664\u4e86\u80fd\u591f\u8d77\u5230\u9650\u6d41\u7684\u4f5c\u7528\u5916, \u8fd8\u5141\u8bb8\u4e00\u5b9a\u7a0b\u5ea6\u7684\u6d41\u91cf\u7a81\u53d1. \u5728\u4ee4\u724c\u6876\u7b97\u6cd5\u4e2d, \u5b58\u5728\u4e00\u4e2a\u4ee4\u724c\u6876, \u7b97\u6cd5\u4e2d\u5b58\u5728\u4e00\u79cd\u673a\u5236\u4ee5\u6052\u5b9a\u7684\u901f\u7387\u5411\u4ee4\u724c\u6876\u4e2d\u653e\u5165\u4ee4\u724c. \u4ee4\u724c\u6876\u4e5f\u6709\u4e00\u5b9a\u7684\u5bb9\u91cf, \u5982\u679c\u6ee1\u4e86\u4ee4\u724c\u5c31\u65e0\u6cd5\u653e\u8fdb\u53bb\u4e86. \u5f53\u8bf7\u6c42\u6765\u65f6, \u4f1a\u9996\u5148\u5230\u4ee4\u724c\u6876\u4e2d\u53bb\u62ff\u4ee4\u724c, \u5982\u679c\u62ff\u5230\u4e86\u4ee4\u724c, \u5219\u8be5\u8bf7\u6c42\u4f1a\u88ab\u5904\u7406, \u5e76\u6d88\u8017\u6389\u62ff\u5230\u7684\u4ee4\u724c; \u5982\u679c\u4ee4\u724c\u6876\u4e3a\u7a7a, \u5219\u8be5\u8bf7\u6c42\u4f1a\u88ab\u4e22\u5f03. APIServer \u4e2d\u7684\u9650\u6d41 max-requests-inflight: \u5728\u7ed9\u5b9a\u65f6\u95f4\u5185\u7684\u6700\u5927 non-mutating \u8bf7\u6c42\u6570 max-mutating-requests-inflight: \u5728\u7ed9\u5b9a\u65f6\u95f4\u5185\u7684\u6700\u5927 mutating \u8bf7\u6c42\u6570, \u8c03\u6574 apiserver \u7684\u6d41\u63a7 qos \u4ee3\u7801: staging/src/k8s.io/apiserver/pkg/server/filters/maxinflight.go:WithMaxInFlightLimit() \u4f20\u7edf\u9650\u6d41\u65b9\u6cd5\u7684\u5c40\u9650\u6027 \u7c92\u5ea6\u7c97 \u65e0\u6cd5\u4e3a\u4e0d\u540c\u7528\u6237, \u4e0d\u540c\u573a\u666f\u8bbe\u7f6e\u4e0d\u901a\u7684\u9650\u6d41 \u5355\u961f\u5217 \u5171\u4eab\u9650\u6d41\u7a97\u53e3/\u6876, \u4e00\u4e2a\u574f\u7528\u6237\u53ef\u80fd\u4f1a\u5c06\u6574\u4e2a\u7cfb\u7edf\u5835\u585e, \u5176\u4ed6\u6b63\u5e38\u7528\u6237\u7684\u8bf7\u6c42\u65e0\u6cd5\u88ab\u53ca\u65f6\u5904\u7406 \u4e0d\u516c\u5e73 \u6b63\u5e38\u7528\u6237\u7684\u8bf7\u6c42\u4f1a\u88ab\u6392\u5230\u961f\u5c3e, \u65e0\u6cd5\u53ca\u65f6\u5904\u7406\u800c\u997f\u6b7b \u65e0\u4f18\u5148\u7ea7 \u91cd\u8981\u7684\u7cfb\u7edf\u6307\u4ee4\u4e00\u5e76\u88ab\u9650\u6d41, \u7cfb\u7edf\u6545\u969c\u96be\u4ee5\u6062\u590d API Priority and Fairness APF \u4ee5\u66f4\u7ec6\u7c92\u5ea6\u7684\u65b9\u5f0f\u5bf9\u8bf7\u6c42\u8fdb\u884c\u5206\u7c7b\u548c\u9694\u79bb. \u5b83\u8fd8\u5f15\u5165\u4e86\u7a7a\u95f4\u6709\u9650\u7684\u6392\u961f\u673a\u5236, \u56e0\u6b64\u5728\u975e\u5e38\u77ed\u6682\u7684\u7a81\u53d1\u60c5\u51b5\u4e0b, API \u670d\u52a1\u5668\u4e0d\u4f1a\u62d2\u7edd\u4efb\u4f55\u8bf7\u6c42. \u901a\u8fc7\u4f7f\u7528\u516c\u5e73\u6392\u961f\u6280\u672f\u4ece\u961f\u5217\u4e2d\u5206\u53d1\u8bf7\u6c42, \u8fd9\u6837, \u4e00\u4e2a\u884c\u4e3a\u4e0d\u4f73\u7684\u63a7\u5236\u5668\u5c31\u4e0d\u4f1a\u997f\u6b7b\u5176\u4ed6\u63a7\u5236\u5668(\u5373\u4f7f\u4f18\u5148\u7ea7\u76f8\u540c). APF\u7684\u6838\u5fc3 \u591a\u7b49\u7ea7 \u591a\u961f\u5217 APF \u7684\u5b9e\u73b0\u4f9d\u8d56\u4e24\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u8d44\u6e90 FlowSchema, PriorityLevelConfiguration APF \u5bf9\u8bf7\u6c42\u8fdb\u884c\u66f4\u7ec6\u7c92\u5ea6\u7684\u5206\u7c7b, \u6bcf\u4e00\u4e2a\u8bf7\u6c42\u5206\u7c7b\u5bf9\u5e94\u4e00\u4e2a FlowSchema (FS) FS \u5185\u7684\u8bf7\u6c42\u53c8\u4f1a\u6839\u636e distinguisher \u8fdb\u4e00\u6b65\u5212\u5206\u4e3a\u4e0d\u540c\u7684 Flow. FS \u4f1a\u8bbe\u7f6e\u4e00\u4e2a\u4f18\u5148\u7ea7 (Priority Level, PL), \u4e0d\u540c\u4f18\u5148\u7ea7\u7684\u5e76\u53d1\u8d44\u6e90\u662f\u9694\u79bb\u7684. \u6240\u4ee5\u4e0d\u540c\u4f18\u5148\u7ea7\u7684\u8d44\u6e90\u4e0d\u4f1a\u76f8\u4e92\u6392\u6324. \u7279\u5b9a\u4f18\u5148\u7ea7\u7684\u8bf7\u6c42\u53ef\u4ee5\u88ab\u9ad8\u4f18\u5904\u7406. \u4e00\u4e2a PL \u53ef\u4ee5\u5bf9\u5e94\u591a\u4e2a FS, PL \u4e2d\u7ef4\u62a4\u4e86\u4e00\u4e2a QueueSet, \u7528\u4e8e\u7f13\u5b58\u4e0d\u80fd\u53ca\u65f6\u5904\u7406\u7684\u8bf7\u6c42, \u8bf7\u6c42\u4e0d\u4f1a\u56e0\u4e3a\u8d85\u51fa PL \u7684\u5e76\u53d1\u9650\u5236\u800c\u88ab\u4e22\u5f03. FS \u4e2d\u7684\u6bcf\u4e2a Flow \u901a\u8fc7 shuffle sharding \u7b97\u6cd5\u4ece QueueSet \u9009\u53d6\u7279\u5b9a\u7684 queues \u7f13\u5b58\u8bf7\u6c42. \u6bcf\u6b21\u4ece QueueSet \u4e2d\u53d6\u8bf7\u6c42\u6267\u884c\u65f6, \u4f1a\u5148\u5e94\u7528 fair queuing \u7b97\u6cd5\u4ece QueueSet \u4e2d\u9009\u4e2d\u4e00\u4e2a queue, \u7136\u540e\u4ece\u8fd9\u4e2a queue \u4e2d\u53d6\u51fa oldest \u8bf7\u6c42\u6267\u884c. \u6240\u4ee5\u5373\u4f7f\u662f\u540c\u4e00\u4e2a PL \u5185\u7684\u8bf7\u6c42, \u4e5f\u4e0d\u4f1a\u51fa\u73b0\u4e00\u4e2a Flow \u5185\u7684\u8bf7\u6c42\u4e00\u76f4\u5360\u7528\u8d44\u6e90\u7684\u4e0d\u516c\u5e73\u73b0\u8c61. \u6982\u5ff5 \u4f20\u5165\u7684\u8bf7\u6c42\u901a\u8fc7 FlowSchema \u6309\u7167\u5176\u5c5e\u6027\u5206\u7c7b, \u5e76\u5206\u914d\u4f18\u5148\u7ea7. \u6bcf\u4e2a\u4f18\u5148\u7ea7\u7ef4\u62a4\u81ea\u5b9a\u4e49\u7684\u5e76\u53d1\u9650\u5236, \u52a0\u5f3a\u4e86\u9694\u79bb\u5ea6, \u8fd9\u6837\u4e0d\u540c\u4f18\u5148\u7ea7\u7684\u8bf7\u6c42, \u5c31\u4e0d\u4f1a\u76f8\u4e92\u997f\u6b7b. \u5728\u540c\u4e00\u4e2a\u4f18\u5148\u7ea7\u5185, \u516c\u5e73\u6392\u961f\u7b97\u6cd5\u53ef\u4ee5\u9632\u6b62\u6765\u81ea\u4e0d\u540c flow \u7684\u8bf7\u6c42\u76f8\u4e92\u997f\u6b7b. \u8be5\u7b97\u6cd5\u5c06\u8bf7\u6c42\u6392\u961f, \u901a\u8fc7\u6392\u961f\u673a\u5236, \u9632\u6b62\u5728\u5e73\u5747\u8d1f\u8f7d\u8f83\u4f4e\u65f6, \u901a\u4fe1\u91cf\u7a81\u589e\u800c\u5bfc\u81f4\u8bf7\u6c42\u5931\u8d25. \u4f18\u5148\u7ea7 \u5982\u679c\u672a\u542f\u7528 APF, API \u670d\u52a1\u5668\u4e2d\u7684\u6574\u4f53\u5e76\u53d1\u91cf\u5c06\u53d7\u5230 kube-apiserver \u7684\u53c2\u6570 --max-requests-inflight \u548c --max-mutating-requests-inflight \u7684\u9650\u5236. \u542f\u7528 APF \u540e, \u5c06\u5bf9\u8fd9\u4e9b\u53c2\u6570\u5b9a\u4e49\u7684\u5e76\u53d1\u9650\u5236\u8fdb\u884c\u6c42\u548c, \u7136\u540e\u5c06\u603b\u548c\u5206\u914d\u5230\u4e00\u7ec4\u53ef\u914d\u7f6e\u7684 \u4f18\u5148\u7ea7 \u4e2d. \u6bcf\u4e2a\u4f20\u5165\u7684\u8bf7\u6c42\u90fd\u4f1a\u5206\u914d\u4e00\u4e2a\u4f18\u5148\u7ea7; \u6bcf\u4e2a\u4f18\u5148\u7ea7\u90fd\u6709\u5404\u81ea\u7684\u914d\u7f6e, \u8bbe\u5b9a\u5141\u8bb8\u5206\u53d1\u7684\u5e76\u53d1\u8bf7\u6c42\u6570. \u4f8b\u5982, \u9ed8\u8ba4\u914d\u7f6e\u5305\u62ec\u9488\u5bf9\u9886\u5bfc\u8005\u9009\u4e3e\u8bf7\u6c42\u3001\u5185\u7f6e\u63a7\u5236\u5668\u8bf7\u6c42\u548c Pod \u8bf7\u6c42\u90fd\u5355\u72ec\u8bbe\u7f6e\u4f18\u5148\u7ea7. \u8fd9\u8868\u793a\u5373\u4f7f\u5f02\u5e38\u7684 Pod \u5411 API \u670d\u52a1\u5668\u53d1\u9001\u5927\u91cf\u8bf7\u6c42, \u4e5f\u65e0\u6cd5\u963b\u6b62\u9886\u5bfc\u8005\u9009\u4e3e\u6216\u5185\u7f6e\u63a7\u5236\u5668\u7684\u64cd\u4f5c\u6267\u884c\u6210\u529f. \u6392\u961f \u5373\u4f7f\u5728\u540c\u4e00\u4f18\u5148\u7ea7\u5185, \u4e5f\u53ef\u80fd\u5b58\u5728\u5927\u91cf\u4e0d\u540c\u7684\u6d41\u91cf\u6e90. \u5728\u8fc7\u8f7d\u60c5\u51b5\u4e0b, \u9632\u6b62\u4e00\u4e2a\u8bf7\u6c42\u6d41\u997f\u6b7b\u5176\u4ed6\u6d41\u662f\u975e\u5e38\u6709\u4ef7\u503c\u7684 (\u5c24\u5176\u662f\u5728\u4e00\u4e2a\u8f83\u4e3a\u5e38\u89c1\u7684\u573a\u666f\u4e2d, \u4e00\u4e2a\u6709\u6545\u969c\u7684\u5ba2\u6237\u7aef\u4f1a\u75af\u72c2\u5730\u5411 kube-apiserver \u53d1\u9001\u8bf7\u6c42, \u7406\u60f3\u60c5\u51b5\u4e0b, \u8fd9\u4e2a\u6709\u6545\u969c\u7684\u5ba2\u6237\u7aef\u4e0d\u5e94\u5bf9\u5176\u4ed6\u5ba2\u6237\u7aef\u4ea7\u751f\u592a\u5927\u7684\u5f71\u54cd). \u516c\u5e73\u6392\u961f\u7b97\u6cd5\u5728\u5904\u7406\u5177\u6709\u76f8\u540c\u4f18\u5148\u7ea7\u7684\u8bf7\u6c42\u65f6, \u5b9e\u73b0\u4e86\u4e0a\u8ff0\u573a\u666f. \u6bcf\u4e2a\u8bf7\u6c42\u90fd\u88ab\u5206\u914d\u5230\u67d0\u4e2a\u6d41\u4e2d, \u8be5\u6d41\u7531\u5bf9\u5e94\u7684 FlowSchema \u7684\u540d\u5b57\u52a0\u4e0a\u4e00\u4e2a\u6d41\u533a\u5206\u9879(Flow Distinguisher) \u6765\u6807\u8bc6. \u8fd9\u91cc\u7684\u6d41\u533a\u5206\u9879\u53ef\u4ee5\u662f\u53d1\u51fa\u8bf7\u6c42\u7684\u7528\u6237\u3001\u76ee\u6807\u8d44\u6e90\u7684\u540d\u79f0\u7a7a\u95f4\u6216\u4ec0\u4e48\u90fd\u4e0d\u662f. \u7cfb\u7edf\u5c1d\u8bd5\u4e3a\u4e0d\u540c\u6d41\u4e2d\u5177\u6709\u76f8\u540c\u4f18\u5148\u7ea7\u7684\u8bf7\u6c42\u8d4b\u4e88\u8fd1\u4f3c\u76f8\u7b49\u7684\u6743\u91cd. \u5c06\u8bf7\u6c42\u5212\u5206\u5230\u6d41\u4e2d\u4e4b\u540e, APF \u529f\u80fd\u5c06\u8bf7\u6c42\u5206\u914d\u5230\u961f\u5217\u4e2d. \u5206\u914d\u65f6\u4f7f\u7528\u4e00\u79cd\u79f0\u4e3a\u6df7\u6d17\u5206\u7247(Shuffle-Sharding)\u7684\u6280\u672f. \u8be5\u6280\u672f\u53ef\u4ee5\u76f8\u5bf9\u6709\u6548\u5730\u5229\u7528\u961f\u5217\u9694\u79bb\u4f4e\u5f3a\u5ea6\u6d41\u4e0e\u9ad8\u5f3a\u5ea6\u6d41. \u6392\u961f\u7b97\u6cd5\u7684\u7ec6\u8282\u53ef\u9488\u5bf9\u6bcf\u4e2a\u4f18\u5148\u7b49\u7ea7\u8fdb\u884c\u8c03\u6574, \u5e76\u5141\u8bb8\u7ba1\u7406\u5458\u5728\u5185\u5b58\u5360\u7528\u3001\u516c\u5e73\u6027(\u5f53\u603b\u6d41\u91cf\u8d85\u6807\u65f6, \u5404\u4e2a\u72ec\u7acb\u7684\u6d41\u5c06\u90fd\u4f1a\u53d6\u5f97\u8fdb\u5c55)\u3001\u7a81\u53d1\u6d41\u91cf\u7684\u5bb9\u5fcd\u5ea6\u4ee5\u53ca\u6392\u961f\u5f15\u53d1\u7684\u989d\u5916\u5ef6\u8fdf\u4e4b\u95f4\u8fdb\u884c\u6743\u8861. \u8c41\u514d\u8bf7\u6c42 \u67d0\u4e9b\u7279\u522b\u91cd\u8981\u7684\u8bf7\u6c42\u4e0d\u53d7\u5236\u4e8e\u6b64\u7279\u6027\u65bd\u52a0\u7684\u4efb\u4f55\u9650\u5236. \u8fd9\u4e9b\u8c41\u514d\u53ef\u9632\u6b62\u4e0d\u5f53\u7684\u6d41\u63a7\u914d\u7f6e\u5b8c\u5168\u7981\u7528 API \u670d\u52a1\u5668. \u9ed8\u8ba4\u914d\u7f6e system \u7528\u4e8e system:nodes \u7ec4(\u5373 kubelets) \u7684\u8bf7\u6c42; kubelets \u5fc5\u987b\u80fd\u8fde\u4e0a API \u670d\u52a1\u5668, \u4ee5\u4fbf\u5de5\u4f5c\u8d1f\u8f7d\u80fd\u591f\u8c03\u5ea6\u5230\u5176\u4e0a. leader-election \u7528\u4e8e\u5185\u7f6e\u63a7\u5236\u5668\u7684\u9886\u5bfc\u9009\u4e3e\u7684\u8bf7\u6c42 (\u7279\u522b\u662f\u6765\u81ea kube-system \u540d\u79f0\u7a7a\u95f4\u4e2d system:kube-controller-manager \u548c system:kube-scheduler \u7528\u6237\u548c\u670d\u52a1\u8d26\u53f7, \u9488\u5bf9 endpoints\u3001configmaps \u6216 leases \u7684\u8bf7\u6c42). \u5c06\u8fd9\u4e9b\u8bf7\u6c42\u4e0e\u5176\u4ed6\u6d41\u91cf\u76f8\u9694\u79bb\u975e\u5e38\u91cd\u8981, \u56e0\u4e3a\u9886\u5bfc\u8005\u9009\u4e3e\u5931\u8d25\u4f1a\u5bfc\u81f4\u63a7\u5236\u5668\u53d1\u751f\u6545\u969c\u5e76\u91cd\u65b0\u542f\u52a8, \u8fd9\u53cd\u8fc7\u6765\u4f1a\u5bfc\u81f4\u65b0\u542f\u52a8\u7684\u63a7\u5236\u5668\u5728\u540c\u6b65\u4fe1\u606f\u65f6, \u6d41\u91cf\u5f00\u9500\u66f4\u5927. workload-high \u4f18\u5148\u7ea7\u7528\u4e8e\u5185\u7f6e\u63a7\u5236\u5668\u7684\u8bf7\u6c42. workload-low \u4f18\u5148\u7ea7\u9002\u7528\u4e8e\u6765\u81ea\u4efb\u4f55\u670d\u52a1\u5e10\u6237\u7684\u8bf7\u6c42, \u901a\u5e38\u5305\u62ec\u6765\u81ea Pods \u4e2d\u8fd0\u884c\u7684\u63a7\u5236\u5668\u7684\u6240\u6709\u8bf7\u6c42. global-default \u4f18\u5148\u7ea7\u53ef\u5904\u7406\u6240\u6709\u5176\u4ed6\u6d41\u91cf, \u4f8b\u5982: \u975e\u7279\u6743\u7528\u6237\u8fd0\u884c\u7684\u4ea4\u4e92\u5f0f kubectl \u547d\u4ee4. exempt \u4f18\u5148\u7ea7\u7684\u8bf7\u6c42\u5b8c\u5168\u4e0d\u53d7\u6d41\u63a7\u9650\u5236: \u5b83\u4eec\u603b\u662f\u7acb\u523b\u88ab\u5206\u53d1. \u7279\u6b8a\u7684 exempt FlowSchema \u628a system:masters \u7ec4\u7684\u6240\u6709\u8bf7\u6c42\u90fd\u5f52\u5165\u8be5\u4f18\u5148\u7ea7\u7ec4. catch-all \u4f18\u5148\u7ea7\u4e0e\u7279\u6b8a\u7684 catch-all FlowSchema \u7ed3\u5408\u4f7f\u7528, \u4ee5\u786e\u4fdd\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u5206\u7c7b. \u4e00\u822c\u4e0d\u5e94\u8be5\u4f9d\u8d56\u4e8e catch-all \u7684\u914d\u7f6e, \u800c\u5e94\u9002\u5f53\u5730\u521b\u5efa\u81ea\u5df1\u7684 catch-all FlowSchema \u548c PriorityLevelConfigurations (\u6216\u4f7f\u7528\u9ed8\u8ba4\u5b89\u88c5\u7684 global-default \u914d\u7f6e). \u4e3a\u4e86\u5e2e\u52a9\u6355\u83b7\u90e8\u5206\u8bf7\u6c42\u672a\u5206\u7c7b\u7684\u914d\u7f6e\u9519\u8bef, \u5f3a\u5236\u8981\u6c42 catch-all \u4f18\u5148\u7ea7\u4ec5\u5141\u8bb85\u4e2a\u5e76\u53d1\u4efd\u989d, \u5e76\u4e14\u4e0d\u5bf9\u8bf7\u6c42\u8fdb\u884c\u6392\u961f, \u4f7f\u5f97\u4ec5\u4e0e catch-all FlowSchema \u5339\u914d\u7684\u6d41\u91cf\u88ab\u62d2\u7edd\u7684\u53ef\u80fd\u6027\u66f4\u9ad8, \u5e76\u663e\u793a HTTP 429 \u9519\u8bef. PriorityLevelConfiguration \u4e00\u4e2a PriorityLevelConfiguration \u8868\u793a\u5355\u4e2a\u9694\u79bb\u7c7b\u578b. \u6bcf\u4e2a PriorityLevelConfigurations \u5bf9\u672a\u5b8c\u6210\u7684\u8bf7\u6c42\u6570\u6709\u5404\u81ea\u7684\u9650\u5236, \u5bf9\u6392\u961f\u4e2d\u7684\u8bf7\u6c42\u6570\u4e5f\u6709\u9650\u5236. FlowSchema FlowSchema \u5339\u914d\u4e00\u4e9b\u5165\u7ad9\u8bf7\u6c42, \u5e76\u5c06\u5b83\u4eec\u5206\u914d\u7ed9\u4f18\u5148\u7ea7. \u6bcf\u4e2a\u5165\u7ad9\u8bf7\u6c42\u90fd\u4f1a\u5bf9\u6240\u6709 FlowSchema \u6d4b\u8bd5\u662f\u5426\u5339\u914d, \u9996\u5148\u4ece matchingPrecedence \u6570\u503c\u6700\u4f4e\u7684\u5339\u914d\u5f00\u59cb (\u6211\u4eec\u8ba4\u4e3a\u8fd9\u662f\u903b\u8f91\u4e0a\u5339\u914d\u5ea6\u6700\u9ad8), \u7136\u540e\u4f9d\u6b21\u8fdb\u884c, \u76f4\u5230\u9996\u4e2a\u5339\u914d\u51fa\u73b0 \u8c03\u8bd5 /debug/api_priority_and_fairness/dump_priority_levels \u2014\u2014 \u6240\u6709\u4f18\u5148\u7ea7\u53ca\u5176\u5f53\u524d\u72b6\u6001 \u7684\u5217\u8868 kubectl get --raw /debug/api_priority_and_fairness/dump_priority_levels /debug/api_priority_and_fairness/dump_queues \u2014\u2014 \u6240\u6709\u961f\u5217\u53ca\u5176\u5f53\u524d\u72b6\u6001\u7684\u5217\u8868 kubectl get --raw /debug/api_priority_and_fairness/dump_queues /debug/api_priority_and_fairness/dump_requests \u2014\u2014 \u5f53\u524d\u6b63\u5728\u961f\u5217\u4e2d\u7b49\u5f85\u7684\u6240\u6709\u8bf7\u6c42 \u7684\u5217\u8868 kubectl get --raw /debug/api_priority_and_fairness/dump_requests","title":"\u9650\u6d41"},{"location":"4.kube-api-server/4.%E9%99%90%E6%B5%81/#_1","text":"\u539f\u7406\u5c31\u662f\u5bf9\u4e00\u6bb5\u56fa\u5b9a\u65f6\u95f4\u7a97\u53e3\u5185\u7684\u8bf7\u6c42\u8fdb\u884c\u8ba1\u6570, \u5982\u679c\u8bf7\u6c42\u6570\u8d85\u8fc7\u4e86\u9608\u503c, \u5219\u820d\u5f03\u8be5\u8bf7\u6c42; \u5982\u679c\u6ca1\u6709\u8fbe\u5230\u8bbe\u5b9a\u7684\u9608\u503c, \u5219\u63a5\u53d7\u8be5\u8bf7\u6c42, \u4e14\u8ba1\u6570\u52a01. \u5f53\u65f6\u95f4\u7a97\u53e3\u7ed3\u675f\u65f6, \u91cd\u7f6e\u8ba1\u6570\u5668\u4e3a0.","title":"\u8ba1\u6570\u5668\u56fa\u5b9a\u7a97\u53e3\u7b97\u6cd5"},{"location":"4.kube-api-server/4.%E9%99%90%E6%B5%81/#_2","text":"\u5728\u56fa\u5b9a\u7a97\u53e3\u7684\u57fa\u7840\u4e0a, \u5c06\u4e00\u4e2a\u8ba1\u65f6\u7a97\u53e3\u5206\u6210\u4e86\u82e5\u5e72\u4e2a\u5c0f\u7a97\u53e3, \u7136\u540e\u6bcf\u4e2a\u5c0f\u7a97\u53e3\u7ef4\u62a4\u4e00\u4e2a\u72ec\u7acb\u7684\u8ba1\u6570\u5668. \u5f53\u8bf7\u6c42\u7684\u65f6\u95f4\u5927\u4e8e\u5f53\u524d\u7a97\u53e3\u7684\u6700\u5927\u65f6\u95f4\u65f6, \u5219\u5c06\u8ba1\u65f6\u7a97\u53e3\u5411\u524d\u5e73\u79fb\u4e00\u4e2a\u5c0f\u7a97\u53e3. \u5e73\u79fb\u65f6, \u5c06\u7b2c\u4e00\u4e2a\u5c0f\u7a97\u53e3\u7684\u6570\u636e\u4e22\u5f03, \u7136\u540e\u5c06\u7b2c\u4e8c\u4e2a\u5c0f\u7a97\u53e3\u8bbe\u7f6e\u4e3a\u7b2c\u4e00\u4e2a\u5c0f\u7a97\u53e3, \u540c\u65f6\u5728\u6700\u540e\u9762\u65b0\u589e\u4e00\u4e2a\u5c0f\u7a97\u53e3, \u5c06\u65b0\u7684\u8bf7\u6c42\u653e\u5728\u65b0\u589e\u7684\u5c0f\u7a97\u53e3\u4e2d. \u540c\u65f6\u8981\u4fdd\u8bc1\u6574\u4e2a\u7a97\u53e3\u4e2d\u6240\u6709\u5c0f\u7a97\u53e3\u7684\u8bf7\u6c42\u6570\u76ee\u4e4b\u540e\u4e0d\u80fd\u8d85\u8fc7\u8bbe\u5b9a\u7684\u9608\u503c.","title":"\u8ba1\u6570\u5668\u6ed1\u52a8\u7a97\u53e3\u7b97\u6cd5"},{"location":"4.kube-api-server/4.%E9%99%90%E6%B5%81/#_3","text":"\u6f0f\u6597\u7b97\u6cd5\u7684\u539f\u7406\u4e5f\u5f88\u5bb9\u6613\u7406\u89e3. \u8bf7\u6c42\u6765\u4e86\u4e4b\u540e\u4f1a\u9996\u5148\u8fdb\u5230\u6f0f\u6597\u91cc, \u7136\u540e\u6f0f\u6597\u4ee5\u6052\u5b9a\u7684\u901f\u7387\u5c06\u8bf7\u6c42\u6d41\u51fa\u8fdb\u884c\u5904\u7406, \u4ece\u800c\u8d77\u5230\u5e73\u6ed1\u6d41\u91cf\u7684\u4f5c\u7528. \u5f53\u8bf7\u6c42\u7684\u6d41\u91cf\u8fc7\u5927\u65f6, \u6f0f\u6597\u8fbe\u5230\u6700\u5927\u5bb9\u91cf\u65f6\u4f1a\u6ea2\u51fa, \u6b64\u65f6\u8bf7\u6c42\u88ab\u4e22\u5f03. \u5728\u7cfb\u7edf\u770b\u6765, \u8bf7\u6c42\u6c38\u8fdc\u662f\u4ee5\u5e73\u6ed1\u7684\u4f20\u8f93\u901f\u7387\u8fc7\u6765, \u4ece\u800c\u8d77\u5230\u4e86\u4fdd\u62a4\u7cfb\u7edf\u7684\u4f5c\u7528.","title":"\u6f0f\u6597\u7b97\u6cd5"},{"location":"4.kube-api-server/4.%E9%99%90%E6%B5%81/#_4","text":"\u4ee4\u724c\u6876\u7b97\u6cd5\u662f\u5bf9\u6f0f\u6597\u7b97\u6cd5\u7684\u4e00\u79cd\u6539\u8fdb, \u9664\u4e86\u80fd\u591f\u8d77\u5230\u9650\u6d41\u7684\u4f5c\u7528\u5916, \u8fd8\u5141\u8bb8\u4e00\u5b9a\u7a0b\u5ea6\u7684\u6d41\u91cf\u7a81\u53d1. \u5728\u4ee4\u724c\u6876\u7b97\u6cd5\u4e2d, \u5b58\u5728\u4e00\u4e2a\u4ee4\u724c\u6876, \u7b97\u6cd5\u4e2d\u5b58\u5728\u4e00\u79cd\u673a\u5236\u4ee5\u6052\u5b9a\u7684\u901f\u7387\u5411\u4ee4\u724c\u6876\u4e2d\u653e\u5165\u4ee4\u724c. \u4ee4\u724c\u6876\u4e5f\u6709\u4e00\u5b9a\u7684\u5bb9\u91cf, \u5982\u679c\u6ee1\u4e86\u4ee4\u724c\u5c31\u65e0\u6cd5\u653e\u8fdb\u53bb\u4e86. \u5f53\u8bf7\u6c42\u6765\u65f6, \u4f1a\u9996\u5148\u5230\u4ee4\u724c\u6876\u4e2d\u53bb\u62ff\u4ee4\u724c, \u5982\u679c\u62ff\u5230\u4e86\u4ee4\u724c, \u5219\u8be5\u8bf7\u6c42\u4f1a\u88ab\u5904\u7406, \u5e76\u6d88\u8017\u6389\u62ff\u5230\u7684\u4ee4\u724c; \u5982\u679c\u4ee4\u724c\u6876\u4e3a\u7a7a, \u5219\u8be5\u8bf7\u6c42\u4f1a\u88ab\u4e22\u5f03.","title":"\u4ee4\u724c\u6876\u7b97\u6cd5"},{"location":"4.kube-api-server/4.%E9%99%90%E6%B5%81/#apiserver","text":"max-requests-inflight: \u5728\u7ed9\u5b9a\u65f6\u95f4\u5185\u7684\u6700\u5927 non-mutating \u8bf7\u6c42\u6570 max-mutating-requests-inflight: \u5728\u7ed9\u5b9a\u65f6\u95f4\u5185\u7684\u6700\u5927 mutating \u8bf7\u6c42\u6570, \u8c03\u6574 apiserver \u7684\u6d41\u63a7 qos \u4ee3\u7801: staging/src/k8s.io/apiserver/pkg/server/filters/maxinflight.go:WithMaxInFlightLimit()","title":"APIServer \u4e2d\u7684\u9650\u6d41"},{"location":"4.kube-api-server/4.%E9%99%90%E6%B5%81/#_5","text":"\u7c92\u5ea6\u7c97 \u65e0\u6cd5\u4e3a\u4e0d\u540c\u7528\u6237, \u4e0d\u540c\u573a\u666f\u8bbe\u7f6e\u4e0d\u901a\u7684\u9650\u6d41 \u5355\u961f\u5217 \u5171\u4eab\u9650\u6d41\u7a97\u53e3/\u6876, \u4e00\u4e2a\u574f\u7528\u6237\u53ef\u80fd\u4f1a\u5c06\u6574\u4e2a\u7cfb\u7edf\u5835\u585e, \u5176\u4ed6\u6b63\u5e38\u7528\u6237\u7684\u8bf7\u6c42\u65e0\u6cd5\u88ab\u53ca\u65f6\u5904\u7406 \u4e0d\u516c\u5e73 \u6b63\u5e38\u7528\u6237\u7684\u8bf7\u6c42\u4f1a\u88ab\u6392\u5230\u961f\u5c3e, \u65e0\u6cd5\u53ca\u65f6\u5904\u7406\u800c\u997f\u6b7b \u65e0\u4f18\u5148\u7ea7 \u91cd\u8981\u7684\u7cfb\u7edf\u6307\u4ee4\u4e00\u5e76\u88ab\u9650\u6d41, \u7cfb\u7edf\u6545\u969c\u96be\u4ee5\u6062\u590d","title":"\u4f20\u7edf\u9650\u6d41\u65b9\u6cd5\u7684\u5c40\u9650\u6027"},{"location":"4.kube-api-server/4.%E9%99%90%E6%B5%81/#api-priority-and-fairness","text":"APF \u4ee5\u66f4\u7ec6\u7c92\u5ea6\u7684\u65b9\u5f0f\u5bf9\u8bf7\u6c42\u8fdb\u884c\u5206\u7c7b\u548c\u9694\u79bb. \u5b83\u8fd8\u5f15\u5165\u4e86\u7a7a\u95f4\u6709\u9650\u7684\u6392\u961f\u673a\u5236, \u56e0\u6b64\u5728\u975e\u5e38\u77ed\u6682\u7684\u7a81\u53d1\u60c5\u51b5\u4e0b, API \u670d\u52a1\u5668\u4e0d\u4f1a\u62d2\u7edd\u4efb\u4f55\u8bf7\u6c42. \u901a\u8fc7\u4f7f\u7528\u516c\u5e73\u6392\u961f\u6280\u672f\u4ece\u961f\u5217\u4e2d\u5206\u53d1\u8bf7\u6c42, \u8fd9\u6837, \u4e00\u4e2a\u884c\u4e3a\u4e0d\u4f73\u7684\u63a7\u5236\u5668\u5c31\u4e0d\u4f1a\u997f\u6b7b\u5176\u4ed6\u63a7\u5236\u5668(\u5373\u4f7f\u4f18\u5148\u7ea7\u76f8\u540c). APF\u7684\u6838\u5fc3 \u591a\u7b49\u7ea7 \u591a\u961f\u5217 APF \u7684\u5b9e\u73b0\u4f9d\u8d56\u4e24\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u8d44\u6e90 FlowSchema, PriorityLevelConfiguration APF \u5bf9\u8bf7\u6c42\u8fdb\u884c\u66f4\u7ec6\u7c92\u5ea6\u7684\u5206\u7c7b, \u6bcf\u4e00\u4e2a\u8bf7\u6c42\u5206\u7c7b\u5bf9\u5e94\u4e00\u4e2a FlowSchema (FS) FS \u5185\u7684\u8bf7\u6c42\u53c8\u4f1a\u6839\u636e distinguisher \u8fdb\u4e00\u6b65\u5212\u5206\u4e3a\u4e0d\u540c\u7684 Flow. FS \u4f1a\u8bbe\u7f6e\u4e00\u4e2a\u4f18\u5148\u7ea7 (Priority Level, PL), \u4e0d\u540c\u4f18\u5148\u7ea7\u7684\u5e76\u53d1\u8d44\u6e90\u662f\u9694\u79bb\u7684. \u6240\u4ee5\u4e0d\u540c\u4f18\u5148\u7ea7\u7684\u8d44\u6e90\u4e0d\u4f1a\u76f8\u4e92\u6392\u6324. \u7279\u5b9a\u4f18\u5148\u7ea7\u7684\u8bf7\u6c42\u53ef\u4ee5\u88ab\u9ad8\u4f18\u5904\u7406. \u4e00\u4e2a PL \u53ef\u4ee5\u5bf9\u5e94\u591a\u4e2a FS, PL \u4e2d\u7ef4\u62a4\u4e86\u4e00\u4e2a QueueSet, \u7528\u4e8e\u7f13\u5b58\u4e0d\u80fd\u53ca\u65f6\u5904\u7406\u7684\u8bf7\u6c42, \u8bf7\u6c42\u4e0d\u4f1a\u56e0\u4e3a\u8d85\u51fa PL \u7684\u5e76\u53d1\u9650\u5236\u800c\u88ab\u4e22\u5f03. FS \u4e2d\u7684\u6bcf\u4e2a Flow \u901a\u8fc7 shuffle sharding \u7b97\u6cd5\u4ece QueueSet \u9009\u53d6\u7279\u5b9a\u7684 queues \u7f13\u5b58\u8bf7\u6c42. \u6bcf\u6b21\u4ece QueueSet \u4e2d\u53d6\u8bf7\u6c42\u6267\u884c\u65f6, \u4f1a\u5148\u5e94\u7528 fair queuing \u7b97\u6cd5\u4ece QueueSet \u4e2d\u9009\u4e2d\u4e00\u4e2a queue, \u7136\u540e\u4ece\u8fd9\u4e2a queue \u4e2d\u53d6\u51fa oldest \u8bf7\u6c42\u6267\u884c. \u6240\u4ee5\u5373\u4f7f\u662f\u540c\u4e00\u4e2a PL \u5185\u7684\u8bf7\u6c42, \u4e5f\u4e0d\u4f1a\u51fa\u73b0\u4e00\u4e2a Flow \u5185\u7684\u8bf7\u6c42\u4e00\u76f4\u5360\u7528\u8d44\u6e90\u7684\u4e0d\u516c\u5e73\u73b0\u8c61.","title":"API Priority and Fairness"},{"location":"4.kube-api-server/4.%E9%99%90%E6%B5%81/#_6","text":"\u4f20\u5165\u7684\u8bf7\u6c42\u901a\u8fc7 FlowSchema \u6309\u7167\u5176\u5c5e\u6027\u5206\u7c7b, \u5e76\u5206\u914d\u4f18\u5148\u7ea7. \u6bcf\u4e2a\u4f18\u5148\u7ea7\u7ef4\u62a4\u81ea\u5b9a\u4e49\u7684\u5e76\u53d1\u9650\u5236, \u52a0\u5f3a\u4e86\u9694\u79bb\u5ea6, \u8fd9\u6837\u4e0d\u540c\u4f18\u5148\u7ea7\u7684\u8bf7\u6c42, \u5c31\u4e0d\u4f1a\u76f8\u4e92\u997f\u6b7b. \u5728\u540c\u4e00\u4e2a\u4f18\u5148\u7ea7\u5185, \u516c\u5e73\u6392\u961f\u7b97\u6cd5\u53ef\u4ee5\u9632\u6b62\u6765\u81ea\u4e0d\u540c flow \u7684\u8bf7\u6c42\u76f8\u4e92\u997f\u6b7b. \u8be5\u7b97\u6cd5\u5c06\u8bf7\u6c42\u6392\u961f, \u901a\u8fc7\u6392\u961f\u673a\u5236, \u9632\u6b62\u5728\u5e73\u5747\u8d1f\u8f7d\u8f83\u4f4e\u65f6, \u901a\u4fe1\u91cf\u7a81\u589e\u800c\u5bfc\u81f4\u8bf7\u6c42\u5931\u8d25.","title":"\u6982\u5ff5"},{"location":"4.kube-api-server/4.%E9%99%90%E6%B5%81/#_7","text":"\u5982\u679c\u672a\u542f\u7528 APF, API \u670d\u52a1\u5668\u4e2d\u7684\u6574\u4f53\u5e76\u53d1\u91cf\u5c06\u53d7\u5230 kube-apiserver \u7684\u53c2\u6570 --max-requests-inflight \u548c --max-mutating-requests-inflight \u7684\u9650\u5236. \u542f\u7528 APF \u540e, \u5c06\u5bf9\u8fd9\u4e9b\u53c2\u6570\u5b9a\u4e49\u7684\u5e76\u53d1\u9650\u5236\u8fdb\u884c\u6c42\u548c, \u7136\u540e\u5c06\u603b\u548c\u5206\u914d\u5230\u4e00\u7ec4\u53ef\u914d\u7f6e\u7684 \u4f18\u5148\u7ea7 \u4e2d. \u6bcf\u4e2a\u4f20\u5165\u7684\u8bf7\u6c42\u90fd\u4f1a\u5206\u914d\u4e00\u4e2a\u4f18\u5148\u7ea7; \u6bcf\u4e2a\u4f18\u5148\u7ea7\u90fd\u6709\u5404\u81ea\u7684\u914d\u7f6e, \u8bbe\u5b9a\u5141\u8bb8\u5206\u53d1\u7684\u5e76\u53d1\u8bf7\u6c42\u6570. \u4f8b\u5982, \u9ed8\u8ba4\u914d\u7f6e\u5305\u62ec\u9488\u5bf9\u9886\u5bfc\u8005\u9009\u4e3e\u8bf7\u6c42\u3001\u5185\u7f6e\u63a7\u5236\u5668\u8bf7\u6c42\u548c Pod \u8bf7\u6c42\u90fd\u5355\u72ec\u8bbe\u7f6e\u4f18\u5148\u7ea7. \u8fd9\u8868\u793a\u5373\u4f7f\u5f02\u5e38\u7684 Pod \u5411 API \u670d\u52a1\u5668\u53d1\u9001\u5927\u91cf\u8bf7\u6c42, \u4e5f\u65e0\u6cd5\u963b\u6b62\u9886\u5bfc\u8005\u9009\u4e3e\u6216\u5185\u7f6e\u63a7\u5236\u5668\u7684\u64cd\u4f5c\u6267\u884c\u6210\u529f.","title":"\u4f18\u5148\u7ea7"},{"location":"4.kube-api-server/4.%E9%99%90%E6%B5%81/#_8","text":"\u5373\u4f7f\u5728\u540c\u4e00\u4f18\u5148\u7ea7\u5185, \u4e5f\u53ef\u80fd\u5b58\u5728\u5927\u91cf\u4e0d\u540c\u7684\u6d41\u91cf\u6e90. \u5728\u8fc7\u8f7d\u60c5\u51b5\u4e0b, \u9632\u6b62\u4e00\u4e2a\u8bf7\u6c42\u6d41\u997f\u6b7b\u5176\u4ed6\u6d41\u662f\u975e\u5e38\u6709\u4ef7\u503c\u7684 (\u5c24\u5176\u662f\u5728\u4e00\u4e2a\u8f83\u4e3a\u5e38\u89c1\u7684\u573a\u666f\u4e2d, \u4e00\u4e2a\u6709\u6545\u969c\u7684\u5ba2\u6237\u7aef\u4f1a\u75af\u72c2\u5730\u5411 kube-apiserver \u53d1\u9001\u8bf7\u6c42, \u7406\u60f3\u60c5\u51b5\u4e0b, \u8fd9\u4e2a\u6709\u6545\u969c\u7684\u5ba2\u6237\u7aef\u4e0d\u5e94\u5bf9\u5176\u4ed6\u5ba2\u6237\u7aef\u4ea7\u751f\u592a\u5927\u7684\u5f71\u54cd). \u516c\u5e73\u6392\u961f\u7b97\u6cd5\u5728\u5904\u7406\u5177\u6709\u76f8\u540c\u4f18\u5148\u7ea7\u7684\u8bf7\u6c42\u65f6, \u5b9e\u73b0\u4e86\u4e0a\u8ff0\u573a\u666f. \u6bcf\u4e2a\u8bf7\u6c42\u90fd\u88ab\u5206\u914d\u5230\u67d0\u4e2a\u6d41\u4e2d, \u8be5\u6d41\u7531\u5bf9\u5e94\u7684 FlowSchema \u7684\u540d\u5b57\u52a0\u4e0a\u4e00\u4e2a\u6d41\u533a\u5206\u9879(Flow Distinguisher) \u6765\u6807\u8bc6. \u8fd9\u91cc\u7684\u6d41\u533a\u5206\u9879\u53ef\u4ee5\u662f\u53d1\u51fa\u8bf7\u6c42\u7684\u7528\u6237\u3001\u76ee\u6807\u8d44\u6e90\u7684\u540d\u79f0\u7a7a\u95f4\u6216\u4ec0\u4e48\u90fd\u4e0d\u662f. \u7cfb\u7edf\u5c1d\u8bd5\u4e3a\u4e0d\u540c\u6d41\u4e2d\u5177\u6709\u76f8\u540c\u4f18\u5148\u7ea7\u7684\u8bf7\u6c42\u8d4b\u4e88\u8fd1\u4f3c\u76f8\u7b49\u7684\u6743\u91cd. \u5c06\u8bf7\u6c42\u5212\u5206\u5230\u6d41\u4e2d\u4e4b\u540e, APF \u529f\u80fd\u5c06\u8bf7\u6c42\u5206\u914d\u5230\u961f\u5217\u4e2d. \u5206\u914d\u65f6\u4f7f\u7528\u4e00\u79cd\u79f0\u4e3a\u6df7\u6d17\u5206\u7247(Shuffle-Sharding)\u7684\u6280\u672f. \u8be5\u6280\u672f\u53ef\u4ee5\u76f8\u5bf9\u6709\u6548\u5730\u5229\u7528\u961f\u5217\u9694\u79bb\u4f4e\u5f3a\u5ea6\u6d41\u4e0e\u9ad8\u5f3a\u5ea6\u6d41. \u6392\u961f\u7b97\u6cd5\u7684\u7ec6\u8282\u53ef\u9488\u5bf9\u6bcf\u4e2a\u4f18\u5148\u7b49\u7ea7\u8fdb\u884c\u8c03\u6574, \u5e76\u5141\u8bb8\u7ba1\u7406\u5458\u5728\u5185\u5b58\u5360\u7528\u3001\u516c\u5e73\u6027(\u5f53\u603b\u6d41\u91cf\u8d85\u6807\u65f6, \u5404\u4e2a\u72ec\u7acb\u7684\u6d41\u5c06\u90fd\u4f1a\u53d6\u5f97\u8fdb\u5c55)\u3001\u7a81\u53d1\u6d41\u91cf\u7684\u5bb9\u5fcd\u5ea6\u4ee5\u53ca\u6392\u961f\u5f15\u53d1\u7684\u989d\u5916\u5ef6\u8fdf\u4e4b\u95f4\u8fdb\u884c\u6743\u8861.","title":"\u6392\u961f"},{"location":"4.kube-api-server/4.%E9%99%90%E6%B5%81/#_9","text":"\u67d0\u4e9b\u7279\u522b\u91cd\u8981\u7684\u8bf7\u6c42\u4e0d\u53d7\u5236\u4e8e\u6b64\u7279\u6027\u65bd\u52a0\u7684\u4efb\u4f55\u9650\u5236. \u8fd9\u4e9b\u8c41\u514d\u53ef\u9632\u6b62\u4e0d\u5f53\u7684\u6d41\u63a7\u914d\u7f6e\u5b8c\u5168\u7981\u7528 API \u670d\u52a1\u5668.","title":"\u8c41\u514d\u8bf7\u6c42"},{"location":"4.kube-api-server/4.%E9%99%90%E6%B5%81/#_10","text":"system \u7528\u4e8e system:nodes \u7ec4(\u5373 kubelets) \u7684\u8bf7\u6c42; kubelets \u5fc5\u987b\u80fd\u8fde\u4e0a API \u670d\u52a1\u5668, \u4ee5\u4fbf\u5de5\u4f5c\u8d1f\u8f7d\u80fd\u591f\u8c03\u5ea6\u5230\u5176\u4e0a. leader-election \u7528\u4e8e\u5185\u7f6e\u63a7\u5236\u5668\u7684\u9886\u5bfc\u9009\u4e3e\u7684\u8bf7\u6c42 (\u7279\u522b\u662f\u6765\u81ea kube-system \u540d\u79f0\u7a7a\u95f4\u4e2d system:kube-controller-manager \u548c system:kube-scheduler \u7528\u6237\u548c\u670d\u52a1\u8d26\u53f7, \u9488\u5bf9 endpoints\u3001configmaps \u6216 leases \u7684\u8bf7\u6c42). \u5c06\u8fd9\u4e9b\u8bf7\u6c42\u4e0e\u5176\u4ed6\u6d41\u91cf\u76f8\u9694\u79bb\u975e\u5e38\u91cd\u8981, \u56e0\u4e3a\u9886\u5bfc\u8005\u9009\u4e3e\u5931\u8d25\u4f1a\u5bfc\u81f4\u63a7\u5236\u5668\u53d1\u751f\u6545\u969c\u5e76\u91cd\u65b0\u542f\u52a8, \u8fd9\u53cd\u8fc7\u6765\u4f1a\u5bfc\u81f4\u65b0\u542f\u52a8\u7684\u63a7\u5236\u5668\u5728\u540c\u6b65\u4fe1\u606f\u65f6, \u6d41\u91cf\u5f00\u9500\u66f4\u5927. workload-high \u4f18\u5148\u7ea7\u7528\u4e8e\u5185\u7f6e\u63a7\u5236\u5668\u7684\u8bf7\u6c42. workload-low \u4f18\u5148\u7ea7\u9002\u7528\u4e8e\u6765\u81ea\u4efb\u4f55\u670d\u52a1\u5e10\u6237\u7684\u8bf7\u6c42, \u901a\u5e38\u5305\u62ec\u6765\u81ea Pods \u4e2d\u8fd0\u884c\u7684\u63a7\u5236\u5668\u7684\u6240\u6709\u8bf7\u6c42. global-default \u4f18\u5148\u7ea7\u53ef\u5904\u7406\u6240\u6709\u5176\u4ed6\u6d41\u91cf, \u4f8b\u5982: \u975e\u7279\u6743\u7528\u6237\u8fd0\u884c\u7684\u4ea4\u4e92\u5f0f kubectl \u547d\u4ee4. exempt \u4f18\u5148\u7ea7\u7684\u8bf7\u6c42\u5b8c\u5168\u4e0d\u53d7\u6d41\u63a7\u9650\u5236: \u5b83\u4eec\u603b\u662f\u7acb\u523b\u88ab\u5206\u53d1. \u7279\u6b8a\u7684 exempt FlowSchema \u628a system:masters \u7ec4\u7684\u6240\u6709\u8bf7\u6c42\u90fd\u5f52\u5165\u8be5\u4f18\u5148\u7ea7\u7ec4. catch-all \u4f18\u5148\u7ea7\u4e0e\u7279\u6b8a\u7684 catch-all FlowSchema \u7ed3\u5408\u4f7f\u7528, \u4ee5\u786e\u4fdd\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u5206\u7c7b. \u4e00\u822c\u4e0d\u5e94\u8be5\u4f9d\u8d56\u4e8e catch-all \u7684\u914d\u7f6e, \u800c\u5e94\u9002\u5f53\u5730\u521b\u5efa\u81ea\u5df1\u7684 catch-all FlowSchema \u548c PriorityLevelConfigurations (\u6216\u4f7f\u7528\u9ed8\u8ba4\u5b89\u88c5\u7684 global-default \u914d\u7f6e). \u4e3a\u4e86\u5e2e\u52a9\u6355\u83b7\u90e8\u5206\u8bf7\u6c42\u672a\u5206\u7c7b\u7684\u914d\u7f6e\u9519\u8bef, \u5f3a\u5236\u8981\u6c42 catch-all \u4f18\u5148\u7ea7\u4ec5\u5141\u8bb85\u4e2a\u5e76\u53d1\u4efd\u989d, \u5e76\u4e14\u4e0d\u5bf9\u8bf7\u6c42\u8fdb\u884c\u6392\u961f, \u4f7f\u5f97\u4ec5\u4e0e catch-all FlowSchema \u5339\u914d\u7684\u6d41\u91cf\u88ab\u62d2\u7edd\u7684\u53ef\u80fd\u6027\u66f4\u9ad8, \u5e76\u663e\u793a HTTP 429 \u9519\u8bef.","title":"\u9ed8\u8ba4\u914d\u7f6e"},{"location":"4.kube-api-server/4.%E9%99%90%E6%B5%81/#prioritylevelconfiguration","text":"\u4e00\u4e2a PriorityLevelConfiguration \u8868\u793a\u5355\u4e2a\u9694\u79bb\u7c7b\u578b. \u6bcf\u4e2a PriorityLevelConfigurations \u5bf9\u672a\u5b8c\u6210\u7684\u8bf7\u6c42\u6570\u6709\u5404\u81ea\u7684\u9650\u5236, \u5bf9\u6392\u961f\u4e2d\u7684\u8bf7\u6c42\u6570\u4e5f\u6709\u9650\u5236.","title":"PriorityLevelConfiguration"},{"location":"4.kube-api-server/4.%E9%99%90%E6%B5%81/#flowschema","text":"FlowSchema \u5339\u914d\u4e00\u4e9b\u5165\u7ad9\u8bf7\u6c42, \u5e76\u5c06\u5b83\u4eec\u5206\u914d\u7ed9\u4f18\u5148\u7ea7. \u6bcf\u4e2a\u5165\u7ad9\u8bf7\u6c42\u90fd\u4f1a\u5bf9\u6240\u6709 FlowSchema \u6d4b\u8bd5\u662f\u5426\u5339\u914d, \u9996\u5148\u4ece matchingPrecedence \u6570\u503c\u6700\u4f4e\u7684\u5339\u914d\u5f00\u59cb (\u6211\u4eec\u8ba4\u4e3a\u8fd9\u662f\u903b\u8f91\u4e0a\u5339\u914d\u5ea6\u6700\u9ad8), \u7136\u540e\u4f9d\u6b21\u8fdb\u884c, \u76f4\u5230\u9996\u4e2a\u5339\u914d\u51fa\u73b0","title":"FlowSchema"},{"location":"4.kube-api-server/4.%E9%99%90%E6%B5%81/#_11","text":"/debug/api_priority_and_fairness/dump_priority_levels \u2014\u2014 \u6240\u6709\u4f18\u5148\u7ea7\u53ca\u5176\u5f53\u524d\u72b6\u6001 \u7684\u5217\u8868 kubectl get --raw /debug/api_priority_and_fairness/dump_priority_levels /debug/api_priority_and_fairness/dump_queues \u2014\u2014 \u6240\u6709\u961f\u5217\u53ca\u5176\u5f53\u524d\u72b6\u6001\u7684\u5217\u8868 kubectl get --raw /debug/api_priority_and_fairness/dump_queues /debug/api_priority_and_fairness/dump_requests \u2014\u2014 \u5f53\u524d\u6b63\u5728\u961f\u5217\u4e2d\u7b49\u5f85\u7684\u6240\u6709\u8bf7\u6c42 \u7684\u5217\u8868 kubectl get --raw /debug/api_priority_and_fairness/dump_requests","title":"\u8c03\u8bd5"},{"location":"4.kube-api-server/5.%E9%AB%98%E5%8F%AF%E7%94%A8APIServer/","text":"\u542f\u52a8 apiserver \u793a\u4f8b kube-apiserver --feature-gates=AllAlpha=true --runtime-config=api/all=true \\ --requestheader-allowed-names=front-proxy-client \\ --client-ca-file=/etc/kubernetes/pki/ca.crt \\ --allow-privileged=true \\ --experimental-bootstrap-token-auth=true \\ --storage-backend=etcd3 \\ --requestheader-username-headers=X-Remote-User \\ --requestheader-extra-headers-prefix=X-Remote-Extra- \\ --service-account-key-file=/etc/kubernetes/pki/sa.pub \\ --tls-cert-file=/etc/kubernetes/pki/apiserver.crt \\ --tls-private-key-file=/etc/kubernetes/pki/apiserver.key \\ --kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt \\ --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt \\ --enabled-hooks=NamespaceLifecycle,LimitRanger,ServiceAccount,PersistentVolumeLabel,DefaultStorageClass,ResourceQuota \\ --requestheader-group-headers=X-Remote-Group \\ --kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key \\ --secure-port=6443 \\ --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname \\ --service-cluster-ip-range=10.96.0.0/12 \\ --advertise-address=192.168.0.20 --etcd-servers=http://127.0.0.1:2379 \u6784\u5efa\u9ad8\u53ef\u7528\u7684\u591a\u526f\u672c apiserver apiserver \u662f\u65e0\u72b6\u6001\u7684 Rest Server \u65e0\u72b6\u6001\u6240\u4ee5\u65b9\u4fbf Scale Up/down \u8d1f\u8f7d\u5747\u8861 \u5728\u591a\u4e2a apiserver \u5b9e\u4f8b\u4e4b\u4e0a, \u914d\u7f6e\u8d1f\u8f7d\u5747\u8861 \u8bc1\u4e66\u53ef\u80fd\u9700\u8981\u52a0\u4e0a Loadbalancer VIP \u91cd\u65b0\u751f\u6210 \u9884\u7559\u5145\u8db3\u7684 CPU\u3001\u5185\u5b58\u8d44\u6e90 \u968f\u7740\u96c6\u7fa4\u4e2d\u8282\u70b9\u6570\u91cf\u4e0d\u65ad\u589e\u591a, APIServer \u5bf9 CPU \u548c\u5185\u5b58\u7684\u5f00\u9500\u4e5f\u4e0d\u65ad\u589e\u5927. \u8fc7\u5c11\u7684 CPU \u8d44\u6e90\u4f1a\u964d\u4f4e\u5176\u5904\u7406\u6548\u7387, \u8fc7\u5c11\u7684\u5185\u5b58\u8d44\u6e90\u4f1a\u5bfc\u81f4 Pod \u88ab OOMKilled, \u76f4\u63a5\u5bfc\u81f4\u670d\u52a1\u4e0d\u53ef\u7528. \u5728\u89c4\u5212 APIServer\u8d44\u6e90\u65f6, \u4e0d\u80fd\u4ec5\u770b\u5f53\u4e0b\u9700\u6c42, \u4e5f\u8981\u4e3a\u672a\u6765\u9884\u7559\u5145\u5206. \u5584\u7528\u901f\u7387\u9650\u5236(RateLimit) APIServer\u7684\u53c2\u6570\"--max-requests-inflight\"\u548c\"--max-mutating-requests-inflight\"\u652f\u6301\u5728\u7ed9\u5b9a\u65f6\u95f4\u5185\u9650\u5236\u5e76\u884c\u5904\u7406\u8bfb\u8bf7\u6c42(\u5305\u62ec Get\u3001List \u548c Watch \u64cd\u4f5c)\u548c\u5199\u8bf7\u6c42(\u5305\u62ecCreate\u3001Delete\u3001Update \u548c Patch \u64cd\u4f5c)\u7684\u6700\u5927\u6570\u91cf. \u5f53 APIServer \u63a5\u6536\u5230\u7684\u8bf7\u6c42\u8d85\u8fc7\u8fd9\u4e24\u4e2a\u53c2\u6570\u8bbe\u5b9a\u7684\u503c\u65f6, \u518d\u63a5\u6536\u5230\u7684\u8bf7\u6c42\u5c06\u4f1a\u88ab\u76f4\u63a5\u62d2\u7edd. \u901a\u8fc7\u901f\u7387\u9650\u5236\u673a\u5236, \u53ef\u4ee5\u6709\u6548\u5730\u63a7\u5236 APIServer \u5185\u5b58\u7684\u4f7f\u7528. \u5982\u679c\u8be5\u503c\u914d\u7f6e\u8fc7\u4f4e, \u4f1a\u7ecf\u5e38\u51fa\u73b0\u8bf7\u6c42\u8d85\u8fc7\u9650\u5236\u7684\u9519\u8bef, \u5982\u679c\u914d\u7f6e\u8fc7\u9ad8, \u5219 APIServer \u53ef\u80fd\u4f1a\u56e0\u4e3a\u5360\u7528\u8fc7\u591a\u5185\u5b58\u800c\u88ab\u5f3a\u5236\u7ec8\u6b62, \u56e0\u6b64\u9700\u8981\u6839\u636e\u5b9e\u9645\u7684\u8fd0\u884c\u73af\u5883, \u7ed3\u5408\u5b9e\u65f6\u7528\u6237\u8bf7\u6c42\u6570\u91cf\u548c APIServer \u7684\u8d44\u6e90\u914d\u7f6e\u8fdb\u884c\u8c03\u4f18. \u5ba2\u6237\u7aef\u5728\u63a5\u6536\u5230\u62d2\u7edd\u8bf7\u6c42\u7684\u8fd4\u56de\u503c\u540e, \u5e94\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4\u518d\u53d1\u8d77\u91cd\u8bd5, \u65e0\u95f4\u9694\u7684\u91cd\u8bd5\u4f1a\u52a0\u91cd APIServer \u7684\u538b\u529b, \u5bfc\u81f4\u6027\u80fd\u8fdb\u4e00\u6b65\u964d\u4f4e. \u9488\u5bf9\u5e76\u884c\u5904\u7406\u8bf7\u6c42\u6570\u7684\u8fc7\u6ee4\u9897\u7c92\u5ea6\u592a\u5927, \u5728\u8bf7\u6c42\u6570\u91cf\u6bd4\u8f83\u591a\u7684\u573a\u666f, \u91cd\u8981\u7684\u6d88\u606f\u53ef\u80fd\u4f1a\u88ab\u62d2\u7edd\u6389, \u81ea 1.18 \u7248\u672c\u5f00\u59cb, \u793e\u533a\u5f15\u5165\u4e86\u4f18\u5148\u7ea7\u548c\u516c\u5e73\u4fdd\u8bc1 (Priority and Fairness)\u529f\u80fd, \u4ee5\u63d0\u4f9b\u66f4\u7ec6\u7c92\u5ea6\u5730\u5ba2\u6237\u7aef\u8bf7\u6c42\u63a7\u5236. \u8be5\u529f\u80fd\u652f\u6301\u5c06\u4e0d\u540c\u7528\u6237\u6216\u4e0d\u540c\u7c7b\u578b\u7684\u8bf7\u6c42\u8fdb\u884c\u4f18\u5148\u7ea7\u5f52\u7c7b, \u4fdd\u8bc1\u9ad8\u4f18\u5148\u7ea7\u7684\u8bf7\u6c42\u603b\u662f\u80fd\u591f\u66f4\u5feb\u5f97\u5230\u5904\u7406, \u4ece\u800c\u4e0d\u53d7\u4f4e\u4f18\u5148\u7ea7\u8bf7\u6c42\u7684\u5f71\u54cd. \u8bbe\u7f6e\u5408\u9002\u7684\u7f13\u5b58\u5927\u5c0f APIServer \u4e0e etcd \u4e4b\u95f4\u57fa\u4e8e gRPC \u534f\u8bae\u8fdb\u884c\u901a\u4fe1, gRPC \u534f\u8bae\u4fdd\u8bc1\u4e86\u4e8c\u8005\u5728\u5927\u89c4\u6a21\u96c6\u7fa4\u4e2d\u7684\u6570\u636e\u9ad8\u901f\u4f20\u8f93. gRPC \u57fa\u4e8e\u8fde\u63a5\u590d\u7528\u7684 HTTP/2 \u534f\u8bae, \u5373\u9488\u5bf9\u76f8\u540c\u5206\u7ec4\u7684\u5bf9\u8c61, APIServer \u548c etcd \u4e4b\u95f4\u5171\u4eab\u76f8\u540c\u7684 TCP \u8fde\u63a5, \u4e0d\u540c\u8bf7\u6c42\u7531\u4e0d\u540c\u7684 stream \u4f20\u8f93. \u4e00\u4e2a HTTP/2 \u8fde\u63a5\u6709\u5176 stream \u914d\u989d , \u914d\u989d\u7684\u5927\u5c0f\u9650\u5236\u4e86\u80fd\u652f\u6301\u7684\u5e76\u53d1\u8bf7\u6c42. APIServer \u63d0\u4f9b\u4e86\u96c6\u7fa4\u5bf9\u8c61\u7684\u7f13\u5b58\u673a\u5236, \u5f53\u5ba2\u6237\u7aef\u53d1\u8d77\u67e5\u8be2\u8bf7\u6c42\u65f6, APIServer \u9ed8\u8ba4\u4f1a\u5c06\u5176\u7f13\u5b58\u76f4\u63a5\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef. \u7f13\u5b58\u533a\u5927\u5c0f\u53ef\u4ee5\u901a\u8fc7\u53c2\u6570 \"--watch-cache-sizes\" \u8bbe\u7f6e. \u9488\u5bf9\u8bbf\u95ee\u8bf7\u6c42\u6bd4\u8f83\u591a\u7684\u5bf9\u8c61, \u9002\u5f53\u8bbe\u7f6e\u7f13\u5b58\u7684\u5927\u5c0f, \u6781\u5927\u964d\u4f4e\u5bf9 etcd \u7684\u8bbf\u95ee\u9891\u7387, \u8282\u7701\u4e86\u7f51\u7edc\u8c03\u7528, \u964d\u4f4e\u4e86\u5bf9 etcd \u96c6\u7fa4\u7684\u8bfb\u5199\u538b\u529b, \u4ece\u800c\u63d0\u9ad8\u5bf9\u8c61\u8bbf\u95ee\u7684\u6027\u80fd. \u4f46\u662f APIServer \u4e5f\u662f\u5141\u8bb8\u5ba2\u6237\u7aef\u5ffd\u7565\u7f13\u5b58\u7684, \u4f8b\u5982\u5ba2\u6237\u7aef\u8bf7\u6c42\u4e2d ListOption \u4e2d\u6ca1\u6709\u8bbe\u7f6e resourceVersion, \u8fd9\u65f6 APIServer \u76f4\u63a5\u4ece etcd \u62c9\u53d6\u6700\u65b0\u6570\u636e\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef. \u5ba2\u6237\u7aef\u5e94\u5c3d\u91cf\u907f\u514d\u6b64\u64cd\u4f5c, \u5e94\u5728 ListOption \u4e2d\u8bbe\u7f6e resourceVersion \u4e3a 0, APIServer \u5219\u5c06\u4ece\u7f13\u5b58\u91cc\u9762\u8bfb\u53d6\u6570\u636e, \u800c\u4e0d\u4f1a\u76f4\u63a5\u8bbf\u95ee etcd. \u5ba2\u6237\u7aef\u5c3d\u91cf\u4f7f\u7528\u957f\u8fde\u63a5 \u5f53\u67e5\u8be2\u8bf7\u6c42\u7684\u8fd4\u56de\u6570\u636e\u8f83\u5927\u4e14\u6b64\u7c7b\u8bf7\u6c42\u5e76\u53d1\u91cf\u8f83\u5927\u65f6, \u5bb9\u6613\u5f15\u53d1 TCP \u94fe\u8def\u7684\u963b\u585e, \u5bfc\u81f4\u5176\u4ed6\u67e5\u8be2\u64cd\u4f5c\u8d85\u65f6. \u56e0\u6b64\u57fa\u4e8e Kubernetes \u5f00\u53d1\u7ec4\u4ef6\u65f6, \u4f8b\u5982\u67d0\u4e9b DaemonSet \u548c Controller, \u5982\u679c\u8981\u67e5\u8be2\u67d0\u7c7b\u5bf9\u8c61, \u5e94\u5c3d\u91cf\u901a\u8fc7\u957f\u8fde\u63a5 ListWatch \u76d1\u542c\u5bf9\u8c61\u53d8\u66f4, \u907f\u514d\u5168\u91cf\u4ece APIServer \u83b7\u53d6\u8d44\u6e90. \u5982\u679c\u5728\u540c\u4e00\u5e94\u7528\u7a0b\u5e8f\u4e2d, \u5982\u679c\u6709\u591a\u4e2a Informer \u76d1\u542c APIServer \u8d44\u6e90\u53d8\u5316, \u53ef\u4ee5\u5c06\u8fd9\u4e9b Informer \u5408\u5e76, \u51cf\u5c11\u548c APIServer \u7684\u957f\u8fde\u63a5\u6570, \u4ece\u800c\u964d\u4f4e\u5bf9 APIServer \u7684\u538b\u529b. \u5982\u4f55\u8bbf\u95eeAPIServer \u5bf9\u5916\u90e8\u5ba2\u6237(user/client/admin), \u6c38\u8fdc\u53ea\u901a\u8fc7 LoadBalancer \u8bbf\u95ee \u53ea\u6709\u5f53\u8d1f\u8f7d\u5747\u8861\u51fa\u73b0\u6545\u969c\u65f6, \u7ba1\u7406\u5458\u624d\u5207\u6362\u5230 apiserver IP \u8fdb\u884c\u7ba1\u7406 \u5185\u90e8\u5ba2\u6237\u7aef, \u4f18\u5148\u8bbf\u95ee cluster IP\uff1f(\u662f\u5426\u4e00\u5b9a\u5982\u6b64\uff1f) \u642d\u5efa\u591a\u79df\u6237\u7684Kubernetes\u96c6\u7fa4 \u6388\u4fe1 \u8ba4\u8bc1: \u7981\u6b62\u533f\u540d\u8bbf\u95ee, \u53ea\u5141\u8bb8\u53ef\u4fe1\u7528\u6237\u505a\u64cd\u4f5c. \u6388\u6743: \u57fa\u4e8e\u6388\u4fe1\u7684\u64cd\u4f5c, \u9632\u6b62\u591a\u7528\u6237\u4e4b\u95f4\u4e92\u76f8\u5f71\u54cd, \u6bd4\u5982\u666e\u901a\u7528\u6237\u5220\u9664 Kubernetes \u6838\u5fc3\u670d\u52a1, \u6216\u8005 A \u7528\u6237\u5220\u9664\u6216\u4fee\u6539 B \u7528\u6237\u7684\u5e94\u7528. \u9694\u79bb \u53ef\u89c1\u884c\u9694\u79bb: \u7528\u6237\u53ea\u5173\u5fc3\u81ea\u5df1\u7684\u5e94\u7528, \u65e0\u9700\u770b\u5230\u5176\u4ed6\u7528\u6237\u7684\u670d\u52a1\u548c\u90e8\u7f72. \u8d44\u6e90\u9694\u79bb: \u6709\u4e9b\u5173\u952e\u9879\u76ee\u5bf9\u8d44\u6e90\u9700\u6c42\u8f83\u9ad8, \u9700\u8981\u4e13\u6709\u8bbe\u5907, \u4e0d\u4e0e\u5176\u4ed6\u4eba\u5171\u4eab. \u5e94\u7528\u8bbf\u95ee\u9694\u79bb: \u7528\u6237\u521b\u5efa\u7684\u670d\u52a1, \u6309\u65e2\u5b9a\u89c4\u5219\u5141\u8bb8\u5176\u4ed6\u7528\u6237\u8bbf\u95ee. \u8d44\u6e90\u7ba1\u7406 Quota\u7ba1\u7406 \u8c01\u80fd\u7528\u591a\u5c11\u8d44\u6e90\uff1f \u8ba4\u8bc1 \u4e0e\u4f01\u4e1a\u73b0\u6709\u8ba4\u8bc1\u7cfb\u7edf\u96c6\u6210 \u5f88\u591a\u4f01\u4e1a\u57fa\u4e8e Microsoft Active Directory \u63d0\u4f9b\u8ba4\u8bc1\u670d\u52a1 \u9009\u62e9\u8ba4\u8bc1\u63d2\u4ef6 \u9009\u62e9 webhook \u4f5c\u4e3a\u8ba4\u8bc1\u63d2\u4ef6(*\u4ee5\u6b64\u4e3a\u4f8b\u5c55\u5f00) \u4e5f\u53ef\u4ee5\u9009\u62e9 Keystone \u4f5c\u4e3a\u8ba4\u8bc1\u63d2\u4ef6, \u4ee5 Microsoft Ad \u4f5c\u4e3a backend \u642d\u5efa keystone \u670d\u52a1 \u4e00\u65e6\u8ba4\u8bc1\u5b8c\u6210, Kubernetes \u5373\u53ef\u83b7\u53d6\u5f53\u524d\u7528\u6237\u4fe1\u606f(\u4e3b\u8981\u662f\u7528\u6237\u540d), \u5e76\u9488\u5bf9\u8be5\u7528\u6237\u505a\u6388\u6743. \u6388\u6743\u548c\u51c6\u5165\u63a7\u5236\u5b8c\u6210\u540e, \u8be5\u7528\u6237\u7684\u8bf7\u6c42\u5b8c\u6210. \u6ce8\u518cAPIService apiVersion: apiregistration.k8s.io/v1 kind: APIService metadata: labels: kube-aggregator.kubernetes.io/automanaged: onstart name: v1. spec: groupPriorityMinimum: 18000 version: v1 versionPriority: 1 status: conditions: - lastTransitionTime: \"2020-08-16T05:35:33Z\" message: Local APIServices are always available reason: Local status: \"True\" type: Available \u6388\u6743 ABAC \u6709\u671f\u5c40\u9650\u6027, \u9488\u5bf9\u6bcf\u4e2a account \u90fd\u9700\u8981\u505a\u914d\u7f6e, \u5e76\u4e14\u9700\u8981\u91cd\u542f apiserver RBAC \u66f4\u7075\u6d3b, \u66f4\u7b26\u5408\u6211\u4eec\u901a\u5e38\u719f\u77e5\u7684\u6743\u9650\u7ba1\u7406 RBAC \u89c4\u5212\u7cfb\u7edf\u89d2\u8272 User \u7ba1\u7406\u5458 \u6240\u6709\u8d44\u6e90\u7684\u6240\u6709\u6743\u9650\uff1f\uff1f \u666e\u901a\u7528\u6237 \u662f\u5426\u6709\u8be5\u7528\u6237\u521b\u5efa\u7684 namespace \u4e0b\u7684\u6240\u6709 object \u7684\u64cd\u4f5c\u6743\u9650\uff1f \u5bf9\u5176\u4ed6\u7528\u6237\u7684 namespace \u8d44\u6e90\u662f\u5426\u53ef\u8bfb, \u662f\u5426\u53ef\u5199\uff1f SystemAccount SystemAccount \u662f\u5f00\u53d1\u8005 (kubernetes developer \u6216\u8005 domain developer) \u521b\u5efa\u5e94\u7528\u540e, \u5e94\u7528\u4e8e apiserver \u901a\u8baf\u9700\u8981\u7684\u8eab\u4efd \u7528\u6237\u53ef\u4ee5\u521b\u5efa\u81ea\u5b9a\u7684 ServiceAccount, kubernetes \u4e5f\u4e3a\u6bcf\u4e2a namespace \u521b\u5efa default ServiceAccount Default ServiceAccount \u901a\u5e38\u9700\u8981\u7ed9\u5b9a\u6743\u9650\u4ee5\u540e\u624d\u80fd\u5bf9 apiserver \u505a\u5199\u64cd\u4f5c \u5b9e\u73b0\u65b9\u6848 \u5728 cluster \u521b\u5efa\u65f6(kube-up.sh), \u521b\u5efa\u81ea\u5b9a\u4e49\u7684 role, \u6bd4\u5982 namespace-creator namespace-creator role \u5b9a\u4e49\u7528\u6237\u53ef\u64cd\u4f5c\u7684\u5bf9\u8c61\u548c\u5bf9\u5e94\u7684\u8bfb\u5199\u64cd\u4f5c. \u521b\u5efa\u81ea\u5b9a\u4e49\u7684 namespace admission controller \u5f53 namespace \u521b\u5efa\u8bf7\u6c42\u88ab\u5904\u7406\u65f6, \u83b7\u53d6\u5f53\u524d\u7528\u6237\u4fe1\u606f\u5e76 annotate (\u6ce8\u91ca)\u5230 namespace \u521b\u5efa RBAC controller Watch namespace \u7684\u521b\u5efa\u4e8b\u4ef6 \u83b7\u53d6\u5f53\u524d namespace \u7684\u521b\u5efa\u8005\u4fe1\u606f \u5728\u5f53\u524d namespace \u521b\u5efa rolebinding \u5bf9\u8c61, \u5e76\u5c06 namespace-creator \u89d2\u8272\u548c\u7528\u6237\u7ed1\u5b9a \u4e0e\u6743\u9650\u76f8\u5173\u7684\u5176\u4ed6\u6700\u4f73\u5b9e\u8df5 ClusterRole \u662f\u975e namespace \u7ed1\u5b9a\u7684, \u9488\u5bf9\u6574\u4e2a\u96c6\u7fa4\u751f\u6548 \u901a\u5e38\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u7ba1\u7406\u5458\u89d2\u8272, \u5e76\u4e14\u7ed1\u5b9a\u7ed9\u5f00\u53d1\u8fd0\u8425\u56e2\u961f\u6210\u5458 ThirdPartyResource \u548c CustomResourceDefinition \u662f\u5168\u5c40\u8d44\u6e90, \u666e\u901a\u7528\u6237\u521b\u5efa ThirdPartyResource \u4ee5\u540e, \u9700\u8981\u7ba1\u7406\u5458\u6388\u4e88\u76f8\u5e94\u6743\u9650\u540e\u624d\u80fd\u771f\u6b63\u64cd\u4f5c\u8be5\u5bf9\u8c61 \u9488\u5bf9\u6240\u6709\u7684\u89d2\u8272\u7ba1\u7406, \u5efa\u8bae\u521b\u5efaspec, \u7528\u6e90\u4ee3\u7801\u9a71\u52a8 \u867d\u7136\u53ef\u4ee5\u901a\u8fc7 edit \u64cd\u4f5c\u6765\u4fee\u6539\u6743\u9650, \u4f46\u540e\u671f\u4f1a\u5bfc\u81f4\u6743\u9650\u7ba1\u7406\u6df7\u4e71, \u53ef\u80fd\u4f1a\u6709\u5f88\u591a\u4e34\u65f6\u521b\u5efa\u51fa\u6765\u7684\u89d2\u8272\u548c\u89d2\u8272\u7ed1\u5b9a\u5bf9\u8c61, \u91cd\u590d\u7ed1\u5b9a\u67d0\u4e00\u4e2a\u8d44\u6e90\u6743\u9650 \u6743\u9650\u662f\u53ef\u4ee5\u4f20\u9012\u7684, \u7528\u6237 A \u53ef\u4ee5\u5c06\u5176\u5bf9\u67d0\u5bf9\u8c61\u7684\u67d0\u64cd\u4f5c, \u62bd\u53d6\u6210\u4e00\u4e2a\u6743\u9650, \u5e76\u8d4b\u7ed9\u7528\u6237 B \u9632\u6b62\u6d77\u91cf\u7684\u89d2\u8272\u548c\u89d2\u8272\u7ed1\u5b9a\u5bf9\u8c61, \u56e0\u4e3a\u5927\u91cf\u7684\u5bf9\u8c61\u4f1a\u5bfc\u81f4\u9274\u6743\u6548\u7387\u4f4e, \u540c\u65f6\u7ed9 apiserver \u589e\u52a0\u8d1f\u62c5 ServiceAccount \u4e5f\u9700\u8981\u6388\u6743\u7684, \u5426\u5219\u4f60\u7684 component \u53ef\u80fd\u65e0\u6cd5\u64cd\u4f5c\u67d0\u5bf9\u8c61 Tips: SSH \u5230 master \u8282\u70b9\u901a\u8fc7 insecure port \u8bbf\u95ee apiserver \u53ef\u7ed5\u8fc7\u9274\u6743, \u5f53\u9700\u8981\u505a\u7ba1\u7406\u64cd\u4f5c\u53c8\u6ca1\u6709\u6743\u9650\u65f6\u53ef\u4ee5\u4f7f\u7528(\u4e0d\u63a8\u8350)","title":"\u9ad8\u53ef\u7528APIServer"},{"location":"4.kube-api-server/5.%E9%AB%98%E5%8F%AF%E7%94%A8APIServer/#apiserver","text":"kube-apiserver --feature-gates=AllAlpha=true --runtime-config=api/all=true \\ --requestheader-allowed-names=front-proxy-client \\ --client-ca-file=/etc/kubernetes/pki/ca.crt \\ --allow-privileged=true \\ --experimental-bootstrap-token-auth=true \\ --storage-backend=etcd3 \\ --requestheader-username-headers=X-Remote-User \\ --requestheader-extra-headers-prefix=X-Remote-Extra- \\ --service-account-key-file=/etc/kubernetes/pki/sa.pub \\ --tls-cert-file=/etc/kubernetes/pki/apiserver.crt \\ --tls-private-key-file=/etc/kubernetes/pki/apiserver.key \\ --kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt \\ --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt \\ --enabled-hooks=NamespaceLifecycle,LimitRanger,ServiceAccount,PersistentVolumeLabel,DefaultStorageClass,ResourceQuota \\ --requestheader-group-headers=X-Remote-Group \\ --kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key \\ --secure-port=6443 \\ --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname \\ --service-cluster-ip-range=10.96.0.0/12 \\ --advertise-address=192.168.0.20 --etcd-servers=http://127.0.0.1:2379","title":"\u542f\u52a8 apiserver \u793a\u4f8b"},{"location":"4.kube-api-server/5.%E9%AB%98%E5%8F%AF%E7%94%A8APIServer/#apiserver_1","text":"apiserver \u662f\u65e0\u72b6\u6001\u7684 Rest Server \u65e0\u72b6\u6001\u6240\u4ee5\u65b9\u4fbf Scale Up/down \u8d1f\u8f7d\u5747\u8861 \u5728\u591a\u4e2a apiserver \u5b9e\u4f8b\u4e4b\u4e0a, \u914d\u7f6e\u8d1f\u8f7d\u5747\u8861 \u8bc1\u4e66\u53ef\u80fd\u9700\u8981\u52a0\u4e0a Loadbalancer VIP \u91cd\u65b0\u751f\u6210","title":"\u6784\u5efa\u9ad8\u53ef\u7528\u7684\u591a\u526f\u672c apiserver"},{"location":"4.kube-api-server/5.%E9%AB%98%E5%8F%AF%E7%94%A8APIServer/#cpu","text":"\u968f\u7740\u96c6\u7fa4\u4e2d\u8282\u70b9\u6570\u91cf\u4e0d\u65ad\u589e\u591a, APIServer \u5bf9 CPU \u548c\u5185\u5b58\u7684\u5f00\u9500\u4e5f\u4e0d\u65ad\u589e\u5927. \u8fc7\u5c11\u7684 CPU \u8d44\u6e90\u4f1a\u964d\u4f4e\u5176\u5904\u7406\u6548\u7387, \u8fc7\u5c11\u7684\u5185\u5b58\u8d44\u6e90\u4f1a\u5bfc\u81f4 Pod \u88ab OOMKilled, \u76f4\u63a5\u5bfc\u81f4\u670d\u52a1\u4e0d\u53ef\u7528. \u5728\u89c4\u5212 APIServer\u8d44\u6e90\u65f6, \u4e0d\u80fd\u4ec5\u770b\u5f53\u4e0b\u9700\u6c42, \u4e5f\u8981\u4e3a\u672a\u6765\u9884\u7559\u5145\u5206.","title":"\u9884\u7559\u5145\u8db3\u7684 CPU\u3001\u5185\u5b58\u8d44\u6e90"},{"location":"4.kube-api-server/5.%E9%AB%98%E5%8F%AF%E7%94%A8APIServer/#ratelimit","text":"APIServer\u7684\u53c2\u6570\"--max-requests-inflight\"\u548c\"--max-mutating-requests-inflight\"\u652f\u6301\u5728\u7ed9\u5b9a\u65f6\u95f4\u5185\u9650\u5236\u5e76\u884c\u5904\u7406\u8bfb\u8bf7\u6c42(\u5305\u62ec Get\u3001List \u548c Watch \u64cd\u4f5c)\u548c\u5199\u8bf7\u6c42(\u5305\u62ecCreate\u3001Delete\u3001Update \u548c Patch \u64cd\u4f5c)\u7684\u6700\u5927\u6570\u91cf. \u5f53 APIServer \u63a5\u6536\u5230\u7684\u8bf7\u6c42\u8d85\u8fc7\u8fd9\u4e24\u4e2a\u53c2\u6570\u8bbe\u5b9a\u7684\u503c\u65f6, \u518d\u63a5\u6536\u5230\u7684\u8bf7\u6c42\u5c06\u4f1a\u88ab\u76f4\u63a5\u62d2\u7edd. \u901a\u8fc7\u901f\u7387\u9650\u5236\u673a\u5236, \u53ef\u4ee5\u6709\u6548\u5730\u63a7\u5236 APIServer \u5185\u5b58\u7684\u4f7f\u7528. \u5982\u679c\u8be5\u503c\u914d\u7f6e\u8fc7\u4f4e, \u4f1a\u7ecf\u5e38\u51fa\u73b0\u8bf7\u6c42\u8d85\u8fc7\u9650\u5236\u7684\u9519\u8bef, \u5982\u679c\u914d\u7f6e\u8fc7\u9ad8, \u5219 APIServer \u53ef\u80fd\u4f1a\u56e0\u4e3a\u5360\u7528\u8fc7\u591a\u5185\u5b58\u800c\u88ab\u5f3a\u5236\u7ec8\u6b62, \u56e0\u6b64\u9700\u8981\u6839\u636e\u5b9e\u9645\u7684\u8fd0\u884c\u73af\u5883, \u7ed3\u5408\u5b9e\u65f6\u7528\u6237\u8bf7\u6c42\u6570\u91cf\u548c APIServer \u7684\u8d44\u6e90\u914d\u7f6e\u8fdb\u884c\u8c03\u4f18. \u5ba2\u6237\u7aef\u5728\u63a5\u6536\u5230\u62d2\u7edd\u8bf7\u6c42\u7684\u8fd4\u56de\u503c\u540e, \u5e94\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4\u518d\u53d1\u8d77\u91cd\u8bd5, \u65e0\u95f4\u9694\u7684\u91cd\u8bd5\u4f1a\u52a0\u91cd APIServer \u7684\u538b\u529b, \u5bfc\u81f4\u6027\u80fd\u8fdb\u4e00\u6b65\u964d\u4f4e. \u9488\u5bf9\u5e76\u884c\u5904\u7406\u8bf7\u6c42\u6570\u7684\u8fc7\u6ee4\u9897\u7c92\u5ea6\u592a\u5927, \u5728\u8bf7\u6c42\u6570\u91cf\u6bd4\u8f83\u591a\u7684\u573a\u666f, \u91cd\u8981\u7684\u6d88\u606f\u53ef\u80fd\u4f1a\u88ab\u62d2\u7edd\u6389, \u81ea 1.18 \u7248\u672c\u5f00\u59cb, \u793e\u533a\u5f15\u5165\u4e86\u4f18\u5148\u7ea7\u548c\u516c\u5e73\u4fdd\u8bc1 (Priority and Fairness)\u529f\u80fd, \u4ee5\u63d0\u4f9b\u66f4\u7ec6\u7c92\u5ea6\u5730\u5ba2\u6237\u7aef\u8bf7\u6c42\u63a7\u5236. \u8be5\u529f\u80fd\u652f\u6301\u5c06\u4e0d\u540c\u7528\u6237\u6216\u4e0d\u540c\u7c7b\u578b\u7684\u8bf7\u6c42\u8fdb\u884c\u4f18\u5148\u7ea7\u5f52\u7c7b, \u4fdd\u8bc1\u9ad8\u4f18\u5148\u7ea7\u7684\u8bf7\u6c42\u603b\u662f\u80fd\u591f\u66f4\u5feb\u5f97\u5230\u5904\u7406, \u4ece\u800c\u4e0d\u53d7\u4f4e\u4f18\u5148\u7ea7\u8bf7\u6c42\u7684\u5f71\u54cd.","title":"\u5584\u7528\u901f\u7387\u9650\u5236(RateLimit)"},{"location":"4.kube-api-server/5.%E9%AB%98%E5%8F%AF%E7%94%A8APIServer/#_1","text":"APIServer \u4e0e etcd \u4e4b\u95f4\u57fa\u4e8e gRPC \u534f\u8bae\u8fdb\u884c\u901a\u4fe1, gRPC \u534f\u8bae\u4fdd\u8bc1\u4e86\u4e8c\u8005\u5728\u5927\u89c4\u6a21\u96c6\u7fa4\u4e2d\u7684\u6570\u636e\u9ad8\u901f\u4f20\u8f93. gRPC \u57fa\u4e8e\u8fde\u63a5\u590d\u7528\u7684 HTTP/2 \u534f\u8bae, \u5373\u9488\u5bf9\u76f8\u540c\u5206\u7ec4\u7684\u5bf9\u8c61, APIServer \u548c etcd \u4e4b\u95f4\u5171\u4eab\u76f8\u540c\u7684 TCP \u8fde\u63a5, \u4e0d\u540c\u8bf7\u6c42\u7531\u4e0d\u540c\u7684 stream \u4f20\u8f93. \u4e00\u4e2a HTTP/2 \u8fde\u63a5\u6709\u5176 stream \u914d\u989d , \u914d\u989d\u7684\u5927\u5c0f\u9650\u5236\u4e86\u80fd\u652f\u6301\u7684\u5e76\u53d1\u8bf7\u6c42. APIServer \u63d0\u4f9b\u4e86\u96c6\u7fa4\u5bf9\u8c61\u7684\u7f13\u5b58\u673a\u5236, \u5f53\u5ba2\u6237\u7aef\u53d1\u8d77\u67e5\u8be2\u8bf7\u6c42\u65f6, APIServer \u9ed8\u8ba4\u4f1a\u5c06\u5176\u7f13\u5b58\u76f4\u63a5\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef. \u7f13\u5b58\u533a\u5927\u5c0f\u53ef\u4ee5\u901a\u8fc7\u53c2\u6570 \"--watch-cache-sizes\" \u8bbe\u7f6e. \u9488\u5bf9\u8bbf\u95ee\u8bf7\u6c42\u6bd4\u8f83\u591a\u7684\u5bf9\u8c61, \u9002\u5f53\u8bbe\u7f6e\u7f13\u5b58\u7684\u5927\u5c0f, \u6781\u5927\u964d\u4f4e\u5bf9 etcd \u7684\u8bbf\u95ee\u9891\u7387, \u8282\u7701\u4e86\u7f51\u7edc\u8c03\u7528, \u964d\u4f4e\u4e86\u5bf9 etcd \u96c6\u7fa4\u7684\u8bfb\u5199\u538b\u529b, \u4ece\u800c\u63d0\u9ad8\u5bf9\u8c61\u8bbf\u95ee\u7684\u6027\u80fd. \u4f46\u662f APIServer \u4e5f\u662f\u5141\u8bb8\u5ba2\u6237\u7aef\u5ffd\u7565\u7f13\u5b58\u7684, \u4f8b\u5982\u5ba2\u6237\u7aef\u8bf7\u6c42\u4e2d ListOption \u4e2d\u6ca1\u6709\u8bbe\u7f6e resourceVersion, \u8fd9\u65f6 APIServer \u76f4\u63a5\u4ece etcd \u62c9\u53d6\u6700\u65b0\u6570\u636e\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef. \u5ba2\u6237\u7aef\u5e94\u5c3d\u91cf\u907f\u514d\u6b64\u64cd\u4f5c, \u5e94\u5728 ListOption \u4e2d\u8bbe\u7f6e resourceVersion \u4e3a 0, APIServer \u5219\u5c06\u4ece\u7f13\u5b58\u91cc\u9762\u8bfb\u53d6\u6570\u636e, \u800c\u4e0d\u4f1a\u76f4\u63a5\u8bbf\u95ee etcd.","title":"\u8bbe\u7f6e\u5408\u9002\u7684\u7f13\u5b58\u5927\u5c0f"},{"location":"4.kube-api-server/5.%E9%AB%98%E5%8F%AF%E7%94%A8APIServer/#_2","text":"\u5f53\u67e5\u8be2\u8bf7\u6c42\u7684\u8fd4\u56de\u6570\u636e\u8f83\u5927\u4e14\u6b64\u7c7b\u8bf7\u6c42\u5e76\u53d1\u91cf\u8f83\u5927\u65f6, \u5bb9\u6613\u5f15\u53d1 TCP \u94fe\u8def\u7684\u963b\u585e, \u5bfc\u81f4\u5176\u4ed6\u67e5\u8be2\u64cd\u4f5c\u8d85\u65f6. \u56e0\u6b64\u57fa\u4e8e Kubernetes \u5f00\u53d1\u7ec4\u4ef6\u65f6, \u4f8b\u5982\u67d0\u4e9b DaemonSet \u548c Controller, \u5982\u679c\u8981\u67e5\u8be2\u67d0\u7c7b\u5bf9\u8c61, \u5e94\u5c3d\u91cf\u901a\u8fc7\u957f\u8fde\u63a5 ListWatch \u76d1\u542c\u5bf9\u8c61\u53d8\u66f4, \u907f\u514d\u5168\u91cf\u4ece APIServer \u83b7\u53d6\u8d44\u6e90. \u5982\u679c\u5728\u540c\u4e00\u5e94\u7528\u7a0b\u5e8f\u4e2d, \u5982\u679c\u6709\u591a\u4e2a Informer \u76d1\u542c APIServer \u8d44\u6e90\u53d8\u5316, \u53ef\u4ee5\u5c06\u8fd9\u4e9b Informer \u5408\u5e76, \u51cf\u5c11\u548c APIServer \u7684\u957f\u8fde\u63a5\u6570, \u4ece\u800c\u964d\u4f4e\u5bf9 APIServer \u7684\u538b\u529b.","title":"\u5ba2\u6237\u7aef\u5c3d\u91cf\u4f7f\u7528\u957f\u8fde\u63a5"},{"location":"4.kube-api-server/5.%E9%AB%98%E5%8F%AF%E7%94%A8APIServer/#apiserver_2","text":"\u5bf9\u5916\u90e8\u5ba2\u6237(user/client/admin), \u6c38\u8fdc\u53ea\u901a\u8fc7 LoadBalancer \u8bbf\u95ee \u53ea\u6709\u5f53\u8d1f\u8f7d\u5747\u8861\u51fa\u73b0\u6545\u969c\u65f6, \u7ba1\u7406\u5458\u624d\u5207\u6362\u5230 apiserver IP \u8fdb\u884c\u7ba1\u7406 \u5185\u90e8\u5ba2\u6237\u7aef, \u4f18\u5148\u8bbf\u95ee cluster IP\uff1f(\u662f\u5426\u4e00\u5b9a\u5982\u6b64\uff1f)","title":"\u5982\u4f55\u8bbf\u95eeAPIServer"},{"location":"4.kube-api-server/5.%E9%AB%98%E5%8F%AF%E7%94%A8APIServer/#kubernetes","text":"\u6388\u4fe1 \u8ba4\u8bc1: \u7981\u6b62\u533f\u540d\u8bbf\u95ee, \u53ea\u5141\u8bb8\u53ef\u4fe1\u7528\u6237\u505a\u64cd\u4f5c. \u6388\u6743: \u57fa\u4e8e\u6388\u4fe1\u7684\u64cd\u4f5c, \u9632\u6b62\u591a\u7528\u6237\u4e4b\u95f4\u4e92\u76f8\u5f71\u54cd, \u6bd4\u5982\u666e\u901a\u7528\u6237\u5220\u9664 Kubernetes \u6838\u5fc3\u670d\u52a1, \u6216\u8005 A \u7528\u6237\u5220\u9664\u6216\u4fee\u6539 B \u7528\u6237\u7684\u5e94\u7528. \u9694\u79bb \u53ef\u89c1\u884c\u9694\u79bb: \u7528\u6237\u53ea\u5173\u5fc3\u81ea\u5df1\u7684\u5e94\u7528, \u65e0\u9700\u770b\u5230\u5176\u4ed6\u7528\u6237\u7684\u670d\u52a1\u548c\u90e8\u7f72. \u8d44\u6e90\u9694\u79bb: \u6709\u4e9b\u5173\u952e\u9879\u76ee\u5bf9\u8d44\u6e90\u9700\u6c42\u8f83\u9ad8, \u9700\u8981\u4e13\u6709\u8bbe\u5907, \u4e0d\u4e0e\u5176\u4ed6\u4eba\u5171\u4eab. \u5e94\u7528\u8bbf\u95ee\u9694\u79bb: \u7528\u6237\u521b\u5efa\u7684\u670d\u52a1, \u6309\u65e2\u5b9a\u89c4\u5219\u5141\u8bb8\u5176\u4ed6\u7528\u6237\u8bbf\u95ee. \u8d44\u6e90\u7ba1\u7406 Quota\u7ba1\u7406 \u8c01\u80fd\u7528\u591a\u5c11\u8d44\u6e90\uff1f","title":"\u642d\u5efa\u591a\u79df\u6237\u7684Kubernetes\u96c6\u7fa4"},{"location":"4.kube-api-server/5.%E9%AB%98%E5%8F%AF%E7%94%A8APIServer/#_3","text":"\u4e0e\u4f01\u4e1a\u73b0\u6709\u8ba4\u8bc1\u7cfb\u7edf\u96c6\u6210 \u5f88\u591a\u4f01\u4e1a\u57fa\u4e8e Microsoft Active Directory \u63d0\u4f9b\u8ba4\u8bc1\u670d\u52a1 \u9009\u62e9\u8ba4\u8bc1\u63d2\u4ef6 \u9009\u62e9 webhook \u4f5c\u4e3a\u8ba4\u8bc1\u63d2\u4ef6(*\u4ee5\u6b64\u4e3a\u4f8b\u5c55\u5f00) \u4e5f\u53ef\u4ee5\u9009\u62e9 Keystone \u4f5c\u4e3a\u8ba4\u8bc1\u63d2\u4ef6, \u4ee5 Microsoft Ad \u4f5c\u4e3a backend \u642d\u5efa keystone \u670d\u52a1 \u4e00\u65e6\u8ba4\u8bc1\u5b8c\u6210, Kubernetes \u5373\u53ef\u83b7\u53d6\u5f53\u524d\u7528\u6237\u4fe1\u606f(\u4e3b\u8981\u662f\u7528\u6237\u540d), \u5e76\u9488\u5bf9\u8be5\u7528\u6237\u505a\u6388\u6743. \u6388\u6743\u548c\u51c6\u5165\u63a7\u5236\u5b8c\u6210\u540e, \u8be5\u7528\u6237\u7684\u8bf7\u6c42\u5b8c\u6210.","title":"\u8ba4\u8bc1"},{"location":"4.kube-api-server/5.%E9%AB%98%E5%8F%AF%E7%94%A8APIServer/#apiservice","text":"apiVersion: apiregistration.k8s.io/v1 kind: APIService metadata: labels: kube-aggregator.kubernetes.io/automanaged: onstart name: v1. spec: groupPriorityMinimum: 18000 version: v1 versionPriority: 1 status: conditions: - lastTransitionTime: \"2020-08-16T05:35:33Z\" message: Local APIServices are always available reason: Local status: \"True\" type: Available","title":"\u6ce8\u518cAPIService"},{"location":"4.kube-api-server/5.%E9%AB%98%E5%8F%AF%E7%94%A8APIServer/#_4","text":"ABAC \u6709\u671f\u5c40\u9650\u6027, \u9488\u5bf9\u6bcf\u4e2a account \u90fd\u9700\u8981\u505a\u914d\u7f6e, \u5e76\u4e14\u9700\u8981\u91cd\u542f apiserver RBAC \u66f4\u7075\u6d3b, \u66f4\u7b26\u5408\u6211\u4eec\u901a\u5e38\u719f\u77e5\u7684\u6743\u9650\u7ba1\u7406","title":"\u6388\u6743"},{"location":"4.kube-api-server/5.%E9%AB%98%E5%8F%AF%E7%94%A8APIServer/#rbac","text":"","title":"RBAC"},{"location":"4.kube-api-server/5.%E9%AB%98%E5%8F%AF%E7%94%A8APIServer/#_5","text":"User \u7ba1\u7406\u5458 \u6240\u6709\u8d44\u6e90\u7684\u6240\u6709\u6743\u9650\uff1f\uff1f \u666e\u901a\u7528\u6237 \u662f\u5426\u6709\u8be5\u7528\u6237\u521b\u5efa\u7684 namespace \u4e0b\u7684\u6240\u6709 object \u7684\u64cd\u4f5c\u6743\u9650\uff1f \u5bf9\u5176\u4ed6\u7528\u6237\u7684 namespace \u8d44\u6e90\u662f\u5426\u53ef\u8bfb, \u662f\u5426\u53ef\u5199\uff1f SystemAccount SystemAccount \u662f\u5f00\u53d1\u8005 (kubernetes developer \u6216\u8005 domain developer) \u521b\u5efa\u5e94\u7528\u540e, \u5e94\u7528\u4e8e apiserver \u901a\u8baf\u9700\u8981\u7684\u8eab\u4efd \u7528\u6237\u53ef\u4ee5\u521b\u5efa\u81ea\u5b9a\u7684 ServiceAccount, kubernetes \u4e5f\u4e3a\u6bcf\u4e2a namespace \u521b\u5efa default ServiceAccount Default ServiceAccount \u901a\u5e38\u9700\u8981\u7ed9\u5b9a\u6743\u9650\u4ee5\u540e\u624d\u80fd\u5bf9 apiserver \u505a\u5199\u64cd\u4f5c","title":"\u89c4\u5212\u7cfb\u7edf\u89d2\u8272"},{"location":"4.kube-api-server/5.%E9%AB%98%E5%8F%AF%E7%94%A8APIServer/#_6","text":"\u5728 cluster \u521b\u5efa\u65f6(kube-up.sh), \u521b\u5efa\u81ea\u5b9a\u4e49\u7684 role, \u6bd4\u5982 namespace-creator namespace-creator role \u5b9a\u4e49\u7528\u6237\u53ef\u64cd\u4f5c\u7684\u5bf9\u8c61\u548c\u5bf9\u5e94\u7684\u8bfb\u5199\u64cd\u4f5c. \u521b\u5efa\u81ea\u5b9a\u4e49\u7684 namespace admission controller \u5f53 namespace \u521b\u5efa\u8bf7\u6c42\u88ab\u5904\u7406\u65f6, \u83b7\u53d6\u5f53\u524d\u7528\u6237\u4fe1\u606f\u5e76 annotate (\u6ce8\u91ca)\u5230 namespace \u521b\u5efa RBAC controller Watch namespace \u7684\u521b\u5efa\u4e8b\u4ef6 \u83b7\u53d6\u5f53\u524d namespace \u7684\u521b\u5efa\u8005\u4fe1\u606f \u5728\u5f53\u524d namespace \u521b\u5efa rolebinding \u5bf9\u8c61, \u5e76\u5c06 namespace-creator \u89d2\u8272\u548c\u7528\u6237\u7ed1\u5b9a","title":"\u5b9e\u73b0\u65b9\u6848"},{"location":"4.kube-api-server/5.%E9%AB%98%E5%8F%AF%E7%94%A8APIServer/#_7","text":"ClusterRole \u662f\u975e namespace \u7ed1\u5b9a\u7684, \u9488\u5bf9\u6574\u4e2a\u96c6\u7fa4\u751f\u6548 \u901a\u5e38\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u7ba1\u7406\u5458\u89d2\u8272, \u5e76\u4e14\u7ed1\u5b9a\u7ed9\u5f00\u53d1\u8fd0\u8425\u56e2\u961f\u6210\u5458 ThirdPartyResource \u548c CustomResourceDefinition \u662f\u5168\u5c40\u8d44\u6e90, \u666e\u901a\u7528\u6237\u521b\u5efa ThirdPartyResource \u4ee5\u540e, \u9700\u8981\u7ba1\u7406\u5458\u6388\u4e88\u76f8\u5e94\u6743\u9650\u540e\u624d\u80fd\u771f\u6b63\u64cd\u4f5c\u8be5\u5bf9\u8c61 \u9488\u5bf9\u6240\u6709\u7684\u89d2\u8272\u7ba1\u7406, \u5efa\u8bae\u521b\u5efaspec, \u7528\u6e90\u4ee3\u7801\u9a71\u52a8 \u867d\u7136\u53ef\u4ee5\u901a\u8fc7 edit \u64cd\u4f5c\u6765\u4fee\u6539\u6743\u9650, \u4f46\u540e\u671f\u4f1a\u5bfc\u81f4\u6743\u9650\u7ba1\u7406\u6df7\u4e71, \u53ef\u80fd\u4f1a\u6709\u5f88\u591a\u4e34\u65f6\u521b\u5efa\u51fa\u6765\u7684\u89d2\u8272\u548c\u89d2\u8272\u7ed1\u5b9a\u5bf9\u8c61, \u91cd\u590d\u7ed1\u5b9a\u67d0\u4e00\u4e2a\u8d44\u6e90\u6743\u9650 \u6743\u9650\u662f\u53ef\u4ee5\u4f20\u9012\u7684, \u7528\u6237 A \u53ef\u4ee5\u5c06\u5176\u5bf9\u67d0\u5bf9\u8c61\u7684\u67d0\u64cd\u4f5c, \u62bd\u53d6\u6210\u4e00\u4e2a\u6743\u9650, \u5e76\u8d4b\u7ed9\u7528\u6237 B \u9632\u6b62\u6d77\u91cf\u7684\u89d2\u8272\u548c\u89d2\u8272\u7ed1\u5b9a\u5bf9\u8c61, \u56e0\u4e3a\u5927\u91cf\u7684\u5bf9\u8c61\u4f1a\u5bfc\u81f4\u9274\u6743\u6548\u7387\u4f4e, \u540c\u65f6\u7ed9 apiserver \u589e\u52a0\u8d1f\u62c5 ServiceAccount \u4e5f\u9700\u8981\u6388\u6743\u7684, \u5426\u5219\u4f60\u7684 component \u53ef\u80fd\u65e0\u6cd5\u64cd\u4f5c\u67d0\u5bf9\u8c61 Tips: SSH \u5230 master \u8282\u70b9\u901a\u8fc7 insecure port \u8bbf\u95ee apiserver \u53ef\u7ed5\u8fc7\u9274\u6743, \u5f53\u9700\u8981\u505a\u7ba1\u7406\u64cd\u4f5c\u53c8\u6ca1\u6709\u6743\u9650\u65f6\u53ef\u4ee5\u4f7f\u7528(\u4e0d\u63a8\u8350)","title":"\u4e0e\u6743\u9650\u76f8\u5173\u7684\u5176\u4ed6\u6700\u4f73\u5b9e\u8df5"},{"location":"4.kube-api-server/6.apimachinery/","text":"apimachinery https://github.com/kubernetes/apimachinery https://github.com/kubernetes/kubernetes/tree/master/staging/src/k8s.io/apimachinery \u56de\u987eGKV Group Kind Version Internel version \u548cExternal version \u7248\u672c\u8f6c\u6362 \u5982\u4f55\u5b9a\u4e49 Group pkg/apis/core/register.go \u5b9a\u4e49 group GroupName \u5b9a\u4e49 groupversion var SchemeGroupVersion = schema .GroupVersion{Group: GroupName, Version: runtime .APIVersionInternal} \u5b9a\u4e49SchemeBuilder var ( SchemeBuilder = runtime.NewSchemeBuilder(addKnownTypes) AddToScheme = SchemeBuilder.AddToScheme ) \u5c06\u5bf9\u8c61\u52a0\u5165SchemeBuild func addKnownTypes(scheme *runtime.Scheme) error { if err := scheme.AddIgnoredConversionType(&metav1.TypeMeta{}, &metav1.TypeMeta{}); err != nil { return err } scheme.AddKnownTypes(SchemeGroupVersion, &Pod{}, &PodList{}, }} \u5b9a\u4e49\u5bf9\u8c61\u7c7b\u578b types.go List \u5355\u4e00\u5bf9\u8c61\u6570\u636e\u7ed3\u6784 TypeMeta ObjectMeta Spec Status \u4ee3\u7801\u751f\u6210 Tags Global Tags \u5b9a\u4e49\u5728doc.go\u4e2d // +k8s:deepcopy-gen=package Local Tags \u5b9a\u4e49\u5728types.go\u4e2d\u7684\u6bcf\u4e2a\u5bf9\u8c61\u91cc // +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object // +genclient // +genclient:nonNamespaced // +genclient:noVerbs // +genclient:onlyVerbs=create,delete // +genclient:skipVerbs=get,list,create,update,patch,delete,deleteCollection,watch // +genclient:method=Create,verb=create,result=k8s.io/apimachinery/pkg/apis/meta/v1.Status \u5b9e\u73b0 etcd storage pkg/registry/core/configmap/storage/storage.go func NewREST(optsGetter generic.RESTOptionsGetter) *REST { store := &genericregistry.Store{ NewFunc: func() runtime.Object { return &api.ConfigMap{} }, NewListFunc: func() runtime.Object { return &api.ConfigMapList{} }, DefaultQualifiedResource: api.Resource(\"configmaps\"), CreateStrategy: configmap.Strategy, UpdateStrategy: configmap.Strategy, DeleteStrategy: configmap.Strategy, TableConvertor: printerstorage.TableConvertor{TableGenerator: printers.NewTableGenerator().With(printersinternal.AddHandlers)}, } options := &generic.StoreOptions{RESTOptions: optsGetter} if err := store.CompleteWithOptions(options); err != nil { panic(err) // TODO: Propagate error up } return &REST{store} } \u521b\u5efa\u548c\u66f4\u65b0\u5bf9\u8c61\u65f6\u7684\u4e1a\u52a1\u903b\u8f91-Strategy func (strategy) PrepareForCreate(ctx context.Context, obj runtime.Object) { _ = obj.(*api.ConfigMap) } func (strategy) Validate(ctx context.Context, obj runtime.Object) field.ErrorList { cfg := obj.(*api.ConfigMap) return validation.ValidateConfigMap(cfg) } func (strategy) PrepareForUpdate(ctx context.Context, newObj, oldObj runtime.Object) { _ = oldObj.(*api.ConfigMap) _ = newObj.(*api.ConfigMap) } subresource \u4ec0\u4e48\u662f subresource, \u5185\u5d4c\u5728 kubernetes \u5bf9\u8c61\u4e2d, \u6709\u72ec\u7acb\u7684\u64cd\u4f5c\u903b\u8f91\u7684\u5c5e\u6027\u96c6\u5408, \u5982 podstatus statusStore.UpdateStrategy = pod.StatusStrategy var StatusStrategy = podStatusStrategy{Strategy} func (podStatusStrategy) PrepareForUpdate(ctx context.Context, obj, old runtime.Object) { newPod := obj.(*api.Pod) oldPod := old.(*api.Pod) newPod.Spec = oldPod.Spec newPod.DeletionTimestamp = nil // don't allow the pods/status endpoint to touch owner references since old kubelets corrupt them in a way // that breaks garbage collection newPod.OwnerReferences = oldPod.OwnerReferences } \u6ce8\u518c APIGroup \u5b9a\u4e49 Storage configMapStorage := configmapstore.NewREST(restOptionsGetter) restStorageMap := map[string]rest.Storage{ \"configMaps\": configMapStorage, } \u5b9a\u4e49\u5bf9\u8c61\u7684 StorageMap apiGroupInfo.VersionedResourcesStorageMap[\"v1\"] = restStorageMap \u5c06\u5bf9\u8c61\u6ce8\u518c\u81f3 APIServer (\u6302\u8f7d handler) if err := m.GenericAPIServer.InstallLegacyAPIGroup(genericapiserver.DefaultLegacyAPIPrefix, &apiGroupInfo); err != nil { klog.Fatalf(\"Error in registering group versions: %v\", err) } \u4ee3\u7801\u751f\u6210 deepcopy-gen \u4e3a\u5bf9\u8c61\u751f\u6210 DeepCopy \u65b9\u6cd5, \u7528\u4e8e\u521b\u5efa\u5bf9\u8c61\u526f\u672c client-gen \u521b\u5efa Clientset, \u7528\u4e8e\u64cd\u4f5c\u5bf9\u8c61\u7684 CRUD informer-gen \u4e3a\u5bf9\u8c61\u521b\u5efa Informer \u6846\u67b6, \u7528\u4e8e\u76d1\u542c\u5bf9\u8c61\u53d8\u5316 lister-gen \u4e3a\u5bf9\u8c61\u6784\u5efa Lister \u6846\u67b6, \u7528\u4e8e\u4e3a Get \u548c List \u64cd\u4f5c, \u6784\u5efa\u5ba2\u6237\u7aef\u7f13\u5b58 coversion-gen \u4e3a\u5bf9\u8c61\u6784\u5efa Conversion \u65b9\u6cd5, \u7528\u4e8e\u5185\u5916\u7248\u672c\u8f6c\u6362\u4ee5\u53ca\u4e0d\u540c\u7248\u672c\u53f7\u7684\u8f6c\u6362 https://github.com/kubernetes/code-generator hack/update-codegen.sh \u4f9d\u8d56 BUILD_TARGETS=( vendor/k8s.io/code-generator/cmd/client-gen vendor/k8s.io/code-generator/cmd/lister-gen vendor/k8s.io/code-generator/cmd/informer-gen ) \u751f\u6210\u547d\u4ee4 ${GOPATH}/bin/deepcopy-gen --input-dirs {versioned-package-pach} -O zz_generated.deepcopy \\ --bounding-dirs {output-package-path} \\ --go-header-file ${SCRIPT_ROOT}/hack/boilerplate.go.txt APIServer\u4ee3\u7801\u8d70\u8bfb https://cncamp.notion.site/kube-apiserver-10d5695cbbb14387b60c6d622005583d","title":"apimachinery"},{"location":"4.kube-api-server/6.apimachinery/#apimachinery","text":"https://github.com/kubernetes/apimachinery https://github.com/kubernetes/kubernetes/tree/master/staging/src/k8s.io/apimachinery","title":"apimachinery"},{"location":"4.kube-api-server/6.apimachinery/#gkv","text":"Group Kind Version Internel version \u548cExternal version \u7248\u672c\u8f6c\u6362","title":"\u56de\u987eGKV"},{"location":"4.kube-api-server/6.apimachinery/#group","text":"pkg/apis/core/register.go \u5b9a\u4e49 group GroupName \u5b9a\u4e49 groupversion var SchemeGroupVersion = schema .GroupVersion{Group: GroupName, Version: runtime .APIVersionInternal} \u5b9a\u4e49SchemeBuilder var ( SchemeBuilder = runtime.NewSchemeBuilder(addKnownTypes) AddToScheme = SchemeBuilder.AddToScheme ) \u5c06\u5bf9\u8c61\u52a0\u5165SchemeBuild func addKnownTypes(scheme *runtime.Scheme) error { if err := scheme.AddIgnoredConversionType(&metav1.TypeMeta{}, &metav1.TypeMeta{}); err != nil { return err } scheme.AddKnownTypes(SchemeGroupVersion, &Pod{}, &PodList{}, }}","title":"\u5982\u4f55\u5b9a\u4e49 Group"},{"location":"4.kube-api-server/6.apimachinery/#typesgo","text":"List \u5355\u4e00\u5bf9\u8c61\u6570\u636e\u7ed3\u6784 TypeMeta ObjectMeta Spec Status","title":"\u5b9a\u4e49\u5bf9\u8c61\u7c7b\u578b types.go"},{"location":"4.kube-api-server/6.apimachinery/#tags","text":"Global Tags \u5b9a\u4e49\u5728doc.go\u4e2d // +k8s:deepcopy-gen=package Local Tags \u5b9a\u4e49\u5728types.go\u4e2d\u7684\u6bcf\u4e2a\u5bf9\u8c61\u91cc // +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object // +genclient // +genclient:nonNamespaced // +genclient:noVerbs // +genclient:onlyVerbs=create,delete // +genclient:skipVerbs=get,list,create,update,patch,delete,deleteCollection,watch // +genclient:method=Create,verb=create,result=k8s.io/apimachinery/pkg/apis/meta/v1.Status","title":"\u4ee3\u7801\u751f\u6210 Tags"},{"location":"4.kube-api-server/6.apimachinery/#etcd-storage","text":"pkg/registry/core/configmap/storage/storage.go func NewREST(optsGetter generic.RESTOptionsGetter) *REST { store := &genericregistry.Store{ NewFunc: func() runtime.Object { return &api.ConfigMap{} }, NewListFunc: func() runtime.Object { return &api.ConfigMapList{} }, DefaultQualifiedResource: api.Resource(\"configmaps\"), CreateStrategy: configmap.Strategy, UpdateStrategy: configmap.Strategy, DeleteStrategy: configmap.Strategy, TableConvertor: printerstorage.TableConvertor{TableGenerator: printers.NewTableGenerator().With(printersinternal.AddHandlers)}, } options := &generic.StoreOptions{RESTOptions: optsGetter} if err := store.CompleteWithOptions(options); err != nil { panic(err) // TODO: Propagate error up } return &REST{store} }","title":"\u5b9e\u73b0 etcd storage"},{"location":"4.kube-api-server/6.apimachinery/#-strategy","text":"func (strategy) PrepareForCreate(ctx context.Context, obj runtime.Object) { _ = obj.(*api.ConfigMap) } func (strategy) Validate(ctx context.Context, obj runtime.Object) field.ErrorList { cfg := obj.(*api.ConfigMap) return validation.ValidateConfigMap(cfg) } func (strategy) PrepareForUpdate(ctx context.Context, newObj, oldObj runtime.Object) { _ = oldObj.(*api.ConfigMap) _ = newObj.(*api.ConfigMap) }","title":"\u521b\u5efa\u548c\u66f4\u65b0\u5bf9\u8c61\u65f6\u7684\u4e1a\u52a1\u903b\u8f91-Strategy"},{"location":"4.kube-api-server/6.apimachinery/#subresource","text":"\u4ec0\u4e48\u662f subresource, \u5185\u5d4c\u5728 kubernetes \u5bf9\u8c61\u4e2d, \u6709\u72ec\u7acb\u7684\u64cd\u4f5c\u903b\u8f91\u7684\u5c5e\u6027\u96c6\u5408, \u5982 podstatus statusStore.UpdateStrategy = pod.StatusStrategy var StatusStrategy = podStatusStrategy{Strategy} func (podStatusStrategy) PrepareForUpdate(ctx context.Context, obj, old runtime.Object) { newPod := obj.(*api.Pod) oldPod := old.(*api.Pod) newPod.Spec = oldPod.Spec newPod.DeletionTimestamp = nil // don't allow the pods/status endpoint to touch owner references since old kubelets corrupt them in a way // that breaks garbage collection newPod.OwnerReferences = oldPod.OwnerReferences }","title":"subresource"},{"location":"4.kube-api-server/6.apimachinery/#apigroup","text":"\u5b9a\u4e49 Storage configMapStorage := configmapstore.NewREST(restOptionsGetter) restStorageMap := map[string]rest.Storage{ \"configMaps\": configMapStorage, } \u5b9a\u4e49\u5bf9\u8c61\u7684 StorageMap apiGroupInfo.VersionedResourcesStorageMap[\"v1\"] = restStorageMap \u5c06\u5bf9\u8c61\u6ce8\u518c\u81f3 APIServer (\u6302\u8f7d handler) if err := m.GenericAPIServer.InstallLegacyAPIGroup(genericapiserver.DefaultLegacyAPIPrefix, &apiGroupInfo); err != nil { klog.Fatalf(\"Error in registering group versions: %v\", err) }","title":"\u6ce8\u518c APIGroup"},{"location":"4.kube-api-server/6.apimachinery/#_1","text":"deepcopy-gen \u4e3a\u5bf9\u8c61\u751f\u6210 DeepCopy \u65b9\u6cd5, \u7528\u4e8e\u521b\u5efa\u5bf9\u8c61\u526f\u672c client-gen \u521b\u5efa Clientset, \u7528\u4e8e\u64cd\u4f5c\u5bf9\u8c61\u7684 CRUD informer-gen \u4e3a\u5bf9\u8c61\u521b\u5efa Informer \u6846\u67b6, \u7528\u4e8e\u76d1\u542c\u5bf9\u8c61\u53d8\u5316 lister-gen \u4e3a\u5bf9\u8c61\u6784\u5efa Lister \u6846\u67b6, \u7528\u4e8e\u4e3a Get \u548c List \u64cd\u4f5c, \u6784\u5efa\u5ba2\u6237\u7aef\u7f13\u5b58 coversion-gen \u4e3a\u5bf9\u8c61\u6784\u5efa Conversion \u65b9\u6cd5, \u7528\u4e8e\u5185\u5916\u7248\u672c\u8f6c\u6362\u4ee5\u53ca\u4e0d\u540c\u7248\u672c\u53f7\u7684\u8f6c\u6362 https://github.com/kubernetes/code-generator","title":"\u4ee3\u7801\u751f\u6210"},{"location":"4.kube-api-server/6.apimachinery/#hackupdate-codegensh","text":"\u4f9d\u8d56 BUILD_TARGETS=( vendor/k8s.io/code-generator/cmd/client-gen vendor/k8s.io/code-generator/cmd/lister-gen vendor/k8s.io/code-generator/cmd/informer-gen ) \u751f\u6210\u547d\u4ee4 ${GOPATH}/bin/deepcopy-gen --input-dirs {versioned-package-pach} -O zz_generated.deepcopy \\ --bounding-dirs {output-package-path} \\ --go-header-file ${SCRIPT_ROOT}/hack/boilerplate.go.txt","title":"hack/update-codegen.sh"},{"location":"4.kube-api-server/6.apimachinery/#apiserver","text":"https://cncamp.notion.site/kube-apiserver-10d5695cbbb14387b60c6d622005583d","title":"APIServer\u4ee3\u7801\u8d70\u8bfb"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/","text":"\u8ba4\u8bc1\u7ec3\u4e60 X509 \u8bc1\u4e66 Create private key and csr openssl genrsa -out myuser.key 2048 \u8bf7\u6c42\u7b7e\u53d1\u8bc1\u4e66 openssl req -new -key myuser.key -out myuser.csr ----- Country Name (2 letter code) [AU]:CN State or Province Name (full name) [Some-State]:sz Locality Name (eg, city) []:sz Organization Name (eg, company) [Internet Widgits Pty Ltd]:myuser Organizational Unit Name (eg, section) []:myuser Common Name (e.g. server FQDN or YOUR name) []:myuser Email Address []:myuser@qq.com Please enter the following 'extra' attributes to be sent with your certificate request A challenge password []: An optional company name []: \u67e5\u770b\u8bc1\u4e66 cat myuser.csr | base64 | tr -d \"\\n\" openssl req -new -x509 -days 10000 -key .key -out <CA_public>.crt Encode csr cat myuser.csr | base64 | tr -d \"\\n\" output LS0tLS1CRUdJTiBDRVJUSUZJQ0FURSBSRVFVRVNULS0tLS0KTUlJQ3ZUQ0NBYVVDQVFBd2VERUxNQWtHQTFVRUJoTUNRMDR4Q3pBSkJnTlZCQWdNQW5ONk1Rc3dDUVlEVlFRSApEQUp6ZWpFUE1BMEdBMVVFQ2d3R2JYbDFjMlZ5TVE4d0RRWURWUVFMREFadGVYVnpaWEl4RHpBTkJnTlZCQU1NCkJtMTVkWE5sY2pFY01Cb0dDU3FHU0liM0RRRUpBUllOYlhsMWMyVnlRSEZ4TG1OdmJUQ0NBU0l3RFFZSktvWkkKaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMNlk2Q2cvcDd3QjBBRGhHbHZ3NDNyc0RSREY4bDRIWllSRgo1SHNSZmZVWVZ2eXI1aXAxbWx3bG9QNmlFVlU2dG9CV3dKaWIrWHFZeVJtZzNNMnJNVXN4Q29mMklYSVloUWRzClJqbTBwSEdQalBTaGcweDZxTkVJVmtjbENGMlg1NWpIU3FycVBBNnE4QW1DOXhITWUvRFB0cE56Q1RFYXgxamMKWTAvL1d0KzZzWlVTWFR1d0lDZ1NpQnZ5Qm1IVFBQaWZ6MjlUdmQwYURNRG1QUERRNUhSc2d4SVRCbWR0cWRsMApqYkU1ZEdrd3pzZ1ppZmxobjFsOG1kVVIzaWs0OHZ0VFNoNFpTLzhvSS9McGFyZVFySzBEYjVVZGpnVjRlNitlCk9DNU1lLzJ3T3VpS3FFMDM5YU1NS2k0TExjSnUwTlpnaXpXazVzUVhZcXNwTExyRERPa0NBd0VBQWFBQU1BMEcKQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJ3Snhvek1TVGQ1K2xqUnJjS2E5UXRwSENBcmhweWlLWExld0hlenBJQgpWWDZWU2NKcnFRZnREMlVQRTVicStvZDc0MWdsbDViL3RucC9wczlKS3FYT0hYNWR0OXNGeUEwMHBUMzhhZjdTCmhHM2pGMU8xcEM1dHBiVTE4REY3T1dIcENacTh3VGNPSlFmbmJKd3h6ZzRxMnNVbUVrUlhwS1RTWGd0eFpacUQKRGZySjJMRmpaM0RoTHFrVEQvb3lGVnV3eUs5bVV3aFZxT0VRLy9xOFNOVStXTmU0Q0lkZnc5TWs3azd2M0FsNwpuWU9lN2VkOFB5b2VYV2QxUHhCdEx0amVmZ0RJeHdrdGdVWHNHc0JOcm5qVnhDQk1rWi9ua3BJMnFXMlRXMk9RCnh0SmxzOVFWN3hBR0xWTEdZcXJPdWNrL2VnMUxVeFZLcHY0NExCRlpCTGViCi0tLS0tRU5EIENFUlRJRklDQVRFIFJFUVVFU1QtLS0tLQo= Replace request and create csr cat <<EOF | kubectl apply -f - apiVersion: certificates.k8s.io/v1 kind: CertificateSigningRequest metadata: name: myuser spec: request: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURSBSRVFVRVNULS0tLS0KTUlJQ3ZUQ0NBYVVDQVFBd2VERUxNQWtHQTFVRUJoTUNRMDR4Q3pBSkJnTlZCQWdNQW5ONk1Rc3dDUVlEVlFRSApEQUp6ZWpFUE1BMEdBMVVFQ2d3R2JYbDFjMlZ5TVE4d0RRWURWUVFMREFadGVYVnpaWEl4RHpBTkJnTlZCQU1NCkJtMTVkWE5sY2pFY01Cb0dDU3FHU0liM0RRRUpBUllOYlhsMWMyVnlRSEZ4TG1OdmJUQ0NBU0l3RFFZSktvWkkKaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMNlk2Q2cvcDd3QjBBRGhHbHZ3NDNyc0RSREY4bDRIWllSRgo1SHNSZmZVWVZ2eXI1aXAxbWx3bG9QNmlFVlU2dG9CV3dKaWIrWHFZeVJtZzNNMnJNVXN4Q29mMklYSVloUWRzClJqbTBwSEdQalBTaGcweDZxTkVJVmtjbENGMlg1NWpIU3FycVBBNnE4QW1DOXhITWUvRFB0cE56Q1RFYXgxamMKWTAvL1d0KzZzWlVTWFR1d0lDZ1NpQnZ5Qm1IVFBQaWZ6MjlUdmQwYURNRG1QUERRNUhSc2d4SVRCbWR0cWRsMApqYkU1ZEdrd3pzZ1ppZmxobjFsOG1kVVIzaWs0OHZ0VFNoNFpTLzhvSS9McGFyZVFySzBEYjVVZGpnVjRlNitlCk9DNU1lLzJ3T3VpS3FFMDM5YU1NS2k0TExjSnUwTlpnaXpXazVzUVhZcXNwTExyRERPa0NBd0VBQWFBQU1BMEcKQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJ3Snhvek1TVGQ1K2xqUnJjS2E5UXRwSENBcmhweWlLWExld0hlenBJQgpWWDZWU2NKcnFRZnREMlVQRTVicStvZDc0MWdsbDViL3RucC9wczlKS3FYT0hYNWR0OXNGeUEwMHBUMzhhZjdTCmhHM2pGMU8xcEM1dHBiVTE4REY3T1dIcENacTh3VGNPSlFmbmJKd3h6ZzRxMnNVbUVrUlhwS1RTWGd0eFpacUQKRGZySjJMRmpaM0RoTHFrVEQvb3lGVnV3eUs5bVV3aFZxT0VRLy9xOFNOVStXTmU0Q0lkZnc5TWs3azd2M0FsNwpuWU9lN2VkOFB5b2VYV2QxUHhCdEx0amVmZ0RJeHdrdGdVWHNHc0JOcm5qVnhDQk1rWi9ua3BJMnFXMlRXMk9RCnh0SmxzOVFWN3hBR0xWTEdZcXJPdWNrL2VnMUxVeFZLcHY0NExCRlpCTGViCi0tLS0tRU5EIENFUlRJRklDQVRFIFJFUVVFU1QtLS0tLQo= signerName: kubernetes.io/kube-apiserver-client expirationSeconds: 86400 # one day usages: - client auth EOF Approve csr kubectl certificate approve myuser Check csr kubectl get csr/myuser -o yaml Extract crt kubectl get csr myuser -o jsonpath='{.status.certificate}'| base64 -d > myuser.crt Set credential \u4fee\u6539\u8fde\u63a5\u914d\u7f6e kubectl config set-credentials myuser --client-key=myuser.key --client-certificate=myuser.crt --embed-certs=true \u67e5\u770b\u8fde\u63a5\u914d\u7f6e cat ~/.kube/config \u4f7f\u7528 myuser k get ns --user myuser output Error from server (Forbidden): namespaces is forbidden: User \"myuser\" cannot list resource \"namespaces\" in API group \"\" at the cluster scope Grant permission \u8d4b\u4e88\u6743\u9650 kubectl create role developer --verb=create --verb=get --verb=list --verb=update --verb=delete --resource=pods kubectl create rolebinding developer-binding-myuser --role=developer --user=myuser \u9a8c\u8bc1\u6743\u9650 k get ns --user myuser Error from server (Forbidden): namespaces is forbidden: User \"myuser\" cannot list resource \"namespaces\" in API group \"\" at the cluster scope k get pod --user myuser NAME READY STATUS RESTARTS AGE nginx 1/1 Running 2 (52s ago) 8d \u9759\u6001 Token \u6587\u4ef6 Put static-token to target folder mkdir -p /etc/kubernetes/auth cp static-token /etc/kubernetes/auth Backup your orginal apiserver cp /etc/kubernetes/manifests/kube-apiserver.yaml ~/kube-apiserver.yaml Override your kube-apiserver with the one with static-token config \u4e3b\u8981\u4fee\u6539 /etc/kubernetes/auth \u5bf9\u5e94\u7684\u90e8\u5206(--token-auth-file \u7b49) cp ./kube-apiserver.yaml /etc/kubernetes/manifests/kube-apiserver.yaml api server \u81ea\u52a8\u91cd\u542f ks get po -w \u68c0\u67e5\u5bf9\u8c61\u662f\u5426\u4fee\u6539 ks get po kube-apiserver-cjx -oyaml \u641c\u7d22 --token-auth-file \u5bf9\u5e94\u503c \u6dfb\u52a0\u7528\u6237 \u4fee\u6539\u6587\u4ef6 root: /etc/kubernetes/admin.conf \u666e\u901a\u7528\u6237: ~/.kube/config \u6dfb\u52a0 - name: static user: token: static-token Get kubernetes object with static token curl \u547d\u4ee4 \u6267\u884c k get ns default -v 9 \u83b7\u53d6 curl \u547d\u4ee4 curl -v -XGET -H \"Authorization: Bearer static-token\" 'https://192.168.1.218:6443/api/v1/namespaces/default' -k output ...... { \"kind\": \"Status\", \"apiVersion\": \"v1\", \"metadata\": { }, \"status\": \"Failure\", \"message\": \"namespaces \\\"default\\\" is forbidden: User \\\"static\\\" cannot get resource \\\"namespaces\\\" in API group \\\"\\\" in the namespace \\\"default\\\"\", \"reason\": \"Forbidden\", \"details\": { \"name\": \"default\", \"kind\": \"namespaces\" }, \"code\": 403 * Connection #0 to host 192.168.1.218 left intact } \u7528\u6237\u5df2\u8bc6\u522b\uff0c\u4f46\u662f\u6ca1\u6709\u6743\u9650\uff0c\u9274\u6743\u64cd\u4f5c\u540e\u9762\u505a \u5ba2\u6237\u7aef\u547d\u4ee4(\u5df2\u4fee\u6539\u4e86\u8fde\u63a5\u914d\u7f6e\u540e\u53ef\u7528) k get ns --user static output Error from server (Forbidden): namespaces is forbidden: User \"static\" cannot list resource \"namespaces\" in API group \"\" at the cluster scope \u7528\u6237\u5df2\u8bc6\u522b\uff0c\u4f46\u662f\u6ca1\u6709\u6743\u9650\uff0c\u9274\u6743\u64cd\u4f5c\u540e\u9762\u505a ServiceAccount \u7cfb\u7edf\u8d26\u6237, Kubernetes \u81ea\u5e26\u7684, \u5728\u6bcf\u6b21\u521b\u5efa ns \u65f6\u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a default \u7684 ServiceAccount \u67e5\u770b ServiceAccount \u4ee5 default namespace \u4e3a\u4f8b k -n default get sa default -oyaml output apiVersion: v1 kind: ServiceAccount metadata: creationTimestamp: \"2022-11-18T13:36:43Z\" name: default namespace: default resourceVersion: \"411\" uid: 9f9aa11d-b258-432f-b436-e205430632b5 secrets: - name: default-token-9nl4z \u67e5\u770b secrets k -n default get secret default-token-9nl4z -oyaml token \u89e3\u7801 echo ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklrSkRNRlZmUlhOVldrOVRlbEpYWmtWVll6VlZRbkF5UVU5YVMzYzNORlJqWldaSWNqQkhaSGw0YVUwaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUprWldaaGRXeDBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpXTnlaWFF1Ym1GdFpTSTZJbVJsWm1GMWJIUXRkRzlyWlc0dE9XNXNOSG9pTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxjblpwWTJVdFlXTmpiM1Z1ZEM1dVlXMWxJam9pWkdWbVlYVnNkQ0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG5WcFpDSTZJamxtT1dGaE1URmtMV0l5TlRndE5ETXlaaTFpTkRNMkxXVXlNRFUwTXpBMk16SmlOU0lzSW5OMVlpSTZJbk41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwa1pXWmhkV3gwT21SbFptRjFiSFFpZlEucXNDU0lnWWkxLU5rcVZNM3J3b0FZWUlXT2RKVktNRzVZbWYwSDZHMEN6MGUzMlYyQldhNEpmOVJxamJnSXVWLWxvSjAyNU9TZzIzak9HTHZhbVU2cnplZWM3U3BBeVVfclZ1N3g4RkF2U1oxejlxN2NtOGp3MzdCbkpLQUZOTGpDZGMwVHZhS0VFbjBHZ0JQSjY1S3hybEJmOUdRX25CcVJaZHMtT3MxemhuT0pBdEZyMlBjU3JRRGQxUlhWem9hMnJFMFBaTTJhTWNqVnRKcDlhTUJnMVhKd0NnWTRPU0NkZGp1SV93OUdaWnl0MzFVXzhyX3VVRWZMbHV5dWI4SHJrZzFyR1Y0NElobU53NW14cjFSYXhWZHA1WFNoNEc4clFkMjNNTTA0dW44anJtMXV5TW9rQWE1U3p3STFQRUR1TDgwb2FYaUdUNFpRbjctSXZ2bXBB|base64 -d output eyJhbGciOiJSUzI1NiIsImtpZCI6IkJDMFVfRXNVWk9TelJXZkVVYzVVQnAyQU9aS3c3NFRjZWZIcjBHZHl4aU0ifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImRlZmF1bHQtdG9rZW4tOW5sNHoiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGVmYXVsdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjlmOWFhMTFkLWIyNTgtNDMyZi1iNDM2LWUyMDU0MzA2MzJiNSIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpkZWZhdWx0OmRlZmF1bHQifQ.qsCSIgYi1-NkqVM3rwoAYYIWOdJVKMG5Ymf0H6G0Cz0e32V2BWa4Jf9RqjbgIuV-loJ025OSg23jOGLvamU6rzeec7SpAyU_rVu7x8FAvSZ1z9q7cm8jw37BnJKAFNLjCdc0TvaKEEn0GgBPJ65KxrlBf9GQ_nBqRZds-Os1zhnOJAtFr2PcSrQDd1RXVzoa2rE0PZM2aMcjVtJp9aMBg1XJwCgY4OSCddjuI_w9GZZyt31U_8r_uUEfLluyub8Hrkg1rGV44IhmNw5mxr1RaxVdp5XSh4G8rQd23MM04un8jrm1uyMokAa5SzwI1PEDuL80oaXiGT4ZQn7-IvvmpA JWT token \u5206\u4e09\u6bb5\uff0c\u7528\".\"\u5206\u9694 \u521b\u5efa ServiceAccount \u63a7\u5236\u5668\u4f1a\u81ea\u52a8\u751f\u6210 token k create sa demo k get sa k get sa demo -oyaml k get secret demo-token-7k9j2 -oyaml k get secret demo-token-7k9j2 -oyaml|grep token webhook Start authservice \u7f16\u8bd1 make build \u8fd0\u884c webhook \u7a0b\u5e8f ./bin/amd64/authn-webhook \u6d4b\u8bd5\u542f\u52a8\u7ed3\u679c curl 192.168.1.218:3000/authenticate outpur {\"apiVersion\":\"authentication.k8s.io/v1beta1\",\"kind\":\"TokenReview\",\"status\":{\"user\":{}}} Create webhook config mkdir -p /etc/config cp webhook-config.json /etc/config Backup old apiserver cp /etc/kubernetes/manifests/kube-apiserver.yaml ~/kube-apiserver.yaml Update apiserver configuration to enable webhook \u4e3b\u8981\u4fee\u6539: --authentication-token-webhook-config-file=/etc/config/webhook-config.json \u76f8\u5173\u914d\u7f6e(\u5173\u952e\u5b57: /etc/config) cp specs/kube-apiserver.yaml /etc/kubernetes/manifests/kube-apiserver.yaml Create a personal access token in github and put your github personal access token to kubeconfig \u5728 GitHub \u4e0a\u521b\u5efa token https://github.com/settings/tokens/new \u4e0b\uff0c New GitHub App \u590d\u5236\u4e0b\u6765\u751f\u6210\u7684 Token \u4fee\u6539\u8fde\u63a5\u914d\u7f6e vi ~/.kube/config - name: cjx user: token: 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 Get pods by cjx kubectl get po --user cjx output Error from server (Forbidden): pods is forbidden: User \"chenjinxin1124\" cannot list resource \"pods\" in API group \"\" in the namespace \"default\" webhook output 2022/11/27 22:32:10 receving request 2022/11/27 22:32:11 [Success] login as chenjinxin1124 Reset the env cp ~/kube-apiserver.yaml /etc/kubernetes/manifests/kube-apiserver.yaml","title":"\u8ba4\u8bc1\u7ec3\u4e60"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#_1","text":"","title":"\u8ba4\u8bc1\u7ec3\u4e60"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#x509","text":"","title":"X509 \u8bc1\u4e66"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#create-private-key-and-csr","text":"openssl genrsa -out myuser.key 2048 \u8bf7\u6c42\u7b7e\u53d1\u8bc1\u4e66 openssl req -new -key myuser.key -out myuser.csr ----- Country Name (2 letter code) [AU]:CN State or Province Name (full name) [Some-State]:sz Locality Name (eg, city) []:sz Organization Name (eg, company) [Internet Widgits Pty Ltd]:myuser Organizational Unit Name (eg, section) []:myuser Common Name (e.g. server FQDN or YOUR name) []:myuser Email Address []:myuser@qq.com Please enter the following 'extra' attributes to be sent with your certificate request A challenge password []: An optional company name []: \u67e5\u770b\u8bc1\u4e66 cat myuser.csr | base64 | tr -d \"\\n\" openssl req -new -x509 -days 10000 -key .key -out <CA_public>.crt","title":"Create private key and csr"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#encode-csr","text":"cat myuser.csr | base64 | tr -d \"\\n\" output LS0tLS1CRUdJTiBDRVJUSUZJQ0FURSBSRVFVRVNULS0tLS0KTUlJQ3ZUQ0NBYVVDQVFBd2VERUxNQWtHQTFVRUJoTUNRMDR4Q3pBSkJnTlZCQWdNQW5ONk1Rc3dDUVlEVlFRSApEQUp6ZWpFUE1BMEdBMVVFQ2d3R2JYbDFjMlZ5TVE4d0RRWURWUVFMREFadGVYVnpaWEl4RHpBTkJnTlZCQU1NCkJtMTVkWE5sY2pFY01Cb0dDU3FHU0liM0RRRUpBUllOYlhsMWMyVnlRSEZ4TG1OdmJUQ0NBU0l3RFFZSktvWkkKaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMNlk2Q2cvcDd3QjBBRGhHbHZ3NDNyc0RSREY4bDRIWllSRgo1SHNSZmZVWVZ2eXI1aXAxbWx3bG9QNmlFVlU2dG9CV3dKaWIrWHFZeVJtZzNNMnJNVXN4Q29mMklYSVloUWRzClJqbTBwSEdQalBTaGcweDZxTkVJVmtjbENGMlg1NWpIU3FycVBBNnE4QW1DOXhITWUvRFB0cE56Q1RFYXgxamMKWTAvL1d0KzZzWlVTWFR1d0lDZ1NpQnZ5Qm1IVFBQaWZ6MjlUdmQwYURNRG1QUERRNUhSc2d4SVRCbWR0cWRsMApqYkU1ZEdrd3pzZ1ppZmxobjFsOG1kVVIzaWs0OHZ0VFNoNFpTLzhvSS9McGFyZVFySzBEYjVVZGpnVjRlNitlCk9DNU1lLzJ3T3VpS3FFMDM5YU1NS2k0TExjSnUwTlpnaXpXazVzUVhZcXNwTExyRERPa0NBd0VBQWFBQU1BMEcKQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJ3Snhvek1TVGQ1K2xqUnJjS2E5UXRwSENBcmhweWlLWExld0hlenBJQgpWWDZWU2NKcnFRZnREMlVQRTVicStvZDc0MWdsbDViL3RucC9wczlKS3FYT0hYNWR0OXNGeUEwMHBUMzhhZjdTCmhHM2pGMU8xcEM1dHBiVTE4REY3T1dIcENacTh3VGNPSlFmbmJKd3h6ZzRxMnNVbUVrUlhwS1RTWGd0eFpacUQKRGZySjJMRmpaM0RoTHFrVEQvb3lGVnV3eUs5bVV3aFZxT0VRLy9xOFNOVStXTmU0Q0lkZnc5TWs3azd2M0FsNwpuWU9lN2VkOFB5b2VYV2QxUHhCdEx0amVmZ0RJeHdrdGdVWHNHc0JOcm5qVnhDQk1rWi9ua3BJMnFXMlRXMk9RCnh0SmxzOVFWN3hBR0xWTEdZcXJPdWNrL2VnMUxVeFZLcHY0NExCRlpCTGViCi0tLS0tRU5EIENFUlRJRklDQVRFIFJFUVVFU1QtLS0tLQo=","title":"Encode csr"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#replace-request-and-create-csr","text":"cat <<EOF | kubectl apply -f - apiVersion: certificates.k8s.io/v1 kind: CertificateSigningRequest metadata: name: myuser spec: request: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURSBSRVFVRVNULS0tLS0KTUlJQ3ZUQ0NBYVVDQVFBd2VERUxNQWtHQTFVRUJoTUNRMDR4Q3pBSkJnTlZCQWdNQW5ONk1Rc3dDUVlEVlFRSApEQUp6ZWpFUE1BMEdBMVVFQ2d3R2JYbDFjMlZ5TVE4d0RRWURWUVFMREFadGVYVnpaWEl4RHpBTkJnTlZCQU1NCkJtMTVkWE5sY2pFY01Cb0dDU3FHU0liM0RRRUpBUllOYlhsMWMyVnlRSEZ4TG1OdmJUQ0NBU0l3RFFZSktvWkkKaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMNlk2Q2cvcDd3QjBBRGhHbHZ3NDNyc0RSREY4bDRIWllSRgo1SHNSZmZVWVZ2eXI1aXAxbWx3bG9QNmlFVlU2dG9CV3dKaWIrWHFZeVJtZzNNMnJNVXN4Q29mMklYSVloUWRzClJqbTBwSEdQalBTaGcweDZxTkVJVmtjbENGMlg1NWpIU3FycVBBNnE4QW1DOXhITWUvRFB0cE56Q1RFYXgxamMKWTAvL1d0KzZzWlVTWFR1d0lDZ1NpQnZ5Qm1IVFBQaWZ6MjlUdmQwYURNRG1QUERRNUhSc2d4SVRCbWR0cWRsMApqYkU1ZEdrd3pzZ1ppZmxobjFsOG1kVVIzaWs0OHZ0VFNoNFpTLzhvSS9McGFyZVFySzBEYjVVZGpnVjRlNitlCk9DNU1lLzJ3T3VpS3FFMDM5YU1NS2k0TExjSnUwTlpnaXpXazVzUVhZcXNwTExyRERPa0NBd0VBQWFBQU1BMEcKQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJ3Snhvek1TVGQ1K2xqUnJjS2E5UXRwSENBcmhweWlLWExld0hlenBJQgpWWDZWU2NKcnFRZnREMlVQRTVicStvZDc0MWdsbDViL3RucC9wczlKS3FYT0hYNWR0OXNGeUEwMHBUMzhhZjdTCmhHM2pGMU8xcEM1dHBiVTE4REY3T1dIcENacTh3VGNPSlFmbmJKd3h6ZzRxMnNVbUVrUlhwS1RTWGd0eFpacUQKRGZySjJMRmpaM0RoTHFrVEQvb3lGVnV3eUs5bVV3aFZxT0VRLy9xOFNOVStXTmU0Q0lkZnc5TWs3azd2M0FsNwpuWU9lN2VkOFB5b2VYV2QxUHhCdEx0amVmZ0RJeHdrdGdVWHNHc0JOcm5qVnhDQk1rWi9ua3BJMnFXMlRXMk9RCnh0SmxzOVFWN3hBR0xWTEdZcXJPdWNrL2VnMUxVeFZLcHY0NExCRlpCTGViCi0tLS0tRU5EIENFUlRJRklDQVRFIFJFUVVFU1QtLS0tLQo= signerName: kubernetes.io/kube-apiserver-client expirationSeconds: 86400 # one day usages: - client auth EOF","title":"Replace request and create csr"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#approve-csr","text":"kubectl certificate approve myuser","title":"Approve csr"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#check-csr","text":"kubectl get csr/myuser -o yaml","title":"Check csr"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#extract-crt","text":"kubectl get csr myuser -o jsonpath='{.status.certificate}'| base64 -d > myuser.crt","title":"Extract crt"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#set-credential","text":"\u4fee\u6539\u8fde\u63a5\u914d\u7f6e kubectl config set-credentials myuser --client-key=myuser.key --client-certificate=myuser.crt --embed-certs=true \u67e5\u770b\u8fde\u63a5\u914d\u7f6e cat ~/.kube/config","title":"Set credential"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#myuser","text":"k get ns --user myuser output Error from server (Forbidden): namespaces is forbidden: User \"myuser\" cannot list resource \"namespaces\" in API group \"\" at the cluster scope","title":"\u4f7f\u7528 myuser"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#grant-permission","text":"\u8d4b\u4e88\u6743\u9650 kubectl create role developer --verb=create --verb=get --verb=list --verb=update --verb=delete --resource=pods kubectl create rolebinding developer-binding-myuser --role=developer --user=myuser \u9a8c\u8bc1\u6743\u9650 k get ns --user myuser Error from server (Forbidden): namespaces is forbidden: User \"myuser\" cannot list resource \"namespaces\" in API group \"\" at the cluster scope k get pod --user myuser NAME READY STATUS RESTARTS AGE nginx 1/1 Running 2 (52s ago) 8d","title":"Grant permission"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#token","text":"","title":"\u9759\u6001 Token \u6587\u4ef6"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#put-static-token-to-target-folder","text":"mkdir -p /etc/kubernetes/auth cp static-token /etc/kubernetes/auth","title":"Put static-token to target folder"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#backup-your-orginal-apiserver","text":"cp /etc/kubernetes/manifests/kube-apiserver.yaml ~/kube-apiserver.yaml","title":"Backup your orginal apiserver"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#override-your-kube-apiserver-with-the-one-with-static-token-config","text":"\u4e3b\u8981\u4fee\u6539 /etc/kubernetes/auth \u5bf9\u5e94\u7684\u90e8\u5206(--token-auth-file \u7b49) cp ./kube-apiserver.yaml /etc/kubernetes/manifests/kube-apiserver.yaml","title":"Override your kube-apiserver with the one with static-token config"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#api-server","text":"ks get po -w","title":"api server \u81ea\u52a8\u91cd\u542f"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#_2","text":"ks get po kube-apiserver-cjx -oyaml \u641c\u7d22 --token-auth-file \u5bf9\u5e94\u503c","title":"\u68c0\u67e5\u5bf9\u8c61\u662f\u5426\u4fee\u6539"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#_3","text":"","title":"\u6dfb\u52a0\u7528\u6237"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#_4","text":"root: /etc/kubernetes/admin.conf \u666e\u901a\u7528\u6237: ~/.kube/config \u6dfb\u52a0 - name: static user: token: static-token","title":"\u4fee\u6539\u6587\u4ef6"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#get-kubernetes-object-with-static-token","text":"","title":"Get kubernetes object with static token"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#curl","text":"\u6267\u884c k get ns default -v 9 \u83b7\u53d6 curl \u547d\u4ee4 curl -v -XGET -H \"Authorization: Bearer static-token\" 'https://192.168.1.218:6443/api/v1/namespaces/default' -k output ...... { \"kind\": \"Status\", \"apiVersion\": \"v1\", \"metadata\": { }, \"status\": \"Failure\", \"message\": \"namespaces \\\"default\\\" is forbidden: User \\\"static\\\" cannot get resource \\\"namespaces\\\" in API group \\\"\\\" in the namespace \\\"default\\\"\", \"reason\": \"Forbidden\", \"details\": { \"name\": \"default\", \"kind\": \"namespaces\" }, \"code\": 403 * Connection #0 to host 192.168.1.218 left intact } \u7528\u6237\u5df2\u8bc6\u522b\uff0c\u4f46\u662f\u6ca1\u6709\u6743\u9650\uff0c\u9274\u6743\u64cd\u4f5c\u540e\u9762\u505a","title":"curl \u547d\u4ee4"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#_5","text":"k get ns --user static output Error from server (Forbidden): namespaces is forbidden: User \"static\" cannot list resource \"namespaces\" in API group \"\" at the cluster scope \u7528\u6237\u5df2\u8bc6\u522b\uff0c\u4f46\u662f\u6ca1\u6709\u6743\u9650\uff0c\u9274\u6743\u64cd\u4f5c\u540e\u9762\u505a","title":"\u5ba2\u6237\u7aef\u547d\u4ee4(\u5df2\u4fee\u6539\u4e86\u8fde\u63a5\u914d\u7f6e\u540e\u53ef\u7528)"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#serviceaccount","text":"\u7cfb\u7edf\u8d26\u6237, Kubernetes \u81ea\u5e26\u7684, \u5728\u6bcf\u6b21\u521b\u5efa ns \u65f6\u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a default \u7684 ServiceAccount","title":"ServiceAccount"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#serviceaccount_1","text":"\u4ee5 default namespace \u4e3a\u4f8b k -n default get sa default -oyaml output apiVersion: v1 kind: ServiceAccount metadata: creationTimestamp: \"2022-11-18T13:36:43Z\" name: default namespace: default resourceVersion: \"411\" uid: 9f9aa11d-b258-432f-b436-e205430632b5 secrets: - name: default-token-9nl4z","title":"\u67e5\u770b ServiceAccount"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#secrets","text":"k -n default get secret default-token-9nl4z -oyaml token \u89e3\u7801 echo ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklrSkRNRlZmUlhOVldrOVRlbEpYWmtWVll6VlZRbkF5UVU5YVMzYzNORlJqWldaSWNqQkhaSGw0YVUwaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUprWldaaGRXeDBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpXTnlaWFF1Ym1GdFpTSTZJbVJsWm1GMWJIUXRkRzlyWlc0dE9XNXNOSG9pTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxjblpwWTJVdFlXTmpiM1Z1ZEM1dVlXMWxJam9pWkdWbVlYVnNkQ0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG5WcFpDSTZJamxtT1dGaE1URmtMV0l5TlRndE5ETXlaaTFpTkRNMkxXVXlNRFUwTXpBMk16SmlOU0lzSW5OMVlpSTZJbk41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwa1pXWmhkV3gwT21SbFptRjFiSFFpZlEucXNDU0lnWWkxLU5rcVZNM3J3b0FZWUlXT2RKVktNRzVZbWYwSDZHMEN6MGUzMlYyQldhNEpmOVJxamJnSXVWLWxvSjAyNU9TZzIzak9HTHZhbVU2cnplZWM3U3BBeVVfclZ1N3g4RkF2U1oxejlxN2NtOGp3MzdCbkpLQUZOTGpDZGMwVHZhS0VFbjBHZ0JQSjY1S3hybEJmOUdRX25CcVJaZHMtT3MxemhuT0pBdEZyMlBjU3JRRGQxUlhWem9hMnJFMFBaTTJhTWNqVnRKcDlhTUJnMVhKd0NnWTRPU0NkZGp1SV93OUdaWnl0MzFVXzhyX3VVRWZMbHV5dWI4SHJrZzFyR1Y0NElobU53NW14cjFSYXhWZHA1WFNoNEc4clFkMjNNTTA0dW44anJtMXV5TW9rQWE1U3p3STFQRUR1TDgwb2FYaUdUNFpRbjctSXZ2bXBB|base64 -d output eyJhbGciOiJSUzI1NiIsImtpZCI6IkJDMFVfRXNVWk9TelJXZkVVYzVVQnAyQU9aS3c3NFRjZWZIcjBHZHl4aU0ifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImRlZmF1bHQtdG9rZW4tOW5sNHoiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGVmYXVsdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjlmOWFhMTFkLWIyNTgtNDMyZi1iNDM2LWUyMDU0MzA2MzJiNSIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpkZWZhdWx0OmRlZmF1bHQifQ.qsCSIgYi1-NkqVM3rwoAYYIWOdJVKMG5Ymf0H6G0Cz0e32V2BWa4Jf9RqjbgIuV-loJ025OSg23jOGLvamU6rzeec7SpAyU_rVu7x8FAvSZ1z9q7cm8jw37BnJKAFNLjCdc0TvaKEEn0GgBPJ65KxrlBf9GQ_nBqRZds-Os1zhnOJAtFr2PcSrQDd1RXVzoa2rE0PZM2aMcjVtJp9aMBg1XJwCgY4OSCddjuI_w9GZZyt31U_8r_uUEfLluyub8Hrkg1rGV44IhmNw5mxr1RaxVdp5XSh4G8rQd23MM04un8jrm1uyMokAa5SzwI1PEDuL80oaXiGT4ZQn7-IvvmpA JWT token \u5206\u4e09\u6bb5\uff0c\u7528\".\"\u5206\u9694","title":"\u67e5\u770b secrets"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#serviceaccount_2","text":"\u63a7\u5236\u5668\u4f1a\u81ea\u52a8\u751f\u6210 token k create sa demo k get sa k get sa demo -oyaml k get secret demo-token-7k9j2 -oyaml k get secret demo-token-7k9j2 -oyaml|grep token","title":"\u521b\u5efa ServiceAccount"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#webhook","text":"","title":"webhook"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#start-authservice","text":"","title":"Start authservice"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#_6","text":"make build","title":"\u7f16\u8bd1"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#webhook_1","text":"./bin/amd64/authn-webhook","title":"\u8fd0\u884c webhook \u7a0b\u5e8f"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#_7","text":"curl 192.168.1.218:3000/authenticate outpur {\"apiVersion\":\"authentication.k8s.io/v1beta1\",\"kind\":\"TokenReview\",\"status\":{\"user\":{}}}","title":"\u6d4b\u8bd5\u542f\u52a8\u7ed3\u679c"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#create-webhook-config","text":"mkdir -p /etc/config cp webhook-config.json /etc/config","title":"Create webhook config"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#backup-old-apiserver","text":"cp /etc/kubernetes/manifests/kube-apiserver.yaml ~/kube-apiserver.yaml","title":"Backup old apiserver"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#update-apiserver-configuration-to-enable-webhook","text":"\u4e3b\u8981\u4fee\u6539: --authentication-token-webhook-config-file=/etc/config/webhook-config.json \u76f8\u5173\u914d\u7f6e(\u5173\u952e\u5b57: /etc/config) cp specs/kube-apiserver.yaml /etc/kubernetes/manifests/kube-apiserver.yaml","title":"Update apiserver configuration to enable webhook"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#create-a-personal-access-token-in-github-and-put-your-github-personal-access-token-to-kubeconfig","text":"","title":"Create a personal access token in github and put your github personal access token to kubeconfig"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#github-token","text":"https://github.com/settings/tokens/new \u4e0b\uff0c New GitHub App \u590d\u5236\u4e0b\u6765\u751f\u6210\u7684 Token","title":"\u5728 GitHub \u4e0a\u521b\u5efa token"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#_8","text":"vi ~/.kube/config - name: cjx user: token: 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","title":"\u4fee\u6539\u8fde\u63a5\u914d\u7f6e"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#get-pods-by-cjx","text":"kubectl get po --user cjx output Error from server (Forbidden): pods is forbidden: User \"chenjinxin1124\" cannot list resource \"pods\" in API group \"\" in the namespace \"default\" webhook output 2022/11/27 22:32:10 receving request 2022/11/27 22:32:11 [Success] login as chenjinxin1124","title":"Get pods by cjx"},{"location":"4.kube-api-server/test/1.%E8%AE%A4%E8%AF%81%E7%BB%83%E4%B9%A0/#reset-the-env","text":"cp ~/kube-apiserver.yaml /etc/kubernetes/manifests/kube-apiserver.yaml","title":"Reset the env"},{"location":"4.kube-api-server/test/2.%E6%8E%88%E6%9D%83%E7%BB%83%E4%B9%A0/","text":"\u6388\u6743\u7ec3\u4e60 RBAC \u83b7\u53d6\u914d\u7f6e\u7528\u6237 cat ~/.kube/config | grep \"\\- name\" - name: kubernetes-admin - name: myuser - name: static - name: cjx \u4f7f\u7528\u914d\u7f6e\u7528\u6237\u8bf7\u6c42\u8d44\u6e90 k get pod --user kubernetes-admin NAME READY STATUS RESTARTS AGE nginx 1/1 Running 3 (19h ago) 9d k get pod --user myuser error: You must be logged in to the server (Unauthorized) k get pod --user static error: You must be logged in to the server (Unauthorized) k get po --user cjx Error from server (Forbidden): pods is forbidden: User \"chenjinxin1124\" cannot list resource \"pods\" in API group \"\" in the namespace \"default\" \u4ee5 cjx \u7528\u6237\u4e3a\u4f8b \u6388\u6743 \u547d\u4ee4\u884c kubectl create role developer --verb=create --verb=get --verb=list --verb=update --verb=delete --resource=pods kubectl create rolebinding developer-binding-cjx --role=developer --user=cjx \u6587\u4ef6 k apply -f cluster-admin-to-cjx.yaml \u9a8c\u8bc1 k get pod --user cjx NAME READY STATUS RESTARTS AGE nginx 1/1 Running 3 (19h ago) 9d","title":"\u6388\u6743\u7ec3\u4e60"},{"location":"4.kube-api-server/test/2.%E6%8E%88%E6%9D%83%E7%BB%83%E4%B9%A0/#_1","text":"","title":"\u6388\u6743\u7ec3\u4e60"},{"location":"4.kube-api-server/test/2.%E6%8E%88%E6%9D%83%E7%BB%83%E4%B9%A0/#rbac","text":"","title":"RBAC"},{"location":"4.kube-api-server/test/2.%E6%8E%88%E6%9D%83%E7%BB%83%E4%B9%A0/#_2","text":"cat ~/.kube/config | grep \"\\- name\" - name: kubernetes-admin - name: myuser - name: static - name: cjx","title":"\u83b7\u53d6\u914d\u7f6e\u7528\u6237"},{"location":"4.kube-api-server/test/2.%E6%8E%88%E6%9D%83%E7%BB%83%E4%B9%A0/#_3","text":"k get pod --user kubernetes-admin NAME READY STATUS RESTARTS AGE nginx 1/1 Running 3 (19h ago) 9d k get pod --user myuser error: You must be logged in to the server (Unauthorized) k get pod --user static error: You must be logged in to the server (Unauthorized) k get po --user cjx Error from server (Forbidden): pods is forbidden: User \"chenjinxin1124\" cannot list resource \"pods\" in API group \"\" in the namespace \"default\"","title":"\u4f7f\u7528\u914d\u7f6e\u7528\u6237\u8bf7\u6c42\u8d44\u6e90"},{"location":"4.kube-api-server/test/2.%E6%8E%88%E6%9D%83%E7%BB%83%E4%B9%A0/#cjx","text":"","title":"\u4ee5 cjx \u7528\u6237\u4e3a\u4f8b"},{"location":"4.kube-api-server/test/2.%E6%8E%88%E6%9D%83%E7%BB%83%E4%B9%A0/#_4","text":"\u547d\u4ee4\u884c kubectl create role developer --verb=create --verb=get --verb=list --verb=update --verb=delete --resource=pods kubectl create rolebinding developer-binding-cjx --role=developer --user=cjx \u6587\u4ef6 k apply -f cluster-admin-to-cjx.yaml","title":"\u6388\u6743"},{"location":"4.kube-api-server/test/2.%E6%8E%88%E6%9D%83%E7%BB%83%E4%B9%A0/#_5","text":"k get pod --user cjx NAME READY STATUS RESTARTS AGE nginx 1/1 Running 3 (19h ago) 9d","title":"\u9a8c\u8bc1"},{"location":"4.kube-api-server/test/3.%E5%87%86%E5%85%A5%E7%BB%83%E4%B9%A0/","text":"\u51c6\u5165\u7ec3\u4e60 ResourceQuota \u9650\u5236 configmap cat quota.yaml apiVersion: v1 kind: ResourceQuota metadata: name: object-counts namespace: default spec: hard: configmaps: \"1\" \u5e94\u7528 k apply -f quota.yaml k get resourcequota output NAME AGE REQUEST LIMIT object-counts 5s configmaps: 1/1 configmap \u8d44\u6e90\u5df2\u7ecf\u7528\u5b8c \u9a8c\u8bc1 k get cm output NAME DATA AGE kube-root-ca.crt 1 10d \u521b\u5efa configmap k create configmap aaa --from-file quota.yaml output error: failed to create configmap: configmaps \"aaa\" is forbidden: exceeded quota: object-counts, requested: configmaps=1, used: configmaps=1, limited: configmaps=1 \u5220\u9664\u9650\u5236 k delete resourcequota object-counts resourcequota \"object-counts\" deleted k create configmap aaa --from-file quota.yaml configmap/aaa created k get cm NAME DATA AGE aaa 1 32s kube-root-ca.crt 1 10d \u521b\u5efa\u6210\u529f webhook","title":"\u51c6\u5165\u7ec3\u4e60"},{"location":"4.kube-api-server/test/3.%E5%87%86%E5%85%A5%E7%BB%83%E4%B9%A0/#_1","text":"","title":"\u51c6\u5165\u7ec3\u4e60"},{"location":"4.kube-api-server/test/3.%E5%87%86%E5%85%A5%E7%BB%83%E4%B9%A0/#resourcequota","text":"","title":"ResourceQuota"},{"location":"4.kube-api-server/test/3.%E5%87%86%E5%85%A5%E7%BB%83%E4%B9%A0/#configmap","text":"cat quota.yaml apiVersion: v1 kind: ResourceQuota metadata: name: object-counts namespace: default spec: hard: configmaps: \"1\"","title":"\u9650\u5236 configmap"},{"location":"4.kube-api-server/test/3.%E5%87%86%E5%85%A5%E7%BB%83%E4%B9%A0/#_2","text":"k apply -f quota.yaml k get resourcequota output NAME AGE REQUEST LIMIT object-counts 5s configmaps: 1/1 configmap \u8d44\u6e90\u5df2\u7ecf\u7528\u5b8c","title":"\u5e94\u7528"},{"location":"4.kube-api-server/test/3.%E5%87%86%E5%85%A5%E7%BB%83%E4%B9%A0/#_3","text":"k get cm output NAME DATA AGE kube-root-ca.crt 1 10d \u521b\u5efa configmap k create configmap aaa --from-file quota.yaml output error: failed to create configmap: configmaps \"aaa\" is forbidden: exceeded quota: object-counts, requested: configmaps=1, used: configmaps=1, limited: configmaps=1 \u5220\u9664\u9650\u5236 k delete resourcequota object-counts resourcequota \"object-counts\" deleted k create configmap aaa --from-file quota.yaml configmap/aaa created k get cm NAME DATA AGE aaa 1 32s kube-root-ca.crt 1 10d \u521b\u5efa\u6210\u529f","title":"\u9a8c\u8bc1"},{"location":"4.kube-api-server/test/3.%E5%87%86%E5%85%A5%E7%BB%83%E4%B9%A0/#webhook","text":"","title":"webhook"},{"location":"5.%E8%B0%83%E5%BA%A6%E5%99%A8%E5%92%8C%E6%8E%A7%E5%88%B6%E5%99%A8/1.%E8%B0%83%E5%BA%A6/","text":"\u8c03\u5ea6 kube-scheduler kube-scheduler\u8d1f\u8d23\u5206\u914d\u8c03\u5ea6Pod\u5230\u96c6\u7fa4\u5185\u7684\u8282\u70b9\u4e0a/\u5b83\u76d1\u542ckube-apiserver,\u67e5\u8be2\u8fd8\u672a\u5206\u914d Node\u7684Pod,\u7136\u540e\u6839\u636e\u8c03\u5ea6\u7b56\u7565\u4e3a\u8fd9\u4e9bPod\u5206\u914d\u8282\u70b9(\u66f4\u65b0Pod\u7684NodeName\u5b57\u6bb5)\u3002 \u8c03\u5ea6\u5668\u9700\u8981\u5145\u5206\u8003\u8651\u8bf8\u591a\u7684\u56e0\u7d20\uff1a \u516c\u5e73\u8c03\u5ea6\uff1b \u8d44\u6e90\u9ad8\u6548\u5229\u7528\uff1b QoS; affinity \u548c anti-affinity; \u6570\u636e\u672c\u5730\u5316(data locality); \u5185\u90e8\u8d1f\u8f7d\u5e72\u6270(inter-workload interference); deadlines\u3002 \u8c03\u5ea6\u5668 kube-scheduler\u8c03\u5ea6\u5206\u4e3a\u4e24\u4e2a\u9636\u6bb5, predicate \u548c priority: predicate:\u8fc7\u6ee4\u4e0d\u7b26\u5408\u6761\u4ef6\u7684\u8282\u70b9\uff1b priority:\u4f18\u5148\u7ea7\u6392\u5e8f\uff0c\u9009\u62e9\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u8282\u70b9\u3002","title":"\u8c03\u5ea6"},{"location":"5.%E8%B0%83%E5%BA%A6%E5%99%A8%E5%92%8C%E6%8E%A7%E5%88%B6%E5%99%A8/1.%E8%B0%83%E5%BA%A6/#_1","text":"","title":"\u8c03\u5ea6"},{"location":"5.%E8%B0%83%E5%BA%A6%E5%99%A8%E5%92%8C%E6%8E%A7%E5%88%B6%E5%99%A8/1.%E8%B0%83%E5%BA%A6/#kube-scheduler","text":"kube-scheduler\u8d1f\u8d23\u5206\u914d\u8c03\u5ea6Pod\u5230\u96c6\u7fa4\u5185\u7684\u8282\u70b9\u4e0a/\u5b83\u76d1\u542ckube-apiserver,\u67e5\u8be2\u8fd8\u672a\u5206\u914d Node\u7684Pod,\u7136\u540e\u6839\u636e\u8c03\u5ea6\u7b56\u7565\u4e3a\u8fd9\u4e9bPod\u5206\u914d\u8282\u70b9(\u66f4\u65b0Pod\u7684NodeName\u5b57\u6bb5)\u3002 \u8c03\u5ea6\u5668\u9700\u8981\u5145\u5206\u8003\u8651\u8bf8\u591a\u7684\u56e0\u7d20\uff1a \u516c\u5e73\u8c03\u5ea6\uff1b \u8d44\u6e90\u9ad8\u6548\u5229\u7528\uff1b QoS; affinity \u548c anti-affinity; \u6570\u636e\u672c\u5730\u5316(data locality); \u5185\u90e8\u8d1f\u8f7d\u5e72\u6270(inter-workload interference); deadlines\u3002","title":"kube-scheduler"},{"location":"5.%E8%B0%83%E5%BA%A6%E5%99%A8%E5%92%8C%E6%8E%A7%E5%88%B6%E5%99%A8/1.%E8%B0%83%E5%BA%A6/#_2","text":"kube-scheduler\u8c03\u5ea6\u5206\u4e3a\u4e24\u4e2a\u9636\u6bb5, predicate \u548c priority: predicate:\u8fc7\u6ee4\u4e0d\u7b26\u5408\u6761\u4ef6\u7684\u8282\u70b9\uff1b priority:\u4f18\u5148\u7ea7\u6392\u5e8f\uff0c\u9009\u62e9\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u8282\u70b9\u3002","title":"\u8c03\u5ea6\u5668"},{"location":"5.%E8%B0%83%E5%BA%A6%E5%99%A8%E5%92%8C%E6%8E%A7%E5%88%B6%E5%99%A8/2.ControllerManager/","text":"","title":"Controller Manager"},{"location":"5.%E8%B0%83%E5%BA%A6%E5%99%A8%E5%92%8C%E6%8E%A7%E5%88%B6%E5%99%A8/3.kubelet/","text":"","title":"kubelet"},{"location":"5.%E8%B0%83%E5%BA%A6%E5%99%A8%E5%92%8C%E6%8E%A7%E5%88%B6%E5%99%A8/4.CRI/","text":"","title":"CRI"},{"location":"5.%E8%B0%83%E5%BA%A6%E5%99%A8%E5%92%8C%E6%8E%A7%E5%88%B6%E5%99%A8/5.CNI/","text":"","title":"CNI"},{"location":"5.%E8%B0%83%E5%BA%A6%E5%99%A8%E5%92%8C%E6%8E%A7%E5%88%B6%E5%99%A8/6.CSI/","text":"","title":"CSI"}]}